// Copyright 2024 RISC Zero, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// This code is automatically generated

#include "extern.cuh"

__device__ void step_exec(
    void* ctx, uint32_t steps, uint32_t cycle, Fp* arg0, Fp* arg1, Fp* arg2, Fp* arg3, Fp* arg4) {
  uint32_t mask = steps - 1;
  Fp extern_args[96];
  Fp extern_outs[32];
  // loc(unknown)
  Fp x0(56361032);
  // loc(unknown)
  Fp x1(65280);
  // loc(unknown)
  Fp x2(8388608);
  // loc(unknown)
  Fp x3(56361024);
  // loc(unknown)
  Fp x4(54525952);
  // loc(unknown)
  Fp x5(219862);
  // loc(unknown)
  Fp x6(56361023);
  // loc(unknown)
  Fp x7(47);
  // loc(unknown)
  Fp x8(56360975);
  // loc(unknown)
  Fp x9(56360967);
  // loc(unknown)
  Fp x10(2013235201);
  // loc(unknown)
  Fp x11(32768);
  // loc(unknown)
  Fp x12(2013204481);
  // loc(unknown)
  Fp x13(2013143041);
  // loc(unknown)
  Fp x14(8192);
  // loc(unknown)
  Fp x15(2013020161);
  // loc(unknown)
  Fp x16(4096);
  // loc(unknown)
  Fp x17(2012774401);
  // loc(unknown)
  Fp x18(2048);
  // loc(unknown)
  Fp x19(2012282881);
  // loc(unknown)
  Fp x20(2011299841);
  // loc(unknown)
  Fp x21(512);
  // loc(unknown)
  Fp x22(2009333761);
  // loc(unknown)
  Fp x23(1024);
  // loc(unknown)
  Fp x24(50331661);
  // loc(unknown)
  Fp x25(50331660);
  // loc(unknown)
  Fp x26(50331586);
  // loc(unknown)
  Fp x27(50331585);
  // loc(unknown)
  Fp x28(50331655);
  // loc(unknown)
  Fp x29(50331584);
  // loc(unknown)
  Fp x30(50331662);
  // loc(unknown)
  Fp x31(50331658);
  // loc(unknown)
  Fp x32(50331659);
  // loc(unknown)
  Fp x33(50331653);
  // loc(unknown)
  Fp x34(115);
  // loc(unknown)
  Fp x35(131070);
  // loc(unknown)
  Fp x36(131072);
  // loc(unknown)
  Fp x37(31);
  // loc(unknown)
  Fp x38(192);
  // loc(unknown)
  Fp x39(35);
  // loc(unknown)
  Fp x40(4194304);
  // loc(unknown)
  Fp x41(16384);
  // loc(unknown)
  Fp x42(23);
  // loc(unknown)
  Fp x43(55);
  // loc(unknown)
  Fp x44(103);
  // loc(unknown)
  Fp x45(111);
  // loc(unknown)
  Fp x46(99);
  // loc(unknown)
  Fp x47(240);
  // loc(unknown)
  Fp x48(19);
  // loc(unknown)
  Fp x49(51);
  // loc(unknown)
  Fp x50(465814468);
  // loc(unknown)
  Fp x51(1996488705);
  // loc(unknown)
  Fp x52(50331648);
  // loc(unknown)
  Fp x53(248);
  // loc(unknown)
  Fp x54(127);
  // loc(unknown)
  Fp x55(48);
  // loc(unknown)
  Fp x56(64);
  // loc(unknown)
  Fp x57(1981808641);
  // loc(unknown)
  Fp x58(1006632961);
  // loc(unknown)
  Fp x59(1761607681);
  // loc(unknown)
  Fp x60(1887436801);
  // loc(unknown)
  Fp x61(96);
  // loc(unknown)
  Fp x62(32);
  // loc(unknown)
  Fp x63(1950351361);
  // loc(unknown)
  Fp x64(1997537281);
  // loc(unknown)
  Fp x65(128);
  // loc(unknown)
  Fp x66(17);
  // loc(unknown)
  Fp x67(9);
  // loc(unknown)
  Fp x68(8);
  // loc(unknown)
  Fp x69(7);
  // loc(unknown)
  Fp x70(6);
  // loc(unknown)
  Fp x71(5);
  // loc(unknown)
  Fp x72(16);
  // loc(unknown)
  Fp x73(15);
  // loc(unknown)
  Fp x74(14);
  // loc(unknown)
  Fp x75(13);
  // loc(unknown)
  Fp x76(12);
  // loc(unknown)
  Fp x77(11);
  // loc(unknown)
  Fp x78(10);
  // loc(unknown)
  Fp x79(67108864);
  // loc(unknown)
  Fp x80(1509949441);
  // loc(unknown)
  Fp x81(3);
  // loc(unknown)
  Fp x82(65536);
  // loc(unknown)
  Fp x83(4);
  // loc(unknown)
  Fp x84(16777216);
  // loc(unknown)
  Fp x85(56284855);
  // loc(unknown)
  Fp x86(56284854);
  // loc(unknown)
  Fp x87(56284853);
  // loc(unknown)
  Fp x88(56284852);
  // loc(unknown)
  Fp x89(56284851);
  // loc(unknown)
  Fp x90(56284850);
  // loc(unknown)
  Fp x91(56284849);
  // loc(unknown)
  Fp x92(56284848);
  // loc(unknown)
  Fp x93(2013265919);
  // loc(unknown)
  Fp x94(2013265920);
  // loc(unknown)
  Fp x95(256);
  // loc(unknown)
  Fp x96(2005401601);
  // loc(unknown)
  Fp x97(255);
  // loc(unknown)
  Fp x98(2);
  // loc(unknown)
  Fp x99(254);
  // loc(unknown)
  Fp x100(0);
  // loc(unknown)
  Fp x101(1);
  // loc("Top/Code/OneHot/hot[1](Reg)"("./zirgen/components/mux.h":59:25))
  auto x102 = arg0[2 * steps + ((cycle - 0) & mask)];
  assert(x102 != Fp::invalid());
  if (x102 != 0) {
    // loc("Top/Code/Mux/1(SetupInfo)/Reg"("./zirgen/compiler/edsl/component.h":164:27))
    auto x103 = arg0[9 * steps + ((cycle - 0) & mask)];
    assert(x103 != Fp::invalid());
    // loc("Top/Code/OneHot/hot[1](Reg)"("zirgen/circuit/rv32im/v1/edsl/top.cpp":27:75))
    auto x104 = arg0[2 * steps + ((cycle - 1) & mask)];
    assert(x104 != Fp::invalid());
    // loc("zirgen/circuit/rv32im/v1/edsl/top.cpp":27:17)
    auto x105 = x101 - x104;
    if (x105 != 0) {
      // loc("zirgen/components/bytes.cpp":31:3)
      {
        auto& reg = arg2[3 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("zirgen/components/bytes.cpp":32:3)
      {
        auto& reg = arg2[4 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
    }
    // loc("zirgen/components/bytes.cpp":127:17)
    auto x106 = x101 - x105;
    if (x106 != 0) {
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x107 = arg2[44 * steps + ((cycle - 1) & mask)];
      assert(x107 != Fp::invalid());
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x108 = arg2[43 * steps + ((cycle - 1) & mask)];
      assert(x108 != Fp::invalid());
      {
        // loc("zirgen/components/bytes.cpp":44:20)
        auto x109 = x107 - x99;
        // loc("zirgen/components/bytes.cpp":44:20)
        auto x110 = (x109 == 0) ? Fp(1) : Fp(0);
        // loc("zirgen/components/bytes.cpp":45:16)
        auto x111 = x101 - x110;
        if (x111 != 0) {
          // loc("zirgen/components/bytes.cpp":46:7)
          {
            auto& reg = arg2[3 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x108);
            reg = x108;
          }
          // loc("zirgen/components/bytes.cpp":47:16)
          auto x112 = x107 + x98;
          // loc("zirgen/components/bytes.cpp":47:7)
          {
            auto& reg = arg2[4 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x112);
            reg = x112;
          }
        }
        if (x110 != 0) {
          // loc("zirgen/components/bytes.cpp":50:17)
          auto x113 = x108 + x101;
          // loc("zirgen/components/bytes.cpp":50:7)
          {
            auto& reg = arg2[3 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x113);
            reg = x113;
          }
          // loc("zirgen/components/bytes.cpp":51:7)
          {
            auto& reg = arg2[4 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
        }
      }
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x114 = arg2[3 * steps + ((cycle - 0) & mask)];
      assert(x114 != Fp::invalid());
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x115 = arg2[4 * steps + ((cycle - 0) & mask)];
      assert(x115 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":54:18)
      auto x116 = x114 - x108;
      // loc("zirgen/components/bytes.cpp":55:17)
      auto x117 = x115 - x107;
      // loc("zirgen/components/bytes.cpp":58:19)
      auto x118 = x116 - x101;
      // loc("zirgen/components/bytes.cpp":58:7)
      auto x119 = x116 * x118;
      // loc("zirgen/components/bytes.cpp":58:7)
      assert(x119 == 0 && "eqz failed at: zirgen/components/bytes.cpp:58");
      // loc("zirgen/components/bytes.cpp":61:19)
      auto x120 = x117 + x99;
      // loc("zirgen/components/bytes.cpp":61:7)
      auto x121 = x116 * x120;
      // loc("zirgen/components/bytes.cpp":61:7)
      assert(x121 == 0 && "eqz failed at: zirgen/components/bytes.cpp:61");
      // loc("zirgen/components/bytes.cpp":64:25)
      auto x122 = x117 - x98;
      // loc("zirgen/components/bytes.cpp":64:7)
      auto x123 = x118 * x122;
      // loc("zirgen/components/bytes.cpp":64:7)
      assert(x123 == 0 && "eqz failed at: zirgen/components/bytes.cpp:64");
    }
    // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
    auto x124 = arg2[4 * steps + ((cycle - 0) & mask)];
    assert(x124 != Fp::invalid());
    // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
    auto x125 = arg2[3 * steps + ((cycle - 0) & mask)];
    assert(x125 != Fp::invalid());
    {
      // loc("zirgen/components/bytes.cpp":44:20)
      auto x126 = x124 - x99;
      // loc("zirgen/components/bytes.cpp":44:20)
      auto x127 = (x126 == 0) ? Fp(1) : Fp(0);
      // loc("zirgen/components/bytes.cpp":45:16)
      auto x128 = x101 - x127;
      if (x128 != 0) {
        // loc("zirgen/components/bytes.cpp":46:7)
        {
          auto& reg = arg2[5 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x125);
          reg = x125;
        }
        // loc("zirgen/components/bytes.cpp":47:16)
        auto x129 = x124 + x98;
        // loc("zirgen/components/bytes.cpp":47:7)
        {
          auto& reg = arg2[6 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x129);
          reg = x129;
        }
      }
      if (x127 != 0) {
        // loc("zirgen/components/bytes.cpp":50:17)
        auto x130 = x125 + x101;
        // loc("zirgen/components/bytes.cpp":50:7)
        {
          auto& reg = arg2[5 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x130);
          reg = x130;
        }
        // loc("zirgen/components/bytes.cpp":51:7)
        {
          auto& reg = arg2[6 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
      }
    }
    // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
    auto x131 = arg2[5 * steps + ((cycle - 0) & mask)];
    assert(x131 != Fp::invalid());
    // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
    auto x132 = arg2[6 * steps + ((cycle - 0) & mask)];
    assert(x132 != Fp::invalid());
    // loc("zirgen/components/bytes.cpp":54:18)
    auto x133 = x131 - x125;
    // loc("zirgen/components/bytes.cpp":55:17)
    auto x134 = x132 - x124;
    // loc("zirgen/components/bytes.cpp":58:19)
    auto x135 = x133 - x101;
    // loc("zirgen/components/bytes.cpp":58:7)
    auto x136 = x133 * x135;
    // loc("zirgen/components/bytes.cpp":58:7)
    assert(x136 == 0 && "eqz failed at: zirgen/components/bytes.cpp:58");
    // loc("zirgen/components/bytes.cpp":61:19)
    auto x137 = x134 + x99;
    // loc("zirgen/components/bytes.cpp":61:7)
    auto x138 = x133 * x137;
    // loc("zirgen/components/bytes.cpp":61:7)
    assert(x138 == 0 && "eqz failed at: zirgen/components/bytes.cpp:61");
    // loc("zirgen/components/bytes.cpp":64:25)
    auto x139 = x134 - x98;
    // loc("zirgen/components/bytes.cpp":64:7)
    auto x140 = x135 * x139;
    // loc("zirgen/components/bytes.cpp":64:7)
    assert(x140 == 0 && "eqz failed at: zirgen/components/bytes.cpp:64");
    {
      // loc("zirgen/components/bytes.cpp":44:20)
      auto x141 = x132 - x99;
      // loc("zirgen/components/bytes.cpp":44:20)
      auto x142 = (x141 == 0) ? Fp(1) : Fp(0);
      // loc("zirgen/components/bytes.cpp":45:16)
      auto x143 = x101 - x142;
      if (x143 != 0) {
        // loc("zirgen/components/bytes.cpp":46:7)
        {
          auto& reg = arg2[7 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x131);
          reg = x131;
        }
        // loc("zirgen/components/bytes.cpp":47:16)
        auto x144 = x132 + x98;
        // loc("zirgen/components/bytes.cpp":47:7)
        {
          auto& reg = arg2[8 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x144);
          reg = x144;
        }
      }
      if (x142 != 0) {
        // loc("zirgen/components/bytes.cpp":50:17)
        auto x145 = x131 + x101;
        // loc("zirgen/components/bytes.cpp":50:7)
        {
          auto& reg = arg2[7 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x145);
          reg = x145;
        }
        // loc("zirgen/components/bytes.cpp":51:7)
        {
          auto& reg = arg2[8 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
      }
    }
    // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
    auto x146 = arg2[7 * steps + ((cycle - 0) & mask)];
    assert(x146 != Fp::invalid());
    // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
    auto x147 = arg2[8 * steps + ((cycle - 0) & mask)];
    assert(x147 != Fp::invalid());
    // loc("zirgen/components/bytes.cpp":54:18)
    auto x148 = x146 - x131;
    // loc("zirgen/components/bytes.cpp":55:17)
    auto x149 = x147 - x132;
    // loc("zirgen/components/bytes.cpp":58:19)
    auto x150 = x148 - x101;
    // loc("zirgen/components/bytes.cpp":58:7)
    auto x151 = x148 * x150;
    // loc("zirgen/components/bytes.cpp":58:7)
    assert(x151 == 0 && "eqz failed at: zirgen/components/bytes.cpp:58");
    // loc("zirgen/components/bytes.cpp":61:19)
    auto x152 = x149 + x99;
    // loc("zirgen/components/bytes.cpp":61:7)
    auto x153 = x148 * x152;
    // loc("zirgen/components/bytes.cpp":61:7)
    assert(x153 == 0 && "eqz failed at: zirgen/components/bytes.cpp:61");
    // loc("zirgen/components/bytes.cpp":64:25)
    auto x154 = x149 - x98;
    // loc("zirgen/components/bytes.cpp":64:7)
    auto x155 = x150 * x154;
    // loc("zirgen/components/bytes.cpp":64:7)
    assert(x155 == 0 && "eqz failed at: zirgen/components/bytes.cpp:64");
    {
      // loc("zirgen/components/bytes.cpp":44:20)
      auto x156 = x147 - x99;
      // loc("zirgen/components/bytes.cpp":44:20)
      auto x157 = (x156 == 0) ? Fp(1) : Fp(0);
      // loc("zirgen/components/bytes.cpp":45:16)
      auto x158 = x101 - x157;
      if (x158 != 0) {
        // loc("zirgen/components/bytes.cpp":46:7)
        {
          auto& reg = arg2[9 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x146);
          reg = x146;
        }
        // loc("zirgen/components/bytes.cpp":47:16)
        auto x159 = x147 + x98;
        // loc("zirgen/components/bytes.cpp":47:7)
        {
          auto& reg = arg2[10 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x159);
          reg = x159;
        }
      }
      if (x157 != 0) {
        // loc("zirgen/components/bytes.cpp":50:17)
        auto x160 = x146 + x101;
        // loc("zirgen/components/bytes.cpp":50:7)
        {
          auto& reg = arg2[9 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x160);
          reg = x160;
        }
        // loc("zirgen/components/bytes.cpp":51:7)
        {
          auto& reg = arg2[10 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
      }
    }
    // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
    auto x161 = arg2[10 * steps + ((cycle - 0) & mask)];
    assert(x161 != Fp::invalid());
    // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
    auto x162 = arg2[9 * steps + ((cycle - 0) & mask)];
    assert(x162 != Fp::invalid());
    // loc("zirgen/components/bytes.cpp":55:17)
    auto x163 = x161 - x147;
    // loc("zirgen/components/bytes.cpp":54:18)
    auto x164 = x162 - x146;
    // loc("zirgen/components/bytes.cpp":58:19)
    auto x165 = x164 - x101;
    // loc("zirgen/components/bytes.cpp":58:7)
    auto x166 = x164 * x165;
    // loc("zirgen/components/bytes.cpp":58:7)
    assert(x166 == 0 && "eqz failed at: zirgen/components/bytes.cpp:58");
    // loc("zirgen/components/bytes.cpp":61:19)
    auto x167 = x163 + x99;
    // loc("zirgen/components/bytes.cpp":61:7)
    auto x168 = x164 * x167;
    // loc("zirgen/components/bytes.cpp":61:7)
    assert(x168 == 0 && "eqz failed at: zirgen/components/bytes.cpp:61");
    // loc("zirgen/components/bytes.cpp":64:25)
    auto x169 = x163 - x98;
    // loc("zirgen/components/bytes.cpp":64:7)
    auto x170 = x165 * x169;
    // loc("zirgen/components/bytes.cpp":64:7)
    assert(x170 == 0 && "eqz failed at: zirgen/components/bytes.cpp:64");
    {
      // loc("zirgen/components/bytes.cpp":44:20)
      auto x171 = x161 - x99;
      // loc("zirgen/components/bytes.cpp":44:20)
      auto x172 = (x171 == 0) ? Fp(1) : Fp(0);
      // loc("zirgen/components/bytes.cpp":45:16)
      auto x173 = x101 - x172;
      if (x173 != 0) {
        // loc("zirgen/components/bytes.cpp":46:7)
        {
          auto& reg = arg2[11 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x162);
          reg = x162;
        }
        // loc("zirgen/components/bytes.cpp":47:16)
        auto x174 = x161 + x98;
        // loc("zirgen/components/bytes.cpp":47:7)
        {
          auto& reg = arg2[12 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x174);
          reg = x174;
        }
      }
      if (x172 != 0) {
        // loc("zirgen/components/bytes.cpp":50:17)
        auto x175 = x162 + x101;
        // loc("zirgen/components/bytes.cpp":50:7)
        {
          auto& reg = arg2[11 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x175);
          reg = x175;
        }
        // loc("zirgen/components/bytes.cpp":51:7)
        {
          auto& reg = arg2[12 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
      }
    }
    // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
    auto x176 = arg2[11 * steps + ((cycle - 0) & mask)];
    assert(x176 != Fp::invalid());
    // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
    auto x177 = arg2[12 * steps + ((cycle - 0) & mask)];
    assert(x177 != Fp::invalid());
    // loc("zirgen/components/bytes.cpp":54:18)
    auto x178 = x176 - x162;
    // loc("zirgen/components/bytes.cpp":55:17)
    auto x179 = x177 - x161;
    // loc("zirgen/components/bytes.cpp":58:19)
    auto x180 = x178 - x101;
    // loc("zirgen/components/bytes.cpp":58:7)
    auto x181 = x178 * x180;
    // loc("zirgen/components/bytes.cpp":58:7)
    assert(x181 == 0 && "eqz failed at: zirgen/components/bytes.cpp:58");
    // loc("zirgen/components/bytes.cpp":61:19)
    auto x182 = x179 + x99;
    // loc("zirgen/components/bytes.cpp":61:7)
    auto x183 = x178 * x182;
    // loc("zirgen/components/bytes.cpp":61:7)
    assert(x183 == 0 && "eqz failed at: zirgen/components/bytes.cpp:61");
    // loc("zirgen/components/bytes.cpp":64:25)
    auto x184 = x179 - x98;
    // loc("zirgen/components/bytes.cpp":64:7)
    auto x185 = x180 * x184;
    // loc("zirgen/components/bytes.cpp":64:7)
    assert(x185 == 0 && "eqz failed at: zirgen/components/bytes.cpp:64");
    {
      // loc("zirgen/components/bytes.cpp":44:20)
      auto x186 = x177 - x99;
      // loc("zirgen/components/bytes.cpp":44:20)
      auto x187 = (x186 == 0) ? Fp(1) : Fp(0);
      // loc("zirgen/components/bytes.cpp":45:16)
      auto x188 = x101 - x187;
      if (x188 != 0) {
        // loc("zirgen/components/bytes.cpp":46:7)
        {
          auto& reg = arg2[13 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x176);
          reg = x176;
        }
        // loc("zirgen/components/bytes.cpp":47:16)
        auto x189 = x177 + x98;
        // loc("zirgen/components/bytes.cpp":47:7)
        {
          auto& reg = arg2[14 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x189);
          reg = x189;
        }
      }
      if (x187 != 0) {
        // loc("zirgen/components/bytes.cpp":50:17)
        auto x190 = x176 + x101;
        // loc("zirgen/components/bytes.cpp":50:7)
        {
          auto& reg = arg2[13 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x190);
          reg = x190;
        }
        // loc("zirgen/components/bytes.cpp":51:7)
        {
          auto& reg = arg2[14 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
      }
    }
    // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
    auto x191 = arg2[13 * steps + ((cycle - 0) & mask)];
    assert(x191 != Fp::invalid());
    // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
    auto x192 = arg2[14 * steps + ((cycle - 0) & mask)];
    assert(x192 != Fp::invalid());
    // loc("zirgen/components/bytes.cpp":54:18)
    auto x193 = x191 - x176;
    // loc("zirgen/components/bytes.cpp":55:17)
    auto x194 = x192 - x177;
    // loc("zirgen/components/bytes.cpp":58:19)
    auto x195 = x193 - x101;
    // loc("zirgen/components/bytes.cpp":58:7)
    auto x196 = x193 * x195;
    // loc("zirgen/components/bytes.cpp":58:7)
    assert(x196 == 0 && "eqz failed at: zirgen/components/bytes.cpp:58");
    // loc("zirgen/components/bytes.cpp":61:19)
    auto x197 = x194 + x99;
    // loc("zirgen/components/bytes.cpp":61:7)
    auto x198 = x193 * x197;
    // loc("zirgen/components/bytes.cpp":61:7)
    assert(x198 == 0 && "eqz failed at: zirgen/components/bytes.cpp:61");
    // loc("zirgen/components/bytes.cpp":64:25)
    auto x199 = x194 - x98;
    // loc("zirgen/components/bytes.cpp":64:7)
    auto x200 = x195 * x199;
    // loc("zirgen/components/bytes.cpp":64:7)
    assert(x200 == 0 && "eqz failed at: zirgen/components/bytes.cpp:64");
    {
      // loc("zirgen/components/bytes.cpp":44:20)
      auto x201 = x192 - x99;
      // loc("zirgen/components/bytes.cpp":44:20)
      auto x202 = (x201 == 0) ? Fp(1) : Fp(0);
      // loc("zirgen/components/bytes.cpp":45:16)
      auto x203 = x101 - x202;
      if (x203 != 0) {
        // loc("zirgen/components/bytes.cpp":46:7)
        {
          auto& reg = arg2[15 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x191);
          reg = x191;
        }
        // loc("zirgen/components/bytes.cpp":47:16)
        auto x204 = x192 + x98;
        // loc("zirgen/components/bytes.cpp":47:7)
        {
          auto& reg = arg2[16 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x204);
          reg = x204;
        }
      }
      if (x202 != 0) {
        // loc("zirgen/components/bytes.cpp":50:17)
        auto x205 = x191 + x101;
        // loc("zirgen/components/bytes.cpp":50:7)
        {
          auto& reg = arg2[15 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x205);
          reg = x205;
        }
        // loc("zirgen/components/bytes.cpp":51:7)
        {
          auto& reg = arg2[16 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
      }
    }
    // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
    auto x206 = arg2[15 * steps + ((cycle - 0) & mask)];
    assert(x206 != Fp::invalid());
    // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
    auto x207 = arg2[16 * steps + ((cycle - 0) & mask)];
    assert(x207 != Fp::invalid());
    // loc("zirgen/components/bytes.cpp":54:18)
    auto x208 = x206 - x191;
    // loc("zirgen/components/bytes.cpp":55:17)
    auto x209 = x207 - x192;
    // loc("zirgen/components/bytes.cpp":58:19)
    auto x210 = x208 - x101;
    // loc("zirgen/components/bytes.cpp":58:7)
    auto x211 = x208 * x210;
    // loc("zirgen/components/bytes.cpp":58:7)
    assert(x211 == 0 && "eqz failed at: zirgen/components/bytes.cpp:58");
    // loc("zirgen/components/bytes.cpp":61:19)
    auto x212 = x209 + x99;
    // loc("zirgen/components/bytes.cpp":61:7)
    auto x213 = x208 * x212;
    // loc("zirgen/components/bytes.cpp":61:7)
    assert(x213 == 0 && "eqz failed at: zirgen/components/bytes.cpp:61");
    // loc("zirgen/components/bytes.cpp":64:25)
    auto x214 = x209 - x98;
    // loc("zirgen/components/bytes.cpp":64:7)
    auto x215 = x210 * x214;
    // loc("zirgen/components/bytes.cpp":64:7)
    assert(x215 == 0 && "eqz failed at: zirgen/components/bytes.cpp:64");
    {
      // loc("zirgen/components/bytes.cpp":44:20)
      auto x216 = x207 - x99;
      // loc("zirgen/components/bytes.cpp":44:20)
      auto x217 = (x216 == 0) ? Fp(1) : Fp(0);
      // loc("zirgen/components/bytes.cpp":45:16)
      auto x218 = x101 - x217;
      if (x218 != 0) {
        // loc("zirgen/components/bytes.cpp":46:7)
        {
          auto& reg = arg2[17 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x206);
          reg = x206;
        }
        // loc("zirgen/components/bytes.cpp":47:16)
        auto x219 = x207 + x98;
        // loc("zirgen/components/bytes.cpp":47:7)
        {
          auto& reg = arg2[18 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x219);
          reg = x219;
        }
      }
      if (x217 != 0) {
        // loc("zirgen/components/bytes.cpp":50:17)
        auto x220 = x206 + x101;
        // loc("zirgen/components/bytes.cpp":50:7)
        {
          auto& reg = arg2[17 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x220);
          reg = x220;
        }
        // loc("zirgen/components/bytes.cpp":51:7)
        {
          auto& reg = arg2[18 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
      }
    }
    // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
    auto x221 = arg2[17 * steps + ((cycle - 0) & mask)];
    assert(x221 != Fp::invalid());
    // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
    auto x222 = arg2[18 * steps + ((cycle - 0) & mask)];
    assert(x222 != Fp::invalid());
    // loc("zirgen/components/bytes.cpp":54:18)
    auto x223 = x221 - x206;
    // loc("zirgen/components/bytes.cpp":55:17)
    auto x224 = x222 - x207;
    // loc("zirgen/components/bytes.cpp":58:19)
    auto x225 = x223 - x101;
    // loc("zirgen/components/bytes.cpp":58:7)
    auto x226 = x223 * x225;
    // loc("zirgen/components/bytes.cpp":58:7)
    assert(x226 == 0 && "eqz failed at: zirgen/components/bytes.cpp:58");
    // loc("zirgen/components/bytes.cpp":61:19)
    auto x227 = x224 + x99;
    // loc("zirgen/components/bytes.cpp":61:7)
    auto x228 = x223 * x227;
    // loc("zirgen/components/bytes.cpp":61:7)
    assert(x228 == 0 && "eqz failed at: zirgen/components/bytes.cpp:61");
    // loc("zirgen/components/bytes.cpp":64:25)
    auto x229 = x224 - x98;
    // loc("zirgen/components/bytes.cpp":64:7)
    auto x230 = x225 * x229;
    // loc("zirgen/components/bytes.cpp":64:7)
    assert(x230 == 0 && "eqz failed at: zirgen/components/bytes.cpp:64");
    if (x103 != 0) {
      // loc("zirgen/components/bytes.cpp":136:7)
      {
        auto& reg = arg2[19 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("zirgen/components/bytes.cpp":137:7)
      {
        auto& reg = arg2[20 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("zirgen/components/bytes.cpp":136:7)
      {
        auto& reg = arg2[21 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("zirgen/components/bytes.cpp":137:7)
      {
        auto& reg = arg2[22 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("zirgen/components/bytes.cpp":136:7)
      {
        auto& reg = arg2[23 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("zirgen/components/bytes.cpp":137:7)
      {
        auto& reg = arg2[24 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("zirgen/components/bytes.cpp":136:7)
      {
        auto& reg = arg2[25 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("zirgen/components/bytes.cpp":137:7)
      {
        auto& reg = arg2[26 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("zirgen/components/bytes.cpp":136:7)
      {
        auto& reg = arg2[27 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("zirgen/components/bytes.cpp":137:7)
      {
        auto& reg = arg2[28 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("zirgen/components/bytes.cpp":136:7)
      {
        auto& reg = arg2[29 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("zirgen/components/bytes.cpp":137:7)
      {
        auto& reg = arg2[30 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("zirgen/components/bytes.cpp":136:7)
      {
        auto& reg = arg2[31 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("zirgen/components/bytes.cpp":137:7)
      {
        auto& reg = arg2[32 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("zirgen/components/bytes.cpp":136:7)
      {
        auto& reg = arg2[33 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("zirgen/components/bytes.cpp":137:7)
      {
        auto& reg = arg2[34 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("zirgen/components/bytes.cpp":136:7)
      {
        auto& reg = arg2[35 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("zirgen/components/bytes.cpp":137:7)
      {
        auto& reg = arg2[36 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("zirgen/components/bytes.cpp":136:7)
      {
        auto& reg = arg2[37 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("zirgen/components/bytes.cpp":137:7)
      {
        auto& reg = arg2[38 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("zirgen/components/bytes.cpp":136:7)
      {
        auto& reg = arg2[39 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("zirgen/components/bytes.cpp":137:7)
      {
        auto& reg = arg2[40 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("zirgen/components/bytes.cpp":136:7)
      {
        auto& reg = arg2[41 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("zirgen/components/bytes.cpp":137:7)
      {
        auto& reg = arg2[42 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("zirgen/components/bytes.cpp":136:7)
      {
        auto& reg = arg2[43 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("zirgen/components/bytes.cpp":137:7)
      {
        auto& reg = arg2[44 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
    }
    // loc("zirgen/components/bytes.cpp":140:16)
    auto x231 = x101 - x103;
    if (x231 != 0) {
      {
        // loc("zirgen/components/bytes.cpp":44:20)
        auto x232 = x222 - x99;
        // loc("zirgen/components/bytes.cpp":44:20)
        auto x233 = (x232 == 0) ? Fp(1) : Fp(0);
        // loc("zirgen/components/bytes.cpp":45:16)
        auto x234 = x101 - x233;
        if (x234 != 0) {
          // loc("zirgen/components/bytes.cpp":46:7)
          {
            auto& reg = arg2[19 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x221);
            reg = x221;
          }
          // loc("zirgen/components/bytes.cpp":47:16)
          auto x235 = x222 + x98;
          // loc("zirgen/components/bytes.cpp":47:7)
          {
            auto& reg = arg2[20 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x235);
            reg = x235;
          }
        }
        if (x233 != 0) {
          // loc("zirgen/components/bytes.cpp":50:17)
          auto x236 = x221 + x101;
          // loc("zirgen/components/bytes.cpp":50:7)
          {
            auto& reg = arg2[19 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x236);
            reg = x236;
          }
          // loc("zirgen/components/bytes.cpp":51:7)
          {
            auto& reg = arg2[20 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
        }
      }
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x237 = arg2[19 * steps + ((cycle - 0) & mask)];
      assert(x237 != Fp::invalid());
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x238 = arg2[20 * steps + ((cycle - 0) & mask)];
      assert(x238 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":54:18)
      auto x239 = x237 - x221;
      // loc("zirgen/components/bytes.cpp":55:17)
      auto x240 = x238 - x222;
      // loc("zirgen/components/bytes.cpp":58:19)
      auto x241 = x239 - x101;
      // loc("zirgen/components/bytes.cpp":58:7)
      auto x242 = x239 * x241;
      // loc("zirgen/components/bytes.cpp":58:7)
      assert(x242 == 0 && "eqz failed at: zirgen/components/bytes.cpp:58");
      // loc("zirgen/components/bytes.cpp":61:19)
      auto x243 = x240 + x99;
      // loc("zirgen/components/bytes.cpp":61:7)
      auto x244 = x239 * x243;
      // loc("zirgen/components/bytes.cpp":61:7)
      assert(x244 == 0 && "eqz failed at: zirgen/components/bytes.cpp:61");
      // loc("zirgen/components/bytes.cpp":64:25)
      auto x245 = x240 - x98;
      // loc("zirgen/components/bytes.cpp":64:7)
      auto x246 = x241 * x245;
      // loc("zirgen/components/bytes.cpp":64:7)
      assert(x246 == 0 && "eqz failed at: zirgen/components/bytes.cpp:64");
      {
        // loc("zirgen/components/bytes.cpp":44:20)
        auto x247 = x238 - x99;
        // loc("zirgen/components/bytes.cpp":44:20)
        auto x248 = (x247 == 0) ? Fp(1) : Fp(0);
        // loc("zirgen/components/bytes.cpp":45:16)
        auto x249 = x101 - x248;
        if (x249 != 0) {
          // loc("zirgen/components/bytes.cpp":46:7)
          {
            auto& reg = arg2[21 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x237);
            reg = x237;
          }
          // loc("zirgen/components/bytes.cpp":47:16)
          auto x250 = x238 + x98;
          // loc("zirgen/components/bytes.cpp":47:7)
          {
            auto& reg = arg2[22 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x250);
            reg = x250;
          }
        }
        if (x248 != 0) {
          // loc("zirgen/components/bytes.cpp":50:17)
          auto x251 = x237 + x101;
          // loc("zirgen/components/bytes.cpp":50:7)
          {
            auto& reg = arg2[21 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x251);
            reg = x251;
          }
          // loc("zirgen/components/bytes.cpp":51:7)
          {
            auto& reg = arg2[22 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
        }
      }
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x252 = arg2[21 * steps + ((cycle - 0) & mask)];
      assert(x252 != Fp::invalid());
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x253 = arg2[22 * steps + ((cycle - 0) & mask)];
      assert(x253 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":54:18)
      auto x254 = x252 - x237;
      // loc("zirgen/components/bytes.cpp":55:17)
      auto x255 = x253 - x238;
      // loc("zirgen/components/bytes.cpp":58:19)
      auto x256 = x254 - x101;
      // loc("zirgen/components/bytes.cpp":58:7)
      auto x257 = x254 * x256;
      // loc("zirgen/components/bytes.cpp":58:7)
      assert(x257 == 0 && "eqz failed at: zirgen/components/bytes.cpp:58");
      // loc("zirgen/components/bytes.cpp":61:19)
      auto x258 = x255 + x99;
      // loc("zirgen/components/bytes.cpp":61:7)
      auto x259 = x254 * x258;
      // loc("zirgen/components/bytes.cpp":61:7)
      assert(x259 == 0 && "eqz failed at: zirgen/components/bytes.cpp:61");
      // loc("zirgen/components/bytes.cpp":64:25)
      auto x260 = x255 - x98;
      // loc("zirgen/components/bytes.cpp":64:7)
      auto x261 = x256 * x260;
      // loc("zirgen/components/bytes.cpp":64:7)
      assert(x261 == 0 && "eqz failed at: zirgen/components/bytes.cpp:64");
      {
        // loc("zirgen/components/bytes.cpp":44:20)
        auto x262 = x253 - x99;
        // loc("zirgen/components/bytes.cpp":44:20)
        auto x263 = (x262 == 0) ? Fp(1) : Fp(0);
        // loc("zirgen/components/bytes.cpp":45:16)
        auto x264 = x101 - x263;
        if (x264 != 0) {
          // loc("zirgen/components/bytes.cpp":46:7)
          {
            auto& reg = arg2[23 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x252);
            reg = x252;
          }
          // loc("zirgen/components/bytes.cpp":47:16)
          auto x265 = x253 + x98;
          // loc("zirgen/components/bytes.cpp":47:7)
          {
            auto& reg = arg2[24 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x265);
            reg = x265;
          }
        }
        if (x263 != 0) {
          // loc("zirgen/components/bytes.cpp":50:17)
          auto x266 = x252 + x101;
          // loc("zirgen/components/bytes.cpp":50:7)
          {
            auto& reg = arg2[23 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x266);
            reg = x266;
          }
          // loc("zirgen/components/bytes.cpp":51:7)
          {
            auto& reg = arg2[24 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
        }
      }
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x267 = arg2[23 * steps + ((cycle - 0) & mask)];
      assert(x267 != Fp::invalid());
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x268 = arg2[24 * steps + ((cycle - 0) & mask)];
      assert(x268 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":54:18)
      auto x269 = x267 - x252;
      // loc("zirgen/components/bytes.cpp":55:17)
      auto x270 = x268 - x253;
      // loc("zirgen/components/bytes.cpp":58:19)
      auto x271 = x269 - x101;
      // loc("zirgen/components/bytes.cpp":58:7)
      auto x272 = x269 * x271;
      // loc("zirgen/components/bytes.cpp":58:7)
      assert(x272 == 0 && "eqz failed at: zirgen/components/bytes.cpp:58");
      // loc("zirgen/components/bytes.cpp":61:19)
      auto x273 = x270 + x99;
      // loc("zirgen/components/bytes.cpp":61:7)
      auto x274 = x269 * x273;
      // loc("zirgen/components/bytes.cpp":61:7)
      assert(x274 == 0 && "eqz failed at: zirgen/components/bytes.cpp:61");
      // loc("zirgen/components/bytes.cpp":64:25)
      auto x275 = x270 - x98;
      // loc("zirgen/components/bytes.cpp":64:7)
      auto x276 = x271 * x275;
      // loc("zirgen/components/bytes.cpp":64:7)
      assert(x276 == 0 && "eqz failed at: zirgen/components/bytes.cpp:64");
      {
        // loc("zirgen/components/bytes.cpp":44:20)
        auto x277 = x268 - x99;
        // loc("zirgen/components/bytes.cpp":44:20)
        auto x278 = (x277 == 0) ? Fp(1) : Fp(0);
        // loc("zirgen/components/bytes.cpp":45:16)
        auto x279 = x101 - x278;
        if (x279 != 0) {
          // loc("zirgen/components/bytes.cpp":46:7)
          {
            auto& reg = arg2[25 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x267);
            reg = x267;
          }
          // loc("zirgen/components/bytes.cpp":47:16)
          auto x280 = x268 + x98;
          // loc("zirgen/components/bytes.cpp":47:7)
          {
            auto& reg = arg2[26 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x280);
            reg = x280;
          }
        }
        if (x278 != 0) {
          // loc("zirgen/components/bytes.cpp":50:17)
          auto x281 = x267 + x101;
          // loc("zirgen/components/bytes.cpp":50:7)
          {
            auto& reg = arg2[25 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x281);
            reg = x281;
          }
          // loc("zirgen/components/bytes.cpp":51:7)
          {
            auto& reg = arg2[26 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
        }
      }
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x282 = arg2[25 * steps + ((cycle - 0) & mask)];
      assert(x282 != Fp::invalid());
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x283 = arg2[26 * steps + ((cycle - 0) & mask)];
      assert(x283 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":54:18)
      auto x284 = x282 - x267;
      // loc("zirgen/components/bytes.cpp":55:17)
      auto x285 = x283 - x268;
      // loc("zirgen/components/bytes.cpp":58:19)
      auto x286 = x284 - x101;
      // loc("zirgen/components/bytes.cpp":58:7)
      auto x287 = x284 * x286;
      // loc("zirgen/components/bytes.cpp":58:7)
      assert(x287 == 0 && "eqz failed at: zirgen/components/bytes.cpp:58");
      // loc("zirgen/components/bytes.cpp":61:19)
      auto x288 = x285 + x99;
      // loc("zirgen/components/bytes.cpp":61:7)
      auto x289 = x284 * x288;
      // loc("zirgen/components/bytes.cpp":61:7)
      assert(x289 == 0 && "eqz failed at: zirgen/components/bytes.cpp:61");
      // loc("zirgen/components/bytes.cpp":64:25)
      auto x290 = x285 - x98;
      // loc("zirgen/components/bytes.cpp":64:7)
      auto x291 = x286 * x290;
      // loc("zirgen/components/bytes.cpp":64:7)
      assert(x291 == 0 && "eqz failed at: zirgen/components/bytes.cpp:64");
      {
        // loc("zirgen/components/bytes.cpp":44:20)
        auto x292 = x283 - x99;
        // loc("zirgen/components/bytes.cpp":44:20)
        auto x293 = (x292 == 0) ? Fp(1) : Fp(0);
        // loc("zirgen/components/bytes.cpp":45:16)
        auto x294 = x101 - x293;
        if (x294 != 0) {
          // loc("zirgen/components/bytes.cpp":46:7)
          {
            auto& reg = arg2[27 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x282);
            reg = x282;
          }
          // loc("zirgen/components/bytes.cpp":47:16)
          auto x295 = x283 + x98;
          // loc("zirgen/components/bytes.cpp":47:7)
          {
            auto& reg = arg2[28 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x295);
            reg = x295;
          }
        }
        if (x293 != 0) {
          // loc("zirgen/components/bytes.cpp":50:17)
          auto x296 = x282 + x101;
          // loc("zirgen/components/bytes.cpp":50:7)
          {
            auto& reg = arg2[27 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x296);
            reg = x296;
          }
          // loc("zirgen/components/bytes.cpp":51:7)
          {
            auto& reg = arg2[28 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
        }
      }
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x297 = arg2[27 * steps + ((cycle - 0) & mask)];
      assert(x297 != Fp::invalid());
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x298 = arg2[28 * steps + ((cycle - 0) & mask)];
      assert(x298 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":54:18)
      auto x299 = x297 - x282;
      // loc("zirgen/components/bytes.cpp":55:17)
      auto x300 = x298 - x283;
      // loc("zirgen/components/bytes.cpp":58:19)
      auto x301 = x299 - x101;
      // loc("zirgen/components/bytes.cpp":58:7)
      auto x302 = x299 * x301;
      // loc("zirgen/components/bytes.cpp":58:7)
      assert(x302 == 0 && "eqz failed at: zirgen/components/bytes.cpp:58");
      // loc("zirgen/components/bytes.cpp":61:19)
      auto x303 = x300 + x99;
      // loc("zirgen/components/bytes.cpp":61:7)
      auto x304 = x299 * x303;
      // loc("zirgen/components/bytes.cpp":61:7)
      assert(x304 == 0 && "eqz failed at: zirgen/components/bytes.cpp:61");
      // loc("zirgen/components/bytes.cpp":64:25)
      auto x305 = x300 - x98;
      // loc("zirgen/components/bytes.cpp":64:7)
      auto x306 = x301 * x305;
      // loc("zirgen/components/bytes.cpp":64:7)
      assert(x306 == 0 && "eqz failed at: zirgen/components/bytes.cpp:64");
      {
        // loc("zirgen/components/bytes.cpp":44:20)
        auto x307 = x298 - x99;
        // loc("zirgen/components/bytes.cpp":44:20)
        auto x308 = (x307 == 0) ? Fp(1) : Fp(0);
        // loc("zirgen/components/bytes.cpp":45:16)
        auto x309 = x101 - x308;
        if (x309 != 0) {
          // loc("zirgen/components/bytes.cpp":46:7)
          {
            auto& reg = arg2[29 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x297);
            reg = x297;
          }
          // loc("zirgen/components/bytes.cpp":47:16)
          auto x310 = x298 + x98;
          // loc("zirgen/components/bytes.cpp":47:7)
          {
            auto& reg = arg2[30 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x310);
            reg = x310;
          }
        }
        if (x308 != 0) {
          // loc("zirgen/components/bytes.cpp":50:17)
          auto x311 = x297 + x101;
          // loc("zirgen/components/bytes.cpp":50:7)
          {
            auto& reg = arg2[29 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x311);
            reg = x311;
          }
          // loc("zirgen/components/bytes.cpp":51:7)
          {
            auto& reg = arg2[30 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
        }
      }
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x312 = arg2[29 * steps + ((cycle - 0) & mask)];
      assert(x312 != Fp::invalid());
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x313 = arg2[30 * steps + ((cycle - 0) & mask)];
      assert(x313 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":54:18)
      auto x314 = x312 - x297;
      // loc("zirgen/components/bytes.cpp":55:17)
      auto x315 = x313 - x298;
      // loc("zirgen/components/bytes.cpp":58:19)
      auto x316 = x314 - x101;
      // loc("zirgen/components/bytes.cpp":58:7)
      auto x317 = x314 * x316;
      // loc("zirgen/components/bytes.cpp":58:7)
      assert(x317 == 0 && "eqz failed at: zirgen/components/bytes.cpp:58");
      // loc("zirgen/components/bytes.cpp":61:19)
      auto x318 = x315 + x99;
      // loc("zirgen/components/bytes.cpp":61:7)
      auto x319 = x314 * x318;
      // loc("zirgen/components/bytes.cpp":61:7)
      assert(x319 == 0 && "eqz failed at: zirgen/components/bytes.cpp:61");
      // loc("zirgen/components/bytes.cpp":64:25)
      auto x320 = x315 - x98;
      // loc("zirgen/components/bytes.cpp":64:7)
      auto x321 = x316 * x320;
      // loc("zirgen/components/bytes.cpp":64:7)
      assert(x321 == 0 && "eqz failed at: zirgen/components/bytes.cpp:64");
      {
        // loc("zirgen/components/bytes.cpp":44:20)
        auto x322 = x313 - x99;
        // loc("zirgen/components/bytes.cpp":44:20)
        auto x323 = (x322 == 0) ? Fp(1) : Fp(0);
        // loc("zirgen/components/bytes.cpp":45:16)
        auto x324 = x101 - x323;
        if (x324 != 0) {
          // loc("zirgen/components/bytes.cpp":46:7)
          {
            auto& reg = arg2[31 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x312);
            reg = x312;
          }
          // loc("zirgen/components/bytes.cpp":47:16)
          auto x325 = x313 + x98;
          // loc("zirgen/components/bytes.cpp":47:7)
          {
            auto& reg = arg2[32 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x325);
            reg = x325;
          }
        }
        if (x323 != 0) {
          // loc("zirgen/components/bytes.cpp":50:17)
          auto x326 = x312 + x101;
          // loc("zirgen/components/bytes.cpp":50:7)
          {
            auto& reg = arg2[31 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x326);
            reg = x326;
          }
          // loc("zirgen/components/bytes.cpp":51:7)
          {
            auto& reg = arg2[32 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
        }
      }
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x327 = arg2[31 * steps + ((cycle - 0) & mask)];
      assert(x327 != Fp::invalid());
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x328 = arg2[32 * steps + ((cycle - 0) & mask)];
      assert(x328 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":54:18)
      auto x329 = x327 - x312;
      // loc("zirgen/components/bytes.cpp":55:17)
      auto x330 = x328 - x313;
      // loc("zirgen/components/bytes.cpp":58:19)
      auto x331 = x329 - x101;
      // loc("zirgen/components/bytes.cpp":58:7)
      auto x332 = x329 * x331;
      // loc("zirgen/components/bytes.cpp":58:7)
      assert(x332 == 0 && "eqz failed at: zirgen/components/bytes.cpp:58");
      // loc("zirgen/components/bytes.cpp":61:19)
      auto x333 = x330 + x99;
      // loc("zirgen/components/bytes.cpp":61:7)
      auto x334 = x329 * x333;
      // loc("zirgen/components/bytes.cpp":61:7)
      assert(x334 == 0 && "eqz failed at: zirgen/components/bytes.cpp:61");
      // loc("zirgen/components/bytes.cpp":64:25)
      auto x335 = x330 - x98;
      // loc("zirgen/components/bytes.cpp":64:7)
      auto x336 = x331 * x335;
      // loc("zirgen/components/bytes.cpp":64:7)
      assert(x336 == 0 && "eqz failed at: zirgen/components/bytes.cpp:64");
      {
        // loc("zirgen/components/bytes.cpp":44:20)
        auto x337 = x328 - x99;
        // loc("zirgen/components/bytes.cpp":44:20)
        auto x338 = (x337 == 0) ? Fp(1) : Fp(0);
        // loc("zirgen/components/bytes.cpp":45:16)
        auto x339 = x101 - x338;
        if (x339 != 0) {
          // loc("zirgen/components/bytes.cpp":46:7)
          {
            auto& reg = arg2[33 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x327);
            reg = x327;
          }
          // loc("zirgen/components/bytes.cpp":47:16)
          auto x340 = x328 + x98;
          // loc("zirgen/components/bytes.cpp":47:7)
          {
            auto& reg = arg2[34 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x340);
            reg = x340;
          }
        }
        if (x338 != 0) {
          // loc("zirgen/components/bytes.cpp":50:17)
          auto x341 = x327 + x101;
          // loc("zirgen/components/bytes.cpp":50:7)
          {
            auto& reg = arg2[33 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x341);
            reg = x341;
          }
          // loc("zirgen/components/bytes.cpp":51:7)
          {
            auto& reg = arg2[34 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
        }
      }
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x342 = arg2[33 * steps + ((cycle - 0) & mask)];
      assert(x342 != Fp::invalid());
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x343 = arg2[34 * steps + ((cycle - 0) & mask)];
      assert(x343 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":54:18)
      auto x344 = x342 - x327;
      // loc("zirgen/components/bytes.cpp":55:17)
      auto x345 = x343 - x328;
      // loc("zirgen/components/bytes.cpp":58:19)
      auto x346 = x344 - x101;
      // loc("zirgen/components/bytes.cpp":58:7)
      auto x347 = x344 * x346;
      // loc("zirgen/components/bytes.cpp":58:7)
      assert(x347 == 0 && "eqz failed at: zirgen/components/bytes.cpp:58");
      // loc("zirgen/components/bytes.cpp":61:19)
      auto x348 = x345 + x99;
      // loc("zirgen/components/bytes.cpp":61:7)
      auto x349 = x344 * x348;
      // loc("zirgen/components/bytes.cpp":61:7)
      assert(x349 == 0 && "eqz failed at: zirgen/components/bytes.cpp:61");
      // loc("zirgen/components/bytes.cpp":64:25)
      auto x350 = x345 - x98;
      // loc("zirgen/components/bytes.cpp":64:7)
      auto x351 = x346 * x350;
      // loc("zirgen/components/bytes.cpp":64:7)
      assert(x351 == 0 && "eqz failed at: zirgen/components/bytes.cpp:64");
      {
        // loc("zirgen/components/bytes.cpp":44:20)
        auto x352 = x343 - x99;
        // loc("zirgen/components/bytes.cpp":44:20)
        auto x353 = (x352 == 0) ? Fp(1) : Fp(0);
        // loc("zirgen/components/bytes.cpp":45:16)
        auto x354 = x101 - x353;
        if (x354 != 0) {
          // loc("zirgen/components/bytes.cpp":46:7)
          {
            auto& reg = arg2[35 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x342);
            reg = x342;
          }
          // loc("zirgen/components/bytes.cpp":47:16)
          auto x355 = x343 + x98;
          // loc("zirgen/components/bytes.cpp":47:7)
          {
            auto& reg = arg2[36 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x355);
            reg = x355;
          }
        }
        if (x353 != 0) {
          // loc("zirgen/components/bytes.cpp":50:17)
          auto x356 = x342 + x101;
          // loc("zirgen/components/bytes.cpp":50:7)
          {
            auto& reg = arg2[35 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x356);
            reg = x356;
          }
          // loc("zirgen/components/bytes.cpp":51:7)
          {
            auto& reg = arg2[36 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
        }
      }
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x357 = arg2[35 * steps + ((cycle - 0) & mask)];
      assert(x357 != Fp::invalid());
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x358 = arg2[36 * steps + ((cycle - 0) & mask)];
      assert(x358 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":54:18)
      auto x359 = x357 - x342;
      // loc("zirgen/components/bytes.cpp":55:17)
      auto x360 = x358 - x343;
      // loc("zirgen/components/bytes.cpp":58:19)
      auto x361 = x359 - x101;
      // loc("zirgen/components/bytes.cpp":58:7)
      auto x362 = x359 * x361;
      // loc("zirgen/components/bytes.cpp":58:7)
      assert(x362 == 0 && "eqz failed at: zirgen/components/bytes.cpp:58");
      // loc("zirgen/components/bytes.cpp":61:19)
      auto x363 = x360 + x99;
      // loc("zirgen/components/bytes.cpp":61:7)
      auto x364 = x359 * x363;
      // loc("zirgen/components/bytes.cpp":61:7)
      assert(x364 == 0 && "eqz failed at: zirgen/components/bytes.cpp:61");
      // loc("zirgen/components/bytes.cpp":64:25)
      auto x365 = x360 - x98;
      // loc("zirgen/components/bytes.cpp":64:7)
      auto x366 = x361 * x365;
      // loc("zirgen/components/bytes.cpp":64:7)
      assert(x366 == 0 && "eqz failed at: zirgen/components/bytes.cpp:64");
      {
        // loc("zirgen/components/bytes.cpp":44:20)
        auto x367 = x358 - x99;
        // loc("zirgen/components/bytes.cpp":44:20)
        auto x368 = (x367 == 0) ? Fp(1) : Fp(0);
        // loc("zirgen/components/bytes.cpp":45:16)
        auto x369 = x101 - x368;
        if (x369 != 0) {
          // loc("zirgen/components/bytes.cpp":46:7)
          {
            auto& reg = arg2[37 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x357);
            reg = x357;
          }
          // loc("zirgen/components/bytes.cpp":47:16)
          auto x370 = x358 + x98;
          // loc("zirgen/components/bytes.cpp":47:7)
          {
            auto& reg = arg2[38 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x370);
            reg = x370;
          }
        }
        if (x368 != 0) {
          // loc("zirgen/components/bytes.cpp":50:17)
          auto x371 = x357 + x101;
          // loc("zirgen/components/bytes.cpp":50:7)
          {
            auto& reg = arg2[37 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x371);
            reg = x371;
          }
          // loc("zirgen/components/bytes.cpp":51:7)
          {
            auto& reg = arg2[38 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
        }
      }
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x372 = arg2[37 * steps + ((cycle - 0) & mask)];
      assert(x372 != Fp::invalid());
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x373 = arg2[38 * steps + ((cycle - 0) & mask)];
      assert(x373 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":54:18)
      auto x374 = x372 - x357;
      // loc("zirgen/components/bytes.cpp":55:17)
      auto x375 = x373 - x358;
      // loc("zirgen/components/bytes.cpp":58:19)
      auto x376 = x374 - x101;
      // loc("zirgen/components/bytes.cpp":58:7)
      auto x377 = x374 * x376;
      // loc("zirgen/components/bytes.cpp":58:7)
      assert(x377 == 0 && "eqz failed at: zirgen/components/bytes.cpp:58");
      // loc("zirgen/components/bytes.cpp":61:19)
      auto x378 = x375 + x99;
      // loc("zirgen/components/bytes.cpp":61:7)
      auto x379 = x374 * x378;
      // loc("zirgen/components/bytes.cpp":61:7)
      assert(x379 == 0 && "eqz failed at: zirgen/components/bytes.cpp:61");
      // loc("zirgen/components/bytes.cpp":64:25)
      auto x380 = x375 - x98;
      // loc("zirgen/components/bytes.cpp":64:7)
      auto x381 = x376 * x380;
      // loc("zirgen/components/bytes.cpp":64:7)
      assert(x381 == 0 && "eqz failed at: zirgen/components/bytes.cpp:64");
      {
        // loc("zirgen/components/bytes.cpp":44:20)
        auto x382 = x373 - x99;
        // loc("zirgen/components/bytes.cpp":44:20)
        auto x383 = (x382 == 0) ? Fp(1) : Fp(0);
        // loc("zirgen/components/bytes.cpp":45:16)
        auto x384 = x101 - x383;
        if (x384 != 0) {
          // loc("zirgen/components/bytes.cpp":46:7)
          {
            auto& reg = arg2[39 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x372);
            reg = x372;
          }
          // loc("zirgen/components/bytes.cpp":47:16)
          auto x385 = x373 + x98;
          // loc("zirgen/components/bytes.cpp":47:7)
          {
            auto& reg = arg2[40 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x385);
            reg = x385;
          }
        }
        if (x383 != 0) {
          // loc("zirgen/components/bytes.cpp":50:17)
          auto x386 = x372 + x101;
          // loc("zirgen/components/bytes.cpp":50:7)
          {
            auto& reg = arg2[39 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x386);
            reg = x386;
          }
          // loc("zirgen/components/bytes.cpp":51:7)
          {
            auto& reg = arg2[40 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
        }
      }
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x387 = arg2[39 * steps + ((cycle - 0) & mask)];
      assert(x387 != Fp::invalid());
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x388 = arg2[40 * steps + ((cycle - 0) & mask)];
      assert(x388 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":54:18)
      auto x389 = x387 - x372;
      // loc("zirgen/components/bytes.cpp":55:17)
      auto x390 = x388 - x373;
      // loc("zirgen/components/bytes.cpp":58:19)
      auto x391 = x389 - x101;
      // loc("zirgen/components/bytes.cpp":58:7)
      auto x392 = x389 * x391;
      // loc("zirgen/components/bytes.cpp":58:7)
      assert(x392 == 0 && "eqz failed at: zirgen/components/bytes.cpp:58");
      // loc("zirgen/components/bytes.cpp":61:19)
      auto x393 = x390 + x99;
      // loc("zirgen/components/bytes.cpp":61:7)
      auto x394 = x389 * x393;
      // loc("zirgen/components/bytes.cpp":61:7)
      assert(x394 == 0 && "eqz failed at: zirgen/components/bytes.cpp:61");
      // loc("zirgen/components/bytes.cpp":64:25)
      auto x395 = x390 - x98;
      // loc("zirgen/components/bytes.cpp":64:7)
      auto x396 = x391 * x395;
      // loc("zirgen/components/bytes.cpp":64:7)
      assert(x396 == 0 && "eqz failed at: zirgen/components/bytes.cpp:64");
      {
        // loc("zirgen/components/bytes.cpp":44:20)
        auto x397 = x388 - x99;
        // loc("zirgen/components/bytes.cpp":44:20)
        auto x398 = (x397 == 0) ? Fp(1) : Fp(0);
        // loc("zirgen/components/bytes.cpp":45:16)
        auto x399 = x101 - x398;
        if (x399 != 0) {
          // loc("zirgen/components/bytes.cpp":46:7)
          {
            auto& reg = arg2[41 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x387);
            reg = x387;
          }
          // loc("zirgen/components/bytes.cpp":47:16)
          auto x400 = x388 + x98;
          // loc("zirgen/components/bytes.cpp":47:7)
          {
            auto& reg = arg2[42 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x400);
            reg = x400;
          }
        }
        if (x398 != 0) {
          // loc("zirgen/components/bytes.cpp":50:17)
          auto x401 = x387 + x101;
          // loc("zirgen/components/bytes.cpp":50:7)
          {
            auto& reg = arg2[41 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x401);
            reg = x401;
          }
          // loc("zirgen/components/bytes.cpp":51:7)
          {
            auto& reg = arg2[42 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
        }
      }
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x402 = arg2[41 * steps + ((cycle - 0) & mask)];
      assert(x402 != Fp::invalid());
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x403 = arg2[42 * steps + ((cycle - 0) & mask)];
      assert(x403 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":54:18)
      auto x404 = x402 - x387;
      // loc("zirgen/components/bytes.cpp":55:17)
      auto x405 = x403 - x388;
      // loc("zirgen/components/bytes.cpp":58:19)
      auto x406 = x404 - x101;
      // loc("zirgen/components/bytes.cpp":58:7)
      auto x407 = x404 * x406;
      // loc("zirgen/components/bytes.cpp":58:7)
      assert(x407 == 0 && "eqz failed at: zirgen/components/bytes.cpp:58");
      // loc("zirgen/components/bytes.cpp":61:19)
      auto x408 = x405 + x99;
      // loc("zirgen/components/bytes.cpp":61:7)
      auto x409 = x404 * x408;
      // loc("zirgen/components/bytes.cpp":61:7)
      assert(x409 == 0 && "eqz failed at: zirgen/components/bytes.cpp:61");
      // loc("zirgen/components/bytes.cpp":64:25)
      auto x410 = x405 - x98;
      // loc("zirgen/components/bytes.cpp":64:7)
      auto x411 = x406 * x410;
      // loc("zirgen/components/bytes.cpp":64:7)
      assert(x411 == 0 && "eqz failed at: zirgen/components/bytes.cpp:64");
      {
        // loc("zirgen/components/bytes.cpp":44:20)
        auto x412 = x403 - x99;
        // loc("zirgen/components/bytes.cpp":44:20)
        auto x413 = (x412 == 0) ? Fp(1) : Fp(0);
        // loc("zirgen/components/bytes.cpp":45:16)
        auto x414 = x101 - x413;
        if (x414 != 0) {
          // loc("zirgen/components/bytes.cpp":46:7)
          {
            auto& reg = arg2[43 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x402);
            reg = x402;
          }
          // loc("zirgen/components/bytes.cpp":47:16)
          auto x415 = x403 + x98;
          // loc("zirgen/components/bytes.cpp":47:7)
          {
            auto& reg = arg2[44 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x415);
            reg = x415;
          }
        }
        if (x413 != 0) {
          // loc("zirgen/components/bytes.cpp":50:17)
          auto x416 = x402 + x101;
          // loc("zirgen/components/bytes.cpp":50:7)
          {
            auto& reg = arg2[43 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x416);
            reg = x416;
          }
          // loc("zirgen/components/bytes.cpp":51:7)
          {
            auto& reg = arg2[44 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
        }
      }
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x417 = arg2[43 * steps + ((cycle - 0) & mask)];
      assert(x417 != Fp::invalid());
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x418 = arg2[44 * steps + ((cycle - 0) & mask)];
      assert(x418 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":54:18)
      auto x419 = x417 - x402;
      // loc("zirgen/components/bytes.cpp":55:17)
      auto x420 = x418 - x403;
      // loc("zirgen/components/bytes.cpp":58:19)
      auto x421 = x419 - x101;
      // loc("zirgen/components/bytes.cpp":58:7)
      auto x422 = x419 * x421;
      // loc("zirgen/components/bytes.cpp":58:7)
      assert(x422 == 0 && "eqz failed at: zirgen/components/bytes.cpp:58");
      // loc("zirgen/components/bytes.cpp":61:19)
      auto x423 = x420 + x99;
      // loc("zirgen/components/bytes.cpp":61:7)
      auto x424 = x419 * x423;
      // loc("zirgen/components/bytes.cpp":61:7)
      assert(x424 == 0 && "eqz failed at: zirgen/components/bytes.cpp:61");
      // loc("zirgen/components/bytes.cpp":64:25)
      auto x425 = x420 - x98;
      // loc("zirgen/components/bytes.cpp":64:7)
      auto x426 = x421 * x425;
      // loc("zirgen/components/bytes.cpp":64:7)
      assert(x426 == 0 && "eqz failed at: zirgen/components/bytes.cpp:64");
    }
  }
  // loc("Top/Code/OneHot/hot[3](Reg)"("./zirgen/components/mux.h":59:25))
  auto x427 = arg0[4 * steps + ((cycle - 0) & mask)];
  assert(x427 != Fp::invalid());
  if (x427 != 0) {
    // loc("Top/Code/Mux/3(RamLoadInfo)/Reg"("./zirgen/compiler/edsl/component.h":164:27))
    auto x428 = arg0[10 * steps + ((cycle - 0) & mask)];
    assert(x428 != Fp::invalid());
    {
      // loc("zirgen/components/bytes.cpp":106:21)
      auto x429 = Fp(x428.asUInt32() & x97.asUInt32());
      // loc("zirgen/components/bytes.cpp":106:12)
      {
        auto& reg = arg2[15 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x429);
        reg = x429;
      }
    }
    // loc("Top/mux(Mux)/ram_load(RamLoadStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
    auto x430 = arg2[15 * steps + ((cycle - 0) & mask)];
    assert(x430 != Fp::invalid());
    // loc("zirgen/components/bytes.cpp":107:11)
    auto x431 = x428 - x430;
    // loc("zirgen/components/bytes.cpp":107:10)
    auto x432 = x431 * x96;
    // loc("zirgen/components/bytes.cpp":111:3)
    {
      auto& reg = arg2[16 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x432);
      reg = x432;
    }
    // loc("Top/Code/Mux/3(RamLoadInfo)/Reg"("./zirgen/compiler/edsl/component.h":164:27))
    auto x433 = arg0[11 * steps + ((cycle - 0) & mask)];
    assert(x433 != Fp::invalid());
    {
      // loc("zirgen/components/bytes.cpp":106:21)
      auto x434 = Fp(x433.asUInt32() & x97.asUInt32());
      // loc("zirgen/components/bytes.cpp":106:12)
      {
        auto& reg = arg2[17 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x434);
        reg = x434;
      }
    }
    // loc("Top/mux(Mux)/ram_load(RamLoadStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
    auto x435 = arg2[17 * steps + ((cycle - 0) & mask)];
    assert(x435 != Fp::invalid());
    // loc("zirgen/components/bytes.cpp":107:11)
    auto x436 = x433 - x435;
    // loc("zirgen/components/bytes.cpp":107:10)
    auto x437 = x436 * x96;
    // loc("zirgen/components/bytes.cpp":111:3)
    {
      auto& reg = arg2[18 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x437);
      reg = x437;
    }
    // loc("Top/Code/Reg"("./zirgen/compiler/edsl/component.h":164:27))
    auto x438 = arg0[0 * steps + ((cycle - 0) & mask)];
    assert(x438 != Fp::invalid());
    // loc("Top/Code/Mux/3(RamLoadInfo)/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
    auto x439 = arg0[9 * steps + ((cycle - 0) & mask)];
    assert(x439 != Fp::invalid());
    // loc("Top/mux(Mux)/ram_load(RamLoadStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
    auto x440 = arg2[16 * steps + ((cycle - 0) & mask)];
    assert(x440 != Fp::invalid());
    // loc("Top/mux(Mux)/ram_load(RamLoadStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
    auto x441 = arg2[18 * steps + ((cycle - 0) & mask)];
    assert(x441 != Fp::invalid());
    // loc("zirgen/components/u32.cpp":44:5)
    {
      auto& reg = arg2[118 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x430);
      reg = x430;
    }
    // loc("zirgen/components/u32.cpp":44:5)
    {
      auto& reg = arg2[119 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x440);
      reg = x440;
    }
    // loc("zirgen/components/u32.cpp":44:5)
    {
      auto& reg = arg2[120 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x435);
      reg = x435;
    }
    // loc("zirgen/components/u32.cpp":44:5)
    {
      auto& reg = arg2[121 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x441);
      reg = x441;
    }
    {
      extern_args[0] = x439;
      extern_args[1] = x430;
      extern_args[2] = x440;
      extern_args[3] = x435;
      extern_args[4] = x441;
      extern_args[5] = x100;
      extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
    }
    // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
    auto x442 = arg2[118 * steps + ((cycle - 0) & mask)];
    assert(x442 != Fp::invalid());
    // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
    auto x443 = arg2[119 * steps + ((cycle - 0) & mask)];
    assert(x443 != Fp::invalid());
    // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
    auto x444 = arg2[120 * steps + ((cycle - 0) & mask)];
    assert(x444 != Fp::invalid());
    // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
    auto x445 = arg2[121 * steps + ((cycle - 0) & mask)];
    assert(x445 != Fp::invalid());
    // loc("zirgen/components/ram.cpp":178:3)
    {
      auto& reg = arg2[115 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x439);
      reg = x439;
    }
    // loc("zirgen/components/ram.cpp":179:3)
    {
      auto& reg = arg2[116 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x438);
      reg = x438;
    }
    // loc("zirgen/components/ram.cpp":180:3)
    {
      auto& reg = arg2[117 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x100);
      reg = x100;
    }
    // loc("zirgen/components/u32.cpp":44:5)
    {
      auto& reg = arg2[118 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x442);
      reg = x442;
    }
    // loc("zirgen/components/u32.cpp":44:5)
    {
      auto& reg = arg2[119 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x443);
      reg = x443;
    }
    // loc("zirgen/components/u32.cpp":44:5)
    {
      auto& reg = arg2[120 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x444);
      reg = x444;
    }
    // loc("zirgen/components/u32.cpp":44:5)
    {
      auto& reg = arg2[121 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x445);
      reg = x445;
    }
    // loc("Top/Code/Mux/3(RamLoadInfo)/Reg"("./zirgen/compiler/edsl/component.h":164:27))
    auto x446 = arg0[12 * steps + ((cycle - 0) & mask)];
    assert(x446 != Fp::invalid());
    {
      // loc("zirgen/components/bytes.cpp":106:21)
      auto x447 = Fp(x446.asUInt32() & x97.asUInt32());
      // loc("zirgen/components/bytes.cpp":106:12)
      {
        auto& reg = arg2[19 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x447);
        reg = x447;
      }
    }
    // loc("Top/mux(Mux)/ram_load(RamLoadStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
    auto x448 = arg2[19 * steps + ((cycle - 0) & mask)];
    assert(x448 != Fp::invalid());
    // loc("zirgen/components/bytes.cpp":107:11)
    auto x449 = x446 - x448;
    // loc("zirgen/components/bytes.cpp":107:10)
    auto x450 = x449 * x96;
    // loc("zirgen/components/bytes.cpp":111:3)
    {
      auto& reg = arg2[20 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x450);
      reg = x450;
    }
    // loc("Top/Code/Mux/3(RamLoadInfo)/Reg"("./zirgen/compiler/edsl/component.h":164:27))
    auto x451 = arg0[13 * steps + ((cycle - 0) & mask)];
    assert(x451 != Fp::invalid());
    {
      // loc("zirgen/components/bytes.cpp":106:21)
      auto x452 = Fp(x451.asUInt32() & x97.asUInt32());
      // loc("zirgen/components/bytes.cpp":106:12)
      {
        auto& reg = arg2[21 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x452);
        reg = x452;
      }
    }
    // loc("Top/mux(Mux)/ram_load(RamLoadStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
    auto x453 = arg2[21 * steps + ((cycle - 0) & mask)];
    assert(x453 != Fp::invalid());
    // loc("zirgen/components/bytes.cpp":107:11)
    auto x454 = x451 - x453;
    // loc("zirgen/components/bytes.cpp":107:10)
    auto x455 = x454 * x96;
    // loc("zirgen/components/bytes.cpp":111:3)
    {
      auto& reg = arg2[22 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x455);
      reg = x455;
    }
    // loc("Top/mux(Mux)/ram_load(RamLoadStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
    auto x456 = arg2[20 * steps + ((cycle - 0) & mask)];
    assert(x456 != Fp::invalid());
    // loc("Top/mux(Mux)/ram_load(RamLoadStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
    auto x457 = arg2[22 * steps + ((cycle - 0) & mask)];
    assert(x457 != Fp::invalid());
    // loc("zirgen/circuit/rv32im/v1/edsl/top.cpp":55:44)
    auto x458 = x439 + x101;
    // loc("zirgen/components/u32.cpp":44:5)
    {
      auto& reg = arg2[125 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x448);
      reg = x448;
    }
    // loc("zirgen/components/u32.cpp":44:5)
    {
      auto& reg = arg2[126 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x456);
      reg = x456;
    }
    // loc("zirgen/components/u32.cpp":44:5)
    {
      auto& reg = arg2[127 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x453);
      reg = x453;
    }
    // loc("zirgen/components/u32.cpp":44:5)
    {
      auto& reg = arg2[128 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x457);
      reg = x457;
    }
    {
      extern_args[0] = x458;
      extern_args[1] = x448;
      extern_args[2] = x456;
      extern_args[3] = x453;
      extern_args[4] = x457;
      extern_args[5] = x100;
      extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
    }
    // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
    auto x459 = arg2[125 * steps + ((cycle - 0) & mask)];
    assert(x459 != Fp::invalid());
    // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
    auto x460 = arg2[126 * steps + ((cycle - 0) & mask)];
    assert(x460 != Fp::invalid());
    // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
    auto x461 = arg2[127 * steps + ((cycle - 0) & mask)];
    assert(x461 != Fp::invalid());
    // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
    auto x462 = arg2[128 * steps + ((cycle - 0) & mask)];
    assert(x462 != Fp::invalid());
    // loc("zirgen/components/ram.cpp":178:3)
    {
      auto& reg = arg2[122 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x458);
      reg = x458;
    }
    // loc("zirgen/components/ram.cpp":179:3)
    {
      auto& reg = arg2[123 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x438);
      reg = x438;
    }
    // loc("zirgen/components/ram.cpp":180:3)
    {
      auto& reg = arg2[124 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x100);
      reg = x100;
    }
    // loc("zirgen/components/u32.cpp":44:5)
    {
      auto& reg = arg2[125 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x459);
      reg = x459;
    }
    // loc("zirgen/components/u32.cpp":44:5)
    {
      auto& reg = arg2[126 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x460);
      reg = x460;
    }
    // loc("zirgen/components/u32.cpp":44:5)
    {
      auto& reg = arg2[127 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x461);
      reg = x461;
    }
    // loc("zirgen/components/u32.cpp":44:5)
    {
      auto& reg = arg2[128 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x462);
      reg = x462;
    }
    // loc("Top/Code/Mux/3(RamLoadInfo)/Reg"("./zirgen/compiler/edsl/component.h":164:27))
    auto x463 = arg0[14 * steps + ((cycle - 0) & mask)];
    assert(x463 != Fp::invalid());
    {
      // loc("zirgen/components/bytes.cpp":106:21)
      auto x464 = Fp(x463.asUInt32() & x97.asUInt32());
      // loc("zirgen/components/bytes.cpp":106:12)
      {
        auto& reg = arg2[23 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x464);
        reg = x464;
      }
    }
    // loc("Top/mux(Mux)/ram_load(RamLoadStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
    auto x465 = arg2[23 * steps + ((cycle - 0) & mask)];
    assert(x465 != Fp::invalid());
    // loc("zirgen/components/bytes.cpp":107:11)
    auto x466 = x463 - x465;
    // loc("zirgen/components/bytes.cpp":107:10)
    auto x467 = x466 * x96;
    // loc("zirgen/components/bytes.cpp":111:3)
    {
      auto& reg = arg2[24 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x467);
      reg = x467;
    }
    // loc("Top/Code/Mux/3(RamLoadInfo)/Reg"("./zirgen/compiler/edsl/component.h":164:27))
    auto x468 = arg0[15 * steps + ((cycle - 0) & mask)];
    assert(x468 != Fp::invalid());
    {
      // loc("zirgen/components/bytes.cpp":106:21)
      auto x469 = Fp(x468.asUInt32() & x97.asUInt32());
      // loc("zirgen/components/bytes.cpp":106:12)
      {
        auto& reg = arg2[25 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x469);
        reg = x469;
      }
    }
    // loc("Top/mux(Mux)/ram_load(RamLoadStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
    auto x470 = arg2[25 * steps + ((cycle - 0) & mask)];
    assert(x470 != Fp::invalid());
    // loc("zirgen/components/bytes.cpp":107:11)
    auto x471 = x468 - x470;
    // loc("zirgen/components/bytes.cpp":107:10)
    auto x472 = x471 * x96;
    // loc("zirgen/components/bytes.cpp":111:3)
    {
      auto& reg = arg2[26 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x472);
      reg = x472;
    }
    // loc("Top/mux(Mux)/ram_load(RamLoadStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
    auto x473 = arg2[24 * steps + ((cycle - 0) & mask)];
    assert(x473 != Fp::invalid());
    // loc("Top/mux(Mux)/ram_load(RamLoadStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
    auto x474 = arg2[26 * steps + ((cycle - 0) & mask)];
    assert(x474 != Fp::invalid());
    // loc("zirgen/circuit/rv32im/v1/edsl/top.cpp":55:44)
    auto x475 = x439 + x98;
    // loc("zirgen/components/u32.cpp":44:5)
    {
      auto& reg = arg2[132 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x465);
      reg = x465;
    }
    // loc("zirgen/components/u32.cpp":44:5)
    {
      auto& reg = arg2[133 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x473);
      reg = x473;
    }
    // loc("zirgen/components/u32.cpp":44:5)
    {
      auto& reg = arg2[134 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x470);
      reg = x470;
    }
    // loc("zirgen/components/u32.cpp":44:5)
    {
      auto& reg = arg2[135 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x474);
      reg = x474;
    }
    {
      extern_args[0] = x475;
      extern_args[1] = x465;
      extern_args[2] = x473;
      extern_args[3] = x470;
      extern_args[4] = x474;
      extern_args[5] = x100;
      extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
    }
    // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
    auto x476 = arg2[132 * steps + ((cycle - 0) & mask)];
    assert(x476 != Fp::invalid());
    // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
    auto x477 = arg2[133 * steps + ((cycle - 0) & mask)];
    assert(x477 != Fp::invalid());
    // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
    auto x478 = arg2[134 * steps + ((cycle - 0) & mask)];
    assert(x478 != Fp::invalid());
    // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
    auto x479 = arg2[135 * steps + ((cycle - 0) & mask)];
    assert(x479 != Fp::invalid());
    // loc("zirgen/components/ram.cpp":178:3)
    {
      auto& reg = arg2[129 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x475);
      reg = x475;
    }
    // loc("zirgen/components/ram.cpp":179:3)
    {
      auto& reg = arg2[130 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x438);
      reg = x438;
    }
    // loc("zirgen/components/ram.cpp":180:3)
    {
      auto& reg = arg2[131 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x100);
      reg = x100;
    }
    // loc("zirgen/components/u32.cpp":44:5)
    {
      auto& reg = arg2[132 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x476);
      reg = x476;
    }
    // loc("zirgen/components/u32.cpp":44:5)
    {
      auto& reg = arg2[133 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x477);
      reg = x477;
    }
    // loc("zirgen/components/u32.cpp":44:5)
    {
      auto& reg = arg2[134 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x478);
      reg = x478;
    }
    // loc("zirgen/components/u32.cpp":44:5)
    {
      auto& reg = arg2[135 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x479);
      reg = x479;
    }
  }
  // loc("Top/Code/OneHot/hot[4](Reg)"("./zirgen/components/mux.h":59:25))
  auto x480 = arg0[5 * steps + ((cycle - 0) & mask)];
  assert(x480 != Fp::invalid());
  if (x480 != 0) {
    // loc("Top/Code/Mux/4(ResetInfo)/Reg"("./zirgen/compiler/edsl/component.h":164:27))
    auto x481 = arg0[10 * steps + ((cycle - 0) & mask)];
    assert(x481 != Fp::invalid());
    // loc("Top/Code/Mux/4(ResetInfo)/Reg"("./zirgen/compiler/edsl/component.h":164:27))
    auto x482 = arg0[11 * steps + ((cycle - 0) & mask)];
    assert(x482 != Fp::invalid());
    // loc("Top/Code/Mux/4(ResetInfo)/Reg"("./zirgen/compiler/edsl/component.h":164:27))
    auto x483 = arg0[12 * steps + ((cycle - 0) & mask)];
    assert(x483 != Fp::invalid());
    // loc("Top/Code/Mux/4(ResetInfo)/Reg"("./zirgen/compiler/edsl/component.h":164:27))
    auto x484 = arg0[9 * steps + ((cycle - 0) & mask)];
    assert(x484 != Fp::invalid());
    // loc("Top/Code/Reg"("./zirgen/compiler/edsl/component.h":164:27))
    auto x485 = arg0[0 * steps + ((cycle - 0) & mask)];
    assert(x485 != Fp::invalid());
    if (x481 != 0) {
      {
        // loc("./zirgen/components/onehot.h":47:9)
        {
          auto& reg = arg2[174 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("./zirgen/components/onehot.h":47:9)
        {
          auto& reg = arg2[175 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/onehot.h":47:9)
        {
          auto& reg = arg2[176 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
      }
      // loc("Top/mux(Mux)/reset(ResetStep)/OneHot/hot[1](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x486 = arg2[175 * steps + ((cycle - 0) & mask)];
      assert(x486 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/OneHot/hot[2](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x487 = arg2[176 * steps + ((cycle - 0) & mask)];
      assert(x487 != Fp::invalid());
      // loc("./zirgen/components/onehot.h":56:19)
      auto x488 = x487 * x98;
      // loc("./zirgen/components/onehot.h":56:13)
      auto x489 = x486 + x488;
      // loc("./zirgen/components/onehot.h":50:8)
      assert(x489 == 0 && "eqz failed at: ./zirgen/components/onehot.h:50");
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":79:5)
      {
        auto& reg = arg2[177 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      if (x484 != 0) {
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[0](U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x490 = arg1[36];
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[0](U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x491 = arg1[37];
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[0](U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x492 = arg1[38];
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[0](U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x493 = arg1[39];
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x490);
          reg = x490;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x491);
          reg = x491;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[123 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x492);
          reg = x492;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[124 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x493);
          reg = x493;
        }
        {
          extern_args[0] = x92;
          extern_args[1] = x490;
          extern_args[2] = x491;
          extern_args[3] = x492;
          extern_args[4] = x493;
          extern_args[5] = x100;
          extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x494 = arg2[121 * steps + ((cycle - 0) & mask)];
        assert(x494 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x495 = arg2[122 * steps + ((cycle - 0) & mask)];
        assert(x495 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x496 = arg2[123 * steps + ((cycle - 0) & mask)];
        assert(x496 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x497 = arg2[124 * steps + ((cycle - 0) & mask)];
        assert(x497 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[118 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x92);
          reg = x92;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[119 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x485);
          reg = x485;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[120 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x494);
          reg = x494;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x495);
          reg = x495;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[123 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x496);
          reg = x496;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[124 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x497);
          reg = x497;
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[1](U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x498 = arg1[40];
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[1](U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x499 = arg1[41];
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[1](U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x500 = arg1[42];
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[1](U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x501 = arg1[43];
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[128 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x498);
          reg = x498;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[129 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x499);
          reg = x499;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[130 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x500);
          reg = x500;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[131 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x501);
          reg = x501;
        }
        {
          extern_args[0] = x91;
          extern_args[1] = x498;
          extern_args[2] = x499;
          extern_args[3] = x500;
          extern_args[4] = x501;
          extern_args[5] = x100;
          extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x502 = arg2[128 * steps + ((cycle - 0) & mask)];
        assert(x502 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x503 = arg2[129 * steps + ((cycle - 0) & mask)];
        assert(x503 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x504 = arg2[130 * steps + ((cycle - 0) & mask)];
        assert(x504 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x505 = arg2[131 * steps + ((cycle - 0) & mask)];
        assert(x505 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[125 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x91);
          reg = x91;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[126 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x485);
          reg = x485;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[127 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[128 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x502);
          reg = x502;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[129 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x503);
          reg = x503;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[130 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x504);
          reg = x504;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[131 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x505);
          reg = x505;
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[2](U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x506 = arg1[44];
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[2](U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x507 = arg1[45];
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[2](U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x508 = arg1[46];
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[2](U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x509 = arg1[47];
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x506);
          reg = x506;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x507);
          reg = x507;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[137 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x508);
          reg = x508;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[138 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x509);
          reg = x509;
        }
        {
          extern_args[0] = x90;
          extern_args[1] = x506;
          extern_args[2] = x507;
          extern_args[3] = x508;
          extern_args[4] = x509;
          extern_args[5] = x100;
          extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x510 = arg2[135 * steps + ((cycle - 0) & mask)];
        assert(x510 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x511 = arg2[136 * steps + ((cycle - 0) & mask)];
        assert(x511 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x512 = arg2[137 * steps + ((cycle - 0) & mask)];
        assert(x512 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x513 = arg2[138 * steps + ((cycle - 0) & mask)];
        assert(x513 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[132 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x90);
          reg = x90;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[133 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x485);
          reg = x485;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[134 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x510);
          reg = x510;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x511);
          reg = x511;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[137 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x512);
          reg = x512;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[138 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x513);
          reg = x513;
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[3](U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x514 = arg1[48];
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[3](U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x515 = arg1[49];
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[3](U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x516 = arg1[50];
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[3](U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x517 = arg1[51];
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x514);
          reg = x514;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x515);
          reg = x515;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[144 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x516);
          reg = x516;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[145 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x517);
          reg = x517;
        }
        {
          extern_args[0] = x89;
          extern_args[1] = x514;
          extern_args[2] = x515;
          extern_args[3] = x516;
          extern_args[4] = x517;
          extern_args[5] = x100;
          extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x518 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x518 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x519 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x519 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x520 = arg2[144 * steps + ((cycle - 0) & mask)];
        assert(x520 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x521 = arg2[145 * steps + ((cycle - 0) & mask)];
        assert(x521 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[139 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x89);
          reg = x89;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x485);
          reg = x485;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x518);
          reg = x518;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x519);
          reg = x519;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[144 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x520);
          reg = x520;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[145 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x521);
          reg = x521;
        }
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":87:17)
      auto x522 = x101 - x484;
      if (x522 != 0) {
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[4](U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x523 = arg1[52];
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[4](U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x524 = arg1[53];
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[4](U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x525 = arg1[54];
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[4](U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x526 = arg1[55];
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x523);
          reg = x523;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x524);
          reg = x524;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[123 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x525);
          reg = x525;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[124 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x526);
          reg = x526;
        }
        {
          extern_args[0] = x88;
          extern_args[1] = x523;
          extern_args[2] = x524;
          extern_args[3] = x525;
          extern_args[4] = x526;
          extern_args[5] = x100;
          extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x527 = arg2[121 * steps + ((cycle - 0) & mask)];
        assert(x527 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x528 = arg2[122 * steps + ((cycle - 0) & mask)];
        assert(x528 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x529 = arg2[123 * steps + ((cycle - 0) & mask)];
        assert(x529 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x530 = arg2[124 * steps + ((cycle - 0) & mask)];
        assert(x530 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[118 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x88);
          reg = x88;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[119 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x485);
          reg = x485;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[120 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x527);
          reg = x527;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x528);
          reg = x528;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[123 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x529);
          reg = x529;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[124 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x530);
          reg = x530;
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[5](U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x531 = arg1[56];
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[5](U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x532 = arg1[57];
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[5](U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x533 = arg1[58];
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[5](U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x534 = arg1[59];
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[128 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x531);
          reg = x531;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[129 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x532);
          reg = x532;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[130 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x533);
          reg = x533;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[131 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x534);
          reg = x534;
        }
        {
          extern_args[0] = x87;
          extern_args[1] = x531;
          extern_args[2] = x532;
          extern_args[3] = x533;
          extern_args[4] = x534;
          extern_args[5] = x100;
          extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x535 = arg2[128 * steps + ((cycle - 0) & mask)];
        assert(x535 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x536 = arg2[129 * steps + ((cycle - 0) & mask)];
        assert(x536 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x537 = arg2[130 * steps + ((cycle - 0) & mask)];
        assert(x537 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x538 = arg2[131 * steps + ((cycle - 0) & mask)];
        assert(x538 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[125 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x87);
          reg = x87;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[126 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x485);
          reg = x485;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[127 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[128 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x535);
          reg = x535;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[129 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x536);
          reg = x536;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[130 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x537);
          reg = x537;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[131 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x538);
          reg = x538;
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[6](U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x539 = arg1[60];
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[6](U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x540 = arg1[61];
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[6](U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x541 = arg1[62];
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[6](U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x542 = arg1[63];
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x539);
          reg = x539;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x540);
          reg = x540;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[137 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x541);
          reg = x541;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[138 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x542);
          reg = x542;
        }
        {
          extern_args[0] = x86;
          extern_args[1] = x539;
          extern_args[2] = x540;
          extern_args[3] = x541;
          extern_args[4] = x542;
          extern_args[5] = x100;
          extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x543 = arg2[135 * steps + ((cycle - 0) & mask)];
        assert(x543 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x544 = arg2[136 * steps + ((cycle - 0) & mask)];
        assert(x544 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x545 = arg2[137 * steps + ((cycle - 0) & mask)];
        assert(x545 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x546 = arg2[138 * steps + ((cycle - 0) & mask)];
        assert(x546 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[132 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x86);
          reg = x86;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[133 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x485);
          reg = x485;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[134 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x543);
          reg = x543;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x544);
          reg = x544;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[137 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x545);
          reg = x545;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[138 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x546);
          reg = x546;
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[7](U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x547 = arg1[64];
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[7](U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x548 = arg1[65];
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[7](U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x549 = arg1[66];
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[7](U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x550 = arg1[67];
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x547);
          reg = x547;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x548);
          reg = x548;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[144 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x549);
          reg = x549;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[145 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x550);
          reg = x550;
        }
        {
          extern_args[0] = x85;
          extern_args[1] = x547;
          extern_args[2] = x548;
          extern_args[3] = x549;
          extern_args[4] = x550;
          extern_args[5] = x100;
          extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x551 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x551 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x552 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x552 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x553 = arg2[144 * steps + ((cycle - 0) & mask)];
        assert(x553 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x554 = arg2[145 * steps + ((cycle - 0) & mask)];
        assert(x554 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[139 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x85);
          reg = x85;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x485);
          reg = x485;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x551);
          reg = x551;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x552);
          reg = x552;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[144 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x553);
          reg = x553;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[145 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x554);
          reg = x554;
        }
      }
      {
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/pc(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x555 = arg1[32];
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":94:28)
        auto x556 = Fp(x555.asUInt32() & x101.asUInt32());
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[99 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x556);
          reg = x556;
        }
      }
      // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/pc(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x557 = arg1[32];
      // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/pc(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x558 = arg1[33];
      // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/pc(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x559 = arg1[34];
      // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/pc(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x560 = arg1[35];
      // loc("Top/mux(Mux)/reset(ResetStep)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x561 = arg2[99 * steps + ((cycle - 0) & mask)];
      assert(x561 != Fp::invalid());
      // loc("./zirgen/components/u32.h":35:12)
      auto x562 = x558 * x95;
      // loc("./zirgen/components/u32.h":36:12)
      auto x563 = x559 * x82;
      // loc("./zirgen/components/u32.h":37:12)
      auto x564 = x560 * x84;
      // loc("./zirgen/components/u32.h":34:12)
      auto x565 = x557 + x562;
      // loc("./zirgen/components/u32.h":34:12)
      auto x566 = x565 + x563;
      // loc("./zirgen/components/u32.h":34:12)
      auto x567 = x566 + x564;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":95:13)
      auto x568 = x567 - x561;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":34:23)
      auto x569 = x568 + x83;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x570 = Fp(x569.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[6 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x570);
          reg = x570;
        }
      }
      // loc("Top/mux(Mux)/reset(ResetStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x571 = arg2[6 * steps + ((cycle - 0) & mask)];
      assert(x571 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x572 = x569 - x571;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x573 = x572 * x96;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x574 = Fp(x573.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[7 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x574);
          reg = x574;
        }
      }
      // loc("Top/mux(Mux)/reset(ResetStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x575 = arg2[7 * steps + ((cycle - 0) & mask)];
      assert(x575 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x576 = x573 - x575;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x577 = x576 * x96;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x578 = Fp(x577.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[8 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x578);
          reg = x578;
        }
      }
      // loc("Top/mux(Mux)/reset(ResetStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x579 = arg2[8 * steps + ((cycle - 0) & mask)];
      assert(x579 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x580 = x577 - x579;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x581 = x580 * x96;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":37:26)
        auto x582 = Fp(x581.asUInt32() & x81.asUInt32());
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[70 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x582);
          reg = x582;
        }
      }
      // loc("Top/mux(Mux)/reset(ResetStep)/PCReg/twits[0](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x583 = arg2[70 * steps + ((cycle - 0) & mask)];
      assert(x583 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:18)
      auto x584 = x581 - x583;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:17)
      auto x585 = x584 * x80;
      // loc("./zirgen/components/bits.h":78:23)
      {
        auto& reg = arg2[71 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x585);
        reg = x585;
      }
      // loc("Top/mux(Mux)/reset(ResetStep)/PCReg/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x586 = arg2[71 * steps + ((cycle - 0) & mask)];
      assert(x586 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:23)
      auto x587 = x101 - x586;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:15)
      auto x588 = x586 * x587;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:3)
      {
        auto& reg = arg2[98 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x588);
        reg = x588;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:17)
      auto x589 = x98 - x586;
      // loc("Top/mux(Mux)/reset(ResetStep)/PCReg/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x590 = arg2[98 * steps + ((cycle - 0) & mask)];
      assert(x590 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
      auto x591 = x590 * x589;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
      assert(x591 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:43");
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":97:19)
      auto x592 = x571 * x80;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x593 = Fp(x592.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[18 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x593);
          reg = x593;
        }
      }
    }
    if (x482 != 0) {
      // loc("Top/mux(Mux)/reset(ResetStep)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x594 = arg2[99 * steps + ((cycle - 1) & mask)];
      assert(x594 != Fp::invalid());
      // loc("./zirgen/components/bits.h":37:23)
      {
        auto& reg = arg2[99 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x594);
        reg = x594;
      }
      {
        // loc("./zirgen/components/onehot.h":47:9)
        {
          auto& reg = arg2[174 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("./zirgen/components/onehot.h":47:9)
        {
          auto& reg = arg2[175 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/onehot.h":47:9)
        {
          auto& reg = arg2[176 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
      }
      // loc("Top/mux(Mux)/reset(ResetStep)/OneHot/hot[1](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x595 = arg2[175 * steps + ((cycle - 0) & mask)];
      assert(x595 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/OneHot/hot[2](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x596 = arg2[176 * steps + ((cycle - 0) & mask)];
      assert(x596 != Fp::invalid());
      // loc("./zirgen/components/onehot.h":56:19)
      auto x597 = x596 * x98;
      // loc("./zirgen/components/onehot.h":56:13)
      auto x598 = x595 + x597;
      // loc("./zirgen/components/onehot.h":50:8)
      assert(x598 == 0 && "eqz failed at: ./zirgen/components/onehot.h:50");
      {
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[18 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
      }
      // loc("Top/mux(Mux)/reset(ResetStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
      auto x599 = arg2[6 * steps + ((cycle - 1) & mask)];
      assert(x599 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
      auto x600 = arg2[7 * steps + ((cycle - 1) & mask)];
      assert(x600 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/PCReg/twits[0](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x601 = arg2[70 * steps + ((cycle - 1) & mask)];
      assert(x601 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/PCReg/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x602 = arg2[71 * steps + ((cycle - 1) & mask)];
      assert(x602 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
      auto x603 = arg2[8 * steps + ((cycle - 1) & mask)];
      assert(x603 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":48:10)
      auto x604 = x600 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":50:10)
      auto x605 = x601 * x84;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":51:10)
      auto x606 = x602 * x79;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":49:10)
      auto x607 = x603 * x82;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":47:10)
      auto x608 = x599 + x604;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":47:10)
      auto x609 = x608 + x607;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":47:10)
      auto x610 = x609 + x605;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":47:10)
      auto x611 = x610 + x606;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":47:10)
      auto x612 = x611 - x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":34:23)
      auto x613 = x612 + x83;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x614 = Fp(x613.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[6 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x614);
          reg = x614;
        }
      }
      // loc("Top/mux(Mux)/reset(ResetStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x615 = arg2[6 * steps + ((cycle - 0) & mask)];
      assert(x615 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x616 = x613 - x615;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x617 = x616 * x96;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x618 = Fp(x617.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[7 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x618);
          reg = x618;
        }
      }
      // loc("Top/mux(Mux)/reset(ResetStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x619 = arg2[7 * steps + ((cycle - 0) & mask)];
      assert(x619 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x620 = x617 - x619;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x621 = x620 * x96;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x622 = Fp(x621.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[8 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x622);
          reg = x622;
        }
      }
      // loc("Top/mux(Mux)/reset(ResetStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x623 = arg2[8 * steps + ((cycle - 0) & mask)];
      assert(x623 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x624 = x621 - x623;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x625 = x624 * x96;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":37:26)
        auto x626 = Fp(x625.asUInt32() & x81.asUInt32());
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[70 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x626);
          reg = x626;
        }
      }
      // loc("Top/mux(Mux)/reset(ResetStep)/PCReg/twits[0](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x627 = arg2[70 * steps + ((cycle - 0) & mask)];
      assert(x627 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:18)
      auto x628 = x625 - x627;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:17)
      auto x629 = x628 * x80;
      // loc("./zirgen/components/bits.h":78:23)
      {
        auto& reg = arg2[71 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x629);
        reg = x629;
      }
      // loc("Top/mux(Mux)/reset(ResetStep)/PCReg/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x630 = arg2[71 * steps + ((cycle - 0) & mask)];
      assert(x630 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:23)
      auto x631 = x101 - x630;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:15)
      auto x632 = x630 * x631;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:3)
      {
        auto& reg = arg2[98 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x632);
        reg = x632;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:17)
      auto x633 = x98 - x630;
      // loc("Top/mux(Mux)/reset(ResetStep)/PCReg/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x634 = arg2[98 * steps + ((cycle - 0) & mask)];
      assert(x634 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
      auto x635 = x634 * x633;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
      assert(x635 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:43");
      if (x484 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[1](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x636 = arg2[102 * steps + ((cycle - 1) & mask)];
        assert(x636 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[2](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x637 = arg2[103 * steps + ((cycle - 1) & mask)];
        assert(x637 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[3](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x638 = arg2[104 * steps + ((cycle - 1) & mask)];
        assert(x638 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[4](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x639 = arg2[105 * steps + ((cycle - 1) & mask)];
        assert(x639 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[5](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x640 = arg2[106 * steps + ((cycle - 1) & mask)];
        assert(x640 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[6](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x641 = arg2[107 * steps + ((cycle - 1) & mask)];
        assert(x641 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[7](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x642 = arg2[108 * steps + ((cycle - 1) & mask)];
        assert(x642 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[8](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x643 = arg2[109 * steps + ((cycle - 1) & mask)];
        assert(x643 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[9](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x644 = arg2[110 * steps + ((cycle - 1) & mask)];
        assert(x644 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[10](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x645 = arg2[111 * steps + ((cycle - 1) & mask)];
        assert(x645 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[11](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x646 = arg2[112 * steps + ((cycle - 1) & mask)];
        assert(x646 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[12](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x647 = arg2[113 * steps + ((cycle - 1) & mask)];
        assert(x647 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[13](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x648 = arg2[114 * steps + ((cycle - 1) & mask)];
        assert(x648 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[14](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x649 = arg2[115 * steps + ((cycle - 1) & mask)];
        assert(x649 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[15](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x650 = arg2[116 * steps + ((cycle - 1) & mask)];
        assert(x650 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[16](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x651 = arg2[117 * steps + ((cycle - 1) & mask)];
        assert(x651 != Fp::invalid());
        // loc("./zirgen/components/onehot.h":56:19)
        auto x652 = x637 * x98;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x653 = x638 * x81;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x654 = x639 * x83;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x655 = x640 * x71;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x656 = x641 * x70;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x657 = x642 * x69;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x658 = x643 * x68;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x659 = x644 * x67;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x660 = x645 * x78;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x661 = x646 * x77;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x662 = x647 * x76;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x663 = x648 * x75;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x664 = x649 * x74;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x665 = x650 * x73;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x666 = x651 * x72;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x667 = x636 + x652;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x668 = x667 + x653;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x669 = x668 + x654;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x670 = x669 + x655;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x671 = x670 + x656;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x672 = x671 + x657;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x673 = x672 + x658;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x674 = x673 + x659;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x675 = x674 + x660;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x676 = x675 + x661;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x677 = x676 + x662;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x678 = x677 + x663;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x679 = x678 + x664;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x680 = x679 + x665;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x681 = x680 + x666;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":107:42)
        auto x682 = x681 - x72;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":107:42)
        assert(x682 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:107");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/halt(HaltCycle)/sys_exit_code(Reg)"("zirgen/circuit/rv32im/v1/edsl/body.cpp":109:61))
        auto x683 = arg2[118 * steps + ((cycle - 1) & mask)];
        assert(x683 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":109:7)
        {
          auto& reg = arg2[177 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x683);
          reg = x683;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/halt(HaltCycle)/write_addr(Reg)"("zirgen/circuit/rv32im/v1/edsl/body.cpp":111:53))
        auto x684 = arg2[120 * steps + ((cycle - 1) & mask)];
        assert(x684 != Fp::invalid());
        {
          extern_args[0] = x684;
          extern_args[1] = x100;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x685 = extern_outs[0];
          auto x686 = extern_outs[1];
          auto x687 = extern_outs[2];
          auto x688 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[121 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x685);
            reg = x685;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[122 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x686);
            reg = x686;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[123 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x687);
            reg = x687;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[124 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x688);
            reg = x688;
          }
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x689 = arg2[121 * steps + ((cycle - 0) & mask)];
        assert(x689 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x690 = arg2[122 * steps + ((cycle - 0) & mask)];
        assert(x690 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x691 = arg2[123 * steps + ((cycle - 0) & mask)];
        assert(x691 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x692 = arg2[124 * steps + ((cycle - 0) & mask)];
        assert(x692 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[118 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x684);
          reg = x684;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[119 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x485);
          reg = x485;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[120 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x689);
          reg = x689;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x690);
          reg = x690;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[123 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x691);
          reg = x691;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[124 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x692);
          reg = x692;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        arg1[106] = x689;
        // loc("zirgen/components/u32.cpp":44:5)
        arg1[107] = x690;
        // loc("zirgen/components/u32.cpp":44:5)
        arg1[108] = x691;
        // loc("zirgen/components/u32.cpp":44:5)
        arg1[109] = x692;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":114:55)
        auto x693 = x684 + x101;
        {
          extern_args[0] = x693;
          extern_args[1] = x100;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x694 = extern_outs[0];
          auto x695 = extern_outs[1];
          auto x696 = extern_outs[2];
          auto x697 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[128 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x694);
            reg = x694;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[129 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x695);
            reg = x695;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[130 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x696);
            reg = x696;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[131 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x697);
            reg = x697;
          }
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x698 = arg2[128 * steps + ((cycle - 0) & mask)];
        assert(x698 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x699 = arg2[129 * steps + ((cycle - 0) & mask)];
        assert(x699 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x700 = arg2[130 * steps + ((cycle - 0) & mask)];
        assert(x700 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x701 = arg2[131 * steps + ((cycle - 0) & mask)];
        assert(x701 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[125 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x693);
          reg = x693;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[126 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x485);
          reg = x485;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[127 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[128 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x698);
          reg = x698;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[129 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x699);
          reg = x699;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[130 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x700);
          reg = x700;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[131 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x701);
          reg = x701;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        arg1[110] = x698;
        // loc("zirgen/components/u32.cpp":44:5)
        arg1[111] = x699;
        // loc("zirgen/components/u32.cpp":44:5)
        arg1[112] = x700;
        // loc("zirgen/components/u32.cpp":44:5)
        arg1[113] = x701;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":114:55)
        auto x702 = x684 + x98;
        {
          extern_args[0] = x702;
          extern_args[1] = x100;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x703 = extern_outs[0];
          auto x704 = extern_outs[1];
          auto x705 = extern_outs[2];
          auto x706 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[135 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x703);
            reg = x703;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[136 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x704);
            reg = x704;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x705);
            reg = x705;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x706);
            reg = x706;
          }
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x707 = arg2[135 * steps + ((cycle - 0) & mask)];
        assert(x707 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x708 = arg2[136 * steps + ((cycle - 0) & mask)];
        assert(x708 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x709 = arg2[137 * steps + ((cycle - 0) & mask)];
        assert(x709 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x710 = arg2[138 * steps + ((cycle - 0) & mask)];
        assert(x710 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[132 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x702);
          reg = x702;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[133 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x485);
          reg = x485;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[134 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x707);
          reg = x707;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x708);
          reg = x708;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[137 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x709);
          reg = x709;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[138 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x710);
          reg = x710;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        arg1[114] = x707;
        // loc("zirgen/components/u32.cpp":44:5)
        arg1[115] = x708;
        // loc("zirgen/components/u32.cpp":44:5)
        arg1[116] = x709;
        // loc("zirgen/components/u32.cpp":44:5)
        arg1[117] = x710;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":114:55)
        auto x711 = x684 + x81;
        {
          extern_args[0] = x711;
          extern_args[1] = x100;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x712 = extern_outs[0];
          auto x713 = extern_outs[1];
          auto x714 = extern_outs[2];
          auto x715 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x712);
            reg = x712;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x713);
            reg = x713;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x714);
            reg = x714;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x715);
            reg = x715;
          }
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x716 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x716 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x717 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x717 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x718 = arg2[144 * steps + ((cycle - 0) & mask)];
        assert(x718 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x719 = arg2[145 * steps + ((cycle - 0) & mask)];
        assert(x719 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[139 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x711);
          reg = x711;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x485);
          reg = x485;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x716);
          reg = x716;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x717);
          reg = x717;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[144 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x718);
          reg = x718;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[145 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x719);
          reg = x719;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        arg1[118] = x716;
        // loc("zirgen/components/u32.cpp":44:5)
        arg1[119] = x717;
        // loc("zirgen/components/u32.cpp":44:5)
        arg1[120] = x718;
        // loc("zirgen/components/u32.cpp":44:5)
        arg1[121] = x719;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":118:17)
      auto x720 = x101 - x484;
      if (x720 != 0) {
        // loc("Top/mux(Mux)/reset(ResetStep)/Reg"("zirgen/circuit/rv32im/v1/edsl/body.cpp":121:50))
        auto x721 = arg2[177 * steps + ((cycle - 1) & mask)];
        assert(x721 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/halt(HaltCycle)/write_addr(Reg)"("zirgen/circuit/rv32im/v1/edsl/body.cpp":120:53))
        auto x722 = arg2[120 * steps + ((cycle - 2) & mask)];
        assert(x722 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":121:7)
        {
          auto& reg = arg2[177 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x721);
          reg = x721;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":125:45)
        auto x723 = x722 + x83;
        {
          extern_args[0] = x723;
          extern_args[1] = x100;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x724 = extern_outs[0];
          auto x725 = extern_outs[1];
          auto x726 = extern_outs[2];
          auto x727 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[121 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x724);
            reg = x724;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[122 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x725);
            reg = x725;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[123 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x726);
            reg = x726;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[124 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x727);
            reg = x727;
          }
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x728 = arg2[121 * steps + ((cycle - 0) & mask)];
        assert(x728 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x729 = arg2[122 * steps + ((cycle - 0) & mask)];
        assert(x729 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x730 = arg2[123 * steps + ((cycle - 0) & mask)];
        assert(x730 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x731 = arg2[124 * steps + ((cycle - 0) & mask)];
        assert(x731 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[118 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x723);
          reg = x723;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[119 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x485);
          reg = x485;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[120 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x728);
          reg = x728;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x729);
          reg = x729;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[123 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x730);
          reg = x730;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[124 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x731);
          reg = x731;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        arg1[122] = x728;
        // loc("zirgen/components/u32.cpp":44:5)
        arg1[123] = x729;
        // loc("zirgen/components/u32.cpp":44:5)
        arg1[124] = x730;
        // loc("zirgen/components/u32.cpp":44:5)
        arg1[125] = x731;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":125:45)
        auto x732 = x723 + x101;
        {
          extern_args[0] = x732;
          extern_args[1] = x100;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x733 = extern_outs[0];
          auto x734 = extern_outs[1];
          auto x735 = extern_outs[2];
          auto x736 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[128 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x733);
            reg = x733;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[129 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x734);
            reg = x734;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[130 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x735);
            reg = x735;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[131 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x736);
            reg = x736;
          }
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x737 = arg2[128 * steps + ((cycle - 0) & mask)];
        assert(x737 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x738 = arg2[129 * steps + ((cycle - 0) & mask)];
        assert(x738 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x739 = arg2[130 * steps + ((cycle - 0) & mask)];
        assert(x739 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x740 = arg2[131 * steps + ((cycle - 0) & mask)];
        assert(x740 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[125 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x732);
          reg = x732;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[126 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x485);
          reg = x485;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[127 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[128 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x737);
          reg = x737;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[129 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x738);
          reg = x738;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[130 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x739);
          reg = x739;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[131 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x740);
          reg = x740;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        arg1[126] = x737;
        // loc("zirgen/components/u32.cpp":44:5)
        arg1[127] = x738;
        // loc("zirgen/components/u32.cpp":44:5)
        arg1[128] = x739;
        // loc("zirgen/components/u32.cpp":44:5)
        arg1[129] = x740;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":125:45)
        auto x741 = x723 + x98;
        {
          extern_args[0] = x741;
          extern_args[1] = x100;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x742 = extern_outs[0];
          auto x743 = extern_outs[1];
          auto x744 = extern_outs[2];
          auto x745 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[135 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x742);
            reg = x742;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[136 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x743);
            reg = x743;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x744);
            reg = x744;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x745);
            reg = x745;
          }
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x746 = arg2[135 * steps + ((cycle - 0) & mask)];
        assert(x746 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x747 = arg2[136 * steps + ((cycle - 0) & mask)];
        assert(x747 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x748 = arg2[137 * steps + ((cycle - 0) & mask)];
        assert(x748 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x749 = arg2[138 * steps + ((cycle - 0) & mask)];
        assert(x749 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[132 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x741);
          reg = x741;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[133 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x485);
          reg = x485;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[134 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x746);
          reg = x746;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x747);
          reg = x747;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[137 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x748);
          reg = x748;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[138 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x749);
          reg = x749;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        arg1[130] = x746;
        // loc("zirgen/components/u32.cpp":44:5)
        arg1[131] = x747;
        // loc("zirgen/components/u32.cpp":44:5)
        arg1[132] = x748;
        // loc("zirgen/components/u32.cpp":44:5)
        arg1[133] = x749;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":125:45)
        auto x750 = x723 + x81;
        {
          extern_args[0] = x750;
          extern_args[1] = x100;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x751 = extern_outs[0];
          auto x752 = extern_outs[1];
          auto x753 = extern_outs[2];
          auto x754 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x751);
            reg = x751;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x752);
            reg = x752;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x753);
            reg = x753;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x754);
            reg = x754;
          }
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x755 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x755 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x756 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x756 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x757 = arg2[144 * steps + ((cycle - 0) & mask)];
        assert(x757 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x758 = arg2[145 * steps + ((cycle - 0) & mask)];
        assert(x758 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[139 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x750);
          reg = x750;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x485);
          reg = x485;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x755);
          reg = x755;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x756);
          reg = x756;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[144 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x757);
          reg = x757;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[145 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x758);
          reg = x758;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        arg1[134] = x755;
        // loc("zirgen/components/u32.cpp":44:5)
        arg1[135] = x756;
        // loc("zirgen/components/u32.cpp":44:5)
        arg1[136] = x757;
        // loc("zirgen/components/u32.cpp":44:5)
        arg1[137] = x758;
      }
    }
    if (x483 != 0) {
      // loc("Top/mux(Mux)/reset(ResetStep)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x759 = arg2[99 * steps + ((cycle - 1) & mask)];
      assert(x759 != Fp::invalid());
      // loc("./zirgen/components/bits.h":37:23)
      {
        auto& reg = arg2[99 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x759);
        reg = x759;
      }
      // loc("Top/mux(Mux)/reset(ResetStep)/Reg"("zirgen/circuit/rv32im/v1/edsl/body.cpp":132:48))
      auto x760 = arg2[177 * steps + ((cycle - 1) & mask)];
      assert(x760 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":132:5)
      {
        auto& reg = arg2[177 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x760);
        reg = x760;
      }
      // loc("Top/mux(Mux)/reset(ResetStep)/Reg"("zirgen/circuit/rv32im/v1/edsl/body.cpp":133:19))
      auto x761 = arg2[177 * steps + ((cycle - 0) & mask)];
      assert(x761 != Fp::invalid());
      {
        // loc("./zirgen/components/onehot.h":47:26)
        auto x762 = (x761 == 0) ? Fp(1) : Fp(0);
        // loc("./zirgen/components/onehot.h":47:9)
        {
          auto& reg = arg2[174 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x762);
          reg = x762;
        }
        // loc("./zirgen/components/onehot.h":47:26)
        auto x763 = x761 - x101;
        // loc("./zirgen/components/onehot.h":47:26)
        auto x764 = (x763 == 0) ? Fp(1) : Fp(0);
        // loc("./zirgen/components/onehot.h":47:9)
        {
          auto& reg = arg2[175 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x764);
          reg = x764;
        }
        // loc("./zirgen/components/onehot.h":47:26)
        auto x765 = x761 - x98;
        // loc("./zirgen/components/onehot.h":47:26)
        auto x766 = (x765 == 0) ? Fp(1) : Fp(0);
        // loc("./zirgen/components/onehot.h":47:9)
        {
          auto& reg = arg2[176 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x766);
          reg = x766;
        }
      }
      // loc("Top/mux(Mux)/reset(ResetStep)/OneHot/hot[1](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x767 = arg2[175 * steps + ((cycle - 0) & mask)];
      assert(x767 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/OneHot/hot[2](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x768 = arg2[176 * steps + ((cycle - 0) & mask)];
      assert(x768 != Fp::invalid());
      // loc("./zirgen/components/onehot.h":56:19)
      auto x769 = x768 * x98;
      // loc("./zirgen/components/onehot.h":56:13)
      auto x770 = x767 + x769;
      // loc("./zirgen/components/onehot.h":50:8)
      auto x771 = x770 - x761;
      // loc("./zirgen/components/onehot.h":50:8)
      assert(x771 == 0 && "eqz failed at: ./zirgen/components/onehot.h:50");
      {
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[18 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
      }
      // loc("Top/mux(Mux)/reset(ResetStep)/OneHot/hot[0](Reg)"("zirgen/circuit/rv32im/v1/edsl/body.cpp":137:31))
      auto x772 = arg2[174 * steps + ((cycle - 0) & mask)];
      assert(x772 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":137:27)
      auto x773 = x101 - x772;
      if (x484 != 0) {
        // loc("Top/mux(Mux)/reset(ResetStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x774 = arg2[6 * steps + ((cycle - 1) & mask)];
        assert(x774 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x775 = arg2[7 * steps + ((cycle - 1) & mask)];
        assert(x775 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/PCReg/twits[0](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x776 = arg2[70 * steps + ((cycle - 1) & mask)];
        assert(x776 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/PCReg/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x777 = arg2[71 * steps + ((cycle - 1) & mask)];
        assert(x777 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x778 = arg2[8 * steps + ((cycle - 1) & mask)];
        assert(x778 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":48:10)
        auto x779 = x775 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":50:10)
        auto x780 = x776 * x84;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":51:10)
        auto x781 = x777 * x79;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":49:10)
        auto x782 = x778 * x82;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":47:10)
        auto x783 = x774 + x779;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":47:10)
        auto x784 = x783 + x782;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":47:10)
        auto x785 = x784 + x780;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":47:10)
        auto x786 = x785 + x781;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":47:10)
        auto x787 = x786 - x83;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x788 = Fp(x787.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x788);
            reg = x788;
          }
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x789 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x789 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x790 = x787 - x789;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x791 = x790 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x792 = Fp(x791.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x792);
            reg = x792;
          }
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x793 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x793 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x794 = x791 - x793;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x795 = x794 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x796 = Fp(x795.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x796);
            reg = x796;
          }
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x797 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x797 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x798 = x795 - x797;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x799 = x798 * x96;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":37:26)
          auto x800 = Fp(x799.asUInt32() & x81.asUInt32());
          // loc("./zirgen/components/bits.h":78:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x800);
            reg = x800;
          }
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/PCReg/twits[0](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x801 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x801 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:18)
        auto x802 = x799 - x801;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:17)
        auto x803 = x802 * x80;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x803);
          reg = x803;
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/PCReg/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x804 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x804 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:23)
        auto x805 = x101 - x804;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:15)
        auto x806 = x804 * x805;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x806);
          reg = x806;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:17)
        auto x807 = x98 - x804;
        // loc("Top/mux(Mux)/reset(ResetStep)/PCReg/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x808 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x808 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        auto x809 = x808 * x807;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        assert(x809 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:43");
        {
          extern_args[0] = x92;
          extern_args[1] = x100;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x810 = extern_outs[0];
          auto x811 = extern_outs[1];
          auto x812 = extern_outs[2];
          auto x813 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[121 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x810);
            reg = x810;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[122 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x811);
            reg = x811;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[123 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x812);
            reg = x812;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[124 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x813);
            reg = x813;
          }
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x814 = arg2[121 * steps + ((cycle - 0) & mask)];
        assert(x814 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x815 = arg2[122 * steps + ((cycle - 0) & mask)];
        assert(x815 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x816 = arg2[123 * steps + ((cycle - 0) & mask)];
        assert(x816 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x817 = arg2[124 * steps + ((cycle - 0) & mask)];
        assert(x817 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[118 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x92);
          reg = x92;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[119 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x485);
          reg = x485;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[120 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x814);
          reg = x814;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x815);
          reg = x815;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[123 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x816);
          reg = x816;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[124 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x817);
          reg = x817;
        }
        // loc("zirgen/components/u32.cpp":50:19)
        auto x818 = x814 * x773;
        // loc("zirgen/components/u32.cpp":50:5)
        arg1[72] = x818;
        // loc("zirgen/components/u32.cpp":50:19)
        auto x819 = x815 * x773;
        // loc("zirgen/components/u32.cpp":50:5)
        arg1[73] = x819;
        // loc("zirgen/components/u32.cpp":50:19)
        auto x820 = x816 * x773;
        // loc("zirgen/components/u32.cpp":50:5)
        arg1[74] = x820;
        // loc("zirgen/components/u32.cpp":50:19)
        auto x821 = x817 * x773;
        // loc("zirgen/components/u32.cpp":50:5)
        arg1[75] = x821;
        {
          extern_args[0] = x91;
          extern_args[1] = x100;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x822 = extern_outs[0];
          auto x823 = extern_outs[1];
          auto x824 = extern_outs[2];
          auto x825 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[128 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x822);
            reg = x822;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[129 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x823);
            reg = x823;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[130 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x824);
            reg = x824;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[131 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x825);
            reg = x825;
          }
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x826 = arg2[128 * steps + ((cycle - 0) & mask)];
        assert(x826 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x827 = arg2[129 * steps + ((cycle - 0) & mask)];
        assert(x827 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x828 = arg2[130 * steps + ((cycle - 0) & mask)];
        assert(x828 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x829 = arg2[131 * steps + ((cycle - 0) & mask)];
        assert(x829 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[125 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x91);
          reg = x91;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[126 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x485);
          reg = x485;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[127 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[128 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x826);
          reg = x826;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[129 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x827);
          reg = x827;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[130 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x828);
          reg = x828;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[131 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x829);
          reg = x829;
        }
        // loc("zirgen/components/u32.cpp":50:19)
        auto x830 = x826 * x773;
        // loc("zirgen/components/u32.cpp":50:5)
        arg1[76] = x830;
        // loc("zirgen/components/u32.cpp":50:19)
        auto x831 = x827 * x773;
        // loc("zirgen/components/u32.cpp":50:5)
        arg1[77] = x831;
        // loc("zirgen/components/u32.cpp":50:19)
        auto x832 = x828 * x773;
        // loc("zirgen/components/u32.cpp":50:5)
        arg1[78] = x832;
        // loc("zirgen/components/u32.cpp":50:19)
        auto x833 = x829 * x773;
        // loc("zirgen/components/u32.cpp":50:5)
        arg1[79] = x833;
        {
          extern_args[0] = x90;
          extern_args[1] = x100;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x834 = extern_outs[0];
          auto x835 = extern_outs[1];
          auto x836 = extern_outs[2];
          auto x837 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[135 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x834);
            reg = x834;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[136 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x835);
            reg = x835;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x836);
            reg = x836;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x837);
            reg = x837;
          }
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x838 = arg2[135 * steps + ((cycle - 0) & mask)];
        assert(x838 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x839 = arg2[136 * steps + ((cycle - 0) & mask)];
        assert(x839 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x840 = arg2[137 * steps + ((cycle - 0) & mask)];
        assert(x840 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x841 = arg2[138 * steps + ((cycle - 0) & mask)];
        assert(x841 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[132 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x90);
          reg = x90;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[133 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x485);
          reg = x485;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[134 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x838);
          reg = x838;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x839);
          reg = x839;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[137 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x840);
          reg = x840;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[138 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x841);
          reg = x841;
        }
        // loc("zirgen/components/u32.cpp":50:19)
        auto x842 = x838 * x773;
        // loc("zirgen/components/u32.cpp":50:5)
        arg1[80] = x842;
        // loc("zirgen/components/u32.cpp":50:19)
        auto x843 = x839 * x773;
        // loc("zirgen/components/u32.cpp":50:5)
        arg1[81] = x843;
        // loc("zirgen/components/u32.cpp":50:19)
        auto x844 = x840 * x773;
        // loc("zirgen/components/u32.cpp":50:5)
        arg1[82] = x844;
        // loc("zirgen/components/u32.cpp":50:19)
        auto x845 = x841 * x773;
        // loc("zirgen/components/u32.cpp":50:5)
        arg1[83] = x845;
        {
          extern_args[0] = x89;
          extern_args[1] = x100;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x846 = extern_outs[0];
          auto x847 = extern_outs[1];
          auto x848 = extern_outs[2];
          auto x849 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x846);
            reg = x846;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x847);
            reg = x847;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x848);
            reg = x848;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x849);
            reg = x849;
          }
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x850 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x850 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x851 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x851 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x852 = arg2[144 * steps + ((cycle - 0) & mask)];
        assert(x852 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x853 = arg2[145 * steps + ((cycle - 0) & mask)];
        assert(x853 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[139 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x89);
          reg = x89;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x485);
          reg = x485;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x850);
          reg = x850;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x851);
          reg = x851;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[144 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x852);
          reg = x852;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[145 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x853);
          reg = x853;
        }
        // loc("zirgen/components/u32.cpp":50:19)
        auto x854 = x850 * x773;
        // loc("zirgen/components/u32.cpp":50:5)
        arg1[84] = x854;
        // loc("zirgen/components/u32.cpp":50:19)
        auto x855 = x851 * x773;
        // loc("zirgen/components/u32.cpp":50:5)
        arg1[85] = x855;
        // loc("zirgen/components/u32.cpp":50:19)
        auto x856 = x852 * x773;
        // loc("zirgen/components/u32.cpp":50:5)
        arg1[86] = x856;
        // loc("zirgen/components/u32.cpp":50:19)
        auto x857 = x853 * x773;
        // loc("zirgen/components/u32.cpp":50:5)
        arg1[87] = x857;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":55:52)
        auto x858 = x804 * x83;
        // loc("zirgen/components/u32.cpp":105:20)
        auto x859 = x789 + x759;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":55:41)
        auto x860 = x801 + x858;
        // loc("zirgen/components/u32.cpp":50:19)
        auto x861 = x859 * x773;
        // loc("zirgen/components/u32.cpp":50:5)
        arg1[68] = x861;
        // loc("zirgen/components/u32.cpp":50:19)
        auto x862 = x793 * x773;
        // loc("zirgen/components/u32.cpp":50:5)
        arg1[69] = x862;
        // loc("zirgen/components/u32.cpp":50:19)
        auto x863 = x797 * x773;
        // loc("zirgen/components/u32.cpp":50:5)
        arg1[70] = x863;
        // loc("zirgen/components/u32.cpp":50:19)
        auto x864 = x860 * x773;
        // loc("zirgen/components/u32.cpp":50:5)
        arg1[71] = x864;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":150:17)
      auto x865 = x101 - x484;
      if (x865 != 0) {
        // loc("Top/mux(Mux)/reset(ResetStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x866 = arg2[6 * steps + ((cycle - 1) & mask)];
        assert(x866 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x867 = arg2[7 * steps + ((cycle - 1) & mask)];
        assert(x867 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/PCReg/twits[0](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x868 = arg2[70 * steps + ((cycle - 1) & mask)];
        assert(x868 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/PCReg/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x869 = arg2[71 * steps + ((cycle - 1) & mask)];
        assert(x869 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x870 = arg2[8 * steps + ((cycle - 1) & mask)];
        assert(x870 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":48:10)
        auto x871 = x867 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":50:10)
        auto x872 = x868 * x84;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":51:10)
        auto x873 = x869 * x79;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":49:10)
        auto x874 = x870 * x82;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":47:10)
        auto x875 = x866 + x871;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":47:10)
        auto x876 = x875 + x874;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":47:10)
        auto x877 = x876 + x872;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":47:10)
        auto x878 = x877 + x873;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":47:10)
        auto x879 = x878 - x83;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":34:23)
        auto x880 = x879 + x83;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x881 = Fp(x880.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x881);
            reg = x881;
          }
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x882 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x882 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x883 = x880 - x882;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x884 = x883 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x885 = Fp(x884.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x885);
            reg = x885;
          }
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x886 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x886 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x887 = x884 - x886;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x888 = x887 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x889 = Fp(x888.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x889);
            reg = x889;
          }
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x890 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x890 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x891 = x888 - x890;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x892 = x891 * x96;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":37:26)
          auto x893 = Fp(x892.asUInt32() & x81.asUInt32());
          // loc("./zirgen/components/bits.h":78:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x893);
            reg = x893;
          }
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/PCReg/twits[0](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x894 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x894 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:18)
        auto x895 = x892 - x894;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:17)
        auto x896 = x895 * x80;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x896);
          reg = x896;
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/PCReg/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x897 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x897 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:23)
        auto x898 = x101 - x897;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:15)
        auto x899 = x897 * x898;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x899);
          reg = x899;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:17)
        auto x900 = x98 - x897;
        // loc("Top/mux(Mux)/reset(ResetStep)/PCReg/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x901 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x901 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        auto x902 = x901 * x900;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        assert(x902 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:43");
        {
          extern_args[0] = x88;
          extern_args[1] = x100;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x903 = extern_outs[0];
          auto x904 = extern_outs[1];
          auto x905 = extern_outs[2];
          auto x906 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[121 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x903);
            reg = x903;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[122 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x904);
            reg = x904;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[123 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x905);
            reg = x905;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[124 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x906);
            reg = x906;
          }
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x907 = arg2[121 * steps + ((cycle - 0) & mask)];
        assert(x907 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x908 = arg2[122 * steps + ((cycle - 0) & mask)];
        assert(x908 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x909 = arg2[123 * steps + ((cycle - 0) & mask)];
        assert(x909 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x910 = arg2[124 * steps + ((cycle - 0) & mask)];
        assert(x910 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[118 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x88);
          reg = x88;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[119 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x485);
          reg = x485;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[120 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x907);
          reg = x907;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x908);
          reg = x908;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[123 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x909);
          reg = x909;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[124 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x910);
          reg = x910;
        }
        // loc("zirgen/components/u32.cpp":50:19)
        auto x911 = x907 * x773;
        // loc("zirgen/components/u32.cpp":50:5)
        arg1[88] = x911;
        // loc("zirgen/components/u32.cpp":50:19)
        auto x912 = x908 * x773;
        // loc("zirgen/components/u32.cpp":50:5)
        arg1[89] = x912;
        // loc("zirgen/components/u32.cpp":50:19)
        auto x913 = x909 * x773;
        // loc("zirgen/components/u32.cpp":50:5)
        arg1[90] = x913;
        // loc("zirgen/components/u32.cpp":50:19)
        auto x914 = x910 * x773;
        // loc("zirgen/components/u32.cpp":50:5)
        arg1[91] = x914;
        {
          extern_args[0] = x87;
          extern_args[1] = x100;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x915 = extern_outs[0];
          auto x916 = extern_outs[1];
          auto x917 = extern_outs[2];
          auto x918 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[128 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x915);
            reg = x915;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[129 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x916);
            reg = x916;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[130 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x917);
            reg = x917;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[131 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x918);
            reg = x918;
          }
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x919 = arg2[128 * steps + ((cycle - 0) & mask)];
        assert(x919 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x920 = arg2[129 * steps + ((cycle - 0) & mask)];
        assert(x920 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x921 = arg2[130 * steps + ((cycle - 0) & mask)];
        assert(x921 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x922 = arg2[131 * steps + ((cycle - 0) & mask)];
        assert(x922 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[125 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x87);
          reg = x87;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[126 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x485);
          reg = x485;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[127 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[128 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x919);
          reg = x919;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[129 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x920);
          reg = x920;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[130 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x921);
          reg = x921;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[131 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x922);
          reg = x922;
        }
        // loc("zirgen/components/u32.cpp":50:19)
        auto x923 = x919 * x773;
        // loc("zirgen/components/u32.cpp":50:5)
        arg1[92] = x923;
        // loc("zirgen/components/u32.cpp":50:19)
        auto x924 = x920 * x773;
        // loc("zirgen/components/u32.cpp":50:5)
        arg1[93] = x924;
        // loc("zirgen/components/u32.cpp":50:19)
        auto x925 = x921 * x773;
        // loc("zirgen/components/u32.cpp":50:5)
        arg1[94] = x925;
        // loc("zirgen/components/u32.cpp":50:19)
        auto x926 = x922 * x773;
        // loc("zirgen/components/u32.cpp":50:5)
        arg1[95] = x926;
        {
          extern_args[0] = x86;
          extern_args[1] = x100;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x927 = extern_outs[0];
          auto x928 = extern_outs[1];
          auto x929 = extern_outs[2];
          auto x930 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[135 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x927);
            reg = x927;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[136 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x928);
            reg = x928;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x929);
            reg = x929;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x930);
            reg = x930;
          }
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x931 = arg2[135 * steps + ((cycle - 0) & mask)];
        assert(x931 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x932 = arg2[136 * steps + ((cycle - 0) & mask)];
        assert(x932 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x933 = arg2[137 * steps + ((cycle - 0) & mask)];
        assert(x933 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x934 = arg2[138 * steps + ((cycle - 0) & mask)];
        assert(x934 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[132 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x86);
          reg = x86;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[133 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x485);
          reg = x485;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[134 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x931);
          reg = x931;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x932);
          reg = x932;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[137 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x933);
          reg = x933;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[138 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x934);
          reg = x934;
        }
        // loc("zirgen/components/u32.cpp":50:19)
        auto x935 = x931 * x773;
        // loc("zirgen/components/u32.cpp":50:5)
        arg1[96] = x935;
        // loc("zirgen/components/u32.cpp":50:19)
        auto x936 = x932 * x773;
        // loc("zirgen/components/u32.cpp":50:5)
        arg1[97] = x936;
        // loc("zirgen/components/u32.cpp":50:19)
        auto x937 = x933 * x773;
        // loc("zirgen/components/u32.cpp":50:5)
        arg1[98] = x937;
        // loc("zirgen/components/u32.cpp":50:19)
        auto x938 = x934 * x773;
        // loc("zirgen/components/u32.cpp":50:5)
        arg1[99] = x938;
        {
          extern_args[0] = x85;
          extern_args[1] = x100;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x939 = extern_outs[0];
          auto x940 = extern_outs[1];
          auto x941 = extern_outs[2];
          auto x942 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x939);
            reg = x939;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x940);
            reg = x940;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x941);
            reg = x941;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x942);
            reg = x942;
          }
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x943 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x943 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x944 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x944 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x945 = arg2[144 * steps + ((cycle - 0) & mask)];
        assert(x945 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x946 = arg2[145 * steps + ((cycle - 0) & mask)];
        assert(x946 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[139 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x85);
          reg = x85;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x485);
          reg = x485;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x943);
          reg = x943;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x944);
          reg = x944;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[144 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x945);
          reg = x945;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[145 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x946);
          reg = x946;
        }
        // loc("zirgen/components/u32.cpp":50:19)
        auto x947 = x943 * x773;
        // loc("zirgen/components/u32.cpp":50:5)
        arg1[100] = x947;
        // loc("zirgen/components/u32.cpp":50:19)
        auto x948 = x944 * x773;
        // loc("zirgen/components/u32.cpp":50:5)
        arg1[101] = x948;
        // loc("zirgen/components/u32.cpp":50:19)
        auto x949 = x945 * x773;
        // loc("zirgen/components/u32.cpp":50:5)
        arg1[102] = x949;
        // loc("zirgen/components/u32.cpp":50:19)
        auto x950 = x946 * x773;
        // loc("zirgen/components/u32.cpp":50:5)
        arg1[103] = x950;
      }
    }
    // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":160:3)
    {
      auto& reg = arg2[100 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x66);
      reg = x66;
    }
    // loc("Top/mux(Mux)/reset(ResetStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
    auto x951 = arg2[6 * steps + ((cycle - 0) & mask)];
    assert(x951 != Fp::invalid());
    // loc("Top/mux(Mux)/reset(ResetStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
    auto x952 = arg2[7 * steps + ((cycle - 0) & mask)];
    assert(x952 != Fp::invalid());
    // loc("Top/mux(Mux)/reset(ResetStep)/PCReg/twits[0](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
    auto x953 = arg2[70 * steps + ((cycle - 0) & mask)];
    assert(x953 != Fp::invalid());
    // loc("Top/mux(Mux)/reset(ResetStep)/PCReg/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
    auto x954 = arg2[71 * steps + ((cycle - 0) & mask)];
    assert(x954 != Fp::invalid());
    // loc("Top/mux(Mux)/reset(ResetStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
    auto x955 = arg2[8 * steps + ((cycle - 0) & mask)];
    assert(x955 != Fp::invalid());
    // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":48:10)
    auto x956 = x952 * x95;
    // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":50:10)
    auto x957 = x953 * x84;
    // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":51:10)
    auto x958 = x954 * x79;
    // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":49:10)
    auto x959 = x955 * x82;
    // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":47:10)
    auto x960 = x951 + x956;
    // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":47:10)
    auto x961 = x960 + x959;
    // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":47:10)
    auto x962 = x961 + x957;
    // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":47:10)
    auto x963 = x962 + x958;
    // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":47:10)
    auto x964 = x963 - x83;
    extern_args[0] = x485;
    extern_args[1] = x964;
    extern_log(ctx, cycle, "%u: Reset: PC = %10x", extern_args, extern_outs);
  }
  // loc("Top/Code/OneHot/hot[5](Reg)"("./zirgen/components/mux.h":59:25))
  auto x965 = arg0[6 * steps + ((cycle - 0) & mask)];
  assert(x965 != Fp::invalid());
  if (x965 != 0) {
    // loc("Top/Code/Reg"("./zirgen/compiler/edsl/component.h":164:27))
    auto x966 = arg0[0 * steps + ((cycle - 0) & mask)];
    assert(x966 != Fp::invalid());
    // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
    auto x967 = arg2[6 * steps + ((cycle - 1) & mask)];
    assert(x967 != Fp::invalid());
    // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
    auto x968 = arg2[7 * steps + ((cycle - 1) & mask)];
    assert(x968 != Fp::invalid());
    // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[0](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
    auto x969 = arg2[70 * steps + ((cycle - 1) & mask)];
    assert(x969 != Fp::invalid());
    // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
    auto x970 = arg2[71 * steps + ((cycle - 1) & mask)];
    assert(x970 != Fp::invalid());
    // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
    auto x971 = arg2[8 * steps + ((cycle - 1) & mask)];
    assert(x971 != Fp::invalid());
    // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":48:10)
    auto x972 = x968 * x95;
    // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":50:10)
    auto x973 = x969 * x84;
    // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":51:10)
    auto x974 = x970 * x79;
    // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":49:10)
    auto x975 = x971 * x82;
    // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":47:10)
    auto x976 = x967 + x972;
    // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":47:10)
    auto x977 = x976 + x975;
    // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":47:10)
    auto x978 = x977 + x973;
    // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":47:10)
    auto x979 = x978 + x974;
    // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":47:10)
    auto x980 = x979 - x83;
    {
      // loc("Top/mux(Mux)/body(BodyStep)/next_major(Reg)"("zirgen/circuit/rv32im/v1/edsl/body.cpp":244:45))
      auto x981 = arg2[100 * steps + ((cycle - 1) & mask)];
      assert(x981 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":245:24)
      auto x982 = x981 - x66;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":245:24)
      auto x983 = (x982 == 0) ? Fp(1) : Fp(0);
      if (x983 != 0) {
        extern_args[0] = x966;
        extern_args[1] = x980;
        extern_log(ctx, cycle, "%u: BODY pc: %10x", extern_args, extern_outs);
        extern_args[0] = x980;
        extern_trace(ctx, cycle, "", extern_args, extern_outs);
        extern_args[0] = x966;
        extern_args[1] = x980;
        extern_getMajor(ctx, cycle, "", extern_args, extern_outs);
        auto x984 = extern_outs[0];
        {
          // loc("./zirgen/components/onehot.h":47:26)
          auto x985 = (x984 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[101 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x985);
            reg = x985;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x986 = x984 - x101;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x987 = (x986 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[102 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x987);
            reg = x987;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x988 = x984 - x98;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x989 = (x988 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[103 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x989);
            reg = x989;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x990 = x984 - x81;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x991 = (x990 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[104 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x991);
            reg = x991;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x992 = x984 - x83;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x993 = (x992 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[105 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x993);
            reg = x993;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x994 = x984 - x71;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x995 = (x994 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[106 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x995);
            reg = x995;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x996 = x984 - x70;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x997 = (x996 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[107 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x997);
            reg = x997;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x998 = x984 - x69;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x999 = (x998 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[108 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x999);
            reg = x999;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1000 = x984 - x68;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1001 = (x1000 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[109 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1001);
            reg = x1001;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1002 = x984 - x67;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1003 = (x1002 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[110 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1003);
            reg = x1003;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1004 = x984 - x78;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1005 = (x1004 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[111 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1005);
            reg = x1005;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1006 = x984 - x77;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1007 = (x1006 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[112 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1007);
            reg = x1007;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1008 = x984 - x76;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1009 = (x1008 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[113 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1009);
            reg = x1009;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1010 = x984 - x75;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1011 = (x1010 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[114 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1011);
            reg = x1011;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1012 = x984 - x74;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1013 = (x1012 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[115 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1013);
            reg = x1013;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1014 = x984 - x73;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1015 = (x1014 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[116 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1015);
            reg = x1015;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1016 = x984 - x72;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1017 = (x1016 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[117 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1017);
            reg = x1017;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[1](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x1018 = arg2[102 * steps + ((cycle - 0) & mask)];
        assert(x1018 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[2](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x1019 = arg2[103 * steps + ((cycle - 0) & mask)];
        assert(x1019 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[3](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x1020 = arg2[104 * steps + ((cycle - 0) & mask)];
        assert(x1020 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[4](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x1021 = arg2[105 * steps + ((cycle - 0) & mask)];
        assert(x1021 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[5](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x1022 = arg2[106 * steps + ((cycle - 0) & mask)];
        assert(x1022 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[6](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x1023 = arg2[107 * steps + ((cycle - 0) & mask)];
        assert(x1023 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[7](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x1024 = arg2[108 * steps + ((cycle - 0) & mask)];
        assert(x1024 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[8](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x1025 = arg2[109 * steps + ((cycle - 0) & mask)];
        assert(x1025 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[9](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x1026 = arg2[110 * steps + ((cycle - 0) & mask)];
        assert(x1026 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[10](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x1027 = arg2[111 * steps + ((cycle - 0) & mask)];
        assert(x1027 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[11](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x1028 = arg2[112 * steps + ((cycle - 0) & mask)];
        assert(x1028 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[12](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x1029 = arg2[113 * steps + ((cycle - 0) & mask)];
        assert(x1029 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[13](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x1030 = arg2[114 * steps + ((cycle - 0) & mask)];
        assert(x1030 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[14](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x1031 = arg2[115 * steps + ((cycle - 0) & mask)];
        assert(x1031 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[15](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x1032 = arg2[116 * steps + ((cycle - 0) & mask)];
        assert(x1032 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[16](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x1033 = arg2[117 * steps + ((cycle - 0) & mask)];
        assert(x1033 != Fp::invalid());
        // loc("./zirgen/components/onehot.h":56:19)
        auto x1034 = x1019 * x98;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x1035 = x1020 * x81;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x1036 = x1021 * x83;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x1037 = x1022 * x71;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x1038 = x1023 * x70;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x1039 = x1024 * x69;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x1040 = x1025 * x68;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x1041 = x1026 * x67;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x1042 = x1027 * x78;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x1043 = x1028 * x77;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x1044 = x1029 * x76;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x1045 = x1030 * x75;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x1046 = x1031 * x74;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x1047 = x1032 * x73;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x1048 = x1033 * x72;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x1049 = x1018 + x1034;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x1050 = x1049 + x1035;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x1051 = x1050 + x1036;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x1052 = x1051 + x1037;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x1053 = x1052 + x1038;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x1054 = x1053 + x1039;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x1055 = x1054 + x1040;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x1056 = x1055 + x1041;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x1057 = x1056 + x1042;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x1058 = x1057 + x1043;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x1059 = x1058 + x1044;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x1060 = x1059 + x1045;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x1061 = x1060 + x1046;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x1062 = x1061 + x1047;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x1063 = x1062 + x1048;
        // loc("./zirgen/components/onehot.h":50:8)
        auto x1064 = x1063 - x984;
        // loc("./zirgen/components/onehot.h":50:8)
        assert(x1064 == 0 && "eqz failed at: ./zirgen/components/onehot.h:50");
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":252:20)
      auto x1065 = x101 - x983;
      if (x1065 != 0) {
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":253:47)
        auto x1066 = x981 - x72;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":253:47)
        auto x1067 = (x1066 == 0) ? Fp(1) : Fp(0);
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":253:47)
        auto x1068 = x101 - x1067;
        if (x1068 != 0) {
          extern_args[0] = x966;
          extern_args[1] = x980;
          extern_args[2] = x981;
          extern_log(ctx, cycle, "%u: BODY pc: %10x, major = %u", extern_args, extern_outs);
        }
        {
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1069 = (x981 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[101 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1069);
            reg = x1069;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1070 = x981 - x101;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1071 = (x1070 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[102 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1071);
            reg = x1071;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1072 = x981 - x98;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1073 = (x1072 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[103 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1073);
            reg = x1073;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1074 = x981 - x81;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1075 = (x1074 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[104 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1075);
            reg = x1075;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1076 = x981 - x83;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1077 = (x1076 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[105 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1077);
            reg = x1077;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1078 = x981 - x71;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1079 = (x1078 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[106 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1079);
            reg = x1079;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1080 = x981 - x70;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1081 = (x1080 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[107 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1081);
            reg = x1081;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1082 = x981 - x69;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1083 = (x1082 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[108 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1083);
            reg = x1083;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1084 = x981 - x68;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1085 = (x1084 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[109 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1085);
            reg = x1085;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1086 = x981 - x67;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1087 = (x1086 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[110 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1087);
            reg = x1087;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1088 = x981 - x78;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1089 = (x1088 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[111 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1089);
            reg = x1089;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1090 = x981 - x77;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1091 = (x1090 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[112 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1091);
            reg = x1091;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1092 = x981 - x76;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1093 = (x1092 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[113 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1093);
            reg = x1093;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1094 = x981 - x75;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1095 = (x1094 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[114 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1095);
            reg = x1095;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1096 = x981 - x74;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1097 = (x1096 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[115 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1097);
            reg = x1097;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1098 = x981 - x73;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1099 = (x1098 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[116 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1099);
            reg = x1099;
          }
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[117 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1067);
            reg = x1067;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[1](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x1100 = arg2[102 * steps + ((cycle - 0) & mask)];
        assert(x1100 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[2](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x1101 = arg2[103 * steps + ((cycle - 0) & mask)];
        assert(x1101 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[3](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x1102 = arg2[104 * steps + ((cycle - 0) & mask)];
        assert(x1102 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[4](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x1103 = arg2[105 * steps + ((cycle - 0) & mask)];
        assert(x1103 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[5](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x1104 = arg2[106 * steps + ((cycle - 0) & mask)];
        assert(x1104 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[6](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x1105 = arg2[107 * steps + ((cycle - 0) & mask)];
        assert(x1105 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[7](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x1106 = arg2[108 * steps + ((cycle - 0) & mask)];
        assert(x1106 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[8](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x1107 = arg2[109 * steps + ((cycle - 0) & mask)];
        assert(x1107 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[9](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x1108 = arg2[110 * steps + ((cycle - 0) & mask)];
        assert(x1108 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[10](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x1109 = arg2[111 * steps + ((cycle - 0) & mask)];
        assert(x1109 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[11](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x1110 = arg2[112 * steps + ((cycle - 0) & mask)];
        assert(x1110 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[12](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x1111 = arg2[113 * steps + ((cycle - 0) & mask)];
        assert(x1111 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[13](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x1112 = arg2[114 * steps + ((cycle - 0) & mask)];
        assert(x1112 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[14](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x1113 = arg2[115 * steps + ((cycle - 0) & mask)];
        assert(x1113 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[15](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x1114 = arg2[116 * steps + ((cycle - 0) & mask)];
        assert(x1114 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[16](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x1115 = arg2[117 * steps + ((cycle - 0) & mask)];
        assert(x1115 != Fp::invalid());
        // loc("./zirgen/components/onehot.h":56:19)
        auto x1116 = x1101 * x98;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x1117 = x1102 * x81;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x1118 = x1103 * x83;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x1119 = x1104 * x71;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x1120 = x1105 * x70;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x1121 = x1106 * x69;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x1122 = x1107 * x68;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x1123 = x1108 * x67;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x1124 = x1109 * x78;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x1125 = x1110 * x77;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x1126 = x1111 * x76;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x1127 = x1112 * x75;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x1128 = x1113 * x74;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x1129 = x1114 * x73;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x1130 = x1115 * x72;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x1131 = x1100 + x1116;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x1132 = x1131 + x1117;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x1133 = x1132 + x1118;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x1134 = x1133 + x1119;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x1135 = x1134 + x1120;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x1136 = x1135 + x1121;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x1137 = x1136 + x1122;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x1138 = x1137 + x1123;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x1139 = x1138 + x1124;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x1140 = x1139 + x1125;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x1141 = x1140 + x1126;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x1142 = x1141 + x1127;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x1143 = x1142 + x1128;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x1144 = x1143 + x1129;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x1145 = x1144 + x1130;
        // loc("./zirgen/components/onehot.h":50:8)
        auto x1146 = x1145 - x981;
        // loc("./zirgen/components/onehot.h":50:8)
        assert(x1146 == 0 && "eqz failed at: ./zirgen/components/onehot.h:50");
      }
    }
    // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[0](Reg)"("./zirgen/components/mux.h":59:25))
    auto x1147 = arg2[101 * steps + ((cycle - 0) & mask)];
    assert(x1147 != Fp::invalid());
    if (x1147 != 0) {
      // loc("Top/mux(Mux)/body(BodyStep)/user_mode(Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1148 = arg2[99 * steps + ((cycle - 1) & mask)];
      assert(x1148 != Fp::invalid());
      // loc("./zirgen/components/bits.h":37:23)
      {
        auto& reg = arg2[99 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1148);
        reg = x1148;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/next_major(Reg)"("zirgen/circuit/rv32im/v1/edsl/compute.cpp":123:37))
      auto x1149 = arg2[100 * steps + ((cycle - 1) & mask)];
      assert(x1149 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":123:37)
      auto x1150 = x1149 - x66;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":123:37)
      assert(x1150 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/compute.cpp:123");
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":126:41)
      auto x1151 = x980 * x80;
      {
        extern_args[0] = x1151;
        extern_args[1] = x101;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x1152 = extern_outs[0];
        auto x1153 = extern_outs[1];
        auto x1154 = extern_outs[2];
        auto x1155 = extern_outs[3];
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1152);
          reg = x1152;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1153);
          reg = x1153;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[123 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1154);
          reg = x1154;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[124 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1155);
          reg = x1155;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1156 = arg2[121 * steps + ((cycle - 0) & mask)];
      assert(x1156 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1157 = arg2[122 * steps + ((cycle - 0) & mask)];
      assert(x1157 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1158 = arg2[123 * steps + ((cycle - 0) & mask)];
      assert(x1158 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1159 = arg2[124 * steps + ((cycle - 0) & mask)];
      assert(x1159 != Fp::invalid());
      // loc("zirgen/components/ram.cpp":178:3)
      {
        auto& reg = arg2[118 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1151);
        reg = x1151;
      }
      // loc("zirgen/components/ram.cpp":179:3)
      {
        auto& reg = arg2[119 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x966);
        reg = x966;
      }
      // loc("zirgen/components/ram.cpp":180:3)
      {
        auto& reg = arg2[120 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x101);
        reg = x101;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[121 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1156);
        reg = x1156;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[122 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1157);
        reg = x1157;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[123 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1158);
        reg = x1158;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[124 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1159);
        reg = x1159;
      }
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":21:16)
        auto x1160 = Fp(x1159.asUInt32() & x65.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":21:15)
        auto x1161 = x1160 * x64;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[175 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1161);
          reg = x1161;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":22:17)
        auto x1162 = Fp(x1159.asUInt32() & x61.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":22:16)
        auto x1163 = x1162 * x63;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[76 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1163);
          reg = x1163;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":23:16)
        auto x1164 = Fp(x1159.asUInt32() & x72.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":23:15)
        auto x1165 = x1164 * x60;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[174 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1165);
          reg = x1165;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":24:16)
        auto x1166 = Fp(x1159.asUInt32() & x68.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":24:15)
        auto x1167 = x1166 * x59;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[173 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1167);
          reg = x1167;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":25:17)
        auto x1168 = Fp(x1159.asUInt32() & x70.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":25:16)
        auto x1169 = x1168 * x58;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[75 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1169);
          reg = x1169;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":26:17)
        auto x1170 = Fp(x1159.asUInt32() & x101.asUInt32());
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[178 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1170);
          reg = x1170;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":27:17)
        auto x1171 = Fp(x1158.asUInt32() & x65.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":27:16)
        auto x1172 = x1171 * x64;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[177 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1172);
          reg = x1172;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":28:18)
        auto x1173 = Fp(x1158.asUInt32() & x61.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":28:17)
        auto x1174 = x1173 * x63;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[77 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1174);
          reg = x1174;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":29:17)
        auto x1175 = Fp(x1158.asUInt32() & x72.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":29:16)
        auto x1176 = x1175 * x60;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[176 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1176);
          reg = x1176;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":30:18)
        auto x1177 = Fp(x1158.asUInt32() & x76.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":30:17)
        auto x1178 = x1177 * x80;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[79 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1178);
          reg = x1178;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:18)
        auto x1179 = Fp(x1158.asUInt32() & x81.asUInt32());
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[78 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1179);
          reg = x1179;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:17)
        auto x1180 = Fp(x1157.asUInt32() & x65.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:16)
        auto x1181 = x1180 * x64;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[179 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1181);
          reg = x1181;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":33:19)
        auto x1182 = Fp(x1157.asUInt32() & x56.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":33:18)
        auto x1183 = x1182 * x57;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[180 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1183);
          reg = x1183;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":34:20)
        auto x1184 = Fp(x1157.asUInt32() & x55.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":34:19)
        auto x1185 = x1184 * x60;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[80 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1185);
          reg = x1185;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":35:17)
        auto x1186 = Fp(x1157.asUInt32() & x76.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":35:16)
        auto x1187 = x1186 * x80;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[82 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1187);
          reg = x1187;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":36:17)
        auto x1188 = Fp(x1157.asUInt32() & x81.asUInt32());
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[81 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1188);
          reg = x1188;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":37:16)
        auto x1189 = Fp(x1156.asUInt32() & x65.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":37:15)
        auto x1190 = x1189 * x64;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[181 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1190);
          reg = x1190;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":38:18)
        auto x1191 = Fp(x1156.asUInt32() & x54.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":38:5)
        {
          auto& reg = arg2[182 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1191);
          reg = x1191;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1192 = arg2[173 * steps + ((cycle - 0) & mask)];
      assert(x1192 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1193 = arg2[174 * steps + ((cycle - 0) & mask)];
      assert(x1193 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1194 = arg2[175 * steps + ((cycle - 0) & mask)];
      assert(x1194 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1195 = arg2[76 * steps + ((cycle - 0) & mask)];
      assert(x1195 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1196 = arg2[178 * steps + ((cycle - 0) & mask)];
      assert(x1196 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1197 = arg2[75 * steps + ((cycle - 0) & mask)];
      assert(x1197 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":63:10)
      auto x1198 = x1194 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":67:10)
      auto x1199 = x1195 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":67:39)
      auto x1200 = x1192 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":67:25)
      auto x1201 = x1193 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":67:10)
      auto x1202 = x1199 + x1201;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":67:10)
      auto x1203 = x1202 + x1200;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":67:10)
      auto x1204 = x1203 + x1197;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":63:10)
      auto x1205 = x1198 + x1204;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":40:21)
      auto x1206 = x1205 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":40:21)
      auto x1207 = x1206 + x1196;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":40:6)
      auto x1208 = x1159 - x1207;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":40:6)
      assert(x1208 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/decode.cpp:40");
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1209 = arg2[177 * steps + ((cycle - 0) & mask)];
      assert(x1209 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1210 = arg2[77 * steps + ((cycle - 0) & mask)];
      assert(x1210 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1211 = arg2[79 * steps + ((cycle - 0) & mask)];
      assert(x1211 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1212 = arg2[176 * steps + ((cycle - 0) & mask)];
      assert(x1212 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1213 = arg2[78 * steps + ((cycle - 0) & mask)];
      assert(x1213 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:22)
      auto x1214 = x1209 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:37)
      auto x1215 = x1210 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:69)
      auto x1216 = x1211 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:22)
      auto x1217 = x1214 + x1215;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:22)
      auto x1218 = x1217 + x1212;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:21)
      auto x1219 = x1218 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:21)
      auto x1220 = x1219 + x1216;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:21)
      auto x1221 = x1220 + x1213;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:6)
      auto x1222 = x1158 - x1221;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:6)
      assert(x1222 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/decode.cpp:41");
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1223 = arg2[179 * steps + ((cycle - 0) & mask)];
      assert(x1223 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1224 = arg2[180 * steps + ((cycle - 0) & mask)];
      assert(x1224 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1225 = arg2[82 * steps + ((cycle - 0) & mask)];
      assert(x1225 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1226 = arg2[80 * steps + ((cycle - 0) & mask)];
      assert(x1226 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1227 = arg2[81 * steps + ((cycle - 0) & mask)];
      assert(x1227 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":42:21)
      auto x1228 = x1223 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":59:10)
      auto x1229 = x1224 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":42:53)
      auto x1230 = x1225 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":59:10)
      auto x1231 = x1229 + x1226;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":42:36)
      auto x1232 = x1231 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":42:21)
      auto x1233 = x1228 + x1232;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":42:21)
      auto x1234 = x1233 + x1230;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":42:21)
      auto x1235 = x1234 + x1227;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":42:6)
      auto x1236 = x1157 - x1235;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":42:6)
      assert(x1236 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/decode.cpp:42");
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1237 = arg2[181 * steps + ((cycle - 0) & mask)];
      assert(x1237 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/Decoder/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x1238 = arg2[182 * steps + ((cycle - 0) & mask)];
      assert(x1238 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":43:21)
      auto x1239 = x1237 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":43:21)
      auto x1240 = x1239 + x1238;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":43:6)
      auto x1241 = x1156 - x1240;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":43:6)
      assert(x1241 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/decode.cpp:43");
      {
        extern_args[0] = x1156;
        extern_args[1] = x1157;
        extern_args[2] = x1158;
        extern_args[3] = x1159;
        extern_getMinor(ctx, cycle, "", extern_args, extern_outs);
        auto x1242 = extern_outs[0];
        {
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1243 = (x1242 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[183 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1243);
            reg = x1243;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1244 = x1242 - x101;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1245 = (x1244 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[184 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1245);
            reg = x1245;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1246 = x1242 - x98;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1247 = (x1246 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[185 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1247);
            reg = x1247;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1248 = x1242 - x81;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1249 = (x1248 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[186 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1249);
            reg = x1249;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1250 = x1242 - x83;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1251 = (x1250 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[187 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1251);
            reg = x1251;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1252 = x1242 - x71;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1253 = (x1252 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[188 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1253);
            reg = x1253;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1254 = x1242 - x70;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1255 = (x1254 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[189 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1255);
            reg = x1255;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1256 = x1242 - x69;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1257 = (x1256 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[190 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1257);
            reg = x1257;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/OneHot/hot[1](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x1258 = arg2[184 * steps + ((cycle - 0) & mask)];
        assert(x1258 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/OneHot/hot[2](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x1259 = arg2[185 * steps + ((cycle - 0) & mask)];
        assert(x1259 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/OneHot/hot[3](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x1260 = arg2[186 * steps + ((cycle - 0) & mask)];
        assert(x1260 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/OneHot/hot[4](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x1261 = arg2[187 * steps + ((cycle - 0) & mask)];
        assert(x1261 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/OneHot/hot[5](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x1262 = arg2[188 * steps + ((cycle - 0) & mask)];
        assert(x1262 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/OneHot/hot[6](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x1263 = arg2[189 * steps + ((cycle - 0) & mask)];
        assert(x1263 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/OneHot/hot[7](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x1264 = arg2[190 * steps + ((cycle - 0) & mask)];
        assert(x1264 != Fp::invalid());
        // loc("./zirgen/components/onehot.h":56:19)
        auto x1265 = x1259 * x98;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x1266 = x1260 * x81;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x1267 = x1261 * x83;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x1268 = x1262 * x71;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x1269 = x1263 * x70;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x1270 = x1264 * x69;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x1271 = x1258 + x1265;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x1272 = x1271 + x1266;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x1273 = x1272 + x1267;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x1274 = x1273 + x1268;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x1275 = x1274 + x1269;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x1276 = x1275 + x1270;
        // loc("./zirgen/components/onehot.h":50:8)
        auto x1277 = x1276 - x1242;
        // loc("./zirgen/components/onehot.h":50:8)
        assert(x1277 == 0 && "eqz failed at: ./zirgen/components/onehot.h:50");
      }
      {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":49:68))
        auto x1278 = arg2[183 * steps + ((cycle - 0) & mask)];
        assert(x1278 != Fp::invalid());
        if (x1278 != 0) {
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[191 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[192 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[193 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[194 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:3)
          {
            auto& reg = arg2[195 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:3)
          {
            auto& reg = arg2[196 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":33:5)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":34:5)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":35:5)
          {
            auto& reg = arg2[199 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":63:3)
          {
            auto& reg = arg2[200 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x66);
            reg = x66;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/OneHot/hot[1](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":50:68))
        auto x1279 = arg2[184 * steps + ((cycle - 0) & mask)];
        assert(x1279 != Fp::invalid());
        if (x1279 != 0) {
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[191 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[192 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[193 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[194 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:3)
          {
            auto& reg = arg2[195 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:3)
          {
            auto& reg = arg2[196 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":38:5)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":39:5)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x94);
            reg = x94;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":40:5)
          {
            auto& reg = arg2[199 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":63:3)
          {
            auto& reg = arg2[200 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x66);
            reg = x66;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/OneHot/hot[2](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":51:69))
        auto x1280 = arg2[185 * steps + ((cycle - 0) & mask)];
        assert(x1280 != Fp::invalid());
        if (x1280 != 0) {
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[191 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[192 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[193 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[194 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:3)
          {
            auto& reg = arg2[195 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:3)
          {
            auto& reg = arg2[196 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":53:5)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":54:5)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":55:5)
          {
            auto& reg = arg2[199 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x93);
            reg = x93;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":63:3)
          {
            auto& reg = arg2[200 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x70);
            reg = x70;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/OneHot/hot[3](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":52:69))
        auto x1281 = arg2[186 * steps + ((cycle - 0) & mask)];
        assert(x1281 != Fp::invalid());
        if (x1281 != 0) {
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[191 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[192 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[193 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[194 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:3)
          {
            auto& reg = arg2[195 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:3)
          {
            auto& reg = arg2[196 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":48:5)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":49:5)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":50:5)
          {
            auto& reg = arg2[199 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x94);
            reg = x94;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":63:3)
          {
            auto& reg = arg2[200 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x70);
            reg = x70;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/OneHot/hot[4](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":53:69))
        auto x1282 = arg2[187 * steps + ((cycle - 0) & mask)];
        assert(x1282 != Fp::invalid());
        if (x1282 != 0) {
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[191 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[192 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[193 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[194 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:3)
          {
            auto& reg = arg2[195 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:3)
          {
            auto& reg = arg2[196 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":43:5)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":44:5)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":45:5)
          {
            auto& reg = arg2[199 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":63:3)
          {
            auto& reg = arg2[200 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x70);
            reg = x70;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/OneHot/hot[5](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":54:68))
        auto x1283 = arg2[188 * steps + ((cycle - 0) & mask)];
        assert(x1283 != Fp::invalid());
        if (x1283 != 0) {
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[191 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[192 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[193 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[194 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:3)
          {
            auto& reg = arg2[195 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:3)
          {
            auto& reg = arg2[196 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":38:5)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":39:5)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x94);
            reg = x94;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":40:5)
          {
            auto& reg = arg2[199 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":63:3)
          {
            auto& reg = arg2[200 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x66);
            reg = x66;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/OneHot/hot[6](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":55:68))
        auto x1284 = arg2[189 * steps + ((cycle - 0) & mask)];
        assert(x1284 != Fp::invalid());
        if (x1284 != 0) {
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[191 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[192 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[193 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[194 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:3)
          {
            auto& reg = arg2[195 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:3)
          {
            auto& reg = arg2[196 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":38:5)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":39:5)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x94);
            reg = x94;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":40:5)
          {
            auto& reg = arg2[199 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":63:3)
          {
            auto& reg = arg2[200 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x66);
            reg = x66;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/OneHot/hot[7](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":56:68))
        auto x1285 = arg2[190 * steps + ((cycle - 0) & mask)];
        assert(x1285 != Fp::invalid());
        if (x1285 != 0) {
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
          auto x1286 = x1192 * x65;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
          auto x1287 = x1194 * x53;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":51:10)
          auto x1288 = x1196 * x72;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":82:7)
          auto x1289 = x1194 * x97;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:21)
          auto x1290 = x1197 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:21)
          auto x1291 = x1195 * x98;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
          auto x1292 = x1286 + x1290;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
          auto x1293 = x1287 + x1291;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
          auto x1294 = x1293 + x1193;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":51:10)
          auto x1295 = x1288 + x1218;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
          auto x1296 = x1292 + x1295;
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[191 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1296);
            reg = x1296;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[192 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1294);
            reg = x1294;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[193 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1289);
            reg = x1289;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[194 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1289);
            reg = x1289;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:3)
          {
            auto& reg = arg2[195 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:3)
          {
            auto& reg = arg2[196 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":33:5)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":34:5)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":35:5)
          {
            auto& reg = arg2[199 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":63:3)
          {
            auto& reg = arg2[200 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x66);
            reg = x66;
          }
        }
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":148:57)
      auto x1297 = x1148 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":148:39)
      auto x1298 = x52 - x1297;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":47:10)
      auto x1299 = x1211 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":47:26)
      auto x1300 = x1213 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":47:10)
      auto x1301 = x1299 + x1300;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":47:10)
      auto x1302 = x1301 + x1223;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":148:39)
      auto x1303 = x1298 + x1302;
      {
        extern_args[0] = x1303;
        extern_args[1] = x101;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x1304 = extern_outs[0];
        auto x1305 = extern_outs[1];
        auto x1306 = extern_outs[2];
        auto x1307 = extern_outs[3];
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[128 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1304);
          reg = x1304;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[129 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1305);
          reg = x1305;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[130 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1306);
          reg = x1306;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[131 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1307);
          reg = x1307;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1308 = arg2[128 * steps + ((cycle - 0) & mask)];
      assert(x1308 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1309 = arg2[129 * steps + ((cycle - 0) & mask)];
      assert(x1309 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1310 = arg2[130 * steps + ((cycle - 0) & mask)];
      assert(x1310 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1311 = arg2[131 * steps + ((cycle - 0) & mask)];
      assert(x1311 != Fp::invalid());
      // loc("zirgen/components/ram.cpp":178:3)
      {
        auto& reg = arg2[125 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1303);
        reg = x1303;
      }
      // loc("zirgen/components/ram.cpp":179:3)
      {
        auto& reg = arg2[126 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x966);
        reg = x966;
      }
      // loc("zirgen/components/ram.cpp":180:3)
      {
        auto& reg = arg2[127 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x101);
        reg = x101;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[128 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1308);
        reg = x1308;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[129 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1309);
        reg = x1309;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[130 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1310);
        reg = x1310;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[131 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1311);
        reg = x1311;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":51:10)
      auto x1312 = x1196 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":51:10)
      auto x1313 = x1312 + x1218;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":149:39)
      auto x1314 = x1298 + x1313;
      {
        extern_args[0] = x1314;
        extern_args[1] = x101;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x1315 = extern_outs[0];
        auto x1316 = extern_outs[1];
        auto x1317 = extern_outs[2];
        auto x1318 = extern_outs[3];
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1315);
          reg = x1315;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1316);
          reg = x1316;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[137 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1317);
          reg = x1317;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[138 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1318);
          reg = x1318;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1319 = arg2[135 * steps + ((cycle - 0) & mask)];
      assert(x1319 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1320 = arg2[136 * steps + ((cycle - 0) & mask)];
      assert(x1320 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1321 = arg2[137 * steps + ((cycle - 0) & mask)];
      assert(x1321 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1322 = arg2[138 * steps + ((cycle - 0) & mask)];
      assert(x1322 != Fp::invalid());
      // loc("zirgen/components/ram.cpp":178:3)
      {
        auto& reg = arg2[132 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1314);
        reg = x1314;
      }
      // loc("zirgen/components/ram.cpp":179:3)
      {
        auto& reg = arg2[133 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x966);
        reg = x966;
      }
      // loc("zirgen/components/ram.cpp":180:3)
      {
        auto& reg = arg2[134 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x101);
        reg = x101;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[135 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1319);
        reg = x1319;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[136 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1320);
        reg = x1320;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[137 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1321);
        reg = x1321;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[138 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1322);
        reg = x1322;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/ComputeControl/U32Reg/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1323 = arg2[191 * steps + ((cycle - 0) & mask)];
      assert(x1323 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/ComputeControl/U32Reg/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1324 = arg2[192 * steps + ((cycle - 0) & mask)];
      assert(x1324 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/ComputeControl/U32Reg/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1325 = arg2[193 * steps + ((cycle - 0) & mask)];
      assert(x1325 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/ComputeControl/U32Reg/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1326 = arg2[194 * steps + ((cycle - 0) & mask)];
      assert(x1326 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1327 = arg2[195 * steps + ((cycle - 0) & mask)];
      assert(x1327 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1328 = arg2[196 * steps + ((cycle - 0) & mask)];
      assert(x1328 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":121:20)
      auto x1329 = x1327 * x968;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x1330 = x1327 * x971;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x1331 = x1328 * x1323;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x1332 = x1328 * x1324;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x1333 = x1328 * x1325;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x1334 = x1328 * x1326;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":55:52)
      auto x1335 = x970 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":153:17)
      auto x1336 = x101 - x1327;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":155:17)
      auto x1337 = x101 - x1328;
      // loc("zirgen/components/u32.cpp":113:20)
      auto x1338 = x967 - x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":55:41)
      auto x1339 = x969 + x1335;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x1340 = x1336 * x1308;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x1341 = x1336 * x1309;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x1342 = x1336 * x1310;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x1343 = x1336 * x1311;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x1344 = x1337 * x1319;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x1345 = x1337 * x1320;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x1346 = x1337 * x1321;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x1347 = x1337 * x1322;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x1348 = x1327 * x1339;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x1349 = x1327 * x1338;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x1350 = x1340 + x1349;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x1351 = x1341 + x1329;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x1352 = x1342 + x1330;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x1353 = x1343 + x1348;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x1354 = x1344 + x1331;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x1355 = x1345 + x1332;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x1356 = x1346 + x1333;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x1357 = x1347 + x1334;
      {
        // loc("zirgen/components/u32.cpp":136:18)
        auto x1358 = Fp(x1353.asUInt32() & x65.asUInt32());
        // loc("zirgen/components/u32.cpp":136:17)
        auto x1359 = x1358 * x64;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[201 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1359);
          reg = x1359;
        }
        // loc("zirgen/components/u32.cpp":137:25)
        auto x1360 = Fp(x1353.asUInt32() & x54.asUInt32());
        // loc("zirgen/components/u32.cpp":137:24)
        auto x1361 = x1360 * x98;
        // loc("zirgen/components/bytes.cpp":111:3)
        {
          auto& reg = arg2[18 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1361);
          reg = x1361;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
      auto x1362 = arg2[18 * steps + ((cycle - 0) & mask)];
      assert(x1362 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/ALU/TopBit/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1363 = arg2[201 * steps + ((cycle - 0) & mask)];
      assert(x1363 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":139:19)
      auto x1364 = x1363 * x65;
      // loc("zirgen/components/u32.cpp":139:34)
      auto x1365 = x1362 * x58;
      // loc("zirgen/components/u32.cpp":139:19)
      auto x1366 = x1364 + x1365;
      // loc("zirgen/components/u32.cpp":139:6)
      auto x1367 = x1353 - x1366;
      // loc("zirgen/components/u32.cpp":139:6)
      assert(x1367 == 0 && "eqz failed at: zirgen/components/u32.cpp:139");
      {
        // loc("zirgen/components/u32.cpp":136:18)
        auto x1368 = Fp(x1357.asUInt32() & x65.asUInt32());
        // loc("zirgen/components/u32.cpp":136:17)
        auto x1369 = x1368 * x64;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[202 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1369);
          reg = x1369;
        }
        // loc("zirgen/components/u32.cpp":137:25)
        auto x1370 = Fp(x1357.asUInt32() & x54.asUInt32());
        // loc("zirgen/components/u32.cpp":137:24)
        auto x1371 = x1370 * x98;
        // loc("zirgen/components/bytes.cpp":111:3)
        {
          auto& reg = arg2[19 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1371);
          reg = x1371;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
      auto x1372 = arg2[19 * steps + ((cycle - 0) & mask)];
      assert(x1372 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/ALU/TopBit/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1373 = arg2[202 * steps + ((cycle - 0) & mask)];
      assert(x1373 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":139:19)
      auto x1374 = x1373 * x65;
      // loc("zirgen/components/u32.cpp":139:34)
      auto x1375 = x1372 * x58;
      // loc("zirgen/components/u32.cpp":139:19)
      auto x1376 = x1374 + x1375;
      // loc("zirgen/components/u32.cpp":139:6)
      auto x1377 = x1357 - x1376;
      // loc("zirgen/components/u32.cpp":139:6)
      assert(x1377 == 0 && "eqz failed at: zirgen/components/u32.cpp:139");
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[203 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1354);
        reg = x1354;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[204 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1355);
        reg = x1355;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[205 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1356);
        reg = x1356;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[206 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1357);
        reg = x1357;
      }
      {
        // loc("zirgen/components/u32.cpp":129:20)
        auto x1378 = Fp(x1350.asUInt32() & x1354.asUInt32());
        // loc("zirgen/components/u32.cpp":129:20)
        auto x1379 = Fp(x1351.asUInt32() & x1355.asUInt32());
        // loc("zirgen/components/u32.cpp":129:20)
        auto x1380 = Fp(x1352.asUInt32() & x1356.asUInt32());
        // loc("zirgen/components/u32.cpp":129:20)
        auto x1381 = Fp(x1353.asUInt32() & x1357.asUInt32());
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[207 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1378);
          reg = x1378;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[208 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1379);
          reg = x1379;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[209 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1380);
          reg = x1380;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[210 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1381);
          reg = x1381;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1382 = arg2[197 * steps + ((cycle - 0) & mask)];
      assert(x1382 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1383 = arg2[198 * steps + ((cycle - 0) & mask)];
      assert(x1383 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1384 = arg2[199 * steps + ((cycle - 0) & mask)];
      assert(x1384 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/ALU/U32Reg/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1385 = arg2[207 * steps + ((cycle - 0) & mask)];
      assert(x1385 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/ALU/U32Reg/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1386 = arg2[208 * steps + ((cycle - 0) & mask)];
      assert(x1386 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/ALU/U32Reg/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1387 = arg2[209 * steps + ((cycle - 0) & mask)];
      assert(x1387 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/ALU/U32Reg/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1388 = arg2[210 * steps + ((cycle - 0) & mask)];
      assert(x1388 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":121:20)
      auto x1389 = x1382 * x1350;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x1390 = x1382 * x1351;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x1391 = x1382 * x1352;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x1392 = x1382 * x1353;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x1393 = x1383 * x1354;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x1394 = x1383 * x1355;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x1395 = x1383 * x1356;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x1396 = x1383 * x1357;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x1397 = x1384 * x1385;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x1398 = x1384 * x1386;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x1399 = x1384 * x1387;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x1400 = x1384 * x1388;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x1401 = x1389 + x95;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x1402 = x1390 + x97;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x1403 = x1391 + x97;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x1404 = x1392 + x97;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x1405 = x1401 + x1393;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x1406 = x1402 + x1394;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x1407 = x1403 + x1395;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x1408 = x1404 + x1396;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x1409 = x1407 + x1399;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x1410 = x1405 + x1397;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x1411 = x1406 + x1398;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x1412 = x1408 + x1400;
      // loc("zirgen/components/u32.cpp":162:29)
      auto x1413 = x1411 * x95;
      // loc("zirgen/components/u32.cpp":162:15)
      auto x1414 = x1410 + x1413;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x1415 = Fp(x1414.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[20 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1415);
          reg = x1415;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x1416 = arg2[20 * steps + ((cycle - 0) & mask)];
      assert(x1416 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x1417 = x1414 - x1416;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x1418 = x1417 * x96;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x1419 = Fp(x1418.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[21 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1419);
          reg = x1419;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x1420 = arg2[21 * steps + ((cycle - 0) & mask)];
      assert(x1420 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x1421 = x1418 - x1420;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x1422 = x1421 * x96;
      // loc("./zirgen/components/bits.h":78:23)
      {
        auto& reg = arg2[83 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1422);
        reg = x1422;
      }
      // loc("zirgen/components/u32.cpp":164:41)
      auto x1423 = x1412 * x95;
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/ALU/U32Normalize/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1424 = arg2[83 * steps + ((cycle - 0) & mask)];
      assert(x1424 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":164:16)
      auto x1425 = x1424 + x1409;
      // loc("zirgen/components/u32.cpp":164:16)
      auto x1426 = x1425 + x1423;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x1427 = Fp(x1426.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[22 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1427);
          reg = x1427;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x1428 = arg2[22 * steps + ((cycle - 0) & mask)];
      assert(x1428 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x1429 = x1426 - x1428;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x1430 = x1429 * x96;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x1431 = Fp(x1430.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[23 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1431);
          reg = x1431;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x1432 = arg2[23 * steps + ((cycle - 0) & mask)];
      assert(x1432 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x1433 = x1430 - x1432;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x1434 = x1433 * x96;
      // loc("./zirgen/components/bits.h":78:23)
      {
        auto& reg = arg2[84 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1434);
        reg = x1434;
      }
      {
        // loc("zirgen/components/u32.cpp":136:18)
        auto x1435 = Fp(x1432.asUInt32() & x65.asUInt32());
        // loc("zirgen/components/u32.cpp":136:17)
        auto x1436 = x1435 * x64;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[211 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1436);
          reg = x1436;
        }
        // loc("zirgen/components/u32.cpp":137:25)
        auto x1437 = Fp(x1432.asUInt32() & x54.asUInt32());
        // loc("zirgen/components/u32.cpp":137:24)
        auto x1438 = x1437 * x98;
        // loc("zirgen/components/bytes.cpp":111:3)
        {
          auto& reg = arg2[24 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1438);
          reg = x1438;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/ALU/TopBit/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1439 = arg2[211 * steps + ((cycle - 0) & mask)];
      assert(x1439 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
      auto x1440 = arg2[24 * steps + ((cycle - 0) & mask)];
      assert(x1440 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":139:19)
      auto x1441 = x1439 * x65;
      // loc("zirgen/components/u32.cpp":139:34)
      auto x1442 = x1440 * x58;
      // loc("zirgen/components/u32.cpp":139:19)
      auto x1443 = x1441 + x1442;
      // loc("zirgen/components/u32.cpp":139:6)
      auto x1444 = x1432 - x1443;
      // loc("zirgen/components/u32.cpp":139:6)
      assert(x1444 == 0 && "eqz failed at: zirgen/components/u32.cpp:139");
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":79:45)
      auto x1445 = x101 - x1363;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":79:23)
      auto x1446 = x101 - x1373;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":79:34)
      auto x1447 = x101 - x1439;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":79:17)
      auto x1448 = x1363 * x1446;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":79:17)
      auto x1449 = x1448 * x1447;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":79:44)
      auto x1450 = x1445 * x1373;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":79:44)
      auto x1451 = x1450 * x1439;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":79:17)
      auto x1452 = x1449 + x1451;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":79:3)
      {
        auto& reg = arg2[212 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1452);
        reg = x1452;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/ALU/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x1453 = arg2[212 * steps + ((cycle - 0) & mask)];
      assert(x1453 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":81:27)
      auto x1454 = x1453 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":81:27)
      auto x1455 = x1454 * x1439;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":81:11)
      auto x1456 = x1453 + x1439;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":81:11)
      auto x1457 = x1456 - x1455;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":81:3)
      {
        auto& reg = arg2[213 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1457);
        reg = x1457;
      }
      // loc("zirgen/components/u32.cpp":153:26)
      auto x1458 = x1420 * x95;
      // loc("zirgen/components/u32.cpp":153:12)
      auto x1459 = x1416 + x1458;
      {
        // loc("zirgen/components/iszero.cpp":21:24)
        auto x1460 = (x1459 == 0) ? Fp(1) : Fp(0);
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[214 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1460);
          reg = x1460;
        }
        // loc("zirgen/components/iszero.cpp":22:21)
        auto x1461 = inv(x1459);
        // loc("zirgen/components/iszero.cpp":22:5)
        {
          auto& reg = arg2[215 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1461);
          reg = x1461;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/ALU/IsZeroU32/IsZero/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1462 = arg2[214 * steps + ((cycle - 0) & mask)];
      assert(x1462 != Fp::invalid());
      if (x1462 != 0) {
        // loc("zirgen/components/iszero.cpp":26:23)
        assert(x1459 == 0 && "eqz failed at: zirgen/components/iszero.cpp:26");
      }
      // loc("zirgen/components/iszero.cpp":28:19)
      auto x1463 = x101 - x1462;
      if (x1463 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/ALU/IsZeroU32/IsZero/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x1464 = arg2[215 * steps + ((cycle - 0) & mask)];
        assert(x1464 != Fp::invalid());
        // loc("zirgen/components/iszero.cpp":28:26)
        auto x1465 = x1459 * x1464;
        // loc("zirgen/components/iszero.cpp":28:26)
        auto x1466 = x1465 - x101;
        // loc("zirgen/components/iszero.cpp":28:26)
        assert(x1466 == 0 && "eqz failed at: zirgen/components/iszero.cpp:28");
      }
      // loc("zirgen/components/u32.cpp":154:27)
      auto x1467 = x1432 * x95;
      // loc("zirgen/components/u32.cpp":154:13)
      auto x1468 = x1428 + x1467;
      // loc("zirgen/components/u32.cpp":154:47)
      auto x1469 = x1463 * x82;
      // loc("zirgen/components/u32.cpp":154:13)
      auto x1470 = x1468 + x1469;
      {
        // loc("zirgen/components/iszero.cpp":21:24)
        auto x1471 = (x1470 == 0) ? Fp(1) : Fp(0);
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[216 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1471);
          reg = x1471;
        }
        // loc("zirgen/components/iszero.cpp":22:21)
        auto x1472 = inv(x1470);
        // loc("zirgen/components/iszero.cpp":22:5)
        {
          auto& reg = arg2[217 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1472);
          reg = x1472;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/ALU/IsZeroU32/IsZero/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1473 = arg2[216 * steps + ((cycle - 0) & mask)];
      assert(x1473 != Fp::invalid());
      if (x1473 != 0) {
        // loc("zirgen/components/iszero.cpp":26:23)
        assert(x1470 == 0 && "eqz failed at: zirgen/components/iszero.cpp:26");
      }
      // loc("zirgen/components/iszero.cpp":28:19)
      auto x1474 = x101 - x1473;
      if (x1474 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/ALU/IsZeroU32/IsZero/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x1475 = arg2[217 * steps + ((cycle - 0) & mask)];
        assert(x1475 != Fp::invalid());
        // loc("zirgen/components/iszero.cpp":28:26)
        auto x1476 = x1470 * x1475;
        // loc("zirgen/components/iszero.cpp":28:26)
        auto x1477 = x1476 - x101;
        // loc("zirgen/components/iszero.cpp":28:26)
        assert(x1477 == 0 && "eqz failed at: zirgen/components/iszero.cpp:28");
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/ALU/U32Normalize/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1478 = arg2[84 * steps + ((cycle - 0) & mask)];
      assert(x1478 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/ALU/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1479 = arg2[213 * steps + ((cycle - 0) & mask)];
      assert(x1479 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":107:10)
      auto x1480 = x101 - x1478;
      extern_args[0] = x1323;
      extern_args[1] = x1324;
      extern_args[2] = x1325;
      extern_args[3] = x1326;
      extern_args[4] = x1302;
      extern_args[5] = x1308;
      extern_args[6] = x1309;
      extern_args[7] = x1310;
      extern_args[8] = x1311;
      extern_args[9] = x1313;
      extern_args[10] = x1319;
      extern_args[11] = x1320;
      extern_args[12] = x1321;
      extern_args[13] = x1322;
      extern_args[14] = x1350;
      extern_args[15] = x1351;
      extern_args[16] = x1352;
      extern_args[17] = x1353;
      extern_args[18] = x1354;
      extern_args[19] = x1355;
      extern_args[20] = x1356;
      extern_args[21] = x1357;
      extern_args[22] = x1416;
      extern_args[23] = x1420;
      extern_args[24] = x1428;
      extern_args[25] = x1432;
      extern_args[26] = x1473;
      extern_args[27] = x1479;
      extern_args[28] = x1480;
      extern_log(ctx, cycle, "  imm=%w, rs1=x%u -> %w, rs2=x%u -> %w, inA = %w, inB = %w, ALU output = %w, EQ:%u, LT:%u, LTU:%u", extern_args, extern_outs);
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":55:10)
      auto x1481 = x1225 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":55:25)
      auto x1482 = x1227 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":55:10)
      auto x1483 = x1481 + x1482;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":55:10)
      auto x1484 = x1483 + x1237;
      {
        // loc("zirgen/components/iszero.cpp":21:24)
        auto x1485 = (x1484 == 0) ? Fp(1) : Fp(0);
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[218 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1485);
          reg = x1485;
        }
        // loc("zirgen/components/iszero.cpp":22:21)
        auto x1486 = inv(x1484);
        // loc("zirgen/components/iszero.cpp":22:5)
        {
          auto& reg = arg2[219 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1486);
          reg = x1486;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/IsZero/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1487 = arg2[218 * steps + ((cycle - 0) & mask)];
      assert(x1487 != Fp::invalid());
      if (x1487 != 0) {
        // loc("zirgen/components/iszero.cpp":26:23)
        assert(x1484 == 0 && "eqz failed at: zirgen/components/iszero.cpp:26");
      }
      // loc("zirgen/components/iszero.cpp":28:19)
      auto x1488 = x101 - x1487;
      if (x1488 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/IsZero/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x1489 = arg2[219 * steps + ((cycle - 0) & mask)];
        assert(x1489 != Fp::invalid());
        // loc("zirgen/components/iszero.cpp":28:26)
        auto x1490 = x1484 * x1489;
        // loc("zirgen/components/iszero.cpp":28:26)
        auto x1491 = x1490 - x101;
        // loc("zirgen/components/iszero.cpp":28:26)
        assert(x1491 == 0 && "eqz failed at: zirgen/components/iszero.cpp:28");
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":175:13)
      auto x1492 = x980 + x83;
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":49:68))
      auto x1493 = arg2[183 * steps + ((cycle - 0) & mask)];
      assert(x1493 != Fp::invalid());
      if (x1493 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":49:68)
        auto x1494 = x1238 - x49;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":49:68)
        assert(x1494 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:49");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":49:68)
        assert(x1231 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:49");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":49:68)
        assert(x1205 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:49");
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[191 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[192 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[193 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[194 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:3)
        {
          auto& reg = arg2[195 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:3)
        {
          auto& reg = arg2[196 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":33:5)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":34:5)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":35:5)
        {
          auto& reg = arg2[199 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":63:3)
        {
          auto& reg = arg2[200 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x66);
          reg = x66;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":34:23)
        auto x1495 = x1492 + x83;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x1496 = Fp(x1495.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1496);
            reg = x1496;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x1497 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x1497 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x1498 = x1495 - x1497;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x1499 = x1498 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x1500 = Fp(x1499.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1500);
            reg = x1500;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x1501 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x1501 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x1502 = x1499 - x1501;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x1503 = x1502 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x1504 = Fp(x1503.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1504);
            reg = x1504;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x1505 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x1505 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x1506 = x1503 - x1505;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x1507 = x1506 * x96;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":37:26)
          auto x1508 = Fp(x1507.asUInt32() & x81.asUInt32());
          // loc("./zirgen/components/bits.h":78:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1508);
            reg = x1508;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[0](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x1509 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x1509 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:18)
        auto x1510 = x1507 - x1509;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:17)
        auto x1511 = x1510 * x80;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1511);
          reg = x1511;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x1512 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x1512 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:23)
        auto x1513 = x101 - x1512;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:15)
        auto x1514 = x1512 * x1513;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1514);
          reg = x1514;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:17)
        auto x1515 = x98 - x1512;
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x1516 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x1516 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        auto x1517 = x1516 * x1515;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        assert(x1517 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:43");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x1518 = arg2[200 * steps + ((cycle - 0) & mask)];
        assert(x1518 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":49:68)
        {
          auto& reg = arg2[100 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1518);
          reg = x1518;
        }
        if (x1488 != 0) {
          extern_args[0] = x1484;
          extern_args[1] = x1416;
          extern_args[2] = x1420;
          extern_args[3] = x1428;
          extern_args[4] = x1432;
          extern_log(ctx, cycle, "  Writing to rd=x%u, val = %w", extern_args, extern_outs);
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":49:68)
          auto x1519 = x1298 + x1484;
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1416);
            reg = x1416;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1420);
            reg = x1420;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1428);
            reg = x1428;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1432);
            reg = x1432;
          }
          {
            extern_args[0] = x1519;
            extern_args[1] = x1416;
            extern_args[2] = x1420;
            extern_args[3] = x1428;
            extern_args[4] = x1432;
            extern_args[5] = x98;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x1520 = arg2[142 * steps + ((cycle - 0) & mask)];
          assert(x1520 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x1521 = arg2[143 * steps + ((cycle - 0) & mask)];
          assert(x1521 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x1522 = arg2[144 * steps + ((cycle - 0) & mask)];
          assert(x1522 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x1523 = arg2[145 * steps + ((cycle - 0) & mask)];
          assert(x1523 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":178:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1519);
            reg = x1519;
          }
          // loc("zirgen/components/ram.cpp":179:3)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x966);
            reg = x966;
          }
          // loc("zirgen/components/ram.cpp":180:3)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x98);
            reg = x98;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1520);
            reg = x1520;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1521);
            reg = x1521;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1522);
            reg = x1522;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1523);
            reg = x1523;
          }
        }
        if (x1487 != 0) {
          // loc("zirgen/components/ram.cpp":53:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":54:3)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":55:3)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/OneHot/hot[1](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":50:68))
      auto x1524 = arg2[184 * steps + ((cycle - 0) & mask)];
      assert(x1524 != Fp::invalid());
      if (x1524 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":50:68)
        auto x1525 = x1238 - x49;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":50:68)
        assert(x1525 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:50");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":50:68)
        assert(x1231 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:50");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":50:68)
        auto x1526 = x1205 - x62;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":50:68)
        assert(x1526 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:50");
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[191 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[192 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[193 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[194 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:3)
        {
          auto& reg = arg2[195 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:3)
        {
          auto& reg = arg2[196 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":38:5)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":39:5)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x94);
          reg = x94;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":40:5)
        {
          auto& reg = arg2[199 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":63:3)
        {
          auto& reg = arg2[200 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x66);
          reg = x66;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":34:23)
        auto x1527 = x1492 + x83;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x1528 = Fp(x1527.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1528);
            reg = x1528;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x1529 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x1529 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x1530 = x1527 - x1529;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x1531 = x1530 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x1532 = Fp(x1531.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1532);
            reg = x1532;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x1533 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x1533 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x1534 = x1531 - x1533;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x1535 = x1534 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x1536 = Fp(x1535.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1536);
            reg = x1536;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x1537 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x1537 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x1538 = x1535 - x1537;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x1539 = x1538 * x96;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":37:26)
          auto x1540 = Fp(x1539.asUInt32() & x81.asUInt32());
          // loc("./zirgen/components/bits.h":78:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1540);
            reg = x1540;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[0](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x1541 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x1541 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:18)
        auto x1542 = x1539 - x1541;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:17)
        auto x1543 = x1542 * x80;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1543);
          reg = x1543;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x1544 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x1544 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:23)
        auto x1545 = x101 - x1544;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:15)
        auto x1546 = x1544 * x1545;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1546);
          reg = x1546;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:17)
        auto x1547 = x98 - x1544;
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x1548 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x1548 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        auto x1549 = x1548 * x1547;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        assert(x1549 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:43");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x1550 = arg2[200 * steps + ((cycle - 0) & mask)];
        assert(x1550 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":50:68)
        {
          auto& reg = arg2[100 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1550);
          reg = x1550;
        }
        if (x1488 != 0) {
          extern_args[0] = x1484;
          extern_args[1] = x1416;
          extern_args[2] = x1420;
          extern_args[3] = x1428;
          extern_args[4] = x1432;
          extern_log(ctx, cycle, "  Writing to rd=x%u, val = %w", extern_args, extern_outs);
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":50:68)
          auto x1551 = x1298 + x1484;
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1416);
            reg = x1416;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1420);
            reg = x1420;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1428);
            reg = x1428;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1432);
            reg = x1432;
          }
          {
            extern_args[0] = x1551;
            extern_args[1] = x1416;
            extern_args[2] = x1420;
            extern_args[3] = x1428;
            extern_args[4] = x1432;
            extern_args[5] = x98;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x1552 = arg2[142 * steps + ((cycle - 0) & mask)];
          assert(x1552 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x1553 = arg2[143 * steps + ((cycle - 0) & mask)];
          assert(x1553 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x1554 = arg2[144 * steps + ((cycle - 0) & mask)];
          assert(x1554 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x1555 = arg2[145 * steps + ((cycle - 0) & mask)];
          assert(x1555 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":178:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1551);
            reg = x1551;
          }
          // loc("zirgen/components/ram.cpp":179:3)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x966);
            reg = x966;
          }
          // loc("zirgen/components/ram.cpp":180:3)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x98);
            reg = x98;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1552);
            reg = x1552;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1553);
            reg = x1553;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1554);
            reg = x1554;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1555);
            reg = x1555;
          }
        }
        if (x1487 != 0) {
          // loc("zirgen/components/ram.cpp":53:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":54:3)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":55:3)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/OneHot/hot[2](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":51:69))
      auto x1556 = arg2[185 * steps + ((cycle - 0) & mask)];
      assert(x1556 != Fp::invalid());
      if (x1556 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":51:69)
        auto x1557 = x1238 - x49;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":51:69)
        assert(x1557 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:51");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":51:69)
        auto x1558 = x1231 - x83;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":51:69)
        assert(x1558 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:51");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":51:69)
        assert(x1205 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:51");
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[191 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[192 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[193 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[194 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:3)
        {
          auto& reg = arg2[195 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:3)
        {
          auto& reg = arg2[196 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":53:5)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":54:5)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":55:5)
        {
          auto& reg = arg2[199 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x93);
          reg = x93;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":63:3)
        {
          auto& reg = arg2[200 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x70);
          reg = x70;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":34:23)
        auto x1559 = x1492 + x83;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x1560 = Fp(x1559.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1560);
            reg = x1560;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x1561 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x1561 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x1562 = x1559 - x1561;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x1563 = x1562 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x1564 = Fp(x1563.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1564);
            reg = x1564;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x1565 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x1565 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x1566 = x1563 - x1565;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x1567 = x1566 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x1568 = Fp(x1567.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1568);
            reg = x1568;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x1569 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x1569 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x1570 = x1567 - x1569;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x1571 = x1570 * x96;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":37:26)
          auto x1572 = Fp(x1571.asUInt32() & x81.asUInt32());
          // loc("./zirgen/components/bits.h":78:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1572);
            reg = x1572;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[0](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x1573 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x1573 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:18)
        auto x1574 = x1571 - x1573;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:17)
        auto x1575 = x1574 * x80;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1575);
          reg = x1575;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x1576 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x1576 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:23)
        auto x1577 = x101 - x1576;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:15)
        auto x1578 = x1576 * x1577;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1578);
          reg = x1578;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:17)
        auto x1579 = x98 - x1576;
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x1580 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x1580 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        auto x1581 = x1580 * x1579;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        assert(x1581 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:43");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x1582 = arg2[200 * steps + ((cycle - 0) & mask)];
        assert(x1582 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":51:69)
        {
          auto& reg = arg2[100 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1582);
          reg = x1582;
        }
        if (x1488 != 0) {
          extern_args[0] = x1484;
          extern_args[1] = x1416;
          extern_args[2] = x1420;
          extern_args[3] = x1428;
          extern_args[4] = x1432;
          extern_log(ctx, cycle, "  Writing to rd=x%u, val = %w", extern_args, extern_outs);
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":51:69)
          auto x1583 = x1298 + x1484;
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1416);
            reg = x1416;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1420);
            reg = x1420;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1428);
            reg = x1428;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1432);
            reg = x1432;
          }
          {
            extern_args[0] = x1583;
            extern_args[1] = x1416;
            extern_args[2] = x1420;
            extern_args[3] = x1428;
            extern_args[4] = x1432;
            extern_args[5] = x98;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x1584 = arg2[142 * steps + ((cycle - 0) & mask)];
          assert(x1584 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x1585 = arg2[143 * steps + ((cycle - 0) & mask)];
          assert(x1585 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x1586 = arg2[144 * steps + ((cycle - 0) & mask)];
          assert(x1586 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x1587 = arg2[145 * steps + ((cycle - 0) & mask)];
          assert(x1587 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":178:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1583);
            reg = x1583;
          }
          // loc("zirgen/components/ram.cpp":179:3)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x966);
            reg = x966;
          }
          // loc("zirgen/components/ram.cpp":180:3)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x98);
            reg = x98;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1584);
            reg = x1584;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1585);
            reg = x1585;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1586);
            reg = x1586;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1587);
            reg = x1587;
          }
        }
        if (x1487 != 0) {
          // loc("zirgen/components/ram.cpp":53:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":54:3)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":55:3)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/OneHot/hot[3](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":52:69))
      auto x1588 = arg2[186 * steps + ((cycle - 0) & mask)];
      assert(x1588 != Fp::invalid());
      if (x1588 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":52:69)
        auto x1589 = x1238 - x49;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":52:69)
        assert(x1589 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:52");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":52:69)
        auto x1590 = x1231 - x70;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":52:69)
        assert(x1590 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:52");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":52:69)
        assert(x1205 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:52");
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[191 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[192 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[193 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[194 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:3)
        {
          auto& reg = arg2[195 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:3)
        {
          auto& reg = arg2[196 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":48:5)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":49:5)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":50:5)
        {
          auto& reg = arg2[199 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x94);
          reg = x94;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":63:3)
        {
          auto& reg = arg2[200 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x70);
          reg = x70;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":34:23)
        auto x1591 = x1492 + x83;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x1592 = Fp(x1591.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1592);
            reg = x1592;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x1593 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x1593 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x1594 = x1591 - x1593;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x1595 = x1594 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x1596 = Fp(x1595.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1596);
            reg = x1596;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x1597 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x1597 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x1598 = x1595 - x1597;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x1599 = x1598 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x1600 = Fp(x1599.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1600);
            reg = x1600;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x1601 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x1601 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x1602 = x1599 - x1601;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x1603 = x1602 * x96;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":37:26)
          auto x1604 = Fp(x1603.asUInt32() & x81.asUInt32());
          // loc("./zirgen/components/bits.h":78:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1604);
            reg = x1604;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[0](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x1605 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x1605 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:18)
        auto x1606 = x1603 - x1605;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:17)
        auto x1607 = x1606 * x80;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1607);
          reg = x1607;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x1608 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x1608 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:23)
        auto x1609 = x101 - x1608;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:15)
        auto x1610 = x1608 * x1609;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1610);
          reg = x1610;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:17)
        auto x1611 = x98 - x1608;
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x1612 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x1612 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        auto x1613 = x1612 * x1611;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        assert(x1613 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:43");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x1614 = arg2[200 * steps + ((cycle - 0) & mask)];
        assert(x1614 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":52:69)
        {
          auto& reg = arg2[100 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1614);
          reg = x1614;
        }
        if (x1488 != 0) {
          extern_args[0] = x1484;
          extern_args[1] = x1416;
          extern_args[2] = x1420;
          extern_args[3] = x1428;
          extern_args[4] = x1432;
          extern_log(ctx, cycle, "  Writing to rd=x%u, val = %w", extern_args, extern_outs);
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":52:69)
          auto x1615 = x1298 + x1484;
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1416);
            reg = x1416;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1420);
            reg = x1420;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1428);
            reg = x1428;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1432);
            reg = x1432;
          }
          {
            extern_args[0] = x1615;
            extern_args[1] = x1416;
            extern_args[2] = x1420;
            extern_args[3] = x1428;
            extern_args[4] = x1432;
            extern_args[5] = x98;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x1616 = arg2[142 * steps + ((cycle - 0) & mask)];
          assert(x1616 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x1617 = arg2[143 * steps + ((cycle - 0) & mask)];
          assert(x1617 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x1618 = arg2[144 * steps + ((cycle - 0) & mask)];
          assert(x1618 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x1619 = arg2[145 * steps + ((cycle - 0) & mask)];
          assert(x1619 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":178:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1615);
            reg = x1615;
          }
          // loc("zirgen/components/ram.cpp":179:3)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x966);
            reg = x966;
          }
          // loc("zirgen/components/ram.cpp":180:3)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x98);
            reg = x98;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1616);
            reg = x1616;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1617);
            reg = x1617;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1618);
            reg = x1618;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1619);
            reg = x1619;
          }
        }
        if (x1487 != 0) {
          // loc("zirgen/components/ram.cpp":53:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":54:3)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":55:3)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/OneHot/hot[4](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":53:69))
      auto x1620 = arg2[187 * steps + ((cycle - 0) & mask)];
      assert(x1620 != Fp::invalid());
      if (x1620 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":53:69)
        auto x1621 = x1238 - x49;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":53:69)
        assert(x1621 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:53");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":53:69)
        auto x1622 = x1231 - x69;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":53:69)
        assert(x1622 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:53");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":53:69)
        assert(x1205 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:53");
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[191 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[192 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[193 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[194 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:3)
        {
          auto& reg = arg2[195 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:3)
        {
          auto& reg = arg2[196 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":43:5)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":44:5)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":45:5)
        {
          auto& reg = arg2[199 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":63:3)
        {
          auto& reg = arg2[200 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x70);
          reg = x70;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":34:23)
        auto x1623 = x1492 + x83;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x1624 = Fp(x1623.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1624);
            reg = x1624;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x1625 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x1625 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x1626 = x1623 - x1625;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x1627 = x1626 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x1628 = Fp(x1627.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1628);
            reg = x1628;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x1629 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x1629 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x1630 = x1627 - x1629;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x1631 = x1630 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x1632 = Fp(x1631.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1632);
            reg = x1632;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x1633 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x1633 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x1634 = x1631 - x1633;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x1635 = x1634 * x96;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":37:26)
          auto x1636 = Fp(x1635.asUInt32() & x81.asUInt32());
          // loc("./zirgen/components/bits.h":78:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1636);
            reg = x1636;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[0](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x1637 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x1637 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:18)
        auto x1638 = x1635 - x1637;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:17)
        auto x1639 = x1638 * x80;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1639);
          reg = x1639;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x1640 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x1640 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:23)
        auto x1641 = x101 - x1640;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:15)
        auto x1642 = x1640 * x1641;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1642);
          reg = x1642;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:17)
        auto x1643 = x98 - x1640;
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x1644 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x1644 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        auto x1645 = x1644 * x1643;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        assert(x1645 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:43");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x1646 = arg2[200 * steps + ((cycle - 0) & mask)];
        assert(x1646 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":53:69)
        {
          auto& reg = arg2[100 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1646);
          reg = x1646;
        }
        if (x1488 != 0) {
          extern_args[0] = x1484;
          extern_args[1] = x1416;
          extern_args[2] = x1420;
          extern_args[3] = x1428;
          extern_args[4] = x1432;
          extern_log(ctx, cycle, "  Writing to rd=x%u, val = %w", extern_args, extern_outs);
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":53:69)
          auto x1647 = x1298 + x1484;
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1416);
            reg = x1416;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1420);
            reg = x1420;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1428);
            reg = x1428;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1432);
            reg = x1432;
          }
          {
            extern_args[0] = x1647;
            extern_args[1] = x1416;
            extern_args[2] = x1420;
            extern_args[3] = x1428;
            extern_args[4] = x1432;
            extern_args[5] = x98;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x1648 = arg2[142 * steps + ((cycle - 0) & mask)];
          assert(x1648 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x1649 = arg2[143 * steps + ((cycle - 0) & mask)];
          assert(x1649 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x1650 = arg2[144 * steps + ((cycle - 0) & mask)];
          assert(x1650 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x1651 = arg2[145 * steps + ((cycle - 0) & mask)];
          assert(x1651 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":178:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1647);
            reg = x1647;
          }
          // loc("zirgen/components/ram.cpp":179:3)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x966);
            reg = x966;
          }
          // loc("zirgen/components/ram.cpp":180:3)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x98);
            reg = x98;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1648);
            reg = x1648;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1649);
            reg = x1649;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1650);
            reg = x1650;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1651);
            reg = x1651;
          }
        }
        if (x1487 != 0) {
          // loc("zirgen/components/ram.cpp":53:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":54:3)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":55:3)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/OneHot/hot[5](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":54:68))
      auto x1652 = arg2[188 * steps + ((cycle - 0) & mask)];
      assert(x1652 != Fp::invalid());
      if (x1652 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":54:68)
        auto x1653 = x1238 - x49;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":54:68)
        assert(x1653 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:54");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":54:68)
        auto x1654 = x1231 - x98;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":54:68)
        assert(x1654 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:54");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":54:68)
        assert(x1205 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:54");
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[191 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[192 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[193 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[194 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:3)
        {
          auto& reg = arg2[195 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:3)
        {
          auto& reg = arg2[196 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":38:5)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":39:5)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x94);
          reg = x94;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":40:5)
        {
          auto& reg = arg2[199 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":63:3)
        {
          auto& reg = arg2[200 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x66);
          reg = x66;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":34:23)
        auto x1655 = x1492 + x83;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x1656 = Fp(x1655.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1656);
            reg = x1656;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x1657 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x1657 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x1658 = x1655 - x1657;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x1659 = x1658 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x1660 = Fp(x1659.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1660);
            reg = x1660;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x1661 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x1661 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x1662 = x1659 - x1661;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x1663 = x1662 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x1664 = Fp(x1663.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1664);
            reg = x1664;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x1665 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x1665 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x1666 = x1663 - x1665;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x1667 = x1666 * x96;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":37:26)
          auto x1668 = Fp(x1667.asUInt32() & x81.asUInt32());
          // loc("./zirgen/components/bits.h":78:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1668);
            reg = x1668;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[0](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x1669 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x1669 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:18)
        auto x1670 = x1667 - x1669;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:17)
        auto x1671 = x1670 * x80;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1671);
          reg = x1671;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x1672 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x1672 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:23)
        auto x1673 = x101 - x1672;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:15)
        auto x1674 = x1672 * x1673;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1674);
          reg = x1674;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:17)
        auto x1675 = x98 - x1672;
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x1676 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x1676 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        auto x1677 = x1676 * x1675;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        assert(x1677 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:43");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x1678 = arg2[200 * steps + ((cycle - 0) & mask)];
        assert(x1678 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":54:68)
        {
          auto& reg = arg2[100 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1678);
          reg = x1678;
        }
        if (x1488 != 0) {
          extern_args[0] = x1484;
          extern_args[1] = x1479;
          extern_args[2] = x100;
          extern_args[3] = x100;
          extern_args[4] = x100;
          extern_log(ctx, cycle, "  Writing to rd=x%u, val = %w", extern_args, extern_outs);
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":54:68)
          auto x1679 = x1298 + x1484;
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1479);
            reg = x1479;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          {
            extern_args[0] = x1679;
            extern_args[1] = x1479;
            extern_args[2] = x100;
            extern_args[3] = x100;
            extern_args[4] = x100;
            extern_args[5] = x98;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x1680 = arg2[142 * steps + ((cycle - 0) & mask)];
          assert(x1680 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x1681 = arg2[143 * steps + ((cycle - 0) & mask)];
          assert(x1681 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x1682 = arg2[144 * steps + ((cycle - 0) & mask)];
          assert(x1682 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x1683 = arg2[145 * steps + ((cycle - 0) & mask)];
          assert(x1683 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":178:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1679);
            reg = x1679;
          }
          // loc("zirgen/components/ram.cpp":179:3)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x966);
            reg = x966;
          }
          // loc("zirgen/components/ram.cpp":180:3)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x98);
            reg = x98;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1680);
            reg = x1680;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1681);
            reg = x1681;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1682);
            reg = x1682;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1683);
            reg = x1683;
          }
        }
        if (x1487 != 0) {
          // loc("zirgen/components/ram.cpp":53:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":54:3)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":55:3)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/OneHot/hot[6](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":55:68))
      auto x1684 = arg2[189 * steps + ((cycle - 0) & mask)];
      assert(x1684 != Fp::invalid());
      if (x1684 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":55:68)
        auto x1685 = x1238 - x49;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":55:68)
        assert(x1685 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:55");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":55:68)
        auto x1686 = x1231 - x81;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":55:68)
        assert(x1686 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:55");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":55:68)
        assert(x1205 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:55");
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[191 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[192 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[193 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[194 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:3)
        {
          auto& reg = arg2[195 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:3)
        {
          auto& reg = arg2[196 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":38:5)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":39:5)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x94);
          reg = x94;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":40:5)
        {
          auto& reg = arg2[199 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":63:3)
        {
          auto& reg = arg2[200 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x66);
          reg = x66;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":34:23)
        auto x1687 = x1492 + x83;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x1688 = Fp(x1687.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1688);
            reg = x1688;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x1689 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x1689 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x1690 = x1687 - x1689;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x1691 = x1690 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x1692 = Fp(x1691.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1692);
            reg = x1692;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x1693 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x1693 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x1694 = x1691 - x1693;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x1695 = x1694 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x1696 = Fp(x1695.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1696);
            reg = x1696;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x1697 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x1697 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x1698 = x1695 - x1697;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x1699 = x1698 * x96;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":37:26)
          auto x1700 = Fp(x1699.asUInt32() & x81.asUInt32());
          // loc("./zirgen/components/bits.h":78:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1700);
            reg = x1700;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[0](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x1701 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x1701 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:18)
        auto x1702 = x1699 - x1701;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:17)
        auto x1703 = x1702 * x80;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1703);
          reg = x1703;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x1704 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x1704 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:23)
        auto x1705 = x101 - x1704;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:15)
        auto x1706 = x1704 * x1705;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1706);
          reg = x1706;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:17)
        auto x1707 = x98 - x1704;
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x1708 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x1708 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        auto x1709 = x1708 * x1707;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        assert(x1709 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:43");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x1710 = arg2[200 * steps + ((cycle - 0) & mask)];
        assert(x1710 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":55:68)
        {
          auto& reg = arg2[100 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1710);
          reg = x1710;
        }
        if (x1488 != 0) {
          extern_args[0] = x1484;
          extern_args[1] = x1480;
          extern_args[2] = x100;
          extern_args[3] = x100;
          extern_args[4] = x100;
          extern_log(ctx, cycle, "  Writing to rd=x%u, val = %w", extern_args, extern_outs);
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":55:68)
          auto x1711 = x1298 + x1484;
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1480);
            reg = x1480;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          {
            extern_args[0] = x1711;
            extern_args[1] = x1480;
            extern_args[2] = x100;
            extern_args[3] = x100;
            extern_args[4] = x100;
            extern_args[5] = x98;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x1712 = arg2[142 * steps + ((cycle - 0) & mask)];
          assert(x1712 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x1713 = arg2[143 * steps + ((cycle - 0) & mask)];
          assert(x1713 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x1714 = arg2[144 * steps + ((cycle - 0) & mask)];
          assert(x1714 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x1715 = arg2[145 * steps + ((cycle - 0) & mask)];
          assert(x1715 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":178:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1711);
            reg = x1711;
          }
          // loc("zirgen/components/ram.cpp":179:3)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x966);
            reg = x966;
          }
          // loc("zirgen/components/ram.cpp":180:3)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x98);
            reg = x98;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1712);
            reg = x1712;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1713);
            reg = x1713;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1714);
            reg = x1714;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1715);
            reg = x1715;
          }
        }
        if (x1487 != 0) {
          // loc("zirgen/components/ram.cpp":53:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":54:3)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":55:3)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/OneHot/hot[7](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":56:68))
      auto x1716 = arg2[190 * steps + ((cycle - 0) & mask)];
      assert(x1716 != Fp::invalid());
      if (x1716 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":56:68)
        auto x1717 = x1238 - x48;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":56:68)
        assert(x1717 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:56");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":56:68)
        assert(x1231 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:56");
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
        auto x1718 = x1192 * x65;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
        auto x1719 = x1194 * x53;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":82:7)
        auto x1720 = x1194 * x97;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:21)
        auto x1721 = x1197 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:21)
        auto x1722 = x1195 * x98;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
        auto x1723 = x1718 + x1721;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
        auto x1724 = x1719 + x1722;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
        auto x1725 = x1724 + x1193;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
        auto x1726 = x1723 + x1313;
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[191 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1726);
          reg = x1726;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[192 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1725);
          reg = x1725;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[193 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1720);
          reg = x1720;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[194 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1720);
          reg = x1720;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:3)
        {
          auto& reg = arg2[195 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:3)
        {
          auto& reg = arg2[196 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":33:5)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":34:5)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":35:5)
        {
          auto& reg = arg2[199 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":63:3)
        {
          auto& reg = arg2[200 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x66);
          reg = x66;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":34:23)
        auto x1727 = x1492 + x83;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x1728 = Fp(x1727.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1728);
            reg = x1728;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x1729 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x1729 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x1730 = x1727 - x1729;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x1731 = x1730 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x1732 = Fp(x1731.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1732);
            reg = x1732;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x1733 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x1733 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x1734 = x1731 - x1733;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x1735 = x1734 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x1736 = Fp(x1735.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1736);
            reg = x1736;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x1737 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x1737 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x1738 = x1735 - x1737;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x1739 = x1738 * x96;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":37:26)
          auto x1740 = Fp(x1739.asUInt32() & x81.asUInt32());
          // loc("./zirgen/components/bits.h":78:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1740);
            reg = x1740;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[0](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x1741 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x1741 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:18)
        auto x1742 = x1739 - x1741;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:17)
        auto x1743 = x1742 * x80;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1743);
          reg = x1743;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x1744 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x1744 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:23)
        auto x1745 = x101 - x1744;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:15)
        auto x1746 = x1744 * x1745;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1746);
          reg = x1746;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:17)
        auto x1747 = x98 - x1744;
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x1748 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x1748 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        auto x1749 = x1748 * x1747;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        assert(x1749 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:43");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x1750 = arg2[200 * steps + ((cycle - 0) & mask)];
        assert(x1750 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":56:68)
        {
          auto& reg = arg2[100 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1750);
          reg = x1750;
        }
        if (x1488 != 0) {
          extern_args[0] = x1484;
          extern_args[1] = x1416;
          extern_args[2] = x1420;
          extern_args[3] = x1428;
          extern_args[4] = x1432;
          extern_log(ctx, cycle, "  Writing to rd=x%u, val = %w", extern_args, extern_outs);
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":56:68)
          auto x1751 = x1298 + x1484;
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1416);
            reg = x1416;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1420);
            reg = x1420;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1428);
            reg = x1428;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1432);
            reg = x1432;
          }
          {
            extern_args[0] = x1751;
            extern_args[1] = x1416;
            extern_args[2] = x1420;
            extern_args[3] = x1428;
            extern_args[4] = x1432;
            extern_args[5] = x98;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x1752 = arg2[142 * steps + ((cycle - 0) & mask)];
          assert(x1752 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x1753 = arg2[143 * steps + ((cycle - 0) & mask)];
          assert(x1753 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x1754 = arg2[144 * steps + ((cycle - 0) & mask)];
          assert(x1754 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x1755 = arg2[145 * steps + ((cycle - 0) & mask)];
          assert(x1755 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":178:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1751);
            reg = x1751;
          }
          // loc("zirgen/components/ram.cpp":179:3)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x966);
            reg = x966;
          }
          // loc("zirgen/components/ram.cpp":180:3)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x98);
            reg = x98;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1752);
            reg = x1752;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1753);
            reg = x1753;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1754);
            reg = x1754;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1755);
            reg = x1755;
          }
        }
        if (x1487 != 0) {
          // loc("zirgen/components/ram.cpp":53:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":54:3)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":55:3)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/user_mode(Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1756 = arg2[99 * steps + ((cycle - 0) & mask)];
      assert(x1756 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1757 = arg2[71 * steps + ((cycle - 0) & mask)];
      assert(x1757 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":60:7)
      auto x1758 = x1756 * x1757;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":60:26)
      auto x1759 = x101 - x1757;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":60:7)
      auto x1760 = x1758 * x1759;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":60:7)
      assert(x1760 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:60");
    }
    // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[1](Reg)"("./zirgen/components/mux.h":59:25))
    auto x1761 = arg2[102 * steps + ((cycle - 0) & mask)];
    assert(x1761 != Fp::invalid());
    if (x1761 != 0) {
      // loc("Top/mux(Mux)/body(BodyStep)/user_mode(Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1762 = arg2[99 * steps + ((cycle - 1) & mask)];
      assert(x1762 != Fp::invalid());
      // loc("./zirgen/components/bits.h":37:23)
      {
        auto& reg = arg2[99 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1762);
        reg = x1762;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/next_major(Reg)"("zirgen/circuit/rv32im/v1/edsl/compute.cpp":123:37))
      auto x1763 = arg2[100 * steps + ((cycle - 1) & mask)];
      assert(x1763 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":123:37)
      auto x1764 = x1763 - x66;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":123:37)
      assert(x1764 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/compute.cpp:123");
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":126:41)
      auto x1765 = x980 * x80;
      {
        extern_args[0] = x1765;
        extern_args[1] = x101;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x1766 = extern_outs[0];
        auto x1767 = extern_outs[1];
        auto x1768 = extern_outs[2];
        auto x1769 = extern_outs[3];
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1766);
          reg = x1766;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1767);
          reg = x1767;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[123 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1768);
          reg = x1768;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[124 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1769);
          reg = x1769;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1770 = arg2[121 * steps + ((cycle - 0) & mask)];
      assert(x1770 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1771 = arg2[122 * steps + ((cycle - 0) & mask)];
      assert(x1771 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1772 = arg2[123 * steps + ((cycle - 0) & mask)];
      assert(x1772 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1773 = arg2[124 * steps + ((cycle - 0) & mask)];
      assert(x1773 != Fp::invalid());
      // loc("zirgen/components/ram.cpp":178:3)
      {
        auto& reg = arg2[118 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1765);
        reg = x1765;
      }
      // loc("zirgen/components/ram.cpp":179:3)
      {
        auto& reg = arg2[119 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x966);
        reg = x966;
      }
      // loc("zirgen/components/ram.cpp":180:3)
      {
        auto& reg = arg2[120 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x101);
        reg = x101;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[121 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1770);
        reg = x1770;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[122 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1771);
        reg = x1771;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[123 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1772);
        reg = x1772;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[124 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1773);
        reg = x1773;
      }
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":21:16)
        auto x1774 = Fp(x1773.asUInt32() & x65.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":21:15)
        auto x1775 = x1774 * x64;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[175 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1775);
          reg = x1775;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":22:17)
        auto x1776 = Fp(x1773.asUInt32() & x61.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":22:16)
        auto x1777 = x1776 * x63;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[76 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1777);
          reg = x1777;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":23:16)
        auto x1778 = Fp(x1773.asUInt32() & x72.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":23:15)
        auto x1779 = x1778 * x60;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[174 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1779);
          reg = x1779;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":24:16)
        auto x1780 = Fp(x1773.asUInt32() & x68.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":24:15)
        auto x1781 = x1780 * x59;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[173 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1781);
          reg = x1781;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":25:17)
        auto x1782 = Fp(x1773.asUInt32() & x70.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":25:16)
        auto x1783 = x1782 * x58;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[75 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1783);
          reg = x1783;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":26:17)
        auto x1784 = Fp(x1773.asUInt32() & x101.asUInt32());
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[178 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1784);
          reg = x1784;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":27:17)
        auto x1785 = Fp(x1772.asUInt32() & x65.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":27:16)
        auto x1786 = x1785 * x64;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[177 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1786);
          reg = x1786;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":28:18)
        auto x1787 = Fp(x1772.asUInt32() & x61.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":28:17)
        auto x1788 = x1787 * x63;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[77 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1788);
          reg = x1788;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":29:17)
        auto x1789 = Fp(x1772.asUInt32() & x72.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":29:16)
        auto x1790 = x1789 * x60;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[176 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1790);
          reg = x1790;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":30:18)
        auto x1791 = Fp(x1772.asUInt32() & x76.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":30:17)
        auto x1792 = x1791 * x80;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[79 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1792);
          reg = x1792;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:18)
        auto x1793 = Fp(x1772.asUInt32() & x81.asUInt32());
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[78 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1793);
          reg = x1793;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:17)
        auto x1794 = Fp(x1771.asUInt32() & x65.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:16)
        auto x1795 = x1794 * x64;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[179 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1795);
          reg = x1795;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":33:19)
        auto x1796 = Fp(x1771.asUInt32() & x56.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":33:18)
        auto x1797 = x1796 * x57;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[180 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1797);
          reg = x1797;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":34:20)
        auto x1798 = Fp(x1771.asUInt32() & x55.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":34:19)
        auto x1799 = x1798 * x60;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[80 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1799);
          reg = x1799;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":35:17)
        auto x1800 = Fp(x1771.asUInt32() & x76.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":35:16)
        auto x1801 = x1800 * x80;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[82 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1801);
          reg = x1801;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":36:17)
        auto x1802 = Fp(x1771.asUInt32() & x81.asUInt32());
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[81 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1802);
          reg = x1802;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":37:16)
        auto x1803 = Fp(x1770.asUInt32() & x65.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":37:15)
        auto x1804 = x1803 * x64;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[181 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1804);
          reg = x1804;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":38:18)
        auto x1805 = Fp(x1770.asUInt32() & x54.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":38:5)
        {
          auto& reg = arg2[182 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1805);
          reg = x1805;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1806 = arg2[173 * steps + ((cycle - 0) & mask)];
      assert(x1806 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1807 = arg2[174 * steps + ((cycle - 0) & mask)];
      assert(x1807 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1808 = arg2[175 * steps + ((cycle - 0) & mask)];
      assert(x1808 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1809 = arg2[76 * steps + ((cycle - 0) & mask)];
      assert(x1809 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1810 = arg2[178 * steps + ((cycle - 0) & mask)];
      assert(x1810 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1811 = arg2[75 * steps + ((cycle - 0) & mask)];
      assert(x1811 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":63:10)
      auto x1812 = x1808 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":67:10)
      auto x1813 = x1809 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":67:39)
      auto x1814 = x1806 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":67:25)
      auto x1815 = x1807 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":67:10)
      auto x1816 = x1813 + x1815;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":67:10)
      auto x1817 = x1816 + x1814;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":67:10)
      auto x1818 = x1817 + x1811;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":63:10)
      auto x1819 = x1812 + x1818;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":40:21)
      auto x1820 = x1819 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":40:21)
      auto x1821 = x1820 + x1810;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":40:6)
      auto x1822 = x1773 - x1821;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":40:6)
      assert(x1822 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/decode.cpp:40");
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1823 = arg2[177 * steps + ((cycle - 0) & mask)];
      assert(x1823 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1824 = arg2[77 * steps + ((cycle - 0) & mask)];
      assert(x1824 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1825 = arg2[79 * steps + ((cycle - 0) & mask)];
      assert(x1825 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1826 = arg2[176 * steps + ((cycle - 0) & mask)];
      assert(x1826 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1827 = arg2[78 * steps + ((cycle - 0) & mask)];
      assert(x1827 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:22)
      auto x1828 = x1823 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:37)
      auto x1829 = x1824 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:69)
      auto x1830 = x1825 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:22)
      auto x1831 = x1828 + x1829;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:22)
      auto x1832 = x1831 + x1826;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:21)
      auto x1833 = x1832 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:21)
      auto x1834 = x1833 + x1830;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:21)
      auto x1835 = x1834 + x1827;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:6)
      auto x1836 = x1772 - x1835;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:6)
      assert(x1836 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/decode.cpp:41");
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1837 = arg2[179 * steps + ((cycle - 0) & mask)];
      assert(x1837 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1838 = arg2[180 * steps + ((cycle - 0) & mask)];
      assert(x1838 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1839 = arg2[82 * steps + ((cycle - 0) & mask)];
      assert(x1839 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1840 = arg2[80 * steps + ((cycle - 0) & mask)];
      assert(x1840 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1841 = arg2[81 * steps + ((cycle - 0) & mask)];
      assert(x1841 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":42:21)
      auto x1842 = x1837 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":59:10)
      auto x1843 = x1838 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":42:53)
      auto x1844 = x1839 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":59:10)
      auto x1845 = x1843 + x1840;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":42:36)
      auto x1846 = x1845 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":42:21)
      auto x1847 = x1842 + x1846;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":42:21)
      auto x1848 = x1847 + x1844;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":42:21)
      auto x1849 = x1848 + x1841;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":42:6)
      auto x1850 = x1771 - x1849;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":42:6)
      assert(x1850 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/decode.cpp:42");
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x1851 = arg2[181 * steps + ((cycle - 0) & mask)];
      assert(x1851 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/Decoder/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x1852 = arg2[182 * steps + ((cycle - 0) & mask)];
      assert(x1852 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":43:21)
      auto x1853 = x1851 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":43:21)
      auto x1854 = x1853 + x1852;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":43:6)
      auto x1855 = x1770 - x1854;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":43:6)
      assert(x1855 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/decode.cpp:43");
      {
        extern_args[0] = x1770;
        extern_args[1] = x1771;
        extern_args[2] = x1772;
        extern_args[3] = x1773;
        extern_getMinor(ctx, cycle, "", extern_args, extern_outs);
        auto x1856 = extern_outs[0];
        {
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1857 = (x1856 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[183 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1857);
            reg = x1857;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1858 = x1856 - x101;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1859 = (x1858 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[184 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1859);
            reg = x1859;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1860 = x1856 - x98;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1861 = (x1860 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[185 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1861);
            reg = x1861;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1862 = x1856 - x81;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1863 = (x1862 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[186 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1863);
            reg = x1863;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1864 = x1856 - x83;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1865 = (x1864 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[187 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1865);
            reg = x1865;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1866 = x1856 - x71;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1867 = (x1866 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[188 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1867);
            reg = x1867;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1868 = x1856 - x70;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1869 = (x1868 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[189 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1869);
            reg = x1869;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1870 = x1856 - x69;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x1871 = (x1870 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[190 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1871);
            reg = x1871;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/OneHot/hot[1](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x1872 = arg2[184 * steps + ((cycle - 0) & mask)];
        assert(x1872 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/OneHot/hot[2](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x1873 = arg2[185 * steps + ((cycle - 0) & mask)];
        assert(x1873 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/OneHot/hot[3](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x1874 = arg2[186 * steps + ((cycle - 0) & mask)];
        assert(x1874 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/OneHot/hot[4](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x1875 = arg2[187 * steps + ((cycle - 0) & mask)];
        assert(x1875 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/OneHot/hot[5](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x1876 = arg2[188 * steps + ((cycle - 0) & mask)];
        assert(x1876 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/OneHot/hot[6](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x1877 = arg2[189 * steps + ((cycle - 0) & mask)];
        assert(x1877 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/OneHot/hot[7](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x1878 = arg2[190 * steps + ((cycle - 0) & mask)];
        assert(x1878 != Fp::invalid());
        // loc("./zirgen/components/onehot.h":56:19)
        auto x1879 = x1873 * x98;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x1880 = x1874 * x81;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x1881 = x1875 * x83;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x1882 = x1876 * x71;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x1883 = x1877 * x70;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x1884 = x1878 * x69;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x1885 = x1872 + x1879;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x1886 = x1885 + x1880;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x1887 = x1886 + x1881;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x1888 = x1887 + x1882;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x1889 = x1888 + x1883;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x1890 = x1889 + x1884;
        // loc("./zirgen/components/onehot.h":50:8)
        auto x1891 = x1890 - x1856;
        // loc("./zirgen/components/onehot.h":50:8)
        assert(x1891 == 0 && "eqz failed at: ./zirgen/components/onehot.h:50");
      }
      {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":57:69))
        auto x1892 = arg2[183 * steps + ((cycle - 0) & mask)];
        assert(x1892 != Fp::invalid());
        if (x1892 != 0) {
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
          auto x1893 = x1806 * x65;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
          auto x1894 = x1808 * x53;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":51:10)
          auto x1895 = x1810 * x72;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":82:7)
          auto x1896 = x1808 * x97;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:21)
          auto x1897 = x1811 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:21)
          auto x1898 = x1809 * x98;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
          auto x1899 = x1893 + x1897;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
          auto x1900 = x1894 + x1898;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
          auto x1901 = x1900 + x1807;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":51:10)
          auto x1902 = x1895 + x1832;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
          auto x1903 = x1899 + x1902;
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[191 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1903);
            reg = x1903;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[192 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1901);
            reg = x1901;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[193 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1896);
            reg = x1896;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[194 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1896);
            reg = x1896;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:3)
          {
            auto& reg = arg2[195 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:3)
          {
            auto& reg = arg2[196 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":53:5)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":54:5)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":55:5)
          {
            auto& reg = arg2[199 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x93);
            reg = x93;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":63:3)
          {
            auto& reg = arg2[200 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x70);
            reg = x70;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/OneHot/hot[1](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":58:69))
        auto x1904 = arg2[184 * steps + ((cycle - 0) & mask)];
        assert(x1904 != Fp::invalid());
        if (x1904 != 0) {
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
          auto x1905 = x1806 * x65;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
          auto x1906 = x1808 * x53;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":51:10)
          auto x1907 = x1810 * x72;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":82:7)
          auto x1908 = x1808 * x97;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:21)
          auto x1909 = x1811 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:21)
          auto x1910 = x1809 * x98;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
          auto x1911 = x1905 + x1909;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
          auto x1912 = x1906 + x1910;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
          auto x1913 = x1912 + x1807;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":51:10)
          auto x1914 = x1907 + x1832;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
          auto x1915 = x1911 + x1914;
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[191 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1915);
            reg = x1915;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[192 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1913);
            reg = x1913;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[193 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1908);
            reg = x1908;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[194 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1908);
            reg = x1908;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:3)
          {
            auto& reg = arg2[195 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:3)
          {
            auto& reg = arg2[196 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":48:5)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":49:5)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":50:5)
          {
            auto& reg = arg2[199 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x94);
            reg = x94;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":63:3)
          {
            auto& reg = arg2[200 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x70);
            reg = x70;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/OneHot/hot[2](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":59:69))
        auto x1916 = arg2[185 * steps + ((cycle - 0) & mask)];
        assert(x1916 != Fp::invalid());
        if (x1916 != 0) {
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
          auto x1917 = x1806 * x65;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
          auto x1918 = x1808 * x53;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":51:10)
          auto x1919 = x1810 * x72;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":82:7)
          auto x1920 = x1808 * x97;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:21)
          auto x1921 = x1811 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:21)
          auto x1922 = x1809 * x98;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
          auto x1923 = x1917 + x1921;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
          auto x1924 = x1918 + x1922;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
          auto x1925 = x1924 + x1807;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":51:10)
          auto x1926 = x1919 + x1832;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
          auto x1927 = x1923 + x1926;
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[191 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1927);
            reg = x1927;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[192 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1925);
            reg = x1925;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[193 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1920);
            reg = x1920;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[194 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1920);
            reg = x1920;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:3)
          {
            auto& reg = arg2[195 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:3)
          {
            auto& reg = arg2[196 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":43:5)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":44:5)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":45:5)
          {
            auto& reg = arg2[199 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":63:3)
          {
            auto& reg = arg2[200 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x70);
            reg = x70;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/OneHot/hot[3](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":60:68))
        auto x1928 = arg2[186 * steps + ((cycle - 0) & mask)];
        assert(x1928 != Fp::invalid());
        if (x1928 != 0) {
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
          auto x1929 = x1806 * x65;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
          auto x1930 = x1808 * x53;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":51:10)
          auto x1931 = x1810 * x72;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":82:7)
          auto x1932 = x1808 * x97;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:21)
          auto x1933 = x1811 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:21)
          auto x1934 = x1809 * x98;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
          auto x1935 = x1929 + x1933;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
          auto x1936 = x1930 + x1934;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
          auto x1937 = x1936 + x1807;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":51:10)
          auto x1938 = x1931 + x1832;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
          auto x1939 = x1935 + x1938;
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[191 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1939);
            reg = x1939;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[192 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1937);
            reg = x1937;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[193 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1932);
            reg = x1932;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[194 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1932);
            reg = x1932;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:3)
          {
            auto& reg = arg2[195 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:3)
          {
            auto& reg = arg2[196 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":38:5)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":39:5)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x94);
            reg = x94;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":40:5)
          {
            auto& reg = arg2[199 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":63:3)
          {
            auto& reg = arg2[200 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x66);
            reg = x66;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/OneHot/hot[4](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":61:68))
        auto x1940 = arg2[187 * steps + ((cycle - 0) & mask)];
        assert(x1940 != Fp::invalid());
        if (x1940 != 0) {
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
          auto x1941 = x1806 * x65;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
          auto x1942 = x1808 * x53;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":51:10)
          auto x1943 = x1810 * x72;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":82:7)
          auto x1944 = x1808 * x97;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:21)
          auto x1945 = x1811 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:21)
          auto x1946 = x1809 * x98;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
          auto x1947 = x1941 + x1945;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
          auto x1948 = x1942 + x1946;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
          auto x1949 = x1948 + x1807;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":51:10)
          auto x1950 = x1943 + x1832;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
          auto x1951 = x1947 + x1950;
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[191 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1951);
            reg = x1951;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[192 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1949);
            reg = x1949;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[193 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1944);
            reg = x1944;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[194 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1944);
            reg = x1944;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:3)
          {
            auto& reg = arg2[195 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:3)
          {
            auto& reg = arg2[196 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":38:5)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":39:5)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x94);
            reg = x94;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":40:5)
          {
            auto& reg = arg2[199 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":63:3)
          {
            auto& reg = arg2[200 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x66);
            reg = x66;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/OneHot/hot[5](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":62:68))
        auto x1952 = arg2[188 * steps + ((cycle - 0) & mask)];
        assert(x1952 != Fp::invalid());
        if (x1952 != 0) {
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:7)
          auto x1953 = x1806 * x65;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:7)
          auto x1954 = x1808 * x47;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":100:7)
          auto x1955 = x1808 * x97;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:21)
          auto x1956 = x1851 * x68;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:21)
          auto x1957 = x1811 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:35)
          auto x1958 = x1809 * x98;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:51)
          auto x1959 = x1841 * x98;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:36)
          auto x1960 = x1839 * x68;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:7)
          auto x1961 = x1953 + x1957;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:7)
          auto x1962 = x1954 + x1956;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:7)
          auto x1963 = x1961 + x1960;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:7)
          auto x1964 = x1962 + x1958;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:7)
          auto x1965 = x1963 + x1959;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:7)
          auto x1966 = x1964 + x1807;
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[191 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1965);
            reg = x1965;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[192 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1966);
            reg = x1966;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[193 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1955);
            reg = x1955;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[194 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1955);
            reg = x1955;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:3)
          {
            auto& reg = arg2[195 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:3)
          {
            auto& reg = arg2[196 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":38:5)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":39:5)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x94);
            reg = x94;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":40:5)
          {
            auto& reg = arg2[199 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":63:3)
          {
            auto& reg = arg2[200 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x66);
            reg = x66;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/OneHot/hot[6](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":63:68))
        auto x1967 = arg2[189 * steps + ((cycle - 0) & mask)];
        assert(x1967 != Fp::invalid());
        if (x1967 != 0) {
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:7)
          auto x1968 = x1806 * x65;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:7)
          auto x1969 = x1808 * x47;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":100:7)
          auto x1970 = x1808 * x97;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:21)
          auto x1971 = x1851 * x68;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:21)
          auto x1972 = x1811 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:35)
          auto x1973 = x1809 * x98;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:51)
          auto x1974 = x1841 * x98;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:36)
          auto x1975 = x1839 * x68;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:7)
          auto x1976 = x1968 + x1972;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:7)
          auto x1977 = x1969 + x1971;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:7)
          auto x1978 = x1976 + x1975;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:7)
          auto x1979 = x1977 + x1973;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:7)
          auto x1980 = x1978 + x1974;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:7)
          auto x1981 = x1979 + x1807;
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[191 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1980);
            reg = x1980;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[192 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1981);
            reg = x1981;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[193 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1970);
            reg = x1970;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[194 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1970);
            reg = x1970;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:3)
          {
            auto& reg = arg2[195 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:3)
          {
            auto& reg = arg2[196 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":38:5)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":39:5)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x94);
            reg = x94;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":40:5)
          {
            auto& reg = arg2[199 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":63:3)
          {
            auto& reg = arg2[200 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x66);
            reg = x66;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/OneHot/hot[7](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":64:68))
        auto x1982 = arg2[190 * steps + ((cycle - 0) & mask)];
        assert(x1982 != Fp::invalid());
        if (x1982 != 0) {
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:7)
          auto x1983 = x1806 * x65;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:7)
          auto x1984 = x1808 * x47;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":100:7)
          auto x1985 = x1808 * x97;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:21)
          auto x1986 = x1851 * x68;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:21)
          auto x1987 = x1811 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:35)
          auto x1988 = x1809 * x98;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:51)
          auto x1989 = x1841 * x98;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:36)
          auto x1990 = x1839 * x68;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:7)
          auto x1991 = x1983 + x1987;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:7)
          auto x1992 = x1984 + x1986;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:7)
          auto x1993 = x1991 + x1990;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:7)
          auto x1994 = x1992 + x1988;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:7)
          auto x1995 = x1993 + x1989;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:7)
          auto x1996 = x1994 + x1807;
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[191 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1995);
            reg = x1995;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[192 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1996);
            reg = x1996;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[193 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1985);
            reg = x1985;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[194 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1985);
            reg = x1985;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:3)
          {
            auto& reg = arg2[195 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:3)
          {
            auto& reg = arg2[196 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":38:5)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":39:5)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x94);
            reg = x94;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":40:5)
          {
            auto& reg = arg2[199 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":63:3)
          {
            auto& reg = arg2[200 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x66);
            reg = x66;
          }
        }
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":148:57)
      auto x1997 = x1762 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":148:39)
      auto x1998 = x52 - x1997;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":47:10)
      auto x1999 = x1825 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":47:26)
      auto x2000 = x1827 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":47:10)
      auto x2001 = x1999 + x2000;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":47:10)
      auto x2002 = x2001 + x1837;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":148:39)
      auto x2003 = x1998 + x2002;
      {
        extern_args[0] = x2003;
        extern_args[1] = x101;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x2004 = extern_outs[0];
        auto x2005 = extern_outs[1];
        auto x2006 = extern_outs[2];
        auto x2007 = extern_outs[3];
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[128 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2004);
          reg = x2004;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[129 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2005);
          reg = x2005;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[130 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2006);
          reg = x2006;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[131 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2007);
          reg = x2007;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2008 = arg2[128 * steps + ((cycle - 0) & mask)];
      assert(x2008 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2009 = arg2[129 * steps + ((cycle - 0) & mask)];
      assert(x2009 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2010 = arg2[130 * steps + ((cycle - 0) & mask)];
      assert(x2010 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2011 = arg2[131 * steps + ((cycle - 0) & mask)];
      assert(x2011 != Fp::invalid());
      // loc("zirgen/components/ram.cpp":178:3)
      {
        auto& reg = arg2[125 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2003);
        reg = x2003;
      }
      // loc("zirgen/components/ram.cpp":179:3)
      {
        auto& reg = arg2[126 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x966);
        reg = x966;
      }
      // loc("zirgen/components/ram.cpp":180:3)
      {
        auto& reg = arg2[127 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x101);
        reg = x101;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[128 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2008);
        reg = x2008;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[129 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2009);
        reg = x2009;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[130 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2010);
        reg = x2010;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[131 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2011);
        reg = x2011;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":51:10)
      auto x2012 = x1810 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":51:10)
      auto x2013 = x2012 + x1832;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":149:39)
      auto x2014 = x1998 + x2013;
      {
        extern_args[0] = x2014;
        extern_args[1] = x101;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x2015 = extern_outs[0];
        auto x2016 = extern_outs[1];
        auto x2017 = extern_outs[2];
        auto x2018 = extern_outs[3];
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2015);
          reg = x2015;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2016);
          reg = x2016;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[137 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2017);
          reg = x2017;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[138 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2018);
          reg = x2018;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2019 = arg2[135 * steps + ((cycle - 0) & mask)];
      assert(x2019 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2020 = arg2[136 * steps + ((cycle - 0) & mask)];
      assert(x2020 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2021 = arg2[137 * steps + ((cycle - 0) & mask)];
      assert(x2021 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2022 = arg2[138 * steps + ((cycle - 0) & mask)];
      assert(x2022 != Fp::invalid());
      // loc("zirgen/components/ram.cpp":178:3)
      {
        auto& reg = arg2[132 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2014);
        reg = x2014;
      }
      // loc("zirgen/components/ram.cpp":179:3)
      {
        auto& reg = arg2[133 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x966);
        reg = x966;
      }
      // loc("zirgen/components/ram.cpp":180:3)
      {
        auto& reg = arg2[134 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x101);
        reg = x101;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[135 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2019);
        reg = x2019;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[136 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2020);
        reg = x2020;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[137 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2021);
        reg = x2021;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[138 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2022);
        reg = x2022;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/ComputeControl/U32Reg/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2023 = arg2[191 * steps + ((cycle - 0) & mask)];
      assert(x2023 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/ComputeControl/U32Reg/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2024 = arg2[192 * steps + ((cycle - 0) & mask)];
      assert(x2024 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/ComputeControl/U32Reg/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2025 = arg2[193 * steps + ((cycle - 0) & mask)];
      assert(x2025 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/ComputeControl/U32Reg/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2026 = arg2[194 * steps + ((cycle - 0) & mask)];
      assert(x2026 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2027 = arg2[195 * steps + ((cycle - 0) & mask)];
      assert(x2027 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2028 = arg2[196 * steps + ((cycle - 0) & mask)];
      assert(x2028 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":121:20)
      auto x2029 = x2027 * x968;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x2030 = x2027 * x971;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x2031 = x2028 * x2023;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x2032 = x2028 * x2024;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x2033 = x2028 * x2025;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x2034 = x2028 * x2026;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":55:52)
      auto x2035 = x970 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":153:17)
      auto x2036 = x101 - x2027;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":155:17)
      auto x2037 = x101 - x2028;
      // loc("zirgen/components/u32.cpp":113:20)
      auto x2038 = x967 - x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":55:41)
      auto x2039 = x969 + x2035;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x2040 = x2036 * x2008;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x2041 = x2036 * x2009;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x2042 = x2036 * x2010;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x2043 = x2036 * x2011;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x2044 = x2037 * x2019;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x2045 = x2037 * x2020;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x2046 = x2037 * x2021;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x2047 = x2037 * x2022;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x2048 = x2027 * x2039;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x2049 = x2027 * x2038;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x2050 = x2040 + x2049;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x2051 = x2041 + x2029;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x2052 = x2042 + x2030;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x2053 = x2043 + x2048;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x2054 = x2044 + x2031;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x2055 = x2045 + x2032;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x2056 = x2046 + x2033;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x2057 = x2047 + x2034;
      {
        // loc("zirgen/components/u32.cpp":136:18)
        auto x2058 = Fp(x2053.asUInt32() & x65.asUInt32());
        // loc("zirgen/components/u32.cpp":136:17)
        auto x2059 = x2058 * x64;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[201 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2059);
          reg = x2059;
        }
        // loc("zirgen/components/u32.cpp":137:25)
        auto x2060 = Fp(x2053.asUInt32() & x54.asUInt32());
        // loc("zirgen/components/u32.cpp":137:24)
        auto x2061 = x2060 * x98;
        // loc("zirgen/components/bytes.cpp":111:3)
        {
          auto& reg = arg2[18 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2061);
          reg = x2061;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
      auto x2062 = arg2[18 * steps + ((cycle - 0) & mask)];
      assert(x2062 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/ALU/TopBit/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2063 = arg2[201 * steps + ((cycle - 0) & mask)];
      assert(x2063 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":139:19)
      auto x2064 = x2063 * x65;
      // loc("zirgen/components/u32.cpp":139:34)
      auto x2065 = x2062 * x58;
      // loc("zirgen/components/u32.cpp":139:19)
      auto x2066 = x2064 + x2065;
      // loc("zirgen/components/u32.cpp":139:6)
      auto x2067 = x2053 - x2066;
      // loc("zirgen/components/u32.cpp":139:6)
      assert(x2067 == 0 && "eqz failed at: zirgen/components/u32.cpp:139");
      {
        // loc("zirgen/components/u32.cpp":136:18)
        auto x2068 = Fp(x2057.asUInt32() & x65.asUInt32());
        // loc("zirgen/components/u32.cpp":136:17)
        auto x2069 = x2068 * x64;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[202 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2069);
          reg = x2069;
        }
        // loc("zirgen/components/u32.cpp":137:25)
        auto x2070 = Fp(x2057.asUInt32() & x54.asUInt32());
        // loc("zirgen/components/u32.cpp":137:24)
        auto x2071 = x2070 * x98;
        // loc("zirgen/components/bytes.cpp":111:3)
        {
          auto& reg = arg2[19 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2071);
          reg = x2071;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
      auto x2072 = arg2[19 * steps + ((cycle - 0) & mask)];
      assert(x2072 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/ALU/TopBit/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2073 = arg2[202 * steps + ((cycle - 0) & mask)];
      assert(x2073 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":139:19)
      auto x2074 = x2073 * x65;
      // loc("zirgen/components/u32.cpp":139:34)
      auto x2075 = x2072 * x58;
      // loc("zirgen/components/u32.cpp":139:19)
      auto x2076 = x2074 + x2075;
      // loc("zirgen/components/u32.cpp":139:6)
      auto x2077 = x2057 - x2076;
      // loc("zirgen/components/u32.cpp":139:6)
      assert(x2077 == 0 && "eqz failed at: zirgen/components/u32.cpp:139");
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[203 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2054);
        reg = x2054;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[204 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2055);
        reg = x2055;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[205 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2056);
        reg = x2056;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[206 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2057);
        reg = x2057;
      }
      {
        // loc("zirgen/components/u32.cpp":129:20)
        auto x2078 = Fp(x2050.asUInt32() & x2054.asUInt32());
        // loc("zirgen/components/u32.cpp":129:20)
        auto x2079 = Fp(x2051.asUInt32() & x2055.asUInt32());
        // loc("zirgen/components/u32.cpp":129:20)
        auto x2080 = Fp(x2052.asUInt32() & x2056.asUInt32());
        // loc("zirgen/components/u32.cpp":129:20)
        auto x2081 = Fp(x2053.asUInt32() & x2057.asUInt32());
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[207 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2078);
          reg = x2078;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[208 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2079);
          reg = x2079;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[209 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2080);
          reg = x2080;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[210 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2081);
          reg = x2081;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2082 = arg2[197 * steps + ((cycle - 0) & mask)];
      assert(x2082 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2083 = arg2[198 * steps + ((cycle - 0) & mask)];
      assert(x2083 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2084 = arg2[199 * steps + ((cycle - 0) & mask)];
      assert(x2084 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/ALU/U32Reg/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2085 = arg2[207 * steps + ((cycle - 0) & mask)];
      assert(x2085 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/ALU/U32Reg/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2086 = arg2[208 * steps + ((cycle - 0) & mask)];
      assert(x2086 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/ALU/U32Reg/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2087 = arg2[209 * steps + ((cycle - 0) & mask)];
      assert(x2087 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/ALU/U32Reg/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2088 = arg2[210 * steps + ((cycle - 0) & mask)];
      assert(x2088 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":121:20)
      auto x2089 = x2082 * x2050;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x2090 = x2082 * x2051;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x2091 = x2082 * x2052;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x2092 = x2082 * x2053;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x2093 = x2083 * x2054;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x2094 = x2083 * x2055;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x2095 = x2083 * x2056;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x2096 = x2083 * x2057;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x2097 = x2084 * x2085;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x2098 = x2084 * x2086;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x2099 = x2084 * x2087;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x2100 = x2084 * x2088;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x2101 = x2089 + x95;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x2102 = x2090 + x97;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x2103 = x2091 + x97;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x2104 = x2092 + x97;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x2105 = x2101 + x2093;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x2106 = x2102 + x2094;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x2107 = x2103 + x2095;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x2108 = x2104 + x2096;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x2109 = x2107 + x2099;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x2110 = x2105 + x2097;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x2111 = x2106 + x2098;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x2112 = x2108 + x2100;
      // loc("zirgen/components/u32.cpp":162:29)
      auto x2113 = x2111 * x95;
      // loc("zirgen/components/u32.cpp":162:15)
      auto x2114 = x2110 + x2113;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x2115 = Fp(x2114.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[20 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2115);
          reg = x2115;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x2116 = arg2[20 * steps + ((cycle - 0) & mask)];
      assert(x2116 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x2117 = x2114 - x2116;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x2118 = x2117 * x96;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x2119 = Fp(x2118.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[21 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2119);
          reg = x2119;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x2120 = arg2[21 * steps + ((cycle - 0) & mask)];
      assert(x2120 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x2121 = x2118 - x2120;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x2122 = x2121 * x96;
      // loc("./zirgen/components/bits.h":78:23)
      {
        auto& reg = arg2[83 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2122);
        reg = x2122;
      }
      // loc("zirgen/components/u32.cpp":164:41)
      auto x2123 = x2112 * x95;
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/ALU/U32Normalize/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2124 = arg2[83 * steps + ((cycle - 0) & mask)];
      assert(x2124 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":164:16)
      auto x2125 = x2124 + x2109;
      // loc("zirgen/components/u32.cpp":164:16)
      auto x2126 = x2125 + x2123;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x2127 = Fp(x2126.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[22 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2127);
          reg = x2127;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x2128 = arg2[22 * steps + ((cycle - 0) & mask)];
      assert(x2128 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x2129 = x2126 - x2128;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x2130 = x2129 * x96;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x2131 = Fp(x2130.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[23 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2131);
          reg = x2131;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x2132 = arg2[23 * steps + ((cycle - 0) & mask)];
      assert(x2132 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x2133 = x2130 - x2132;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x2134 = x2133 * x96;
      // loc("./zirgen/components/bits.h":78:23)
      {
        auto& reg = arg2[84 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2134);
        reg = x2134;
      }
      {
        // loc("zirgen/components/u32.cpp":136:18)
        auto x2135 = Fp(x2132.asUInt32() & x65.asUInt32());
        // loc("zirgen/components/u32.cpp":136:17)
        auto x2136 = x2135 * x64;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[211 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2136);
          reg = x2136;
        }
        // loc("zirgen/components/u32.cpp":137:25)
        auto x2137 = Fp(x2132.asUInt32() & x54.asUInt32());
        // loc("zirgen/components/u32.cpp":137:24)
        auto x2138 = x2137 * x98;
        // loc("zirgen/components/bytes.cpp":111:3)
        {
          auto& reg = arg2[24 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2138);
          reg = x2138;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/ALU/TopBit/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2139 = arg2[211 * steps + ((cycle - 0) & mask)];
      assert(x2139 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
      auto x2140 = arg2[24 * steps + ((cycle - 0) & mask)];
      assert(x2140 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":139:19)
      auto x2141 = x2139 * x65;
      // loc("zirgen/components/u32.cpp":139:34)
      auto x2142 = x2140 * x58;
      // loc("zirgen/components/u32.cpp":139:19)
      auto x2143 = x2141 + x2142;
      // loc("zirgen/components/u32.cpp":139:6)
      auto x2144 = x2132 - x2143;
      // loc("zirgen/components/u32.cpp":139:6)
      assert(x2144 == 0 && "eqz failed at: zirgen/components/u32.cpp:139");
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":79:45)
      auto x2145 = x101 - x2063;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":79:23)
      auto x2146 = x101 - x2073;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":79:34)
      auto x2147 = x101 - x2139;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":79:17)
      auto x2148 = x2063 * x2146;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":79:17)
      auto x2149 = x2148 * x2147;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":79:44)
      auto x2150 = x2145 * x2073;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":79:44)
      auto x2151 = x2150 * x2139;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":79:17)
      auto x2152 = x2149 + x2151;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":79:3)
      {
        auto& reg = arg2[212 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2152);
        reg = x2152;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/ALU/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x2153 = arg2[212 * steps + ((cycle - 0) & mask)];
      assert(x2153 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":81:27)
      auto x2154 = x2153 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":81:27)
      auto x2155 = x2154 * x2139;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":81:11)
      auto x2156 = x2153 + x2139;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":81:11)
      auto x2157 = x2156 - x2155;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":81:3)
      {
        auto& reg = arg2[213 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2157);
        reg = x2157;
      }
      // loc("zirgen/components/u32.cpp":153:26)
      auto x2158 = x2120 * x95;
      // loc("zirgen/components/u32.cpp":153:12)
      auto x2159 = x2116 + x2158;
      {
        // loc("zirgen/components/iszero.cpp":21:24)
        auto x2160 = (x2159 == 0) ? Fp(1) : Fp(0);
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[214 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2160);
          reg = x2160;
        }
        // loc("zirgen/components/iszero.cpp":22:21)
        auto x2161 = inv(x2159);
        // loc("zirgen/components/iszero.cpp":22:5)
        {
          auto& reg = arg2[215 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2161);
          reg = x2161;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/ALU/IsZeroU32/IsZero/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2162 = arg2[214 * steps + ((cycle - 0) & mask)];
      assert(x2162 != Fp::invalid());
      if (x2162 != 0) {
        // loc("zirgen/components/iszero.cpp":26:23)
        assert(x2159 == 0 && "eqz failed at: zirgen/components/iszero.cpp:26");
      }
      // loc("zirgen/components/iszero.cpp":28:19)
      auto x2163 = x101 - x2162;
      if (x2163 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/ALU/IsZeroU32/IsZero/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x2164 = arg2[215 * steps + ((cycle - 0) & mask)];
        assert(x2164 != Fp::invalid());
        // loc("zirgen/components/iszero.cpp":28:26)
        auto x2165 = x2159 * x2164;
        // loc("zirgen/components/iszero.cpp":28:26)
        auto x2166 = x2165 - x101;
        // loc("zirgen/components/iszero.cpp":28:26)
        assert(x2166 == 0 && "eqz failed at: zirgen/components/iszero.cpp:28");
      }
      // loc("zirgen/components/u32.cpp":154:27)
      auto x2167 = x2132 * x95;
      // loc("zirgen/components/u32.cpp":154:13)
      auto x2168 = x2128 + x2167;
      // loc("zirgen/components/u32.cpp":154:47)
      auto x2169 = x2163 * x82;
      // loc("zirgen/components/u32.cpp":154:13)
      auto x2170 = x2168 + x2169;
      {
        // loc("zirgen/components/iszero.cpp":21:24)
        auto x2171 = (x2170 == 0) ? Fp(1) : Fp(0);
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[216 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2171);
          reg = x2171;
        }
        // loc("zirgen/components/iszero.cpp":22:21)
        auto x2172 = inv(x2170);
        // loc("zirgen/components/iszero.cpp":22:5)
        {
          auto& reg = arg2[217 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2172);
          reg = x2172;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/ALU/IsZeroU32/IsZero/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2173 = arg2[216 * steps + ((cycle - 0) & mask)];
      assert(x2173 != Fp::invalid());
      if (x2173 != 0) {
        // loc("zirgen/components/iszero.cpp":26:23)
        assert(x2170 == 0 && "eqz failed at: zirgen/components/iszero.cpp:26");
      }
      // loc("zirgen/components/iszero.cpp":28:19)
      auto x2174 = x101 - x2173;
      if (x2174 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/ALU/IsZeroU32/IsZero/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x2175 = arg2[217 * steps + ((cycle - 0) & mask)];
        assert(x2175 != Fp::invalid());
        // loc("zirgen/components/iszero.cpp":28:26)
        auto x2176 = x2170 * x2175;
        // loc("zirgen/components/iszero.cpp":28:26)
        auto x2177 = x2176 - x101;
        // loc("zirgen/components/iszero.cpp":28:26)
        assert(x2177 == 0 && "eqz failed at: zirgen/components/iszero.cpp:28");
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/ALU/U32Normalize/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2178 = arg2[84 * steps + ((cycle - 0) & mask)];
      assert(x2178 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/ALU/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2179 = arg2[213 * steps + ((cycle - 0) & mask)];
      assert(x2179 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":107:10)
      auto x2180 = x101 - x2178;
      extern_args[0] = x2023;
      extern_args[1] = x2024;
      extern_args[2] = x2025;
      extern_args[3] = x2026;
      extern_args[4] = x2002;
      extern_args[5] = x2008;
      extern_args[6] = x2009;
      extern_args[7] = x2010;
      extern_args[8] = x2011;
      extern_args[9] = x2013;
      extern_args[10] = x2019;
      extern_args[11] = x2020;
      extern_args[12] = x2021;
      extern_args[13] = x2022;
      extern_args[14] = x2050;
      extern_args[15] = x2051;
      extern_args[16] = x2052;
      extern_args[17] = x2053;
      extern_args[18] = x2054;
      extern_args[19] = x2055;
      extern_args[20] = x2056;
      extern_args[21] = x2057;
      extern_args[22] = x2116;
      extern_args[23] = x2120;
      extern_args[24] = x2128;
      extern_args[25] = x2132;
      extern_args[26] = x2173;
      extern_args[27] = x2179;
      extern_args[28] = x2180;
      extern_log(ctx, cycle, "  imm=%w, rs1=x%u -> %w, rs2=x%u -> %w, inA = %w, inB = %w, ALU output = %w, EQ:%u, LT:%u, LTU:%u", extern_args, extern_outs);
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":55:10)
      auto x2181 = x1839 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":55:25)
      auto x2182 = x1841 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":55:10)
      auto x2183 = x2181 + x2182;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":55:10)
      auto x2184 = x2183 + x1851;
      {
        // loc("zirgen/components/iszero.cpp":21:24)
        auto x2185 = (x2184 == 0) ? Fp(1) : Fp(0);
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[218 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2185);
          reg = x2185;
        }
        // loc("zirgen/components/iszero.cpp":22:21)
        auto x2186 = inv(x2184);
        // loc("zirgen/components/iszero.cpp":22:5)
        {
          auto& reg = arg2[219 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2186);
          reg = x2186;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/IsZero/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2187 = arg2[218 * steps + ((cycle - 0) & mask)];
      assert(x2187 != Fp::invalid());
      if (x2187 != 0) {
        // loc("zirgen/components/iszero.cpp":26:23)
        assert(x2184 == 0 && "eqz failed at: zirgen/components/iszero.cpp:26");
      }
      // loc("zirgen/components/iszero.cpp":28:19)
      auto x2188 = x101 - x2187;
      if (x2188 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/IsZero/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x2189 = arg2[219 * steps + ((cycle - 0) & mask)];
        assert(x2189 != Fp::invalid());
        // loc("zirgen/components/iszero.cpp":28:26)
        auto x2190 = x2184 * x2189;
        // loc("zirgen/components/iszero.cpp":28:26)
        auto x2191 = x2190 - x101;
        // loc("zirgen/components/iszero.cpp":28:26)
        assert(x2191 == 0 && "eqz failed at: zirgen/components/iszero.cpp:28");
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":175:13)
      auto x2192 = x980 + x83;
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":57:69))
      auto x2193 = arg2[183 * steps + ((cycle - 0) & mask)];
      assert(x2193 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":81:17)
      auto x2194 = x2026 * x50;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":184:13)
      auto x2195 = x2173 * x2192;
      // loc("zirgen/components/u32.cpp":78:25)
      auto x2196 = x2024 * x95;
      // loc("zirgen/components/u32.cpp":78:49)
      auto x2197 = x2025 * x82;
      // loc("zirgen/components/u32.cpp":81:16)
      auto x2198 = x2194 * x51;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":185:36)
      auto x2199 = x101 - x2179;
      // loc("zirgen/components/u32.cpp":78:13)
      auto x2200 = x2023 + x2196;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":185:35)
      auto x2201 = x2199 * x2192;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":183:35)
      auto x2202 = x2174 * x2192;
      // loc("zirgen/components/u32.cpp":78:13)
      auto x2203 = x2200 + x2197;
      // loc("zirgen/components/u32.cpp":81:10)
      auto x2204 = x2203 + x2198;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":176:14)
      auto x2205 = x980 + x2204;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":185:13)
      auto x2206 = x2179 * x2205;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":183:13)
      auto x2207 = x2173 * x2205;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":184:34)
      auto x2208 = x2174 * x2205;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":185:13)
      auto x2209 = x2206 + x2201;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":183:13)
      auto x2210 = x2207 + x2202;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":184:13)
      auto x2211 = x2195 + x2208;
      if (x2193 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":57:69)
        auto x2212 = x1852 - x48;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":57:69)
        assert(x2212 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:57");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":57:69)
        auto x2213 = x1845 - x83;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":57:69)
        assert(x2213 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:57");
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
        auto x2214 = x1806 * x65;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
        auto x2215 = x1808 * x53;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":82:7)
        auto x2216 = x1808 * x97;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:21)
        auto x2217 = x1811 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:21)
        auto x2218 = x1809 * x98;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
        auto x2219 = x2214 + x2217;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
        auto x2220 = x2215 + x2218;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
        auto x2221 = x2220 + x1807;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
        auto x2222 = x2219 + x2013;
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[191 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2222);
          reg = x2222;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[192 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2221);
          reg = x2221;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[193 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2216);
          reg = x2216;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[194 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2216);
          reg = x2216;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:3)
        {
          auto& reg = arg2[195 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:3)
        {
          auto& reg = arg2[196 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":53:5)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":54:5)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":55:5)
        {
          auto& reg = arg2[199 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x93);
          reg = x93;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":63:3)
        {
          auto& reg = arg2[200 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x70);
          reg = x70;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":34:23)
        auto x2223 = x2192 + x83;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x2224 = Fp(x2223.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2224);
            reg = x2224;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x2225 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x2225 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x2226 = x2223 - x2225;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x2227 = x2226 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x2228 = Fp(x2227.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2228);
            reg = x2228;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x2229 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x2229 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x2230 = x2227 - x2229;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x2231 = x2230 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x2232 = Fp(x2231.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2232);
            reg = x2232;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x2233 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x2233 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x2234 = x2231 - x2233;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x2235 = x2234 * x96;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":37:26)
          auto x2236 = Fp(x2235.asUInt32() & x81.asUInt32());
          // loc("./zirgen/components/bits.h":78:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2236);
            reg = x2236;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[0](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x2237 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x2237 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:18)
        auto x2238 = x2235 - x2237;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:17)
        auto x2239 = x2238 * x80;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2239);
          reg = x2239;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x2240 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x2240 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:23)
        auto x2241 = x101 - x2240;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:15)
        auto x2242 = x2240 * x2241;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2242);
          reg = x2242;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:17)
        auto x2243 = x98 - x2240;
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x2244 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x2244 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        auto x2245 = x2244 * x2243;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        assert(x2245 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:43");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x2246 = arg2[200 * steps + ((cycle - 0) & mask)];
        assert(x2246 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":57:69)
        {
          auto& reg = arg2[100 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2246);
          reg = x2246;
        }
        if (x2188 != 0) {
          extern_args[0] = x2184;
          extern_args[1] = x2116;
          extern_args[2] = x2120;
          extern_args[3] = x2128;
          extern_args[4] = x2132;
          extern_log(ctx, cycle, "  Writing to rd=x%u, val = %w", extern_args, extern_outs);
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":57:69)
          auto x2247 = x1998 + x2184;
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2116);
            reg = x2116;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2120);
            reg = x2120;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2128);
            reg = x2128;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2132);
            reg = x2132;
          }
          {
            extern_args[0] = x2247;
            extern_args[1] = x2116;
            extern_args[2] = x2120;
            extern_args[3] = x2128;
            extern_args[4] = x2132;
            extern_args[5] = x98;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x2248 = arg2[142 * steps + ((cycle - 0) & mask)];
          assert(x2248 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x2249 = arg2[143 * steps + ((cycle - 0) & mask)];
          assert(x2249 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x2250 = arg2[144 * steps + ((cycle - 0) & mask)];
          assert(x2250 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x2251 = arg2[145 * steps + ((cycle - 0) & mask)];
          assert(x2251 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":178:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2247);
            reg = x2247;
          }
          // loc("zirgen/components/ram.cpp":179:3)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x966);
            reg = x966;
          }
          // loc("zirgen/components/ram.cpp":180:3)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x98);
            reg = x98;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2248);
            reg = x2248;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2249);
            reg = x2249;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2250);
            reg = x2250;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2251);
            reg = x2251;
          }
        }
        if (x2187 != 0) {
          // loc("zirgen/components/ram.cpp":53:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":54:3)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":55:3)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/OneHot/hot[1](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":58:69))
      auto x2252 = arg2[184 * steps + ((cycle - 0) & mask)];
      assert(x2252 != Fp::invalid());
      if (x2252 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":58:69)
        auto x2253 = x1852 - x48;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":58:69)
        assert(x2253 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:58");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":58:69)
        auto x2254 = x1845 - x70;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":58:69)
        assert(x2254 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:58");
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
        auto x2255 = x1806 * x65;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
        auto x2256 = x1808 * x53;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":82:7)
        auto x2257 = x1808 * x97;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:21)
        auto x2258 = x1811 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:21)
        auto x2259 = x1809 * x98;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
        auto x2260 = x2255 + x2258;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
        auto x2261 = x2256 + x2259;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
        auto x2262 = x2261 + x1807;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
        auto x2263 = x2260 + x2013;
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[191 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2263);
          reg = x2263;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[192 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2262);
          reg = x2262;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[193 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2257);
          reg = x2257;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[194 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2257);
          reg = x2257;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:3)
        {
          auto& reg = arg2[195 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:3)
        {
          auto& reg = arg2[196 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":48:5)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":49:5)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":50:5)
        {
          auto& reg = arg2[199 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x94);
          reg = x94;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":63:3)
        {
          auto& reg = arg2[200 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x70);
          reg = x70;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":34:23)
        auto x2264 = x2192 + x83;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x2265 = Fp(x2264.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2265);
            reg = x2265;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x2266 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x2266 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x2267 = x2264 - x2266;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x2268 = x2267 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x2269 = Fp(x2268.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2269);
            reg = x2269;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x2270 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x2270 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x2271 = x2268 - x2270;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x2272 = x2271 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x2273 = Fp(x2272.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2273);
            reg = x2273;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x2274 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x2274 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x2275 = x2272 - x2274;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x2276 = x2275 * x96;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":37:26)
          auto x2277 = Fp(x2276.asUInt32() & x81.asUInt32());
          // loc("./zirgen/components/bits.h":78:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2277);
            reg = x2277;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[0](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x2278 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x2278 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:18)
        auto x2279 = x2276 - x2278;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:17)
        auto x2280 = x2279 * x80;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2280);
          reg = x2280;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x2281 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x2281 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:23)
        auto x2282 = x101 - x2281;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:15)
        auto x2283 = x2281 * x2282;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2283);
          reg = x2283;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:17)
        auto x2284 = x98 - x2281;
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x2285 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x2285 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        auto x2286 = x2285 * x2284;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        assert(x2286 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:43");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x2287 = arg2[200 * steps + ((cycle - 0) & mask)];
        assert(x2287 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":58:69)
        {
          auto& reg = arg2[100 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2287);
          reg = x2287;
        }
        if (x2188 != 0) {
          extern_args[0] = x2184;
          extern_args[1] = x2116;
          extern_args[2] = x2120;
          extern_args[3] = x2128;
          extern_args[4] = x2132;
          extern_log(ctx, cycle, "  Writing to rd=x%u, val = %w", extern_args, extern_outs);
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":58:69)
          auto x2288 = x1998 + x2184;
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2116);
            reg = x2116;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2120);
            reg = x2120;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2128);
            reg = x2128;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2132);
            reg = x2132;
          }
          {
            extern_args[0] = x2288;
            extern_args[1] = x2116;
            extern_args[2] = x2120;
            extern_args[3] = x2128;
            extern_args[4] = x2132;
            extern_args[5] = x98;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x2289 = arg2[142 * steps + ((cycle - 0) & mask)];
          assert(x2289 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x2290 = arg2[143 * steps + ((cycle - 0) & mask)];
          assert(x2290 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x2291 = arg2[144 * steps + ((cycle - 0) & mask)];
          assert(x2291 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x2292 = arg2[145 * steps + ((cycle - 0) & mask)];
          assert(x2292 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":178:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2288);
            reg = x2288;
          }
          // loc("zirgen/components/ram.cpp":179:3)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x966);
            reg = x966;
          }
          // loc("zirgen/components/ram.cpp":180:3)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x98);
            reg = x98;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2289);
            reg = x2289;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2290);
            reg = x2290;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2291);
            reg = x2291;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2292);
            reg = x2292;
          }
        }
        if (x2187 != 0) {
          // loc("zirgen/components/ram.cpp":53:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":54:3)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":55:3)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/OneHot/hot[2](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":59:69))
      auto x2293 = arg2[185 * steps + ((cycle - 0) & mask)];
      assert(x2293 != Fp::invalid());
      if (x2293 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":59:69)
        auto x2294 = x1852 - x48;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":59:69)
        assert(x2294 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:59");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":59:69)
        auto x2295 = x1845 - x69;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":59:69)
        assert(x2295 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:59");
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
        auto x2296 = x1806 * x65;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
        auto x2297 = x1808 * x53;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":82:7)
        auto x2298 = x1808 * x97;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:21)
        auto x2299 = x1811 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:21)
        auto x2300 = x1809 * x98;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
        auto x2301 = x2296 + x2299;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
        auto x2302 = x2297 + x2300;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
        auto x2303 = x2302 + x1807;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
        auto x2304 = x2301 + x2013;
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[191 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2304);
          reg = x2304;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[192 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2303);
          reg = x2303;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[193 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2298);
          reg = x2298;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[194 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2298);
          reg = x2298;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:3)
        {
          auto& reg = arg2[195 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:3)
        {
          auto& reg = arg2[196 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":43:5)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":44:5)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":45:5)
        {
          auto& reg = arg2[199 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":63:3)
        {
          auto& reg = arg2[200 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x70);
          reg = x70;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":34:23)
        auto x2305 = x2192 + x83;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x2306 = Fp(x2305.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2306);
            reg = x2306;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x2307 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x2307 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x2308 = x2305 - x2307;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x2309 = x2308 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x2310 = Fp(x2309.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2310);
            reg = x2310;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x2311 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x2311 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x2312 = x2309 - x2311;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x2313 = x2312 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x2314 = Fp(x2313.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2314);
            reg = x2314;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x2315 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x2315 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x2316 = x2313 - x2315;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x2317 = x2316 * x96;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":37:26)
          auto x2318 = Fp(x2317.asUInt32() & x81.asUInt32());
          // loc("./zirgen/components/bits.h":78:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2318);
            reg = x2318;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[0](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x2319 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x2319 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:18)
        auto x2320 = x2317 - x2319;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:17)
        auto x2321 = x2320 * x80;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2321);
          reg = x2321;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x2322 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x2322 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:23)
        auto x2323 = x101 - x2322;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:15)
        auto x2324 = x2322 * x2323;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2324);
          reg = x2324;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:17)
        auto x2325 = x98 - x2322;
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x2326 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x2326 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        auto x2327 = x2326 * x2325;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        assert(x2327 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:43");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x2328 = arg2[200 * steps + ((cycle - 0) & mask)];
        assert(x2328 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":59:69)
        {
          auto& reg = arg2[100 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2328);
          reg = x2328;
        }
        if (x2188 != 0) {
          extern_args[0] = x2184;
          extern_args[1] = x2116;
          extern_args[2] = x2120;
          extern_args[3] = x2128;
          extern_args[4] = x2132;
          extern_log(ctx, cycle, "  Writing to rd=x%u, val = %w", extern_args, extern_outs);
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":59:69)
          auto x2329 = x1998 + x2184;
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2116);
            reg = x2116;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2120);
            reg = x2120;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2128);
            reg = x2128;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2132);
            reg = x2132;
          }
          {
            extern_args[0] = x2329;
            extern_args[1] = x2116;
            extern_args[2] = x2120;
            extern_args[3] = x2128;
            extern_args[4] = x2132;
            extern_args[5] = x98;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x2330 = arg2[142 * steps + ((cycle - 0) & mask)];
          assert(x2330 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x2331 = arg2[143 * steps + ((cycle - 0) & mask)];
          assert(x2331 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x2332 = arg2[144 * steps + ((cycle - 0) & mask)];
          assert(x2332 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x2333 = arg2[145 * steps + ((cycle - 0) & mask)];
          assert(x2333 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":178:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2329);
            reg = x2329;
          }
          // loc("zirgen/components/ram.cpp":179:3)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x966);
            reg = x966;
          }
          // loc("zirgen/components/ram.cpp":180:3)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x98);
            reg = x98;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2330);
            reg = x2330;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2331);
            reg = x2331;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2332);
            reg = x2332;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2333);
            reg = x2333;
          }
        }
        if (x2187 != 0) {
          // loc("zirgen/components/ram.cpp":53:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":54:3)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":55:3)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/OneHot/hot[3](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":60:68))
      auto x2334 = arg2[186 * steps + ((cycle - 0) & mask)];
      assert(x2334 != Fp::invalid());
      if (x2334 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":60:68)
        auto x2335 = x1852 - x48;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":60:68)
        assert(x2335 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:60");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":60:68)
        auto x2336 = x1845 - x98;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":60:68)
        assert(x2336 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:60");
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
        auto x2337 = x1806 * x65;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
        auto x2338 = x1808 * x53;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":82:7)
        auto x2339 = x1808 * x97;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:21)
        auto x2340 = x1811 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:21)
        auto x2341 = x1809 * x98;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
        auto x2342 = x2337 + x2340;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
        auto x2343 = x2338 + x2341;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
        auto x2344 = x2343 + x1807;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
        auto x2345 = x2342 + x2013;
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[191 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2345);
          reg = x2345;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[192 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2344);
          reg = x2344;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[193 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2339);
          reg = x2339;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[194 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2339);
          reg = x2339;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:3)
        {
          auto& reg = arg2[195 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:3)
        {
          auto& reg = arg2[196 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":38:5)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":39:5)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x94);
          reg = x94;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":40:5)
        {
          auto& reg = arg2[199 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":63:3)
        {
          auto& reg = arg2[200 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x66);
          reg = x66;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":34:23)
        auto x2346 = x2192 + x83;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x2347 = Fp(x2346.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2347);
            reg = x2347;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x2348 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x2348 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x2349 = x2346 - x2348;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x2350 = x2349 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x2351 = Fp(x2350.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2351);
            reg = x2351;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x2352 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x2352 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x2353 = x2350 - x2352;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x2354 = x2353 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x2355 = Fp(x2354.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2355);
            reg = x2355;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x2356 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x2356 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x2357 = x2354 - x2356;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x2358 = x2357 * x96;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":37:26)
          auto x2359 = Fp(x2358.asUInt32() & x81.asUInt32());
          // loc("./zirgen/components/bits.h":78:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2359);
            reg = x2359;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[0](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x2360 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x2360 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:18)
        auto x2361 = x2358 - x2360;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:17)
        auto x2362 = x2361 * x80;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2362);
          reg = x2362;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x2363 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x2363 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:23)
        auto x2364 = x101 - x2363;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:15)
        auto x2365 = x2363 * x2364;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2365);
          reg = x2365;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:17)
        auto x2366 = x98 - x2363;
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x2367 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x2367 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        auto x2368 = x2367 * x2366;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        assert(x2368 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:43");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x2369 = arg2[200 * steps + ((cycle - 0) & mask)];
        assert(x2369 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":60:68)
        {
          auto& reg = arg2[100 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2369);
          reg = x2369;
        }
        if (x2188 != 0) {
          extern_args[0] = x2184;
          extern_args[1] = x2179;
          extern_args[2] = x100;
          extern_args[3] = x100;
          extern_args[4] = x100;
          extern_log(ctx, cycle, "  Writing to rd=x%u, val = %w", extern_args, extern_outs);
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":60:68)
          auto x2370 = x1998 + x2184;
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2179);
            reg = x2179;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          {
            extern_args[0] = x2370;
            extern_args[1] = x2179;
            extern_args[2] = x100;
            extern_args[3] = x100;
            extern_args[4] = x100;
            extern_args[5] = x98;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x2371 = arg2[142 * steps + ((cycle - 0) & mask)];
          assert(x2371 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x2372 = arg2[143 * steps + ((cycle - 0) & mask)];
          assert(x2372 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x2373 = arg2[144 * steps + ((cycle - 0) & mask)];
          assert(x2373 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x2374 = arg2[145 * steps + ((cycle - 0) & mask)];
          assert(x2374 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":178:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2370);
            reg = x2370;
          }
          // loc("zirgen/components/ram.cpp":179:3)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x966);
            reg = x966;
          }
          // loc("zirgen/components/ram.cpp":180:3)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x98);
            reg = x98;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2371);
            reg = x2371;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2372);
            reg = x2372;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2373);
            reg = x2373;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2374);
            reg = x2374;
          }
        }
        if (x2187 != 0) {
          // loc("zirgen/components/ram.cpp":53:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":54:3)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":55:3)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/OneHot/hot[4](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":61:68))
      auto x2375 = arg2[187 * steps + ((cycle - 0) & mask)];
      assert(x2375 != Fp::invalid());
      if (x2375 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":61:68)
        auto x2376 = x1852 - x48;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":61:68)
        assert(x2376 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:61");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":61:68)
        auto x2377 = x1845 - x81;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":61:68)
        assert(x2377 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:61");
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
        auto x2378 = x1806 * x65;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
        auto x2379 = x1808 * x53;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":82:7)
        auto x2380 = x1808 * x97;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:21)
        auto x2381 = x1811 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:21)
        auto x2382 = x1809 * x98;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
        auto x2383 = x2378 + x2381;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
        auto x2384 = x2379 + x2382;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
        auto x2385 = x2384 + x1807;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
        auto x2386 = x2383 + x2013;
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[191 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2386);
          reg = x2386;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[192 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2385);
          reg = x2385;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[193 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2380);
          reg = x2380;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[194 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2380);
          reg = x2380;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:3)
        {
          auto& reg = arg2[195 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:3)
        {
          auto& reg = arg2[196 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":38:5)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":39:5)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x94);
          reg = x94;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":40:5)
        {
          auto& reg = arg2[199 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":63:3)
        {
          auto& reg = arg2[200 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x66);
          reg = x66;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":34:23)
        auto x2387 = x2192 + x83;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x2388 = Fp(x2387.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2388);
            reg = x2388;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x2389 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x2389 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x2390 = x2387 - x2389;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x2391 = x2390 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x2392 = Fp(x2391.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2392);
            reg = x2392;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x2393 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x2393 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x2394 = x2391 - x2393;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x2395 = x2394 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x2396 = Fp(x2395.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2396);
            reg = x2396;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x2397 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x2397 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x2398 = x2395 - x2397;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x2399 = x2398 * x96;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":37:26)
          auto x2400 = Fp(x2399.asUInt32() & x81.asUInt32());
          // loc("./zirgen/components/bits.h":78:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2400);
            reg = x2400;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[0](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x2401 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x2401 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:18)
        auto x2402 = x2399 - x2401;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:17)
        auto x2403 = x2402 * x80;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2403);
          reg = x2403;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x2404 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x2404 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:23)
        auto x2405 = x101 - x2404;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:15)
        auto x2406 = x2404 * x2405;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2406);
          reg = x2406;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:17)
        auto x2407 = x98 - x2404;
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x2408 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x2408 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        auto x2409 = x2408 * x2407;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        assert(x2409 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:43");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x2410 = arg2[200 * steps + ((cycle - 0) & mask)];
        assert(x2410 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":61:68)
        {
          auto& reg = arg2[100 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2410);
          reg = x2410;
        }
        if (x2188 != 0) {
          extern_args[0] = x2184;
          extern_args[1] = x2180;
          extern_args[2] = x100;
          extern_args[3] = x100;
          extern_args[4] = x100;
          extern_log(ctx, cycle, "  Writing to rd=x%u, val = %w", extern_args, extern_outs);
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":61:68)
          auto x2411 = x1998 + x2184;
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2180);
            reg = x2180;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          {
            extern_args[0] = x2411;
            extern_args[1] = x2180;
            extern_args[2] = x100;
            extern_args[3] = x100;
            extern_args[4] = x100;
            extern_args[5] = x98;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x2412 = arg2[142 * steps + ((cycle - 0) & mask)];
          assert(x2412 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x2413 = arg2[143 * steps + ((cycle - 0) & mask)];
          assert(x2413 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x2414 = arg2[144 * steps + ((cycle - 0) & mask)];
          assert(x2414 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x2415 = arg2[145 * steps + ((cycle - 0) & mask)];
          assert(x2415 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":178:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2411);
            reg = x2411;
          }
          // loc("zirgen/components/ram.cpp":179:3)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x966);
            reg = x966;
          }
          // loc("zirgen/components/ram.cpp":180:3)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x98);
            reg = x98;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2412);
            reg = x2412;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2413);
            reg = x2413;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2414);
            reg = x2414;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2415);
            reg = x2415;
          }
        }
        if (x2187 != 0) {
          // loc("zirgen/components/ram.cpp":53:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":54:3)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":55:3)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/OneHot/hot[5](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":62:68))
      auto x2416 = arg2[188 * steps + ((cycle - 0) & mask)];
      assert(x2416 != Fp::invalid());
      if (x2416 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":62:68)
        auto x2417 = x1852 - x46;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":62:68)
        assert(x2417 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:62");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":62:68)
        assert(x1845 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:62");
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:7)
        auto x2418 = x1806 * x65;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:7)
        auto x2419 = x1808 * x47;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":100:7)
        auto x2420 = x1808 * x97;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:21)
        auto x2421 = x1851 * x68;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:21)
        auto x2422 = x1811 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:35)
        auto x2423 = x1809 * x98;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:7)
        auto x2424 = x2418 + x2422;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:7)
        auto x2425 = x2419 + x2421;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:7)
        auto x2426 = x2424 + x2181;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:7)
        auto x2427 = x2425 + x2423;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:7)
        auto x2428 = x2426 + x2182;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:7)
        auto x2429 = x2427 + x1807;
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[191 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2428);
          reg = x2428;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[192 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2429);
          reg = x2429;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[193 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2420);
          reg = x2420;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[194 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2420);
          reg = x2420;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:3)
        {
          auto& reg = arg2[195 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:3)
        {
          auto& reg = arg2[196 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":38:5)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":39:5)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x94);
          reg = x94;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":40:5)
        {
          auto& reg = arg2[199 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":63:3)
        {
          auto& reg = arg2[200 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x66);
          reg = x66;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":34:23)
        auto x2430 = x2210 + x83;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x2431 = Fp(x2430.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2431);
            reg = x2431;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x2432 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x2432 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x2433 = x2430 - x2432;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x2434 = x2433 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x2435 = Fp(x2434.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2435);
            reg = x2435;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x2436 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x2436 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x2437 = x2434 - x2436;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x2438 = x2437 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x2439 = Fp(x2438.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2439);
            reg = x2439;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x2440 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x2440 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x2441 = x2438 - x2440;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x2442 = x2441 * x96;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":37:26)
          auto x2443 = Fp(x2442.asUInt32() & x81.asUInt32());
          // loc("./zirgen/components/bits.h":78:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2443);
            reg = x2443;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[0](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x2444 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x2444 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:18)
        auto x2445 = x2442 - x2444;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:17)
        auto x2446 = x2445 * x80;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2446);
          reg = x2446;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x2447 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x2447 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:23)
        auto x2448 = x101 - x2447;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:15)
        auto x2449 = x2447 * x2448;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2449);
          reg = x2449;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:17)
        auto x2450 = x98 - x2447;
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x2451 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x2451 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        auto x2452 = x2451 * x2450;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        assert(x2452 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:43");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x2453 = arg2[200 * steps + ((cycle - 0) & mask)];
        assert(x2453 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":62:68)
        {
          auto& reg = arg2[100 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2453);
          reg = x2453;
        }
        if (x100 != 0) {
          extern_args[0] = x2184;
          extern_args[1] = x2116;
          extern_args[2] = x2120;
          extern_args[3] = x2128;
          extern_args[4] = x2132;
          extern_log(ctx, cycle, "  Writing to rd=x%u, val = %w", extern_args, extern_outs);
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":62:68)
          auto x2454 = x1998 + x2184;
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2116);
            reg = x2116;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2120);
            reg = x2120;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2128);
            reg = x2128;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2132);
            reg = x2132;
          }
          {
            extern_args[0] = x2454;
            extern_args[1] = x2116;
            extern_args[2] = x2120;
            extern_args[3] = x2128;
            extern_args[4] = x2132;
            extern_args[5] = x98;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x2455 = arg2[142 * steps + ((cycle - 0) & mask)];
          assert(x2455 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x2456 = arg2[143 * steps + ((cycle - 0) & mask)];
          assert(x2456 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x2457 = arg2[144 * steps + ((cycle - 0) & mask)];
          assert(x2457 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x2458 = arg2[145 * steps + ((cycle - 0) & mask)];
          assert(x2458 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":178:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2454);
            reg = x2454;
          }
          // loc("zirgen/components/ram.cpp":179:3)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x966);
            reg = x966;
          }
          // loc("zirgen/components/ram.cpp":180:3)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x98);
            reg = x98;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2455);
            reg = x2455;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2456);
            reg = x2456;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2457);
            reg = x2457;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2458);
            reg = x2458;
          }
        }
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":62:68)
        auto x2459 = x2187 + x101;
        if (x2459 != 0) {
          // loc("zirgen/components/ram.cpp":53:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":54:3)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":55:3)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/OneHot/hot[6](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":63:68))
      auto x2460 = arg2[189 * steps + ((cycle - 0) & mask)];
      assert(x2460 != Fp::invalid());
      if (x2460 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":63:68)
        auto x2461 = x1852 - x46;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":63:68)
        assert(x2461 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:63");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":63:68)
        auto x2462 = x1845 - x101;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":63:68)
        assert(x2462 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:63");
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:7)
        auto x2463 = x1806 * x65;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:7)
        auto x2464 = x1808 * x47;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":100:7)
        auto x2465 = x1808 * x97;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:21)
        auto x2466 = x1851 * x68;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:21)
        auto x2467 = x1811 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:35)
        auto x2468 = x1809 * x98;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:7)
        auto x2469 = x2463 + x2467;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:7)
        auto x2470 = x2464 + x2466;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:7)
        auto x2471 = x2469 + x2181;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:7)
        auto x2472 = x2470 + x2468;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:7)
        auto x2473 = x2471 + x2182;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:7)
        auto x2474 = x2472 + x1807;
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[191 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2473);
          reg = x2473;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[192 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2474);
          reg = x2474;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[193 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2465);
          reg = x2465;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[194 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2465);
          reg = x2465;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:3)
        {
          auto& reg = arg2[195 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:3)
        {
          auto& reg = arg2[196 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":38:5)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":39:5)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x94);
          reg = x94;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":40:5)
        {
          auto& reg = arg2[199 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":63:3)
        {
          auto& reg = arg2[200 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x66);
          reg = x66;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":34:23)
        auto x2475 = x2211 + x83;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x2476 = Fp(x2475.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2476);
            reg = x2476;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x2477 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x2477 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x2478 = x2475 - x2477;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x2479 = x2478 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x2480 = Fp(x2479.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2480);
            reg = x2480;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x2481 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x2481 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x2482 = x2479 - x2481;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x2483 = x2482 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x2484 = Fp(x2483.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2484);
            reg = x2484;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x2485 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x2485 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x2486 = x2483 - x2485;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x2487 = x2486 * x96;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":37:26)
          auto x2488 = Fp(x2487.asUInt32() & x81.asUInt32());
          // loc("./zirgen/components/bits.h":78:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2488);
            reg = x2488;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[0](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x2489 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x2489 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:18)
        auto x2490 = x2487 - x2489;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:17)
        auto x2491 = x2490 * x80;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2491);
          reg = x2491;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x2492 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x2492 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:23)
        auto x2493 = x101 - x2492;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:15)
        auto x2494 = x2492 * x2493;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2494);
          reg = x2494;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:17)
        auto x2495 = x98 - x2492;
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x2496 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x2496 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        auto x2497 = x2496 * x2495;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        assert(x2497 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:43");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x2498 = arg2[200 * steps + ((cycle - 0) & mask)];
        assert(x2498 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":63:68)
        {
          auto& reg = arg2[100 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2498);
          reg = x2498;
        }
        if (x100 != 0) {
          extern_args[0] = x2184;
          extern_args[1] = x2116;
          extern_args[2] = x2120;
          extern_args[3] = x2128;
          extern_args[4] = x2132;
          extern_log(ctx, cycle, "  Writing to rd=x%u, val = %w", extern_args, extern_outs);
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":63:68)
          auto x2499 = x1998 + x2184;
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2116);
            reg = x2116;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2120);
            reg = x2120;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2128);
            reg = x2128;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2132);
            reg = x2132;
          }
          {
            extern_args[0] = x2499;
            extern_args[1] = x2116;
            extern_args[2] = x2120;
            extern_args[3] = x2128;
            extern_args[4] = x2132;
            extern_args[5] = x98;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x2500 = arg2[142 * steps + ((cycle - 0) & mask)];
          assert(x2500 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x2501 = arg2[143 * steps + ((cycle - 0) & mask)];
          assert(x2501 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x2502 = arg2[144 * steps + ((cycle - 0) & mask)];
          assert(x2502 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x2503 = arg2[145 * steps + ((cycle - 0) & mask)];
          assert(x2503 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":178:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2499);
            reg = x2499;
          }
          // loc("zirgen/components/ram.cpp":179:3)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x966);
            reg = x966;
          }
          // loc("zirgen/components/ram.cpp":180:3)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x98);
            reg = x98;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2500);
            reg = x2500;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2501);
            reg = x2501;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2502);
            reg = x2502;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2503);
            reg = x2503;
          }
        }
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":63:68)
        auto x2504 = x2187 + x101;
        if (x2504 != 0) {
          // loc("zirgen/components/ram.cpp":53:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":54:3)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":55:3)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/OneHot/hot[7](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":64:68))
      auto x2505 = arg2[190 * steps + ((cycle - 0) & mask)];
      assert(x2505 != Fp::invalid());
      if (x2505 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":64:68)
        auto x2506 = x1852 - x46;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":64:68)
        assert(x2506 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:64");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":64:68)
        auto x2507 = x1845 - x83;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":64:68)
        assert(x2507 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:64");
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:7)
        auto x2508 = x1806 * x65;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:7)
        auto x2509 = x1808 * x47;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":100:7)
        auto x2510 = x1808 * x97;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:21)
        auto x2511 = x1851 * x68;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:21)
        auto x2512 = x1811 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:35)
        auto x2513 = x1809 * x98;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:7)
        auto x2514 = x2508 + x2512;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:7)
        auto x2515 = x2509 + x2511;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:7)
        auto x2516 = x2514 + x2181;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:7)
        auto x2517 = x2515 + x2513;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:7)
        auto x2518 = x2516 + x2182;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:7)
        auto x2519 = x2517 + x1807;
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[191 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2518);
          reg = x2518;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[192 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2519);
          reg = x2519;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[193 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2510);
          reg = x2510;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[194 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2510);
          reg = x2510;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:3)
        {
          auto& reg = arg2[195 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:3)
        {
          auto& reg = arg2[196 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":38:5)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":39:5)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x94);
          reg = x94;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":40:5)
        {
          auto& reg = arg2[199 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":63:3)
        {
          auto& reg = arg2[200 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x66);
          reg = x66;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":34:23)
        auto x2520 = x2209 + x83;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x2521 = Fp(x2520.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2521);
            reg = x2521;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x2522 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x2522 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x2523 = x2520 - x2522;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x2524 = x2523 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x2525 = Fp(x2524.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2525);
            reg = x2525;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x2526 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x2526 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x2527 = x2524 - x2526;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x2528 = x2527 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x2529 = Fp(x2528.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2529);
            reg = x2529;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x2530 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x2530 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x2531 = x2528 - x2530;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x2532 = x2531 * x96;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":37:26)
          auto x2533 = Fp(x2532.asUInt32() & x81.asUInt32());
          // loc("./zirgen/components/bits.h":78:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2533);
            reg = x2533;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[0](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x2534 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x2534 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:18)
        auto x2535 = x2532 - x2534;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:17)
        auto x2536 = x2535 * x80;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2536);
          reg = x2536;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x2537 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x2537 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:23)
        auto x2538 = x101 - x2537;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:15)
        auto x2539 = x2537 * x2538;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2539);
          reg = x2539;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:17)
        auto x2540 = x98 - x2537;
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x2541 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x2541 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        auto x2542 = x2541 * x2540;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        assert(x2542 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:43");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x2543 = arg2[200 * steps + ((cycle - 0) & mask)];
        assert(x2543 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":64:68)
        {
          auto& reg = arg2[100 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2543);
          reg = x2543;
        }
        if (x100 != 0) {
          extern_args[0] = x2184;
          extern_args[1] = x2116;
          extern_args[2] = x2120;
          extern_args[3] = x2128;
          extern_args[4] = x2132;
          extern_log(ctx, cycle, "  Writing to rd=x%u, val = %w", extern_args, extern_outs);
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":64:68)
          auto x2544 = x1998 + x2184;
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2116);
            reg = x2116;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2120);
            reg = x2120;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2128);
            reg = x2128;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2132);
            reg = x2132;
          }
          {
            extern_args[0] = x2544;
            extern_args[1] = x2116;
            extern_args[2] = x2120;
            extern_args[3] = x2128;
            extern_args[4] = x2132;
            extern_args[5] = x98;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x2545 = arg2[142 * steps + ((cycle - 0) & mask)];
          assert(x2545 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x2546 = arg2[143 * steps + ((cycle - 0) & mask)];
          assert(x2546 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x2547 = arg2[144 * steps + ((cycle - 0) & mask)];
          assert(x2547 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x2548 = arg2[145 * steps + ((cycle - 0) & mask)];
          assert(x2548 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":178:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2544);
            reg = x2544;
          }
          // loc("zirgen/components/ram.cpp":179:3)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x966);
            reg = x966;
          }
          // loc("zirgen/components/ram.cpp":180:3)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x98);
            reg = x98;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2545);
            reg = x2545;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2546);
            reg = x2546;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2547);
            reg = x2547;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2548);
            reg = x2548;
          }
        }
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":64:68)
        auto x2549 = x2187 + x101;
        if (x2549 != 0) {
          // loc("zirgen/components/ram.cpp":53:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":54:3)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":55:3)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/user_mode(Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2550 = arg2[99 * steps + ((cycle - 0) & mask)];
      assert(x2550 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2551 = arg2[71 * steps + ((cycle - 0) & mask)];
      assert(x2551 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":60:7)
      auto x2552 = x2550 * x2551;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":60:26)
      auto x2553 = x101 - x2551;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":60:7)
      auto x2554 = x2552 * x2553;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":60:7)
      assert(x2554 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:60");
    }
    // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[2](Reg)"("./zirgen/components/mux.h":59:25))
    auto x2555 = arg2[103 * steps + ((cycle - 0) & mask)];
    assert(x2555 != Fp::invalid());
    if (x2555 != 0) {
      // loc("Top/mux(Mux)/body(BodyStep)/user_mode(Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2556 = arg2[99 * steps + ((cycle - 1) & mask)];
      assert(x2556 != Fp::invalid());
      // loc("./zirgen/components/bits.h":37:23)
      {
        auto& reg = arg2[99 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2556);
        reg = x2556;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/next_major(Reg)"("zirgen/circuit/rv32im/v1/edsl/compute.cpp":123:37))
      auto x2557 = arg2[100 * steps + ((cycle - 1) & mask)];
      assert(x2557 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":123:37)
      auto x2558 = x2557 - x66;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":123:37)
      assert(x2558 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/compute.cpp:123");
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":126:41)
      auto x2559 = x980 * x80;
      {
        extern_args[0] = x2559;
        extern_args[1] = x101;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x2560 = extern_outs[0];
        auto x2561 = extern_outs[1];
        auto x2562 = extern_outs[2];
        auto x2563 = extern_outs[3];
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2560);
          reg = x2560;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2561);
          reg = x2561;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[123 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2562);
          reg = x2562;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[124 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2563);
          reg = x2563;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2564 = arg2[121 * steps + ((cycle - 0) & mask)];
      assert(x2564 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2565 = arg2[122 * steps + ((cycle - 0) & mask)];
      assert(x2565 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2566 = arg2[123 * steps + ((cycle - 0) & mask)];
      assert(x2566 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2567 = arg2[124 * steps + ((cycle - 0) & mask)];
      assert(x2567 != Fp::invalid());
      // loc("zirgen/components/ram.cpp":178:3)
      {
        auto& reg = arg2[118 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2559);
        reg = x2559;
      }
      // loc("zirgen/components/ram.cpp":179:3)
      {
        auto& reg = arg2[119 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x966);
        reg = x966;
      }
      // loc("zirgen/components/ram.cpp":180:3)
      {
        auto& reg = arg2[120 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x101);
        reg = x101;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[121 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2564);
        reg = x2564;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[122 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2565);
        reg = x2565;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[123 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2566);
        reg = x2566;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[124 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2567);
        reg = x2567;
      }
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":21:16)
        auto x2568 = Fp(x2567.asUInt32() & x65.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":21:15)
        auto x2569 = x2568 * x64;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[175 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2569);
          reg = x2569;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":22:17)
        auto x2570 = Fp(x2567.asUInt32() & x61.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":22:16)
        auto x2571 = x2570 * x63;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[76 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2571);
          reg = x2571;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":23:16)
        auto x2572 = Fp(x2567.asUInt32() & x72.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":23:15)
        auto x2573 = x2572 * x60;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[174 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2573);
          reg = x2573;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":24:16)
        auto x2574 = Fp(x2567.asUInt32() & x68.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":24:15)
        auto x2575 = x2574 * x59;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[173 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2575);
          reg = x2575;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":25:17)
        auto x2576 = Fp(x2567.asUInt32() & x70.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":25:16)
        auto x2577 = x2576 * x58;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[75 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2577);
          reg = x2577;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":26:17)
        auto x2578 = Fp(x2567.asUInt32() & x101.asUInt32());
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[178 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2578);
          reg = x2578;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":27:17)
        auto x2579 = Fp(x2566.asUInt32() & x65.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":27:16)
        auto x2580 = x2579 * x64;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[177 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2580);
          reg = x2580;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":28:18)
        auto x2581 = Fp(x2566.asUInt32() & x61.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":28:17)
        auto x2582 = x2581 * x63;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[77 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2582);
          reg = x2582;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":29:17)
        auto x2583 = Fp(x2566.asUInt32() & x72.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":29:16)
        auto x2584 = x2583 * x60;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[176 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2584);
          reg = x2584;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":30:18)
        auto x2585 = Fp(x2566.asUInt32() & x76.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":30:17)
        auto x2586 = x2585 * x80;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[79 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2586);
          reg = x2586;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:18)
        auto x2587 = Fp(x2566.asUInt32() & x81.asUInt32());
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[78 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2587);
          reg = x2587;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:17)
        auto x2588 = Fp(x2565.asUInt32() & x65.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:16)
        auto x2589 = x2588 * x64;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[179 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2589);
          reg = x2589;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":33:19)
        auto x2590 = Fp(x2565.asUInt32() & x56.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":33:18)
        auto x2591 = x2590 * x57;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[180 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2591);
          reg = x2591;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":34:20)
        auto x2592 = Fp(x2565.asUInt32() & x55.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":34:19)
        auto x2593 = x2592 * x60;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[80 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2593);
          reg = x2593;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":35:17)
        auto x2594 = Fp(x2565.asUInt32() & x76.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":35:16)
        auto x2595 = x2594 * x80;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[82 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2595);
          reg = x2595;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":36:17)
        auto x2596 = Fp(x2565.asUInt32() & x81.asUInt32());
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[81 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2596);
          reg = x2596;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":37:16)
        auto x2597 = Fp(x2564.asUInt32() & x65.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":37:15)
        auto x2598 = x2597 * x64;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[181 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2598);
          reg = x2598;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":38:18)
        auto x2599 = Fp(x2564.asUInt32() & x54.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":38:5)
        {
          auto& reg = arg2[182 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2599);
          reg = x2599;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2600 = arg2[173 * steps + ((cycle - 0) & mask)];
      assert(x2600 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2601 = arg2[174 * steps + ((cycle - 0) & mask)];
      assert(x2601 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2602 = arg2[175 * steps + ((cycle - 0) & mask)];
      assert(x2602 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2603 = arg2[76 * steps + ((cycle - 0) & mask)];
      assert(x2603 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2604 = arg2[178 * steps + ((cycle - 0) & mask)];
      assert(x2604 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2605 = arg2[75 * steps + ((cycle - 0) & mask)];
      assert(x2605 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":63:10)
      auto x2606 = x2602 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":67:10)
      auto x2607 = x2603 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":67:39)
      auto x2608 = x2600 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":67:25)
      auto x2609 = x2601 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":67:10)
      auto x2610 = x2607 + x2609;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":67:10)
      auto x2611 = x2610 + x2608;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":67:10)
      auto x2612 = x2611 + x2605;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":63:10)
      auto x2613 = x2606 + x2612;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":40:21)
      auto x2614 = x2613 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":40:21)
      auto x2615 = x2614 + x2604;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":40:6)
      auto x2616 = x2567 - x2615;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":40:6)
      assert(x2616 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/decode.cpp:40");
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2617 = arg2[177 * steps + ((cycle - 0) & mask)];
      assert(x2617 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2618 = arg2[77 * steps + ((cycle - 0) & mask)];
      assert(x2618 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2619 = arg2[79 * steps + ((cycle - 0) & mask)];
      assert(x2619 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2620 = arg2[176 * steps + ((cycle - 0) & mask)];
      assert(x2620 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2621 = arg2[78 * steps + ((cycle - 0) & mask)];
      assert(x2621 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:22)
      auto x2622 = x2617 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:37)
      auto x2623 = x2618 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:69)
      auto x2624 = x2619 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:22)
      auto x2625 = x2622 + x2623;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:22)
      auto x2626 = x2625 + x2620;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:21)
      auto x2627 = x2626 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:21)
      auto x2628 = x2627 + x2624;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:21)
      auto x2629 = x2628 + x2621;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:6)
      auto x2630 = x2566 - x2629;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:6)
      assert(x2630 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/decode.cpp:41");
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2631 = arg2[179 * steps + ((cycle - 0) & mask)];
      assert(x2631 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2632 = arg2[180 * steps + ((cycle - 0) & mask)];
      assert(x2632 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2633 = arg2[82 * steps + ((cycle - 0) & mask)];
      assert(x2633 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2634 = arg2[80 * steps + ((cycle - 0) & mask)];
      assert(x2634 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2635 = arg2[81 * steps + ((cycle - 0) & mask)];
      assert(x2635 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":42:21)
      auto x2636 = x2631 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":59:10)
      auto x2637 = x2632 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":42:53)
      auto x2638 = x2633 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":59:10)
      auto x2639 = x2637 + x2634;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":42:36)
      auto x2640 = x2639 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":42:21)
      auto x2641 = x2636 + x2640;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":42:21)
      auto x2642 = x2641 + x2638;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":42:21)
      auto x2643 = x2642 + x2635;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":42:6)
      auto x2644 = x2565 - x2643;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":42:6)
      assert(x2644 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/decode.cpp:42");
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2645 = arg2[181 * steps + ((cycle - 0) & mask)];
      assert(x2645 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/Decoder/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x2646 = arg2[182 * steps + ((cycle - 0) & mask)];
      assert(x2646 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":43:21)
      auto x2647 = x2645 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":43:21)
      auto x2648 = x2647 + x2646;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":43:6)
      auto x2649 = x2564 - x2648;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":43:6)
      assert(x2649 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/decode.cpp:43");
      {
        extern_args[0] = x2564;
        extern_args[1] = x2565;
        extern_args[2] = x2566;
        extern_args[3] = x2567;
        extern_getMinor(ctx, cycle, "", extern_args, extern_outs);
        auto x2650 = extern_outs[0];
        {
          // loc("./zirgen/components/onehot.h":47:26)
          auto x2651 = (x2650 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[183 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2651);
            reg = x2651;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x2652 = x2650 - x101;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x2653 = (x2652 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[184 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2653);
            reg = x2653;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x2654 = x2650 - x98;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x2655 = (x2654 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[185 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2655);
            reg = x2655;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x2656 = x2650 - x81;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x2657 = (x2656 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[186 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2657);
            reg = x2657;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x2658 = x2650 - x83;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x2659 = (x2658 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[187 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2659);
            reg = x2659;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x2660 = x2650 - x71;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x2661 = (x2660 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[188 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2661);
            reg = x2661;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x2662 = x2650 - x70;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x2663 = (x2662 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[189 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2663);
            reg = x2663;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x2664 = x2650 - x69;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x2665 = (x2664 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[190 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2665);
            reg = x2665;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/OneHot/hot[1](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x2666 = arg2[184 * steps + ((cycle - 0) & mask)];
        assert(x2666 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/OneHot/hot[2](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x2667 = arg2[185 * steps + ((cycle - 0) & mask)];
        assert(x2667 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/OneHot/hot[3](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x2668 = arg2[186 * steps + ((cycle - 0) & mask)];
        assert(x2668 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/OneHot/hot[4](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x2669 = arg2[187 * steps + ((cycle - 0) & mask)];
        assert(x2669 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/OneHot/hot[5](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x2670 = arg2[188 * steps + ((cycle - 0) & mask)];
        assert(x2670 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/OneHot/hot[6](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x2671 = arg2[189 * steps + ((cycle - 0) & mask)];
        assert(x2671 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/OneHot/hot[7](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x2672 = arg2[190 * steps + ((cycle - 0) & mask)];
        assert(x2672 != Fp::invalid());
        // loc("./zirgen/components/onehot.h":56:19)
        auto x2673 = x2667 * x98;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x2674 = x2668 * x81;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x2675 = x2669 * x83;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x2676 = x2670 * x71;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x2677 = x2671 * x70;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x2678 = x2672 * x69;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x2679 = x2666 + x2673;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x2680 = x2679 + x2674;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x2681 = x2680 + x2675;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x2682 = x2681 + x2676;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x2683 = x2682 + x2677;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x2684 = x2683 + x2678;
        // loc("./zirgen/components/onehot.h":50:8)
        auto x2685 = x2684 - x2650;
        // loc("./zirgen/components/onehot.h":50:8)
        assert(x2685 == 0 && "eqz failed at: ./zirgen/components/onehot.h:50");
      }
      {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":65:68))
        auto x2686 = arg2[183 * steps + ((cycle - 0) & mask)];
        assert(x2686 != Fp::invalid());
        if (x2686 != 0) {
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:7)
          auto x2687 = x2600 * x65;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:7)
          auto x2688 = x2602 * x47;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":100:7)
          auto x2689 = x2602 * x97;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:21)
          auto x2690 = x2645 * x68;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:21)
          auto x2691 = x2605 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:35)
          auto x2692 = x2603 * x98;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:51)
          auto x2693 = x2635 * x98;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:36)
          auto x2694 = x2633 * x68;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:7)
          auto x2695 = x2687 + x2691;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:7)
          auto x2696 = x2688 + x2690;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:7)
          auto x2697 = x2695 + x2694;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:7)
          auto x2698 = x2696 + x2692;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:7)
          auto x2699 = x2697 + x2693;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:7)
          auto x2700 = x2698 + x2601;
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[191 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2699);
            reg = x2699;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[192 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2700);
            reg = x2700;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[193 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2689);
            reg = x2689;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[194 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2689);
            reg = x2689;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:3)
          {
            auto& reg = arg2[195 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:3)
          {
            auto& reg = arg2[196 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":38:5)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":39:5)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x94);
            reg = x94;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":40:5)
          {
            auto& reg = arg2[199 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":63:3)
          {
            auto& reg = arg2[200 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x66);
            reg = x66;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/OneHot/hot[1](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":66:68))
        auto x2701 = arg2[184 * steps + ((cycle - 0) & mask)];
        assert(x2701 != Fp::invalid());
        if (x2701 != 0) {
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:7)
          auto x2702 = x2600 * x65;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:7)
          auto x2703 = x2602 * x47;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":100:7)
          auto x2704 = x2602 * x97;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:21)
          auto x2705 = x2645 * x68;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:21)
          auto x2706 = x2605 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:35)
          auto x2707 = x2603 * x98;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:51)
          auto x2708 = x2635 * x98;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:36)
          auto x2709 = x2633 * x68;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:7)
          auto x2710 = x2702 + x2706;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:7)
          auto x2711 = x2703 + x2705;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:7)
          auto x2712 = x2710 + x2709;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:7)
          auto x2713 = x2711 + x2707;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:7)
          auto x2714 = x2712 + x2708;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:7)
          auto x2715 = x2713 + x2601;
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[191 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2714);
            reg = x2714;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[192 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2715);
            reg = x2715;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[193 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2704);
            reg = x2704;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[194 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2704);
            reg = x2704;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:3)
          {
            auto& reg = arg2[195 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:3)
          {
            auto& reg = arg2[196 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":38:5)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":39:5)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x94);
            reg = x94;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":40:5)
          {
            auto& reg = arg2[199 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":63:3)
          {
            auto& reg = arg2[200 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x66);
            reg = x66;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/OneHot/hot[2](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":67:68))
        auto x2716 = arg2[185 * steps + ((cycle - 0) & mask)];
        assert(x2716 != Fp::invalid());
        if (x2716 != 0) {
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:7)
          auto x2717 = x2600 * x65;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:7)
          auto x2718 = x2602 * x47;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":100:7)
          auto x2719 = x2602 * x97;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:21)
          auto x2720 = x2645 * x68;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:21)
          auto x2721 = x2605 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:35)
          auto x2722 = x2603 * x98;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:51)
          auto x2723 = x2635 * x98;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:36)
          auto x2724 = x2633 * x68;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:7)
          auto x2725 = x2717 + x2721;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:7)
          auto x2726 = x2718 + x2720;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:7)
          auto x2727 = x2725 + x2724;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:7)
          auto x2728 = x2726 + x2722;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:7)
          auto x2729 = x2727 + x2723;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:7)
          auto x2730 = x2728 + x2601;
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[191 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2729);
            reg = x2729;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[192 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2730);
            reg = x2730;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[193 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2719);
            reg = x2719;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[194 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2719);
            reg = x2719;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:3)
          {
            auto& reg = arg2[195 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:3)
          {
            auto& reg = arg2[196 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":38:5)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":39:5)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x94);
            reg = x94;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":40:5)
          {
            auto& reg = arg2[199 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":63:3)
          {
            auto& reg = arg2[200 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x66);
            reg = x66;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/OneHot/hot[3](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":68:68))
        auto x2731 = arg2[186 * steps + ((cycle - 0) & mask)];
        assert(x2731 != Fp::invalid());
        if (x2731 != 0) {
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":116:7)
          auto x2732 = x2600 * x65;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":118:7)
          auto x2733 = x2602 * x47;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":51:10)
          auto x2734 = x2604 * x72;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":119:7)
          auto x2735 = x2602 * x97;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":117:39)
          auto x2736 = x2620 * x68;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":116:21)
          auto x2737 = x2605 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":117:54)
          auto x2738 = x2603 * x98;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":116:7)
          auto x2739 = x2732 + x2737;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":118:7)
          auto x2740 = x2733 + x2624;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":118:7)
          auto x2741 = x2740 + x2621;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":51:10)
          auto x2742 = x2734 + x2626;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":116:7)
          auto x2743 = x2739 + x2742;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":116:7)
          auto x2744 = x2743 - x2620;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":117:7)
          auto x2745 = x2641 + x2736;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":117:7)
          auto x2746 = x2745 + x2738;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":117:7)
          auto x2747 = x2746 + x2601;
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[191 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2744);
            reg = x2744;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[192 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2747);
            reg = x2747;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[193 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2741);
            reg = x2741;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[194 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2735);
            reg = x2735;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:3)
          {
            auto& reg = arg2[195 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:3)
          {
            auto& reg = arg2[196 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":33:5)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":34:5)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":35:5)
          {
            auto& reg = arg2[199 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":63:3)
          {
            auto& reg = arg2[200 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x66);
            reg = x66;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/OneHot/hot[4](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":69:68))
        auto x2748 = arg2[187 * steps + ((cycle - 0) & mask)];
        assert(x2748 != Fp::invalid());
        if (x2748 != 0) {
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
          auto x2749 = x2600 * x65;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
          auto x2750 = x2602 * x53;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":51:10)
          auto x2751 = x2604 * x72;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":82:7)
          auto x2752 = x2602 * x97;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:21)
          auto x2753 = x2605 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:21)
          auto x2754 = x2603 * x98;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
          auto x2755 = x2749 + x2753;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
          auto x2756 = x2750 + x2754;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
          auto x2757 = x2756 + x2601;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":51:10)
          auto x2758 = x2751 + x2626;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
          auto x2759 = x2755 + x2758;
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[191 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2759);
            reg = x2759;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[192 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2757);
            reg = x2757;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[193 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2752);
            reg = x2752;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[194 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2752);
            reg = x2752;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:3)
          {
            auto& reg = arg2[195 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:3)
          {
            auto& reg = arg2[196 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":33:5)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":34:5)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":35:5)
          {
            auto& reg = arg2[199 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":63:3)
          {
            auto& reg = arg2[200 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x66);
            reg = x66;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/OneHot/hot[5](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":70:68))
        auto x2760 = arg2[188 * steps + ((cycle - 0) & mask)];
        assert(x2760 != Fp::invalid());
        if (x2760 != 0) {
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[191 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[192 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2641);
            reg = x2641;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[193 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2629);
            reg = x2629;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[194 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2615);
            reg = x2615;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:3)
          {
            auto& reg = arg2[195 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:3)
          {
            auto& reg = arg2[196 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":58:5)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":59:5)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":60:5)
          {
            auto& reg = arg2[199 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":63:3)
          {
            auto& reg = arg2[200 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x66);
            reg = x66;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/OneHot/hot[6](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":71:68))
        auto x2761 = arg2[189 * steps + ((cycle - 0) & mask)];
        assert(x2761 != Fp::invalid());
        if (x2761 != 0) {
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[191 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[192 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2641);
            reg = x2641;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[193 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2629);
            reg = x2629;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[194 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2615);
            reg = x2615;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:3)
          {
            auto& reg = arg2[195 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:3)
          {
            auto& reg = arg2[196 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":33:5)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":34:5)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":35:5)
          {
            auto& reg = arg2[199 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":63:3)
          {
            auto& reg = arg2[200 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x66);
            reg = x66;
          }
        }
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":148:57)
      auto x2762 = x2556 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":148:39)
      auto x2763 = x52 - x2762;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":47:10)
      auto x2764 = x2619 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":47:26)
      auto x2765 = x2621 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":47:10)
      auto x2766 = x2764 + x2765;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":47:10)
      auto x2767 = x2766 + x2631;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":148:39)
      auto x2768 = x2763 + x2767;
      {
        extern_args[0] = x2768;
        extern_args[1] = x101;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x2769 = extern_outs[0];
        auto x2770 = extern_outs[1];
        auto x2771 = extern_outs[2];
        auto x2772 = extern_outs[3];
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[128 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2769);
          reg = x2769;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[129 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2770);
          reg = x2770;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[130 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2771);
          reg = x2771;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[131 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2772);
          reg = x2772;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2773 = arg2[128 * steps + ((cycle - 0) & mask)];
      assert(x2773 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2774 = arg2[129 * steps + ((cycle - 0) & mask)];
      assert(x2774 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2775 = arg2[130 * steps + ((cycle - 0) & mask)];
      assert(x2775 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2776 = arg2[131 * steps + ((cycle - 0) & mask)];
      assert(x2776 != Fp::invalid());
      // loc("zirgen/components/ram.cpp":178:3)
      {
        auto& reg = arg2[125 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2768);
        reg = x2768;
      }
      // loc("zirgen/components/ram.cpp":179:3)
      {
        auto& reg = arg2[126 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x966);
        reg = x966;
      }
      // loc("zirgen/components/ram.cpp":180:3)
      {
        auto& reg = arg2[127 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x101);
        reg = x101;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[128 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2773);
        reg = x2773;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[129 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2774);
        reg = x2774;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[130 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2775);
        reg = x2775;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[131 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2776);
        reg = x2776;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":51:10)
      auto x2777 = x2604 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":51:10)
      auto x2778 = x2777 + x2626;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":149:39)
      auto x2779 = x2763 + x2778;
      {
        extern_args[0] = x2779;
        extern_args[1] = x101;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x2780 = extern_outs[0];
        auto x2781 = extern_outs[1];
        auto x2782 = extern_outs[2];
        auto x2783 = extern_outs[3];
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2780);
          reg = x2780;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2781);
          reg = x2781;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[137 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2782);
          reg = x2782;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[138 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2783);
          reg = x2783;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2784 = arg2[135 * steps + ((cycle - 0) & mask)];
      assert(x2784 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2785 = arg2[136 * steps + ((cycle - 0) & mask)];
      assert(x2785 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2786 = arg2[137 * steps + ((cycle - 0) & mask)];
      assert(x2786 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2787 = arg2[138 * steps + ((cycle - 0) & mask)];
      assert(x2787 != Fp::invalid());
      // loc("zirgen/components/ram.cpp":178:3)
      {
        auto& reg = arg2[132 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2779);
        reg = x2779;
      }
      // loc("zirgen/components/ram.cpp":179:3)
      {
        auto& reg = arg2[133 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x966);
        reg = x966;
      }
      // loc("zirgen/components/ram.cpp":180:3)
      {
        auto& reg = arg2[134 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x101);
        reg = x101;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[135 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2784);
        reg = x2784;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[136 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2785);
        reg = x2785;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[137 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2786);
        reg = x2786;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[138 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2787);
        reg = x2787;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/ComputeControl/U32Reg/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2788 = arg2[191 * steps + ((cycle - 0) & mask)];
      assert(x2788 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/ComputeControl/U32Reg/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2789 = arg2[192 * steps + ((cycle - 0) & mask)];
      assert(x2789 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/ComputeControl/U32Reg/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2790 = arg2[193 * steps + ((cycle - 0) & mask)];
      assert(x2790 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/ComputeControl/U32Reg/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2791 = arg2[194 * steps + ((cycle - 0) & mask)];
      assert(x2791 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2792 = arg2[195 * steps + ((cycle - 0) & mask)];
      assert(x2792 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2793 = arg2[196 * steps + ((cycle - 0) & mask)];
      assert(x2793 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":121:20)
      auto x2794 = x2792 * x968;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x2795 = x2792 * x971;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x2796 = x2793 * x2788;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x2797 = x2793 * x2789;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x2798 = x2793 * x2790;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x2799 = x2793 * x2791;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":55:52)
      auto x2800 = x970 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":153:17)
      auto x2801 = x101 - x2792;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":155:17)
      auto x2802 = x101 - x2793;
      // loc("zirgen/components/u32.cpp":113:20)
      auto x2803 = x967 - x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":55:41)
      auto x2804 = x969 + x2800;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x2805 = x2801 * x2773;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x2806 = x2801 * x2774;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x2807 = x2801 * x2775;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x2808 = x2801 * x2776;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x2809 = x2802 * x2784;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x2810 = x2802 * x2785;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x2811 = x2802 * x2786;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x2812 = x2802 * x2787;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x2813 = x2792 * x2804;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x2814 = x2792 * x2803;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x2815 = x2805 + x2814;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x2816 = x2806 + x2794;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x2817 = x2807 + x2795;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x2818 = x2808 + x2813;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x2819 = x2809 + x2796;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x2820 = x2810 + x2797;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x2821 = x2811 + x2798;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x2822 = x2812 + x2799;
      {
        // loc("zirgen/components/u32.cpp":136:18)
        auto x2823 = Fp(x2818.asUInt32() & x65.asUInt32());
        // loc("zirgen/components/u32.cpp":136:17)
        auto x2824 = x2823 * x64;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[201 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2824);
          reg = x2824;
        }
        // loc("zirgen/components/u32.cpp":137:25)
        auto x2825 = Fp(x2818.asUInt32() & x54.asUInt32());
        // loc("zirgen/components/u32.cpp":137:24)
        auto x2826 = x2825 * x98;
        // loc("zirgen/components/bytes.cpp":111:3)
        {
          auto& reg = arg2[18 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2826);
          reg = x2826;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
      auto x2827 = arg2[18 * steps + ((cycle - 0) & mask)];
      assert(x2827 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/ALU/TopBit/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2828 = arg2[201 * steps + ((cycle - 0) & mask)];
      assert(x2828 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":139:19)
      auto x2829 = x2828 * x65;
      // loc("zirgen/components/u32.cpp":139:34)
      auto x2830 = x2827 * x58;
      // loc("zirgen/components/u32.cpp":139:19)
      auto x2831 = x2829 + x2830;
      // loc("zirgen/components/u32.cpp":139:6)
      auto x2832 = x2818 - x2831;
      // loc("zirgen/components/u32.cpp":139:6)
      assert(x2832 == 0 && "eqz failed at: zirgen/components/u32.cpp:139");
      {
        // loc("zirgen/components/u32.cpp":136:18)
        auto x2833 = Fp(x2822.asUInt32() & x65.asUInt32());
        // loc("zirgen/components/u32.cpp":136:17)
        auto x2834 = x2833 * x64;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[202 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2834);
          reg = x2834;
        }
        // loc("zirgen/components/u32.cpp":137:25)
        auto x2835 = Fp(x2822.asUInt32() & x54.asUInt32());
        // loc("zirgen/components/u32.cpp":137:24)
        auto x2836 = x2835 * x98;
        // loc("zirgen/components/bytes.cpp":111:3)
        {
          auto& reg = arg2[19 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2836);
          reg = x2836;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
      auto x2837 = arg2[19 * steps + ((cycle - 0) & mask)];
      assert(x2837 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/ALU/TopBit/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2838 = arg2[202 * steps + ((cycle - 0) & mask)];
      assert(x2838 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":139:19)
      auto x2839 = x2838 * x65;
      // loc("zirgen/components/u32.cpp":139:34)
      auto x2840 = x2837 * x58;
      // loc("zirgen/components/u32.cpp":139:19)
      auto x2841 = x2839 + x2840;
      // loc("zirgen/components/u32.cpp":139:6)
      auto x2842 = x2822 - x2841;
      // loc("zirgen/components/u32.cpp":139:6)
      assert(x2842 == 0 && "eqz failed at: zirgen/components/u32.cpp:139");
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[203 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2819);
        reg = x2819;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[204 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2820);
        reg = x2820;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[205 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2821);
        reg = x2821;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[206 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2822);
        reg = x2822;
      }
      {
        // loc("zirgen/components/u32.cpp":129:20)
        auto x2843 = Fp(x2815.asUInt32() & x2819.asUInt32());
        // loc("zirgen/components/u32.cpp":129:20)
        auto x2844 = Fp(x2816.asUInt32() & x2820.asUInt32());
        // loc("zirgen/components/u32.cpp":129:20)
        auto x2845 = Fp(x2817.asUInt32() & x2821.asUInt32());
        // loc("zirgen/components/u32.cpp":129:20)
        auto x2846 = Fp(x2818.asUInt32() & x2822.asUInt32());
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[207 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2843);
          reg = x2843;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[208 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2844);
          reg = x2844;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[209 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2845);
          reg = x2845;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[210 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2846);
          reg = x2846;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2847 = arg2[197 * steps + ((cycle - 0) & mask)];
      assert(x2847 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2848 = arg2[198 * steps + ((cycle - 0) & mask)];
      assert(x2848 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2849 = arg2[199 * steps + ((cycle - 0) & mask)];
      assert(x2849 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/ALU/U32Reg/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2850 = arg2[207 * steps + ((cycle - 0) & mask)];
      assert(x2850 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/ALU/U32Reg/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2851 = arg2[208 * steps + ((cycle - 0) & mask)];
      assert(x2851 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/ALU/U32Reg/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2852 = arg2[209 * steps + ((cycle - 0) & mask)];
      assert(x2852 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/ALU/U32Reg/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2853 = arg2[210 * steps + ((cycle - 0) & mask)];
      assert(x2853 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":121:20)
      auto x2854 = x2847 * x2815;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x2855 = x2847 * x2816;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x2856 = x2847 * x2817;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x2857 = x2847 * x2818;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x2858 = x2848 * x2819;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x2859 = x2848 * x2820;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x2860 = x2848 * x2821;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x2861 = x2848 * x2822;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x2862 = x2849 * x2850;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x2863 = x2849 * x2851;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x2864 = x2849 * x2852;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x2865 = x2849 * x2853;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x2866 = x2854 + x95;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x2867 = x2855 + x97;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x2868 = x2856 + x97;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x2869 = x2857 + x97;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x2870 = x2866 + x2858;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x2871 = x2867 + x2859;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x2872 = x2868 + x2860;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x2873 = x2869 + x2861;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x2874 = x2872 + x2864;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x2875 = x2870 + x2862;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x2876 = x2871 + x2863;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x2877 = x2873 + x2865;
      // loc("zirgen/components/u32.cpp":162:29)
      auto x2878 = x2876 * x95;
      // loc("zirgen/components/u32.cpp":162:15)
      auto x2879 = x2875 + x2878;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x2880 = Fp(x2879.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[20 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2880);
          reg = x2880;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x2881 = arg2[20 * steps + ((cycle - 0) & mask)];
      assert(x2881 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x2882 = x2879 - x2881;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x2883 = x2882 * x96;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x2884 = Fp(x2883.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[21 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2884);
          reg = x2884;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x2885 = arg2[21 * steps + ((cycle - 0) & mask)];
      assert(x2885 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x2886 = x2883 - x2885;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x2887 = x2886 * x96;
      // loc("./zirgen/components/bits.h":78:23)
      {
        auto& reg = arg2[83 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2887);
        reg = x2887;
      }
      // loc("zirgen/components/u32.cpp":164:41)
      auto x2888 = x2877 * x95;
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/ALU/U32Normalize/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2889 = arg2[83 * steps + ((cycle - 0) & mask)];
      assert(x2889 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":164:16)
      auto x2890 = x2889 + x2874;
      // loc("zirgen/components/u32.cpp":164:16)
      auto x2891 = x2890 + x2888;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x2892 = Fp(x2891.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[22 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2892);
          reg = x2892;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x2893 = arg2[22 * steps + ((cycle - 0) & mask)];
      assert(x2893 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x2894 = x2891 - x2893;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x2895 = x2894 * x96;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x2896 = Fp(x2895.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[23 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2896);
          reg = x2896;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x2897 = arg2[23 * steps + ((cycle - 0) & mask)];
      assert(x2897 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x2898 = x2895 - x2897;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x2899 = x2898 * x96;
      // loc("./zirgen/components/bits.h":78:23)
      {
        auto& reg = arg2[84 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2899);
        reg = x2899;
      }
      {
        // loc("zirgen/components/u32.cpp":136:18)
        auto x2900 = Fp(x2897.asUInt32() & x65.asUInt32());
        // loc("zirgen/components/u32.cpp":136:17)
        auto x2901 = x2900 * x64;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[211 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2901);
          reg = x2901;
        }
        // loc("zirgen/components/u32.cpp":137:25)
        auto x2902 = Fp(x2897.asUInt32() & x54.asUInt32());
        // loc("zirgen/components/u32.cpp":137:24)
        auto x2903 = x2902 * x98;
        // loc("zirgen/components/bytes.cpp":111:3)
        {
          auto& reg = arg2[24 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2903);
          reg = x2903;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/ALU/TopBit/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2904 = arg2[211 * steps + ((cycle - 0) & mask)];
      assert(x2904 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
      auto x2905 = arg2[24 * steps + ((cycle - 0) & mask)];
      assert(x2905 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":139:19)
      auto x2906 = x2904 * x65;
      // loc("zirgen/components/u32.cpp":139:34)
      auto x2907 = x2905 * x58;
      // loc("zirgen/components/u32.cpp":139:19)
      auto x2908 = x2906 + x2907;
      // loc("zirgen/components/u32.cpp":139:6)
      auto x2909 = x2897 - x2908;
      // loc("zirgen/components/u32.cpp":139:6)
      assert(x2909 == 0 && "eqz failed at: zirgen/components/u32.cpp:139");
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":79:45)
      auto x2910 = x101 - x2828;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":79:23)
      auto x2911 = x101 - x2838;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":79:34)
      auto x2912 = x101 - x2904;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":79:17)
      auto x2913 = x2828 * x2911;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":79:17)
      auto x2914 = x2913 * x2912;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":79:44)
      auto x2915 = x2910 * x2838;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":79:44)
      auto x2916 = x2915 * x2904;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":79:17)
      auto x2917 = x2914 + x2916;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":79:3)
      {
        auto& reg = arg2[212 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2917);
        reg = x2917;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/ALU/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x2918 = arg2[212 * steps + ((cycle - 0) & mask)];
      assert(x2918 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":81:27)
      auto x2919 = x2918 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":81:27)
      auto x2920 = x2919 * x2904;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":81:11)
      auto x2921 = x2918 + x2904;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":81:11)
      auto x2922 = x2921 - x2920;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":81:3)
      {
        auto& reg = arg2[213 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2922);
        reg = x2922;
      }
      // loc("zirgen/components/u32.cpp":153:26)
      auto x2923 = x2885 * x95;
      // loc("zirgen/components/u32.cpp":153:12)
      auto x2924 = x2881 + x2923;
      {
        // loc("zirgen/components/iszero.cpp":21:24)
        auto x2925 = (x2924 == 0) ? Fp(1) : Fp(0);
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[214 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2925);
          reg = x2925;
        }
        // loc("zirgen/components/iszero.cpp":22:21)
        auto x2926 = inv(x2924);
        // loc("zirgen/components/iszero.cpp":22:5)
        {
          auto& reg = arg2[215 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2926);
          reg = x2926;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/ALU/IsZeroU32/IsZero/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2927 = arg2[214 * steps + ((cycle - 0) & mask)];
      assert(x2927 != Fp::invalid());
      if (x2927 != 0) {
        // loc("zirgen/components/iszero.cpp":26:23)
        assert(x2924 == 0 && "eqz failed at: zirgen/components/iszero.cpp:26");
      }
      // loc("zirgen/components/iszero.cpp":28:19)
      auto x2928 = x101 - x2927;
      if (x2928 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/ALU/IsZeroU32/IsZero/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x2929 = arg2[215 * steps + ((cycle - 0) & mask)];
        assert(x2929 != Fp::invalid());
        // loc("zirgen/components/iszero.cpp":28:26)
        auto x2930 = x2924 * x2929;
        // loc("zirgen/components/iszero.cpp":28:26)
        auto x2931 = x2930 - x101;
        // loc("zirgen/components/iszero.cpp":28:26)
        assert(x2931 == 0 && "eqz failed at: zirgen/components/iszero.cpp:28");
      }
      // loc("zirgen/components/u32.cpp":154:27)
      auto x2932 = x2897 * x95;
      // loc("zirgen/components/u32.cpp":154:13)
      auto x2933 = x2893 + x2932;
      // loc("zirgen/components/u32.cpp":154:47)
      auto x2934 = x2928 * x82;
      // loc("zirgen/components/u32.cpp":154:13)
      auto x2935 = x2933 + x2934;
      {
        // loc("zirgen/components/iszero.cpp":21:24)
        auto x2936 = (x2935 == 0) ? Fp(1) : Fp(0);
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[216 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2936);
          reg = x2936;
        }
        // loc("zirgen/components/iszero.cpp":22:21)
        auto x2937 = inv(x2935);
        // loc("zirgen/components/iszero.cpp":22:5)
        {
          auto& reg = arg2[217 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2937);
          reg = x2937;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/ALU/IsZeroU32/IsZero/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2938 = arg2[216 * steps + ((cycle - 0) & mask)];
      assert(x2938 != Fp::invalid());
      if (x2938 != 0) {
        // loc("zirgen/components/iszero.cpp":26:23)
        assert(x2935 == 0 && "eqz failed at: zirgen/components/iszero.cpp:26");
      }
      // loc("zirgen/components/iszero.cpp":28:19)
      auto x2939 = x101 - x2938;
      if (x2939 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/ALU/IsZeroU32/IsZero/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x2940 = arg2[217 * steps + ((cycle - 0) & mask)];
        assert(x2940 != Fp::invalid());
        // loc("zirgen/components/iszero.cpp":28:26)
        auto x2941 = x2935 * x2940;
        // loc("zirgen/components/iszero.cpp":28:26)
        auto x2942 = x2941 - x101;
        // loc("zirgen/components/iszero.cpp":28:26)
        assert(x2942 == 0 && "eqz failed at: zirgen/components/iszero.cpp:28");
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/ALU/U32Normalize/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2943 = arg2[84 * steps + ((cycle - 0) & mask)];
      assert(x2943 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/ALU/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2944 = arg2[213 * steps + ((cycle - 0) & mask)];
      assert(x2944 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":107:10)
      auto x2945 = x101 - x2943;
      extern_args[0] = x2788;
      extern_args[1] = x2789;
      extern_args[2] = x2790;
      extern_args[3] = x2791;
      extern_args[4] = x2767;
      extern_args[5] = x2773;
      extern_args[6] = x2774;
      extern_args[7] = x2775;
      extern_args[8] = x2776;
      extern_args[9] = x2778;
      extern_args[10] = x2784;
      extern_args[11] = x2785;
      extern_args[12] = x2786;
      extern_args[13] = x2787;
      extern_args[14] = x2815;
      extern_args[15] = x2816;
      extern_args[16] = x2817;
      extern_args[17] = x2818;
      extern_args[18] = x2819;
      extern_args[19] = x2820;
      extern_args[20] = x2821;
      extern_args[21] = x2822;
      extern_args[22] = x2881;
      extern_args[23] = x2885;
      extern_args[24] = x2893;
      extern_args[25] = x2897;
      extern_args[26] = x2938;
      extern_args[27] = x2944;
      extern_args[28] = x2945;
      extern_log(ctx, cycle, "  imm=%w, rs1=x%u -> %w, rs2=x%u -> %w, inA = %w, inB = %w, ALU output = %w, EQ:%u, LT:%u, LTU:%u", extern_args, extern_outs);
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":55:10)
      auto x2946 = x2633 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":55:25)
      auto x2947 = x2635 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":55:10)
      auto x2948 = x2946 + x2947;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":55:10)
      auto x2949 = x2948 + x2645;
      {
        // loc("zirgen/components/iszero.cpp":21:24)
        auto x2950 = (x2949 == 0) ? Fp(1) : Fp(0);
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[218 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2950);
          reg = x2950;
        }
        // loc("zirgen/components/iszero.cpp":22:21)
        auto x2951 = inv(x2949);
        // loc("zirgen/components/iszero.cpp":22:5)
        {
          auto& reg = arg2[219 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2951);
          reg = x2951;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/IsZero/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x2952 = arg2[218 * steps + ((cycle - 0) & mask)];
      assert(x2952 != Fp::invalid());
      if (x2952 != 0) {
        // loc("zirgen/components/iszero.cpp":26:23)
        assert(x2949 == 0 && "eqz failed at: zirgen/components/iszero.cpp:26");
      }
      // loc("zirgen/components/iszero.cpp":28:19)
      auto x2953 = x101 - x2952;
      if (x2953 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/IsZero/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x2954 = arg2[219 * steps + ((cycle - 0) & mask)];
        assert(x2954 != Fp::invalid());
        // loc("zirgen/components/iszero.cpp":28:26)
        auto x2955 = x2949 * x2954;
        // loc("zirgen/components/iszero.cpp":28:26)
        auto x2956 = x2955 - x101;
        // loc("zirgen/components/iszero.cpp":28:26)
        assert(x2956 == 0 && "eqz failed at: zirgen/components/iszero.cpp:28");
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":175:13)
      auto x2957 = x980 + x83;
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":65:68))
      auto x2958 = arg2[183 * steps + ((cycle - 0) & mask)];
      assert(x2958 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":81:17)
      auto x2959 = x2791 * x50;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":186:13)
      auto x2960 = x2944 * x2957;
      // loc("zirgen/components/u32.cpp":78:25)
      auto x2961 = x2789 * x95;
      // loc("zirgen/components/u32.cpp":78:49)
      auto x2962 = x2790 * x82;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":181:57)
      auto x2963 = x2893 * x82;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":182:14)
      auto x2964 = x2897 * x84;
      // loc("zirgen/components/u32.cpp":81:16)
      auto x2965 = x2959 * x51;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":186:35)
      auto x2966 = x101 - x2944;
      // loc("zirgen/components/u32.cpp":78:13)
      auto x2967 = x2788 + x2961;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":188:14)
      auto x2968 = x2945 * x2957;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":187:38)
      auto x2969 = x101 - x2945;
      // loc("zirgen/components/u32.cpp":78:13)
      auto x2970 = x2967 + x2962;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":181:13)
      auto x2971 = x2924 + x2963;
      // loc("zirgen/components/u32.cpp":81:10)
      auto x2972 = x2970 + x2965;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":176:14)
      auto x2973 = x980 + x2972;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":187:14)
      auto x2974 = x2945 * x2973;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":186:34)
      auto x2975 = x2966 * x2973;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":188:36)
      auto x2976 = x2969 * x2973;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":187:37)
      auto x2977 = x2969 * x2957;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":181:13)
      auto x2978 = x2971 + x2964;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":186:13)
      auto x2979 = x2960 + x2975;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":187:14)
      auto x2980 = x2974 + x2977;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":188:14)
      auto x2981 = x2968 + x2976;
      if (x2958 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":65:68)
        auto x2982 = x2646 - x46;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":65:68)
        assert(x2982 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:65");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":65:68)
        auto x2983 = x2639 - x71;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":65:68)
        assert(x2983 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:65");
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:7)
        auto x2984 = x2600 * x65;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:7)
        auto x2985 = x2602 * x47;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":100:7)
        auto x2986 = x2602 * x97;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:21)
        auto x2987 = x2645 * x68;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:21)
        auto x2988 = x2605 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:35)
        auto x2989 = x2603 * x98;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:7)
        auto x2990 = x2984 + x2988;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:7)
        auto x2991 = x2985 + x2987;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:7)
        auto x2992 = x2990 + x2946;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:7)
        auto x2993 = x2991 + x2989;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:7)
        auto x2994 = x2992 + x2947;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:7)
        auto x2995 = x2993 + x2601;
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[191 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2994);
          reg = x2994;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[192 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2995);
          reg = x2995;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[193 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2986);
          reg = x2986;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[194 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2986);
          reg = x2986;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:3)
        {
          auto& reg = arg2[195 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:3)
        {
          auto& reg = arg2[196 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":38:5)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":39:5)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x94);
          reg = x94;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":40:5)
        {
          auto& reg = arg2[199 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":63:3)
        {
          auto& reg = arg2[200 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x66);
          reg = x66;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":34:23)
        auto x2996 = x2979 + x83;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x2997 = Fp(x2996.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2997);
            reg = x2997;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x2998 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x2998 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x2999 = x2996 - x2998;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x3000 = x2999 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x3001 = Fp(x3000.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3001);
            reg = x3001;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x3002 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x3002 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x3003 = x3000 - x3002;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x3004 = x3003 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x3005 = Fp(x3004.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3005);
            reg = x3005;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x3006 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x3006 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x3007 = x3004 - x3006;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x3008 = x3007 * x96;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":37:26)
          auto x3009 = Fp(x3008.asUInt32() & x81.asUInt32());
          // loc("./zirgen/components/bits.h":78:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3009);
            reg = x3009;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[0](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x3010 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x3010 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:18)
        auto x3011 = x3008 - x3010;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:17)
        auto x3012 = x3011 * x80;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3012);
          reg = x3012;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x3013 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x3013 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:23)
        auto x3014 = x101 - x3013;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:15)
        auto x3015 = x3013 * x3014;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3015);
          reg = x3015;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:17)
        auto x3016 = x98 - x3013;
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x3017 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x3017 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        auto x3018 = x3017 * x3016;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        assert(x3018 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:43");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x3019 = arg2[200 * steps + ((cycle - 0) & mask)];
        assert(x3019 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":65:68)
        {
          auto& reg = arg2[100 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3019);
          reg = x3019;
        }
        if (x100 != 0) {
          extern_args[0] = x2949;
          extern_args[1] = x2881;
          extern_args[2] = x2885;
          extern_args[3] = x2893;
          extern_args[4] = x2897;
          extern_log(ctx, cycle, "  Writing to rd=x%u, val = %w", extern_args, extern_outs);
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":65:68)
          auto x3020 = x2763 + x2949;
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2881);
            reg = x2881;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2885);
            reg = x2885;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2893);
            reg = x2893;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2897);
            reg = x2897;
          }
          {
            extern_args[0] = x3020;
            extern_args[1] = x2881;
            extern_args[2] = x2885;
            extern_args[3] = x2893;
            extern_args[4] = x2897;
            extern_args[5] = x98;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x3021 = arg2[142 * steps + ((cycle - 0) & mask)];
          assert(x3021 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x3022 = arg2[143 * steps + ((cycle - 0) & mask)];
          assert(x3022 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x3023 = arg2[144 * steps + ((cycle - 0) & mask)];
          assert(x3023 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x3024 = arg2[145 * steps + ((cycle - 0) & mask)];
          assert(x3024 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":178:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3020);
            reg = x3020;
          }
          // loc("zirgen/components/ram.cpp":179:3)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x966);
            reg = x966;
          }
          // loc("zirgen/components/ram.cpp":180:3)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x98);
            reg = x98;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3021);
            reg = x3021;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3022);
            reg = x3022;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3023);
            reg = x3023;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3024);
            reg = x3024;
          }
        }
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":65:68)
        auto x3025 = x2952 + x101;
        if (x3025 != 0) {
          // loc("zirgen/components/ram.cpp":53:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":54:3)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":55:3)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/OneHot/hot[1](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":66:68))
      auto x3026 = arg2[184 * steps + ((cycle - 0) & mask)];
      assert(x3026 != Fp::invalid());
      if (x3026 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":66:68)
        auto x3027 = x2646 - x46;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":66:68)
        assert(x3027 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:66");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":66:68)
        auto x3028 = x2639 - x70;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":66:68)
        assert(x3028 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:66");
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:7)
        auto x3029 = x2600 * x65;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:7)
        auto x3030 = x2602 * x47;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":100:7)
        auto x3031 = x2602 * x97;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:21)
        auto x3032 = x2645 * x68;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:21)
        auto x3033 = x2605 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:35)
        auto x3034 = x2603 * x98;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:7)
        auto x3035 = x3029 + x3033;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:7)
        auto x3036 = x3030 + x3032;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:7)
        auto x3037 = x3035 + x2946;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:7)
        auto x3038 = x3036 + x3034;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:7)
        auto x3039 = x3037 + x2947;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:7)
        auto x3040 = x3038 + x2601;
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[191 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3039);
          reg = x3039;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[192 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3040);
          reg = x3040;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[193 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3031);
          reg = x3031;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[194 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3031);
          reg = x3031;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:3)
        {
          auto& reg = arg2[195 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:3)
        {
          auto& reg = arg2[196 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":38:5)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":39:5)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x94);
          reg = x94;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":40:5)
        {
          auto& reg = arg2[199 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":63:3)
        {
          auto& reg = arg2[200 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x66);
          reg = x66;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":34:23)
        auto x3041 = x2980 + x83;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x3042 = Fp(x3041.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3042);
            reg = x3042;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x3043 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x3043 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x3044 = x3041 - x3043;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x3045 = x3044 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x3046 = Fp(x3045.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3046);
            reg = x3046;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x3047 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x3047 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x3048 = x3045 - x3047;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x3049 = x3048 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x3050 = Fp(x3049.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3050);
            reg = x3050;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x3051 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x3051 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x3052 = x3049 - x3051;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x3053 = x3052 * x96;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":37:26)
          auto x3054 = Fp(x3053.asUInt32() & x81.asUInt32());
          // loc("./zirgen/components/bits.h":78:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3054);
            reg = x3054;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[0](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x3055 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x3055 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:18)
        auto x3056 = x3053 - x3055;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:17)
        auto x3057 = x3056 * x80;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3057);
          reg = x3057;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x3058 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x3058 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:23)
        auto x3059 = x101 - x3058;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:15)
        auto x3060 = x3058 * x3059;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3060);
          reg = x3060;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:17)
        auto x3061 = x98 - x3058;
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x3062 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x3062 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        auto x3063 = x3062 * x3061;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        assert(x3063 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:43");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x3064 = arg2[200 * steps + ((cycle - 0) & mask)];
        assert(x3064 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":66:68)
        {
          auto& reg = arg2[100 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3064);
          reg = x3064;
        }
        if (x100 != 0) {
          extern_args[0] = x2949;
          extern_args[1] = x2881;
          extern_args[2] = x2885;
          extern_args[3] = x2893;
          extern_args[4] = x2897;
          extern_log(ctx, cycle, "  Writing to rd=x%u, val = %w", extern_args, extern_outs);
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":66:68)
          auto x3065 = x2763 + x2949;
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2881);
            reg = x2881;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2885);
            reg = x2885;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2893);
            reg = x2893;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2897);
            reg = x2897;
          }
          {
            extern_args[0] = x3065;
            extern_args[1] = x2881;
            extern_args[2] = x2885;
            extern_args[3] = x2893;
            extern_args[4] = x2897;
            extern_args[5] = x98;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x3066 = arg2[142 * steps + ((cycle - 0) & mask)];
          assert(x3066 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x3067 = arg2[143 * steps + ((cycle - 0) & mask)];
          assert(x3067 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x3068 = arg2[144 * steps + ((cycle - 0) & mask)];
          assert(x3068 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x3069 = arg2[145 * steps + ((cycle - 0) & mask)];
          assert(x3069 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":178:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3065);
            reg = x3065;
          }
          // loc("zirgen/components/ram.cpp":179:3)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x966);
            reg = x966;
          }
          // loc("zirgen/components/ram.cpp":180:3)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x98);
            reg = x98;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3066);
            reg = x3066;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3067);
            reg = x3067;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3068);
            reg = x3068;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3069);
            reg = x3069;
          }
        }
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":66:68)
        auto x3070 = x2952 + x101;
        if (x3070 != 0) {
          // loc("zirgen/components/ram.cpp":53:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":54:3)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":55:3)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/OneHot/hot[2](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":67:68))
      auto x3071 = arg2[185 * steps + ((cycle - 0) & mask)];
      assert(x3071 != Fp::invalid());
      if (x3071 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":67:68)
        auto x3072 = x2646 - x46;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":67:68)
        assert(x3072 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:67");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":67:68)
        auto x3073 = x2639 - x69;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":67:68)
        assert(x3073 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:67");
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:7)
        auto x3074 = x2600 * x65;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:7)
        auto x3075 = x2602 * x47;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":100:7)
        auto x3076 = x2602 * x97;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:21)
        auto x3077 = x2645 * x68;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:21)
        auto x3078 = x2605 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:35)
        auto x3079 = x2603 * x98;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:7)
        auto x3080 = x3074 + x3078;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:7)
        auto x3081 = x3075 + x3077;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:7)
        auto x3082 = x3080 + x2946;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:7)
        auto x3083 = x3081 + x3079;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":98:7)
        auto x3084 = x3082 + x2947;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":99:7)
        auto x3085 = x3083 + x2601;
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[191 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3084);
          reg = x3084;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[192 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3085);
          reg = x3085;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[193 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3076);
          reg = x3076;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[194 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3076);
          reg = x3076;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:3)
        {
          auto& reg = arg2[195 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:3)
        {
          auto& reg = arg2[196 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":38:5)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":39:5)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x94);
          reg = x94;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":40:5)
        {
          auto& reg = arg2[199 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":63:3)
        {
          auto& reg = arg2[200 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x66);
          reg = x66;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":34:23)
        auto x3086 = x2981 + x83;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x3087 = Fp(x3086.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3087);
            reg = x3087;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x3088 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x3088 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x3089 = x3086 - x3088;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x3090 = x3089 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x3091 = Fp(x3090.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3091);
            reg = x3091;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x3092 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x3092 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x3093 = x3090 - x3092;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x3094 = x3093 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x3095 = Fp(x3094.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3095);
            reg = x3095;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x3096 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x3096 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x3097 = x3094 - x3096;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x3098 = x3097 * x96;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":37:26)
          auto x3099 = Fp(x3098.asUInt32() & x81.asUInt32());
          // loc("./zirgen/components/bits.h":78:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3099);
            reg = x3099;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[0](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x3100 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x3100 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:18)
        auto x3101 = x3098 - x3100;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:17)
        auto x3102 = x3101 * x80;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3102);
          reg = x3102;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x3103 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x3103 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:23)
        auto x3104 = x101 - x3103;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:15)
        auto x3105 = x3103 * x3104;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3105);
          reg = x3105;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:17)
        auto x3106 = x98 - x3103;
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x3107 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x3107 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        auto x3108 = x3107 * x3106;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        assert(x3108 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:43");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x3109 = arg2[200 * steps + ((cycle - 0) & mask)];
        assert(x3109 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":67:68)
        {
          auto& reg = arg2[100 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3109);
          reg = x3109;
        }
        if (x100 != 0) {
          extern_args[0] = x2949;
          extern_args[1] = x2881;
          extern_args[2] = x2885;
          extern_args[3] = x2893;
          extern_args[4] = x2897;
          extern_log(ctx, cycle, "  Writing to rd=x%u, val = %w", extern_args, extern_outs);
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":67:68)
          auto x3110 = x2763 + x2949;
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2881);
            reg = x2881;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2885);
            reg = x2885;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2893);
            reg = x2893;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2897);
            reg = x2897;
          }
          {
            extern_args[0] = x3110;
            extern_args[1] = x2881;
            extern_args[2] = x2885;
            extern_args[3] = x2893;
            extern_args[4] = x2897;
            extern_args[5] = x98;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x3111 = arg2[142 * steps + ((cycle - 0) & mask)];
          assert(x3111 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x3112 = arg2[143 * steps + ((cycle - 0) & mask)];
          assert(x3112 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x3113 = arg2[144 * steps + ((cycle - 0) & mask)];
          assert(x3113 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x3114 = arg2[145 * steps + ((cycle - 0) & mask)];
          assert(x3114 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":178:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3110);
            reg = x3110;
          }
          // loc("zirgen/components/ram.cpp":179:3)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x966);
            reg = x966;
          }
          // loc("zirgen/components/ram.cpp":180:3)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x98);
            reg = x98;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3111);
            reg = x3111;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3112);
            reg = x3112;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3113);
            reg = x3113;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3114);
            reg = x3114;
          }
        }
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":67:68)
        auto x3115 = x2952 + x101;
        if (x3115 != 0) {
          // loc("zirgen/components/ram.cpp":53:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":54:3)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":55:3)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/OneHot/hot[3](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":68:68))
      auto x3116 = arg2[186 * steps + ((cycle - 0) & mask)];
      assert(x3116 != Fp::invalid());
      if (x3116 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":68:68)
        auto x3117 = x2646 - x45;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":68:68)
        assert(x3117 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:68");
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":116:7)
        auto x3118 = x2600 * x65;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":118:7)
        auto x3119 = x2602 * x47;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":119:7)
        auto x3120 = x2602 * x97;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":117:39)
        auto x3121 = x2620 * x68;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":116:21)
        auto x3122 = x2605 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":117:54)
        auto x3123 = x2603 * x98;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":116:7)
        auto x3124 = x3118 + x3122;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":118:7)
        auto x3125 = x3119 + x2624;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":118:7)
        auto x3126 = x3125 + x2621;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":116:7)
        auto x3127 = x3124 + x2778;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":116:7)
        auto x3128 = x3127 - x2620;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":117:7)
        auto x3129 = x2641 + x3121;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":117:7)
        auto x3130 = x3129 + x3123;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":117:7)
        auto x3131 = x3130 + x2601;
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[191 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3128);
          reg = x3128;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[192 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3131);
          reg = x3131;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[193 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3126);
          reg = x3126;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[194 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3120);
          reg = x3120;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:3)
        {
          auto& reg = arg2[195 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:3)
        {
          auto& reg = arg2[196 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":33:5)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":34:5)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":35:5)
        {
          auto& reg = arg2[199 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":63:3)
        {
          auto& reg = arg2[200 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x66);
          reg = x66;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":34:23)
        auto x3132 = x2973 + x83;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x3133 = Fp(x3132.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3133);
            reg = x3133;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x3134 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x3134 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x3135 = x3132 - x3134;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x3136 = x3135 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x3137 = Fp(x3136.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3137);
            reg = x3137;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x3138 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x3138 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x3139 = x3136 - x3138;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x3140 = x3139 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x3141 = Fp(x3140.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3141);
            reg = x3141;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x3142 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x3142 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x3143 = x3140 - x3142;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x3144 = x3143 * x96;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":37:26)
          auto x3145 = Fp(x3144.asUInt32() & x81.asUInt32());
          // loc("./zirgen/components/bits.h":78:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3145);
            reg = x3145;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[0](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x3146 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x3146 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:18)
        auto x3147 = x3144 - x3146;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:17)
        auto x3148 = x3147 * x80;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3148);
          reg = x3148;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x3149 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x3149 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:23)
        auto x3150 = x101 - x3149;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:15)
        auto x3151 = x3149 * x3150;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3151);
          reg = x3151;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:17)
        auto x3152 = x98 - x3149;
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x3153 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x3153 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        auto x3154 = x3153 * x3152;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        assert(x3154 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:43");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x3155 = arg2[200 * steps + ((cycle - 0) & mask)];
        assert(x3155 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":68:68)
        {
          auto& reg = arg2[100 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3155);
          reg = x3155;
        }
        if (x2953 != 0) {
          extern_args[0] = x2949;
          extern_args[1] = x967;
          extern_args[2] = x968;
          extern_args[3] = x971;
          extern_args[4] = x2804;
          extern_log(ctx, cycle, "  Writing to rd=x%u, val = %w", extern_args, extern_outs);
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":68:68)
          auto x3156 = x2763 + x2949;
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x967);
            reg = x967;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x968);
            reg = x968;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x971);
            reg = x971;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2804);
            reg = x2804;
          }
          {
            extern_args[0] = x3156;
            extern_args[1] = x967;
            extern_args[2] = x968;
            extern_args[3] = x971;
            extern_args[4] = x2804;
            extern_args[5] = x98;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x3157 = arg2[142 * steps + ((cycle - 0) & mask)];
          assert(x3157 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x3158 = arg2[143 * steps + ((cycle - 0) & mask)];
          assert(x3158 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x3159 = arg2[144 * steps + ((cycle - 0) & mask)];
          assert(x3159 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x3160 = arg2[145 * steps + ((cycle - 0) & mask)];
          assert(x3160 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":178:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3156);
            reg = x3156;
          }
          // loc("zirgen/components/ram.cpp":179:3)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x966);
            reg = x966;
          }
          // loc("zirgen/components/ram.cpp":180:3)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x98);
            reg = x98;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3157);
            reg = x3157;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3158);
            reg = x3158;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3159);
            reg = x3159;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3160);
            reg = x3160;
          }
        }
        if (x2952 != 0) {
          // loc("zirgen/components/ram.cpp":53:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":54:3)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":55:3)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/OneHot/hot[4](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":69:68))
      auto x3161 = arg2[187 * steps + ((cycle - 0) & mask)];
      assert(x3161 != Fp::invalid());
      if (x3161 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":69:68)
        auto x3162 = x2646 - x44;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":69:68)
        assert(x3162 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:69");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":69:68)
        assert(x2639 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:69");
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
        auto x3163 = x2600 * x65;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
        auto x3164 = x2602 * x53;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":82:7)
        auto x3165 = x2602 * x97;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:21)
        auto x3166 = x2605 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:21)
        auto x3167 = x2603 * x98;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
        auto x3168 = x3163 + x3166;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
        auto x3169 = x3164 + x3167;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
        auto x3170 = x3169 + x2601;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
        auto x3171 = x3168 + x2778;
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[191 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3171);
          reg = x3171;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[192 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3170);
          reg = x3170;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[193 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3165);
          reg = x3165;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[194 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3165);
          reg = x3165;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:3)
        {
          auto& reg = arg2[195 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:3)
        {
          auto& reg = arg2[196 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":33:5)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":34:5)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":35:5)
        {
          auto& reg = arg2[199 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":63:3)
        {
          auto& reg = arg2[200 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x66);
          reg = x66;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":34:23)
        auto x3172 = x2978 + x83;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x3173 = Fp(x3172.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3173);
            reg = x3173;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x3174 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x3174 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x3175 = x3172 - x3174;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x3176 = x3175 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x3177 = Fp(x3176.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3177);
            reg = x3177;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x3178 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x3178 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x3179 = x3176 - x3178;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x3180 = x3179 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x3181 = Fp(x3180.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3181);
            reg = x3181;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x3182 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x3182 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x3183 = x3180 - x3182;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x3184 = x3183 * x96;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":37:26)
          auto x3185 = Fp(x3184.asUInt32() & x81.asUInt32());
          // loc("./zirgen/components/bits.h":78:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3185);
            reg = x3185;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[0](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x3186 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x3186 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:18)
        auto x3187 = x3184 - x3186;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:17)
        auto x3188 = x3187 * x80;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3188);
          reg = x3188;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x3189 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x3189 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:23)
        auto x3190 = x101 - x3189;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:15)
        auto x3191 = x3189 * x3190;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3191);
          reg = x3191;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:17)
        auto x3192 = x98 - x3189;
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x3193 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x3193 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        auto x3194 = x3193 * x3192;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        assert(x3194 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:43");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x3195 = arg2[200 * steps + ((cycle - 0) & mask)];
        assert(x3195 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":69:68)
        {
          auto& reg = arg2[100 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3195);
          reg = x3195;
        }
        if (x2953 != 0) {
          extern_args[0] = x2949;
          extern_args[1] = x967;
          extern_args[2] = x968;
          extern_args[3] = x971;
          extern_args[4] = x2804;
          extern_log(ctx, cycle, "  Writing to rd=x%u, val = %w", extern_args, extern_outs);
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":69:68)
          auto x3196 = x2763 + x2949;
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x967);
            reg = x967;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x968);
            reg = x968;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x971);
            reg = x971;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2804);
            reg = x2804;
          }
          {
            extern_args[0] = x3196;
            extern_args[1] = x967;
            extern_args[2] = x968;
            extern_args[3] = x971;
            extern_args[4] = x2804;
            extern_args[5] = x98;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x3197 = arg2[142 * steps + ((cycle - 0) & mask)];
          assert(x3197 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x3198 = arg2[143 * steps + ((cycle - 0) & mask)];
          assert(x3198 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x3199 = arg2[144 * steps + ((cycle - 0) & mask)];
          assert(x3199 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x3200 = arg2[145 * steps + ((cycle - 0) & mask)];
          assert(x3200 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":178:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3196);
            reg = x3196;
          }
          // loc("zirgen/components/ram.cpp":179:3)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x966);
            reg = x966;
          }
          // loc("zirgen/components/ram.cpp":180:3)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x98);
            reg = x98;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3197);
            reg = x3197;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3198);
            reg = x3198;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3199);
            reg = x3199;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3200);
            reg = x3200;
          }
        }
        if (x2952 != 0) {
          // loc("zirgen/components/ram.cpp":53:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":54:3)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":55:3)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/OneHot/hot[5](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":70:68))
      auto x3201 = arg2[188 * steps + ((cycle - 0) & mask)];
      assert(x3201 != Fp::invalid());
      if (x3201 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":70:68)
        auto x3202 = x2646 - x43;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":70:68)
        assert(x3202 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:70");
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[191 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[192 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2641);
          reg = x2641;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[193 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2629);
          reg = x2629;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[194 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2615);
          reg = x2615;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:3)
        {
          auto& reg = arg2[195 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:3)
        {
          auto& reg = arg2[196 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":58:5)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":59:5)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":60:5)
        {
          auto& reg = arg2[199 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":63:3)
        {
          auto& reg = arg2[200 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x66);
          reg = x66;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":34:23)
        auto x3203 = x2957 + x83;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x3204 = Fp(x3203.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3204);
            reg = x3204;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x3205 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x3205 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x3206 = x3203 - x3205;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x3207 = x3206 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x3208 = Fp(x3207.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3208);
            reg = x3208;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x3209 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x3209 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x3210 = x3207 - x3209;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x3211 = x3210 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x3212 = Fp(x3211.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3212);
            reg = x3212;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x3213 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x3213 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x3214 = x3211 - x3213;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x3215 = x3214 * x96;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":37:26)
          auto x3216 = Fp(x3215.asUInt32() & x81.asUInt32());
          // loc("./zirgen/components/bits.h":78:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3216);
            reg = x3216;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[0](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x3217 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x3217 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:18)
        auto x3218 = x3215 - x3217;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:17)
        auto x3219 = x3218 * x80;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3219);
          reg = x3219;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x3220 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x3220 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:23)
        auto x3221 = x101 - x3220;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:15)
        auto x3222 = x3220 * x3221;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3222);
          reg = x3222;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:17)
        auto x3223 = x98 - x3220;
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x3224 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x3224 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        auto x3225 = x3224 * x3223;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        assert(x3225 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:43");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x3226 = arg2[200 * steps + ((cycle - 0) & mask)];
        assert(x3226 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":70:68)
        {
          auto& reg = arg2[100 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3226);
          reg = x3226;
        }
        if (x2953 != 0) {
          extern_args[0] = x2949;
          extern_args[1] = x2881;
          extern_args[2] = x2885;
          extern_args[3] = x2893;
          extern_args[4] = x2897;
          extern_log(ctx, cycle, "  Writing to rd=x%u, val = %w", extern_args, extern_outs);
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":70:68)
          auto x3227 = x2763 + x2949;
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2881);
            reg = x2881;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2885);
            reg = x2885;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2893);
            reg = x2893;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2897);
            reg = x2897;
          }
          {
            extern_args[0] = x3227;
            extern_args[1] = x2881;
            extern_args[2] = x2885;
            extern_args[3] = x2893;
            extern_args[4] = x2897;
            extern_args[5] = x98;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x3228 = arg2[142 * steps + ((cycle - 0) & mask)];
          assert(x3228 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x3229 = arg2[143 * steps + ((cycle - 0) & mask)];
          assert(x3229 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x3230 = arg2[144 * steps + ((cycle - 0) & mask)];
          assert(x3230 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x3231 = arg2[145 * steps + ((cycle - 0) & mask)];
          assert(x3231 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":178:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3227);
            reg = x3227;
          }
          // loc("zirgen/components/ram.cpp":179:3)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x966);
            reg = x966;
          }
          // loc("zirgen/components/ram.cpp":180:3)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x98);
            reg = x98;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3228);
            reg = x3228;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3229);
            reg = x3229;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3230);
            reg = x3230;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3231);
            reg = x3231;
          }
        }
        if (x2952 != 0) {
          // loc("zirgen/components/ram.cpp":53:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":54:3)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":55:3)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/OneHot/hot[6](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":71:68))
      auto x3232 = arg2[189 * steps + ((cycle - 0) & mask)];
      assert(x3232 != Fp::invalid());
      if (x3232 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":71:68)
        auto x3233 = x2646 - x42;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":71:68)
        assert(x3233 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:71");
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[191 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[192 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2641);
          reg = x2641;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[193 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2629);
          reg = x2629;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[194 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2615);
          reg = x2615;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:3)
        {
          auto& reg = arg2[195 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:3)
        {
          auto& reg = arg2[196 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":33:5)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":34:5)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":35:5)
        {
          auto& reg = arg2[199 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":63:3)
        {
          auto& reg = arg2[200 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x66);
          reg = x66;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":34:23)
        auto x3234 = x2957 + x83;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x3235 = Fp(x3234.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3235);
            reg = x3235;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x3236 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x3236 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x3237 = x3234 - x3236;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x3238 = x3237 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x3239 = Fp(x3238.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3239);
            reg = x3239;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x3240 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x3240 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x3241 = x3238 - x3240;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x3242 = x3241 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x3243 = Fp(x3242.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3243);
            reg = x3243;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x3244 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x3244 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x3245 = x3242 - x3244;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x3246 = x3245 * x96;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":37:26)
          auto x3247 = Fp(x3246.asUInt32() & x81.asUInt32());
          // loc("./zirgen/components/bits.h":78:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3247);
            reg = x3247;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[0](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x3248 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x3248 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:18)
        auto x3249 = x3246 - x3248;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:17)
        auto x3250 = x3249 * x80;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3250);
          reg = x3250;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x3251 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x3251 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:23)
        auto x3252 = x101 - x3251;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:15)
        auto x3253 = x3251 * x3252;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3253);
          reg = x3253;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:17)
        auto x3254 = x98 - x3251;
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x3255 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x3255 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        auto x3256 = x3255 * x3254;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        assert(x3256 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:43");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x3257 = arg2[200 * steps + ((cycle - 0) & mask)];
        assert(x3257 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":71:68)
        {
          auto& reg = arg2[100 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3257);
          reg = x3257;
        }
        if (x2953 != 0) {
          extern_args[0] = x2949;
          extern_args[1] = x2881;
          extern_args[2] = x2885;
          extern_args[3] = x2893;
          extern_args[4] = x2897;
          extern_log(ctx, cycle, "  Writing to rd=x%u, val = %w", extern_args, extern_outs);
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":71:68)
          auto x3258 = x2763 + x2949;
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2881);
            reg = x2881;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2885);
            reg = x2885;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2893);
            reg = x2893;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2897);
            reg = x2897;
          }
          {
            extern_args[0] = x3258;
            extern_args[1] = x2881;
            extern_args[2] = x2885;
            extern_args[3] = x2893;
            extern_args[4] = x2897;
            extern_args[5] = x98;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x3259 = arg2[142 * steps + ((cycle - 0) & mask)];
          assert(x3259 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x3260 = arg2[143 * steps + ((cycle - 0) & mask)];
          assert(x3260 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x3261 = arg2[144 * steps + ((cycle - 0) & mask)];
          assert(x3261 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x3262 = arg2[145 * steps + ((cycle - 0) & mask)];
          assert(x3262 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":178:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3258);
            reg = x3258;
          }
          // loc("zirgen/components/ram.cpp":179:3)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x966);
            reg = x966;
          }
          // loc("zirgen/components/ram.cpp":180:3)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x98);
            reg = x98;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3259);
            reg = x3259;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3260);
            reg = x3260;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3261);
            reg = x3261;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3262);
            reg = x3262;
          }
        }
        if (x2952 != 0) {
          // loc("zirgen/components/ram.cpp":53:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":54:3)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":55:3)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/user_mode(Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x3263 = arg2[99 * steps + ((cycle - 0) & mask)];
      assert(x3263 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x3264 = arg2[71 * steps + ((cycle - 0) & mask)];
      assert(x3264 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":60:7)
      auto x3265 = x3263 * x3264;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":60:26)
      auto x3266 = x101 - x3264;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":60:7)
      auto x3267 = x3265 * x3266;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":60:7)
      assert(x3267 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:60");
    }
    // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[3](Reg)"("./zirgen/components/mux.h":59:25))
    auto x3268 = arg2[104 * steps + ((cycle - 0) & mask)];
    assert(x3268 != Fp::invalid());
    if (x3268 != 0) {
      // loc("Top/mux(Mux)/body(BodyStep)/user_mode(Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x3269 = arg2[99 * steps + ((cycle - 1) & mask)];
      assert(x3269 != Fp::invalid());
      // loc("./zirgen/components/bits.h":37:23)
      {
        auto& reg = arg2[99 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3269);
        reg = x3269;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/next_major(Reg)"("zirgen/circuit/rv32im/v1/edsl/memio.cpp":31:37))
      auto x3270 = arg2[100 * steps + ((cycle - 1) & mask)];
      assert(x3270 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":31:37)
      auto x3271 = x3270 - x66;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":31:37)
      assert(x3271 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/memio.cpp:31");
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":34:41)
      auto x3272 = x980 * x80;
      {
        extern_args[0] = x3272;
        extern_args[1] = x101;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x3273 = extern_outs[0];
        auto x3274 = extern_outs[1];
        auto x3275 = extern_outs[2];
        auto x3276 = extern_outs[3];
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3273);
          reg = x3273;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3274);
          reg = x3274;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[123 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3275);
          reg = x3275;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[124 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3276);
          reg = x3276;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x3277 = arg2[121 * steps + ((cycle - 0) & mask)];
      assert(x3277 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x3278 = arg2[122 * steps + ((cycle - 0) & mask)];
      assert(x3278 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x3279 = arg2[123 * steps + ((cycle - 0) & mask)];
      assert(x3279 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x3280 = arg2[124 * steps + ((cycle - 0) & mask)];
      assert(x3280 != Fp::invalid());
      // loc("zirgen/components/ram.cpp":178:3)
      {
        auto& reg = arg2[118 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3272);
        reg = x3272;
      }
      // loc("zirgen/components/ram.cpp":179:3)
      {
        auto& reg = arg2[119 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x966);
        reg = x966;
      }
      // loc("zirgen/components/ram.cpp":180:3)
      {
        auto& reg = arg2[120 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x101);
        reg = x101;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[121 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3277);
        reg = x3277;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[122 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3278);
        reg = x3278;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[123 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3279);
        reg = x3279;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[124 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3280);
        reg = x3280;
      }
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":21:16)
        auto x3281 = Fp(x3280.asUInt32() & x65.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":21:15)
        auto x3282 = x3281 * x64;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[191 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3282);
          reg = x3282;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":22:17)
        auto x3283 = Fp(x3280.asUInt32() & x61.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":22:16)
        auto x3284 = x3283 * x63;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[77 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3284);
          reg = x3284;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":23:16)
        auto x3285 = Fp(x3280.asUInt32() & x72.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":23:15)
        auto x3286 = x3285 * x60;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[190 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3286);
          reg = x3286;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":24:16)
        auto x3287 = Fp(x3280.asUInt32() & x68.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":24:15)
        auto x3288 = x3287 * x59;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[189 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3288);
          reg = x3288;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":25:17)
        auto x3289 = Fp(x3280.asUInt32() & x70.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":25:16)
        auto x3290 = x3289 * x58;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[76 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3290);
          reg = x3290;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":26:17)
        auto x3291 = Fp(x3280.asUInt32() & x101.asUInt32());
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[194 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3291);
          reg = x3291;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":27:17)
        auto x3292 = Fp(x3279.asUInt32() & x65.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":27:16)
        auto x3293 = x3292 * x64;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[193 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3293);
          reg = x3293;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":28:18)
        auto x3294 = Fp(x3279.asUInt32() & x61.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":28:17)
        auto x3295 = x3294 * x63;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[78 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3295);
          reg = x3295;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":29:17)
        auto x3296 = Fp(x3279.asUInt32() & x72.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":29:16)
        auto x3297 = x3296 * x60;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[192 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3297);
          reg = x3297;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":30:18)
        auto x3298 = Fp(x3279.asUInt32() & x76.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":30:17)
        auto x3299 = x3298 * x80;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[80 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3299);
          reg = x3299;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:18)
        auto x3300 = Fp(x3279.asUInt32() & x81.asUInt32());
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[79 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3300);
          reg = x3300;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:17)
        auto x3301 = Fp(x3278.asUInt32() & x65.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:16)
        auto x3302 = x3301 * x64;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[195 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3302);
          reg = x3302;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":33:19)
        auto x3303 = Fp(x3278.asUInt32() & x56.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":33:18)
        auto x3304 = x3303 * x57;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[196 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3304);
          reg = x3304;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":34:20)
        auto x3305 = Fp(x3278.asUInt32() & x55.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":34:19)
        auto x3306 = x3305 * x60;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[81 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3306);
          reg = x3306;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":35:17)
        auto x3307 = Fp(x3278.asUInt32() & x76.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":35:16)
        auto x3308 = x3307 * x80;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[83 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3308);
          reg = x3308;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":36:17)
        auto x3309 = Fp(x3278.asUInt32() & x81.asUInt32());
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[82 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3309);
          reg = x3309;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":37:16)
        auto x3310 = Fp(x3277.asUInt32() & x65.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":37:15)
        auto x3311 = x3310 * x64;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3311);
          reg = x3311;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":38:18)
        auto x3312 = Fp(x3277.asUInt32() & x54.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":38:5)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3312);
          reg = x3312;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x3313 = arg2[189 * steps + ((cycle - 0) & mask)];
      assert(x3313 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x3314 = arg2[190 * steps + ((cycle - 0) & mask)];
      assert(x3314 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x3315 = arg2[191 * steps + ((cycle - 0) & mask)];
      assert(x3315 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x3316 = arg2[77 * steps + ((cycle - 0) & mask)];
      assert(x3316 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x3317 = arg2[194 * steps + ((cycle - 0) & mask)];
      assert(x3317 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x3318 = arg2[76 * steps + ((cycle - 0) & mask)];
      assert(x3318 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":63:10)
      auto x3319 = x3315 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":67:10)
      auto x3320 = x3316 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":67:39)
      auto x3321 = x3313 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":67:25)
      auto x3322 = x3314 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":67:10)
      auto x3323 = x3320 + x3322;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":67:10)
      auto x3324 = x3323 + x3321;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":67:10)
      auto x3325 = x3324 + x3318;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":63:10)
      auto x3326 = x3319 + x3325;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":40:21)
      auto x3327 = x3326 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":40:21)
      auto x3328 = x3327 + x3317;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":40:6)
      auto x3329 = x3280 - x3328;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":40:6)
      assert(x3329 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/decode.cpp:40");
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x3330 = arg2[193 * steps + ((cycle - 0) & mask)];
      assert(x3330 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x3331 = arg2[78 * steps + ((cycle - 0) & mask)];
      assert(x3331 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x3332 = arg2[80 * steps + ((cycle - 0) & mask)];
      assert(x3332 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x3333 = arg2[192 * steps + ((cycle - 0) & mask)];
      assert(x3333 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x3334 = arg2[79 * steps + ((cycle - 0) & mask)];
      assert(x3334 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:22)
      auto x3335 = x3330 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:37)
      auto x3336 = x3331 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:69)
      auto x3337 = x3332 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:22)
      auto x3338 = x3335 + x3336;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:22)
      auto x3339 = x3338 + x3333;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:21)
      auto x3340 = x3339 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:21)
      auto x3341 = x3340 + x3337;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:21)
      auto x3342 = x3341 + x3334;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:6)
      auto x3343 = x3279 - x3342;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:6)
      assert(x3343 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/decode.cpp:41");
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x3344 = arg2[195 * steps + ((cycle - 0) & mask)];
      assert(x3344 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x3345 = arg2[196 * steps + ((cycle - 0) & mask)];
      assert(x3345 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x3346 = arg2[83 * steps + ((cycle - 0) & mask)];
      assert(x3346 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x3347 = arg2[81 * steps + ((cycle - 0) & mask)];
      assert(x3347 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x3348 = arg2[82 * steps + ((cycle - 0) & mask)];
      assert(x3348 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":42:21)
      auto x3349 = x3344 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":59:10)
      auto x3350 = x3345 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":42:53)
      auto x3351 = x3346 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":59:10)
      auto x3352 = x3350 + x3347;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":42:36)
      auto x3353 = x3352 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":42:21)
      auto x3354 = x3349 + x3353;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":42:21)
      auto x3355 = x3354 + x3351;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":42:21)
      auto x3356 = x3355 + x3348;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":42:6)
      auto x3357 = x3278 - x3356;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":42:6)
      assert(x3357 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/decode.cpp:42");
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x3358 = arg2[197 * steps + ((cycle - 0) & mask)];
      assert(x3358 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/Decoder/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x3359 = arg2[198 * steps + ((cycle - 0) & mask)];
      assert(x3359 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":43:21)
      auto x3360 = x3358 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":43:21)
      auto x3361 = x3360 + x3359;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":43:6)
      auto x3362 = x3277 - x3361;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":43:6)
      assert(x3362 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/decode.cpp:43");
      {
        extern_args[0] = x3277;
        extern_args[1] = x3278;
        extern_args[2] = x3279;
        extern_args[3] = x3280;
        extern_getMinor(ctx, cycle, "", extern_args, extern_outs);
        auto x3363 = extern_outs[0];
        {
          // loc("./zirgen/components/onehot.h":47:26)
          auto x3364 = (x3363 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[203 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3364);
            reg = x3364;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x3365 = x3363 - x101;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x3366 = (x3365 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[204 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3366);
            reg = x3366;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x3367 = x3363 - x98;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x3368 = (x3367 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[205 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3368);
            reg = x3368;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x3369 = x3363 - x81;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x3370 = (x3369 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[206 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3370);
            reg = x3370;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x3371 = x3363 - x83;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x3372 = (x3371 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[207 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3372);
            reg = x3372;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x3373 = x3363 - x71;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x3374 = (x3373 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[208 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3374);
            reg = x3374;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x3375 = x3363 - x70;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x3376 = (x3375 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[209 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3376);
            reg = x3376;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x3377 = x3363 - x69;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x3378 = (x3377 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[210 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3378);
            reg = x3378;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/OneHot/hot[1](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x3379 = arg2[204 * steps + ((cycle - 0) & mask)];
        assert(x3379 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/OneHot/hot[2](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x3380 = arg2[205 * steps + ((cycle - 0) & mask)];
        assert(x3380 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/OneHot/hot[3](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x3381 = arg2[206 * steps + ((cycle - 0) & mask)];
        assert(x3381 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/OneHot/hot[4](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x3382 = arg2[207 * steps + ((cycle - 0) & mask)];
        assert(x3382 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/OneHot/hot[5](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x3383 = arg2[208 * steps + ((cycle - 0) & mask)];
        assert(x3383 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/OneHot/hot[6](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x3384 = arg2[209 * steps + ((cycle - 0) & mask)];
        assert(x3384 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/OneHot/hot[7](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x3385 = arg2[210 * steps + ((cycle - 0) & mask)];
        assert(x3385 != Fp::invalid());
        // loc("./zirgen/components/onehot.h":56:19)
        auto x3386 = x3380 * x98;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x3387 = x3381 * x81;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x3388 = x3382 * x83;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x3389 = x3383 * x71;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x3390 = x3384 * x70;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x3391 = x3385 * x69;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x3392 = x3379 + x3386;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x3393 = x3392 + x3387;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x3394 = x3393 + x3388;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x3395 = x3394 + x3389;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x3396 = x3395 + x3390;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x3397 = x3396 + x3391;
        // loc("./zirgen/components/onehot.h":50:8)
        auto x3398 = x3397 - x3363;
        // loc("./zirgen/components/onehot.h":50:8)
        assert(x3398 == 0 && "eqz failed at: ./zirgen/components/onehot.h:50");
      }
      {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":87:46))
        auto x3399 = arg2[203 * steps + ((cycle - 0) & mask)];
        assert(x3399 != Fp::invalid());
        if (x3399 != 0) {
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
          auto x3400 = x3313 * x65;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
          auto x3401 = x3315 * x53;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":51:10)
          auto x3402 = x3317 * x72;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":82:7)
          auto x3403 = x3315 * x97;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:21)
          auto x3404 = x3318 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:21)
          auto x3405 = x3316 * x98;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
          auto x3406 = x3400 + x3404;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
          auto x3407 = x3401 + x3405;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
          auto x3408 = x3407 + x3314;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":51:10)
          auto x3409 = x3402 + x3339;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
          auto x3410 = x3406 + x3409;
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[199 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3410);
            reg = x3410;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[200 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3408);
            reg = x3408;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[201 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3403);
            reg = x3403;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[202 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3403);
            reg = x3403;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/OneHot/hot[1](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":88:46))
        auto x3411 = arg2[204 * steps + ((cycle - 0) & mask)];
        assert(x3411 != Fp::invalid());
        if (x3411 != 0) {
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
          auto x3412 = x3313 * x65;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
          auto x3413 = x3315 * x53;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":51:10)
          auto x3414 = x3317 * x72;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":82:7)
          auto x3415 = x3315 * x97;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:21)
          auto x3416 = x3318 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:21)
          auto x3417 = x3316 * x98;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
          auto x3418 = x3412 + x3416;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
          auto x3419 = x3413 + x3417;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
          auto x3420 = x3419 + x3314;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":51:10)
          auto x3421 = x3414 + x3339;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
          auto x3422 = x3418 + x3421;
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[199 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3422);
            reg = x3422;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[200 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3420);
            reg = x3420;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[201 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3415);
            reg = x3415;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[202 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3415);
            reg = x3415;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/OneHot/hot[2](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":89:46))
        auto x3423 = arg2[205 * steps + ((cycle - 0) & mask)];
        assert(x3423 != Fp::invalid());
        if (x3423 != 0) {
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
          auto x3424 = x3313 * x65;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
          auto x3425 = x3315 * x53;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":51:10)
          auto x3426 = x3317 * x72;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":82:7)
          auto x3427 = x3315 * x97;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:21)
          auto x3428 = x3318 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:21)
          auto x3429 = x3316 * x98;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
          auto x3430 = x3424 + x3428;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
          auto x3431 = x3425 + x3429;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
          auto x3432 = x3431 + x3314;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":51:10)
          auto x3433 = x3426 + x3339;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
          auto x3434 = x3430 + x3433;
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[199 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3434);
            reg = x3434;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[200 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3432);
            reg = x3432;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[201 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3427);
            reg = x3427;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[202 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3427);
            reg = x3427;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/OneHot/hot[3](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":90:46))
        auto x3435 = arg2[206 * steps + ((cycle - 0) & mask)];
        assert(x3435 != Fp::invalid());
        if (x3435 != 0) {
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
          auto x3436 = x3313 * x65;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
          auto x3437 = x3315 * x53;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":51:10)
          auto x3438 = x3317 * x72;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":82:7)
          auto x3439 = x3315 * x97;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:21)
          auto x3440 = x3318 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:21)
          auto x3441 = x3316 * x98;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
          auto x3442 = x3436 + x3440;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
          auto x3443 = x3437 + x3441;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
          auto x3444 = x3443 + x3314;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":51:10)
          auto x3445 = x3438 + x3339;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
          auto x3446 = x3442 + x3445;
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[199 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3446);
            reg = x3446;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[200 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3444);
            reg = x3444;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[201 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3439);
            reg = x3439;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[202 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3439);
            reg = x3439;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/OneHot/hot[4](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":91:46))
        auto x3447 = arg2[207 * steps + ((cycle - 0) & mask)];
        assert(x3447 != Fp::invalid());
        if (x3447 != 0) {
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
          auto x3448 = x3313 * x65;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
          auto x3449 = x3315 * x53;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":51:10)
          auto x3450 = x3317 * x72;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":82:7)
          auto x3451 = x3315 * x97;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:21)
          auto x3452 = x3318 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:21)
          auto x3453 = x3316 * x98;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
          auto x3454 = x3448 + x3452;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
          auto x3455 = x3449 + x3453;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
          auto x3456 = x3455 + x3314;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":51:10)
          auto x3457 = x3450 + x3339;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
          auto x3458 = x3454 + x3457;
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[199 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3458);
            reg = x3458;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[200 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3456);
            reg = x3456;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[201 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3451);
            reg = x3451;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[202 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3451);
            reg = x3451;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/OneHot/hot[5](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":92:46))
        auto x3459 = arg2[208 * steps + ((cycle - 0) & mask)];
        assert(x3459 != Fp::invalid());
        if (x3459 != 0) {
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
          auto x3460 = x3313 * x65;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":90:7)
          auto x3461 = x3315 * x53;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":55:10)
          auto x3462 = x3346 * x68;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":91:7)
          auto x3463 = x3315 * x97;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:21)
          auto x3464 = x3318 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":90:21)
          auto x3465 = x3316 * x98;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":55:25)
          auto x3466 = x3348 * x98;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
          auto x3467 = x3460 + x3464;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":90:7)
          auto x3468 = x3461 + x3465;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":55:10)
          auto x3469 = x3462 + x3466;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":90:7)
          auto x3470 = x3468 + x3314;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":55:10)
          auto x3471 = x3469 + x3358;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
          auto x3472 = x3467 + x3471;
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[199 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3472);
            reg = x3472;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[200 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3470);
            reg = x3470;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[201 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3463);
            reg = x3463;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[202 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3463);
            reg = x3463;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/OneHot/hot[6](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":93:46))
        auto x3473 = arg2[209 * steps + ((cycle - 0) & mask)];
        assert(x3473 != Fp::invalid());
        if (x3473 != 0) {
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
          auto x3474 = x3313 * x65;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":90:7)
          auto x3475 = x3315 * x53;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":55:10)
          auto x3476 = x3346 * x68;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":91:7)
          auto x3477 = x3315 * x97;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:21)
          auto x3478 = x3318 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":90:21)
          auto x3479 = x3316 * x98;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":55:25)
          auto x3480 = x3348 * x98;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
          auto x3481 = x3474 + x3478;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":90:7)
          auto x3482 = x3475 + x3479;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":55:10)
          auto x3483 = x3476 + x3480;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":90:7)
          auto x3484 = x3482 + x3314;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":55:10)
          auto x3485 = x3483 + x3358;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
          auto x3486 = x3481 + x3485;
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[199 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3486);
            reg = x3486;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[200 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3484);
            reg = x3484;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[201 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3477);
            reg = x3477;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[202 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3477);
            reg = x3477;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/OneHot/hot[7](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":94:46))
        auto x3487 = arg2[210 * steps + ((cycle - 0) & mask)];
        assert(x3487 != Fp::invalid());
        if (x3487 != 0) {
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
          auto x3488 = x3313 * x65;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":90:7)
          auto x3489 = x3315 * x53;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":55:10)
          auto x3490 = x3346 * x68;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":91:7)
          auto x3491 = x3315 * x97;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:21)
          auto x3492 = x3318 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":90:21)
          auto x3493 = x3316 * x98;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":55:25)
          auto x3494 = x3348 * x98;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
          auto x3495 = x3488 + x3492;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":90:7)
          auto x3496 = x3489 + x3493;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":55:10)
          auto x3497 = x3490 + x3494;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":90:7)
          auto x3498 = x3496 + x3314;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":55:10)
          auto x3499 = x3497 + x3358;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
          auto x3500 = x3495 + x3499;
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[199 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3500);
            reg = x3500;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[200 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3498);
            reg = x3498;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[201 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3491);
            reg = x3491;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[202 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3491);
            reg = x3491;
          }
        }
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":52:57)
      auto x3501 = x3269 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":52:39)
      auto x3502 = x52 - x3501;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":47:10)
      auto x3503 = x3332 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":47:26)
      auto x3504 = x3334 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":47:10)
      auto x3505 = x3503 + x3504;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":47:10)
      auto x3506 = x3505 + x3344;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":52:39)
      auto x3507 = x3502 + x3506;
      {
        extern_args[0] = x3507;
        extern_args[1] = x101;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x3508 = extern_outs[0];
        auto x3509 = extern_outs[1];
        auto x3510 = extern_outs[2];
        auto x3511 = extern_outs[3];
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[128 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3508);
          reg = x3508;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[129 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3509);
          reg = x3509;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[130 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3510);
          reg = x3510;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[131 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3511);
          reg = x3511;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x3512 = arg2[128 * steps + ((cycle - 0) & mask)];
      assert(x3512 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x3513 = arg2[129 * steps + ((cycle - 0) & mask)];
      assert(x3513 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x3514 = arg2[130 * steps + ((cycle - 0) & mask)];
      assert(x3514 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x3515 = arg2[131 * steps + ((cycle - 0) & mask)];
      assert(x3515 != Fp::invalid());
      // loc("zirgen/components/ram.cpp":178:3)
      {
        auto& reg = arg2[125 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3507);
        reg = x3507;
      }
      // loc("zirgen/components/ram.cpp":179:3)
      {
        auto& reg = arg2[126 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x966);
        reg = x966;
      }
      // loc("zirgen/components/ram.cpp":180:3)
      {
        auto& reg = arg2[127 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x101);
        reg = x101;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[128 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3512);
        reg = x3512;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[129 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3513);
        reg = x3513;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[130 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3514);
        reg = x3514;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[131 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3515);
        reg = x3515;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":51:10)
      auto x3516 = x3317 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":51:10)
      auto x3517 = x3516 + x3339;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":53:39)
      auto x3518 = x3502 + x3517;
      {
        extern_args[0] = x3518;
        extern_args[1] = x101;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x3519 = extern_outs[0];
        auto x3520 = extern_outs[1];
        auto x3521 = extern_outs[2];
        auto x3522 = extern_outs[3];
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3519);
          reg = x3519;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3520);
          reg = x3520;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[137 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3521);
          reg = x3521;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[138 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3522);
          reg = x3522;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x3523 = arg2[135 * steps + ((cycle - 0) & mask)];
      assert(x3523 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x3524 = arg2[136 * steps + ((cycle - 0) & mask)];
      assert(x3524 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x3525 = arg2[137 * steps + ((cycle - 0) & mask)];
      assert(x3525 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x3526 = arg2[138 * steps + ((cycle - 0) & mask)];
      assert(x3526 != Fp::invalid());
      // loc("zirgen/components/ram.cpp":178:3)
      {
        auto& reg = arg2[132 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3518);
        reg = x3518;
      }
      // loc("zirgen/components/ram.cpp":179:3)
      {
        auto& reg = arg2[133 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x966);
        reg = x966;
      }
      // loc("zirgen/components/ram.cpp":180:3)
      {
        auto& reg = arg2[134 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x101);
        reg = x101;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[135 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3523);
        reg = x3523;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[136 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3524);
        reg = x3524;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[137 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3525);
        reg = x3525;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[138 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3526);
        reg = x3526;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/U32Reg/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x3527 = arg2[199 * steps + ((cycle - 0) & mask)];
      assert(x3527 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/U32Reg/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x3528 = arg2[200 * steps + ((cycle - 0) & mask)];
      assert(x3528 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/U32Reg/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x3529 = arg2[201 * steps + ((cycle - 0) & mask)];
      assert(x3529 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/U32Reg/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x3530 = arg2[202 * steps + ((cycle - 0) & mask)];
      assert(x3530 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":55:10)
      auto x3531 = x3346 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":55:25)
      auto x3532 = x3348 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":55:10)
      auto x3533 = x3531 + x3532;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":55:10)
      auto x3534 = x3533 + x3358;
      {
        // loc("zirgen/components/iszero.cpp":21:24)
        auto x3535 = (x3534 == 0) ? Fp(1) : Fp(0);
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[211 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3535);
          reg = x3535;
        }
        // loc("zirgen/components/iszero.cpp":22:21)
        auto x3536 = inv(x3534);
        // loc("zirgen/components/iszero.cpp":22:5)
        {
          auto& reg = arg2[212 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3536);
          reg = x3536;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/IsZero/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x3537 = arg2[211 * steps + ((cycle - 0) & mask)];
      assert(x3537 != Fp::invalid());
      if (x3537 != 0) {
        // loc("zirgen/components/iszero.cpp":26:23)
        assert(x3534 == 0 && "eqz failed at: zirgen/components/iszero.cpp:26");
      }
      // loc("zirgen/components/iszero.cpp":28:19)
      auto x3538 = x101 - x3537;
      if (x3538 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/IsZero/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x3539 = arg2[212 * steps + ((cycle - 0) & mask)];
        assert(x3539 != Fp::invalid());
        // loc("zirgen/components/iszero.cpp":28:26)
        auto x3540 = x3534 * x3539;
        // loc("zirgen/components/iszero.cpp":28:26)
        auto x3541 = x3540 - x101;
        // loc("zirgen/components/iszero.cpp":28:26)
        assert(x3541 == 0 && "eqz failed at: zirgen/components/iszero.cpp:28");
      }
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":61:17)
        auto x3542 = x3512 + x3527;
        // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":62:18)
        auto x3543 = Fp(x3542.asUInt32() & x81.asUInt32());
        {
          // loc("./zirgen/components/onehot.h":47:26)
          auto x3544 = (x3543 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[213 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3544);
            reg = x3544;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x3545 = x3543 - x101;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x3546 = (x3545 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[214 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3546);
            reg = x3546;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x3547 = x3543 - x98;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x3548 = (x3547 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[215 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3548);
            reg = x3548;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x3549 = x3543 - x81;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x3550 = (x3549 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[216 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3550);
            reg = x3550;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/OneHot/hot[1](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x3551 = arg2[214 * steps + ((cycle - 0) & mask)];
        assert(x3551 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/OneHot/hot[2](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x3552 = arg2[215 * steps + ((cycle - 0) & mask)];
        assert(x3552 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/OneHot/hot[3](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x3553 = arg2[216 * steps + ((cycle - 0) & mask)];
        assert(x3553 != Fp::invalid());
        // loc("./zirgen/components/onehot.h":56:19)
        auto x3554 = x3552 * x98;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x3555 = x3553 * x81;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x3556 = x3551 + x3554;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x3557 = x3556 + x3555;
        // loc("./zirgen/components/onehot.h":50:8)
        auto x3558 = x3557 - x3543;
        // loc("./zirgen/components/onehot.h":50:8)
        assert(x3558 == 0 && "eqz failed at: ./zirgen/components/onehot.h:50");
        // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":63:20)
        auto x3559 = Fp(x3542.asUInt32() & x95.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":63:19)
        auto x3560 = x3559 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x3561 = Fp(x3560.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[21 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3561);
            reg = x3561;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x3562 = arg2[21 * steps + ((cycle - 0) & mask)];
        assert(x3562 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":64:33)
        auto x3563 = x3562 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":64:15)
        auto x3564 = x3542 - x3557;
        // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":64:15)
        auto x3565 = x3564 - x3563;
        // loc("zirgen/components/bytes.cpp":111:3)
        {
          auto& reg = arg2[25 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3565);
          reg = x3565;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":66:22)
        auto x3566 = x3565 * x80;
        // loc("zirgen/components/bytes.cpp":111:3)
        {
          auto& reg = arg2[28 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3566);
          reg = x3566;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":67:17)
        auto x3567 = x3513 + x3528;
        // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":67:17)
        auto x3568 = x3567 + x3562;
        // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":68:24)
        auto x3569 = Fp(x3568.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":111:3)
        {
          auto& reg = arg2[26 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3569);
          reg = x3569;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":69:25)
        auto x3570 = Fp(x3568.asUInt32() & x95.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":69:24)
        auto x3571 = x3570 * x96;
        // loc("zirgen/components/bytes.cpp":111:3)
        {
          auto& reg = arg2[22 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3571);
          reg = x3571;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":70:17)
        auto x3572 = x3514 + x3529;
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x3573 = arg2[22 * steps + ((cycle - 0) & mask)];
        assert(x3573 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":70:17)
        auto x3574 = x3572 + x3573;
        // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":71:24)
        auto x3575 = Fp(x3574.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":111:3)
        {
          auto& reg = arg2[27 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3575);
          reg = x3575;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":72:25)
        auto x3576 = Fp(x3574.asUInt32() & x95.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":72:24)
        auto x3577 = x3576 * x96;
        // loc("zirgen/components/bytes.cpp":111:3)
        {
          auto& reg = arg2[23 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3577);
          reg = x3577;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":73:17)
        auto x3578 = x3515 + x3530;
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x3579 = arg2[23 * steps + ((cycle - 0) & mask)];
        assert(x3579 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":73:17)
        auto x3580 = x3578 + x3579;
        // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":74:23)
        auto x3581 = Fp(x3580.asUInt32() & x81.asUInt32());
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[84 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3581);
          reg = x3581;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":75:24)
        auto x3582 = Fp(x3580.asUInt32() & x76.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":75:23)
        auto x3583 = x3582 * x80;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[85 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3583);
          reg = x3583;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":76:20)
        auto x3584 = Fp(x3580.asUInt32() & x95.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":76:19)
        auto x3585 = x3584 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x3586 = Fp(x3585.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[24 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3586);
            reg = x3586;
          }
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
      auto x3587 = arg2[25 * steps + ((cycle - 0) & mask)];
      assert(x3587 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
      auto x3588 = arg2[28 * steps + ((cycle - 0) & mask)];
      assert(x3588 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":79:16)
      auto x3589 = x3588 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":79:6)
      auto x3590 = x3587 - x3589;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":79:6)
      assert(x3590 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/memio.cpp:79");
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":81:6)
      auto x3591 = x3512 + x3527;
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
      auto x3592 = arg2[21 * steps + ((cycle - 0) & mask)];
      assert(x3592 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/OneHot/hot[1](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x3593 = arg2[214 * steps + ((cycle - 0) & mask)];
      assert(x3593 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/OneHot/hot[2](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x3594 = arg2[215 * steps + ((cycle - 0) & mask)];
      assert(x3594 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/OneHot/hot[3](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x3595 = arg2[216 * steps + ((cycle - 0) & mask)];
      assert(x3595 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":81:35)
      auto x3596 = x3592 * x95;
      // loc("./zirgen/components/onehot.h":56:19)
      auto x3597 = x3594 * x98;
      // loc("./zirgen/components/onehot.h":56:19)
      auto x3598 = x3595 * x81;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":81:35)
      auto x3599 = x3596 + x3587;
      // loc("./zirgen/components/onehot.h":56:13)
      auto x3600 = x3593 + x3597;
      // loc("./zirgen/components/onehot.h":56:13)
      auto x3601 = x3600 + x3598;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":81:35)
      auto x3602 = x3599 + x3601;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":81:6)
      auto x3603 = x3591 - x3602;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":81:6)
      assert(x3603 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/memio.cpp:81");
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":83:6)
      auto x3604 = x3513 + x3528;
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
      auto x3605 = arg2[22 * steps + ((cycle - 0) & mask)];
      assert(x3605 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
      auto x3606 = arg2[26 * steps + ((cycle - 0) & mask)];
      assert(x3606 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":83:46)
      auto x3607 = x3605 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":83:6)
      auto x3608 = x3604 + x3592;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":83:46)
      auto x3609 = x3607 + x3606;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":83:6)
      auto x3610 = x3608 - x3609;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":83:6)
      assert(x3610 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/memio.cpp:83");
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":85:6)
      auto x3611 = x3514 + x3529;
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
      auto x3612 = arg2[23 * steps + ((cycle - 0) & mask)];
      assert(x3612 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
      auto x3613 = arg2[27 * steps + ((cycle - 0) & mask)];
      assert(x3613 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":85:46)
      auto x3614 = x3612 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":85:6)
      auto x3615 = x3611 + x3605;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":85:46)
      auto x3616 = x3614 + x3613;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":85:6)
      auto x3617 = x3615 - x3616;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":85:6)
      assert(x3617 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/memio.cpp:85");
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":87:6)
      auto x3618 = x3515 + x3530;
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
      auto x3619 = arg2[24 * steps + ((cycle - 0) & mask)];
      assert(x3619 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x3620 = arg2[85 * steps + ((cycle - 0) & mask)];
      assert(x3620 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x3621 = arg2[84 * steps + ((cycle - 0) & mask)];
      assert(x3621 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":87:46)
      auto x3622 = x3619 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":87:63)
      auto x3623 = x3620 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":87:6)
      auto x3624 = x3618 + x3612;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":87:46)
      auto x3625 = x3622 + x3623;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":87:46)
      auto x3626 = x3625 + x3621;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":87:6)
      auto x3627 = x3624 - x3626;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":87:6)
      assert(x3627 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/memio.cpp:87");
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":90:15)
      auto x3628 = x101 - x3620;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":90:28)
      auto x3629 = x98 - x3620;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":90:7)
      auto x3630 = x3620 * x3628;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":90:7)
      auto x3631 = x3630 * x3629;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":90:7)
      assert(x3631 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/memio.cpp:90");
      // loc("Top/mux(Mux)/body(BodyStep)/user_mode(Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x3632 = arg2[99 * steps + ((cycle - 0) & mask)];
      assert(x3632 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":92:7)
      auto x3633 = x3632 * x3620;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":92:7)
      auto x3634 = x3633 * x3628;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":92:7)
      assert(x3634 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/memio.cpp:92");
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":95:14)
      auto x3635 = x3620 * x84;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":96:14)
      auto x3636 = x3606 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":95:68)
      auto x3637 = x3613 * x41;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":95:41)
      auto x3638 = x3621 * x40;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":95:14)
      auto x3639 = x3635 + x3638;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":95:14)
      auto x3640 = x3639 + x3637;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":95:14)
      auto x3641 = x3640 + x3636;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":95:14)
      auto x3642 = x3641 + x3588;
      {
        extern_args[0] = x3642;
        extern_args[1] = x101;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x3643 = extern_outs[0];
        auto x3644 = extern_outs[1];
        auto x3645 = extern_outs[2];
        auto x3646 = extern_outs[3];
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3643);
          reg = x3643;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3644);
          reg = x3644;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[144 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3645);
          reg = x3645;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[145 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3646);
          reg = x3646;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x3647 = arg2[142 * steps + ((cycle - 0) & mask)];
      assert(x3647 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x3648 = arg2[143 * steps + ((cycle - 0) & mask)];
      assert(x3648 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x3649 = arg2[144 * steps + ((cycle - 0) & mask)];
      assert(x3649 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x3650 = arg2[145 * steps + ((cycle - 0) & mask)];
      assert(x3650 != Fp::invalid());
      // loc("zirgen/components/ram.cpp":178:3)
      {
        auto& reg = arg2[139 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3642);
        reg = x3642;
      }
      // loc("zirgen/components/ram.cpp":179:3)
      {
        auto& reg = arg2[140 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x966);
        reg = x966;
      }
      // loc("zirgen/components/ram.cpp":180:3)
      {
        auto& reg = arg2[141 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x101);
        reg = x101;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[142 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3647);
        reg = x3647;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[143 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3648);
        reg = x3648;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[144 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3649);
        reg = x3649;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[145 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3650);
        reg = x3650;
      }
      extern_args[0] = x3527;
      extern_args[1] = x3528;
      extern_args[2] = x3529;
      extern_args[3] = x3530;
      extern_args[4] = x3506;
      extern_args[5] = x3512;
      extern_args[6] = x3513;
      extern_args[7] = x3514;
      extern_args[8] = x3515;
      extern_args[9] = x3517;
      extern_args[10] = x3523;
      extern_args[11] = x3524;
      extern_args[12] = x3525;
      extern_args[13] = x3526;
      extern_args[14] = x3642;
      extern_args[15] = x3601;
      extern_args[16] = x3647;
      extern_args[17] = x3648;
      extern_args[18] = x3649;
      extern_args[19] = x3650;
      extern_log(ctx, cycle, "  imm=%w, rs1=x%u -> %w, rs2=x%u -> %w, Addr = %10x, lowBits = %u, loaded = %w", extern_args, extern_outs);
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":108:17)
      auto x3651 = x980 + x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":34:23)
      auto x3652 = x3651 + x83;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x3653 = Fp(x3652.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[6 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3653);
          reg = x3653;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x3654 = arg2[6 * steps + ((cycle - 0) & mask)];
      assert(x3654 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x3655 = x3652 - x3654;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x3656 = x3655 * x96;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x3657 = Fp(x3656.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[7 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3657);
          reg = x3657;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x3658 = arg2[7 * steps + ((cycle - 0) & mask)];
      assert(x3658 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x3659 = x3656 - x3658;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x3660 = x3659 * x96;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x3661 = Fp(x3660.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[8 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3661);
          reg = x3661;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x3662 = arg2[8 * steps + ((cycle - 0) & mask)];
      assert(x3662 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x3663 = x3660 - x3662;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x3664 = x3663 * x96;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":37:26)
        auto x3665 = Fp(x3664.asUInt32() & x81.asUInt32());
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[70 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3665);
          reg = x3665;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[0](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x3666 = arg2[70 * steps + ((cycle - 0) & mask)];
      assert(x3666 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:18)
      auto x3667 = x3664 - x3666;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:17)
      auto x3668 = x3667 * x80;
      // loc("./zirgen/components/bits.h":78:23)
      {
        auto& reg = arg2[71 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3668);
        reg = x3668;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x3669 = arg2[71 * steps + ((cycle - 0) & mask)];
      assert(x3669 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:23)
      auto x3670 = x101 - x3669;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:15)
      auto x3671 = x3669 * x3670;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:3)
      {
        auto& reg = arg2[98 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3671);
        reg = x3671;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:17)
      auto x3672 = x98 - x3669;
      // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x3673 = arg2[98 * steps + ((cycle - 0) & mask)];
      assert(x3673 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
      auto x3674 = x3673 * x3672;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
      assert(x3674 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:43");
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":109:3)
      {
        auto& reg = arg2[100 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x66);
        reg = x66;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":87:46))
      auto x3675 = arg2[203 * steps + ((cycle - 0) & mask)];
      assert(x3675 != Fp::invalid());
      if (x3675 != 0) {
        if (x100 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":87:46))
          auto x3676 = arg2[213 * steps + ((cycle - 0) & mask)];
          assert(x3676 != Fp::invalid());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":87:46)
          auto x3677 = x3676 - x101;
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":87:46)
          assert(x3677 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:87");
        }
        if (x100 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":87:46))
          auto x3678 = arg2[213 * steps + ((cycle - 0) & mask)];
          assert(x3678 != Fp::invalid());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":87:46)
          auto x3679 = x3678 + x3594;
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":87:46)
          auto x3680 = x3679 - x101;
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":87:46)
          assert(x3680 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:87");
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":87:46))
        auto x3681 = arg2[213 * steps + ((cycle - 0) & mask)];
        assert(x3681 != Fp::invalid());
        if (x3681 != 0) {
          {
            // loc("zirgen/components/bytes.cpp":106:21)
            auto x3682 = Fp(x3647.asUInt32() & x97.asUInt32());
            // loc("zirgen/components/bytes.cpp":106:12)
            {
              auto& reg = arg2[29 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x3682);
              reg = x3682;
            }
          }
        }
        if (x3593 != 0) {
          {
            // loc("zirgen/components/bytes.cpp":106:21)
            auto x3683 = Fp(x3648.asUInt32() & x97.asUInt32());
            // loc("zirgen/components/bytes.cpp":106:12)
            {
              auto& reg = arg2[29 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x3683);
              reg = x3683;
            }
          }
        }
        if (x3594 != 0) {
          {
            // loc("zirgen/components/bytes.cpp":106:21)
            auto x3684 = Fp(x3649.asUInt32() & x97.asUInt32());
            // loc("zirgen/components/bytes.cpp":106:12)
            {
              auto& reg = arg2[29 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x3684);
              reg = x3684;
            }
          }
        }
        if (x3595 != 0) {
          {
            // loc("zirgen/components/bytes.cpp":106:21)
            auto x3685 = Fp(x3650.asUInt32() & x97.asUInt32());
            // loc("zirgen/components/bytes.cpp":106:12)
            {
              auto& reg = arg2[29 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x3685);
              reg = x3685;
            }
          }
        }
        {
          // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
          auto x3686 = arg2[29 * steps + ((cycle - 0) & mask)];
          assert(x3686 != Fp::invalid());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":87:46)
          auto x3687 = Fp(x3686.asUInt32() & x65.asUInt32());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":87:46)
          auto x3688 = x3687 * x64;
          // loc("zirgen/components/bytes.cpp":111:3)
          {
            auto& reg = arg2[30 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3688);
            reg = x3688;
          }
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":87:46)
          auto x3689 = Fp(x3686.asUInt32() & x54.asUInt32());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":87:46)
          auto x3690 = x3689 * x98;
          // loc("zirgen/components/bytes.cpp":111:3)
          {
            auto& reg = arg2[31 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3690);
            reg = x3690;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x3691 = arg2[30 * steps + ((cycle - 0) & mask)];
        assert(x3691 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":87:46)
        auto x3692 = x101 - x3691;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":87:46)
        auto x3693 = x3691 * x3692;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":87:46)
        assert(x3693 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:87");
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x3694 = arg2[29 * steps + ((cycle - 0) & mask)];
        assert(x3694 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x3695 = arg2[31 * steps + ((cycle - 0) & mask)];
        assert(x3695 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":87:46)
        auto x3696 = x3691 * x65;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":87:46)
        auto x3697 = x3695 * x58;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":87:46)
        auto x3698 = x3696 + x3697;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":87:46)
        auto x3699 = x3694 - x3698;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":87:46)
        assert(x3699 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:87");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":87:46)
        auto x3700 = x3681 * x3647;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":87:46)
        auto x3701 = x3593 * x3648;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":87:46)
        auto x3702 = x3594 * x3649;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":87:46)
        auto x3703 = x3595 * x3650;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":87:46)
        auto x3704 = x3691 * x97;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":87:46)
        auto x3705 = x3700 + x3701;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":87:46)
        auto x3706 = x3705 + x3702;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":87:46)
        auto x3707 = x3706 + x3703;
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[217 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3707);
          reg = x3707;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[218 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3704);
          reg = x3704;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[219 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3704);
          reg = x3704;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[220 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3704);
          reg = x3704;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/U32Reg/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x3708 = arg2[217 * steps + ((cycle - 0) & mask)];
        assert(x3708 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/U32Reg/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x3709 = arg2[218 * steps + ((cycle - 0) & mask)];
        assert(x3709 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/U32Reg/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x3710 = arg2[219 * steps + ((cycle - 0) & mask)];
        assert(x3710 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/U32Reg/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x3711 = arg2[220 * steps + ((cycle - 0) & mask)];
        assert(x3711 != Fp::invalid());
        extern_args[0] = x3704;
        extern_args[1] = x3708;
        extern_args[2] = x3709;
        extern_args[3] = x3710;
        extern_args[4] = x3711;
        extern_log(ctx, cycle, "  fillByte = %4x, extended: %w", extern_args, extern_outs);
        if (x3538 != 0) {
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":87:46)
          auto x3712 = x3502 + x3534;
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[149 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3708);
            reg = x3708;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[150 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3709);
            reg = x3709;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[151 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3710);
            reg = x3710;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[152 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3711);
            reg = x3711;
          }
          {
            extern_args[0] = x3712;
            extern_args[1] = x3708;
            extern_args[2] = x3709;
            extern_args[3] = x3710;
            extern_args[4] = x3711;
            extern_args[5] = x98;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x3713 = arg2[149 * steps + ((cycle - 0) & mask)];
          assert(x3713 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x3714 = arg2[150 * steps + ((cycle - 0) & mask)];
          assert(x3714 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x3715 = arg2[151 * steps + ((cycle - 0) & mask)];
          assert(x3715 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x3716 = arg2[152 * steps + ((cycle - 0) & mask)];
          assert(x3716 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":178:3)
          {
            auto& reg = arg2[146 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3712);
            reg = x3712;
          }
          // loc("zirgen/components/ram.cpp":179:3)
          {
            auto& reg = arg2[147 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x966);
            reg = x966;
          }
          // loc("zirgen/components/ram.cpp":180:3)
          {
            auto& reg = arg2[148 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x98);
            reg = x98;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[149 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3713);
            reg = x3713;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[150 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3714);
            reg = x3714;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[151 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3715);
            reg = x3715;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[152 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3716);
            reg = x3716;
          }
        }
        if (x3537 != 0) {
          // loc("zirgen/components/ram.cpp":53:3)
          {
            auto& reg = arg2[146 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":54:3)
          {
            auto& reg = arg2[147 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":55:3)
          {
            auto& reg = arg2[148 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[149 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[150 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[151 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[152 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
        }
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":87:46)
        auto x3717 = x3359 - x81;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":87:46)
        assert(x3717 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:87");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":87:46)
        assert(x3352 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:87");
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
        auto x3718 = x3313 * x65;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
        auto x3719 = x3315 * x53;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":82:7)
        auto x3720 = x3315 * x97;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:21)
        auto x3721 = x3318 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:21)
        auto x3722 = x3316 * x98;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
        auto x3723 = x3718 + x3721;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
        auto x3724 = x3719 + x3722;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
        auto x3725 = x3724 + x3314;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
        auto x3726 = x3723 + x3517;
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[199 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3726);
          reg = x3726;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[200 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3725);
          reg = x3725;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[201 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3720);
          reg = x3720;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[202 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3720);
          reg = x3720;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/OneHot/hot[1](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":88:46))
      auto x3727 = arg2[204 * steps + ((cycle - 0) & mask)];
      assert(x3727 != Fp::invalid());
      if (x3727 != 0) {
        if (x100 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":88:46))
          auto x3728 = arg2[213 * steps + ((cycle - 0) & mask)];
          assert(x3728 != Fp::invalid());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":88:46)
          auto x3729 = x3728 - x101;
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":88:46)
          assert(x3729 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:88");
        }
        if (x101 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":88:46))
          auto x3730 = arg2[213 * steps + ((cycle - 0) & mask)];
          assert(x3730 != Fp::invalid());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":88:46)
          auto x3731 = x3730 + x3594;
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":88:46)
          auto x3732 = x3731 - x101;
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":88:46)
          assert(x3732 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:88");
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":88:46))
        auto x3733 = arg2[213 * steps + ((cycle - 0) & mask)];
        assert(x3733 != Fp::invalid());
        if (x3733 != 0) {
          {
            // loc("zirgen/components/bytes.cpp":106:21)
            auto x3734 = Fp(x3648.asUInt32() & x97.asUInt32());
            // loc("zirgen/components/bytes.cpp":106:12)
            {
              auto& reg = arg2[29 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x3734);
              reg = x3734;
            }
          }
        }
        if (x3594 != 0) {
          {
            // loc("zirgen/components/bytes.cpp":106:21)
            auto x3735 = Fp(x3650.asUInt32() & x97.asUInt32());
            // loc("zirgen/components/bytes.cpp":106:12)
            {
              auto& reg = arg2[29 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x3735);
              reg = x3735;
            }
          }
        }
        {
          // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
          auto x3736 = arg2[29 * steps + ((cycle - 0) & mask)];
          assert(x3736 != Fp::invalid());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":88:46)
          auto x3737 = Fp(x3736.asUInt32() & x65.asUInt32());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":88:46)
          auto x3738 = x3737 * x64;
          // loc("zirgen/components/bytes.cpp":111:3)
          {
            auto& reg = arg2[30 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3738);
            reg = x3738;
          }
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":88:46)
          auto x3739 = Fp(x3736.asUInt32() & x54.asUInt32());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":88:46)
          auto x3740 = x3739 * x98;
          // loc("zirgen/components/bytes.cpp":111:3)
          {
            auto& reg = arg2[31 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3740);
            reg = x3740;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x3741 = arg2[30 * steps + ((cycle - 0) & mask)];
        assert(x3741 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":88:46)
        auto x3742 = x101 - x3741;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":88:46)
        auto x3743 = x3741 * x3742;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":88:46)
        assert(x3743 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:88");
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x3744 = arg2[29 * steps + ((cycle - 0) & mask)];
        assert(x3744 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x3745 = arg2[31 * steps + ((cycle - 0) & mask)];
        assert(x3745 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":88:46)
        auto x3746 = x3741 * x65;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":88:46)
        auto x3747 = x3745 * x58;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":88:46)
        auto x3748 = x3746 + x3747;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":88:46)
        auto x3749 = x3744 - x3748;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":88:46)
        assert(x3749 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:88");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":88:46)
        auto x3750 = x3733 * x3647;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":88:46)
        auto x3751 = x3733 * x3648;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":88:46)
        auto x3752 = x3594 * x3649;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":88:46)
        auto x3753 = x3594 * x3650;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":88:46)
        auto x3754 = x3741 * x97;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":88:46)
        auto x3755 = x3750 + x3752;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":88:46)
        auto x3756 = x3751 + x3753;
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[217 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3755);
          reg = x3755;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[218 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3756);
          reg = x3756;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[219 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3754);
          reg = x3754;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[220 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3754);
          reg = x3754;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/U32Reg/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x3757 = arg2[217 * steps + ((cycle - 0) & mask)];
        assert(x3757 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/U32Reg/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x3758 = arg2[218 * steps + ((cycle - 0) & mask)];
        assert(x3758 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/U32Reg/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x3759 = arg2[219 * steps + ((cycle - 0) & mask)];
        assert(x3759 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/U32Reg/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x3760 = arg2[220 * steps + ((cycle - 0) & mask)];
        assert(x3760 != Fp::invalid());
        extern_args[0] = x3754;
        extern_args[1] = x3757;
        extern_args[2] = x3758;
        extern_args[3] = x3759;
        extern_args[4] = x3760;
        extern_log(ctx, cycle, "  fillByte = %4x, extended: %w", extern_args, extern_outs);
        if (x3538 != 0) {
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":88:46)
          auto x3761 = x3502 + x3534;
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[149 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3757);
            reg = x3757;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[150 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3758);
            reg = x3758;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[151 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3759);
            reg = x3759;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[152 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3760);
            reg = x3760;
          }
          {
            extern_args[0] = x3761;
            extern_args[1] = x3757;
            extern_args[2] = x3758;
            extern_args[3] = x3759;
            extern_args[4] = x3760;
            extern_args[5] = x98;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x3762 = arg2[149 * steps + ((cycle - 0) & mask)];
          assert(x3762 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x3763 = arg2[150 * steps + ((cycle - 0) & mask)];
          assert(x3763 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x3764 = arg2[151 * steps + ((cycle - 0) & mask)];
          assert(x3764 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x3765 = arg2[152 * steps + ((cycle - 0) & mask)];
          assert(x3765 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":178:3)
          {
            auto& reg = arg2[146 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3761);
            reg = x3761;
          }
          // loc("zirgen/components/ram.cpp":179:3)
          {
            auto& reg = arg2[147 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x966);
            reg = x966;
          }
          // loc("zirgen/components/ram.cpp":180:3)
          {
            auto& reg = arg2[148 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x98);
            reg = x98;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[149 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3762);
            reg = x3762;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[150 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3763);
            reg = x3763;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[151 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3764);
            reg = x3764;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[152 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3765);
            reg = x3765;
          }
        }
        if (x3537 != 0) {
          // loc("zirgen/components/ram.cpp":53:3)
          {
            auto& reg = arg2[146 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":54:3)
          {
            auto& reg = arg2[147 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":55:3)
          {
            auto& reg = arg2[148 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[149 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[150 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[151 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[152 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
        }
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":88:46)
        auto x3766 = x3359 - x81;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":88:46)
        assert(x3766 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:88");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":88:46)
        auto x3767 = x3352 - x101;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":88:46)
        assert(x3767 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:88");
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
        auto x3768 = x3313 * x65;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
        auto x3769 = x3315 * x53;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":82:7)
        auto x3770 = x3315 * x97;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:21)
        auto x3771 = x3318 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:21)
        auto x3772 = x3316 * x98;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
        auto x3773 = x3768 + x3771;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
        auto x3774 = x3769 + x3772;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
        auto x3775 = x3774 + x3314;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
        auto x3776 = x3773 + x3517;
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[199 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3776);
          reg = x3776;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[200 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3775);
          reg = x3775;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[201 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3770);
          reg = x3770;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[202 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3770);
          reg = x3770;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/OneHot/hot[2](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":89:46))
      auto x3777 = arg2[205 * steps + ((cycle - 0) & mask)];
      assert(x3777 != Fp::invalid());
      if (x3777 != 0) {
        if (x101 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":89:46))
          auto x3778 = arg2[213 * steps + ((cycle - 0) & mask)];
          assert(x3778 != Fp::invalid());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":89:46)
          auto x3779 = x3778 - x101;
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":89:46)
          assert(x3779 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:89");
        }
        if (x100 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":89:46))
          auto x3780 = arg2[213 * steps + ((cycle - 0) & mask)];
          assert(x3780 != Fp::invalid());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":89:46)
          auto x3781 = x3780 + x3594;
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":89:46)
          auto x3782 = x3781 - x101;
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":89:46)
          assert(x3782 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:89");
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":89:46))
        auto x3783 = arg2[213 * steps + ((cycle - 0) & mask)];
        assert(x3783 != Fp::invalid());
        if (x3783 != 0) {
          {
            // loc("zirgen/components/bytes.cpp":106:21)
            auto x3784 = Fp(x3650.asUInt32() & x97.asUInt32());
            // loc("zirgen/components/bytes.cpp":106:12)
            {
              auto& reg = arg2[29 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x3784);
              reg = x3784;
            }
          }
        }
        {
          // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
          auto x3785 = arg2[29 * steps + ((cycle - 0) & mask)];
          assert(x3785 != Fp::invalid());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":89:46)
          auto x3786 = Fp(x3785.asUInt32() & x65.asUInt32());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":89:46)
          auto x3787 = x3786 * x64;
          // loc("zirgen/components/bytes.cpp":111:3)
          {
            auto& reg = arg2[30 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3787);
            reg = x3787;
          }
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":89:46)
          auto x3788 = Fp(x3785.asUInt32() & x54.asUInt32());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":89:46)
          auto x3789 = x3788 * x98;
          // loc("zirgen/components/bytes.cpp":111:3)
          {
            auto& reg = arg2[31 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3789);
            reg = x3789;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x3790 = arg2[30 * steps + ((cycle - 0) & mask)];
        assert(x3790 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":89:46)
        auto x3791 = x101 - x3790;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":89:46)
        auto x3792 = x3790 * x3791;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":89:46)
        assert(x3792 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:89");
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x3793 = arg2[29 * steps + ((cycle - 0) & mask)];
        assert(x3793 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x3794 = arg2[31 * steps + ((cycle - 0) & mask)];
        assert(x3794 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":89:46)
        auto x3795 = x3790 * x65;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":89:46)
        auto x3796 = x3794 * x58;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":89:46)
        auto x3797 = x3795 + x3796;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":89:46)
        auto x3798 = x3793 - x3797;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":89:46)
        assert(x3798 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:89");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":89:46)
        auto x3799 = x3783 * x3647;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":89:46)
        auto x3800 = x3783 * x3648;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":89:46)
        auto x3801 = x3783 * x3649;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":89:46)
        auto x3802 = x3783 * x3650;
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[217 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3799);
          reg = x3799;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[218 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3800);
          reg = x3800;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[219 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3801);
          reg = x3801;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[220 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3802);
          reg = x3802;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/U32Reg/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x3803 = arg2[217 * steps + ((cycle - 0) & mask)];
        assert(x3803 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/U32Reg/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x3804 = arg2[218 * steps + ((cycle - 0) & mask)];
        assert(x3804 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/U32Reg/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x3805 = arg2[219 * steps + ((cycle - 0) & mask)];
        assert(x3805 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/U32Reg/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x3806 = arg2[220 * steps + ((cycle - 0) & mask)];
        assert(x3806 != Fp::invalid());
        extern_args[0] = x100;
        extern_args[1] = x3803;
        extern_args[2] = x3804;
        extern_args[3] = x3805;
        extern_args[4] = x3806;
        extern_log(ctx, cycle, "  fillByte = %4x, extended: %w", extern_args, extern_outs);
        if (x3538 != 0) {
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":89:46)
          auto x3807 = x3502 + x3534;
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[149 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3803);
            reg = x3803;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[150 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3804);
            reg = x3804;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[151 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3805);
            reg = x3805;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[152 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3806);
            reg = x3806;
          }
          {
            extern_args[0] = x3807;
            extern_args[1] = x3803;
            extern_args[2] = x3804;
            extern_args[3] = x3805;
            extern_args[4] = x3806;
            extern_args[5] = x98;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x3808 = arg2[149 * steps + ((cycle - 0) & mask)];
          assert(x3808 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x3809 = arg2[150 * steps + ((cycle - 0) & mask)];
          assert(x3809 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x3810 = arg2[151 * steps + ((cycle - 0) & mask)];
          assert(x3810 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x3811 = arg2[152 * steps + ((cycle - 0) & mask)];
          assert(x3811 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":178:3)
          {
            auto& reg = arg2[146 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3807);
            reg = x3807;
          }
          // loc("zirgen/components/ram.cpp":179:3)
          {
            auto& reg = arg2[147 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x966);
            reg = x966;
          }
          // loc("zirgen/components/ram.cpp":180:3)
          {
            auto& reg = arg2[148 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x98);
            reg = x98;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[149 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3808);
            reg = x3808;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[150 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3809);
            reg = x3809;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[151 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3810);
            reg = x3810;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[152 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3811);
            reg = x3811;
          }
        }
        if (x3537 != 0) {
          // loc("zirgen/components/ram.cpp":53:3)
          {
            auto& reg = arg2[146 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":54:3)
          {
            auto& reg = arg2[147 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":55:3)
          {
            auto& reg = arg2[148 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[149 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[150 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[151 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[152 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
        }
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":89:46)
        auto x3812 = x3359 - x81;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":89:46)
        assert(x3812 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:89");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":89:46)
        auto x3813 = x3352 - x98;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":89:46)
        assert(x3813 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:89");
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
        auto x3814 = x3313 * x65;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
        auto x3815 = x3315 * x53;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":82:7)
        auto x3816 = x3315 * x97;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:21)
        auto x3817 = x3318 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:21)
        auto x3818 = x3316 * x98;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
        auto x3819 = x3814 + x3817;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
        auto x3820 = x3815 + x3818;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
        auto x3821 = x3820 + x3314;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
        auto x3822 = x3819 + x3517;
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[199 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3822);
          reg = x3822;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[200 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3821);
          reg = x3821;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[201 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3816);
          reg = x3816;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[202 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3816);
          reg = x3816;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/OneHot/hot[3](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":90:46))
      auto x3823 = arg2[206 * steps + ((cycle - 0) & mask)];
      assert(x3823 != Fp::invalid());
      if (x3823 != 0) {
        if (x100 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":90:46))
          auto x3824 = arg2[213 * steps + ((cycle - 0) & mask)];
          assert(x3824 != Fp::invalid());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":90:46)
          auto x3825 = x3824 - x101;
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":90:46)
          assert(x3825 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:90");
        }
        if (x100 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":90:46))
          auto x3826 = arg2[213 * steps + ((cycle - 0) & mask)];
          assert(x3826 != Fp::invalid());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":90:46)
          auto x3827 = x3826 + x3594;
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":90:46)
          auto x3828 = x3827 - x101;
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":90:46)
          assert(x3828 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:90");
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":90:46))
        auto x3829 = arg2[213 * steps + ((cycle - 0) & mask)];
        assert(x3829 != Fp::invalid());
        if (x3829 != 0) {
          {
            // loc("zirgen/components/bytes.cpp":106:21)
            auto x3830 = Fp(x3647.asUInt32() & x97.asUInt32());
            // loc("zirgen/components/bytes.cpp":106:12)
            {
              auto& reg = arg2[29 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x3830);
              reg = x3830;
            }
          }
        }
        if (x3593 != 0) {
          {
            // loc("zirgen/components/bytes.cpp":106:21)
            auto x3831 = Fp(x3648.asUInt32() & x97.asUInt32());
            // loc("zirgen/components/bytes.cpp":106:12)
            {
              auto& reg = arg2[29 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x3831);
              reg = x3831;
            }
          }
        }
        if (x3594 != 0) {
          {
            // loc("zirgen/components/bytes.cpp":106:21)
            auto x3832 = Fp(x3649.asUInt32() & x97.asUInt32());
            // loc("zirgen/components/bytes.cpp":106:12)
            {
              auto& reg = arg2[29 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x3832);
              reg = x3832;
            }
          }
        }
        if (x3595 != 0) {
          {
            // loc("zirgen/components/bytes.cpp":106:21)
            auto x3833 = Fp(x3650.asUInt32() & x97.asUInt32());
            // loc("zirgen/components/bytes.cpp":106:12)
            {
              auto& reg = arg2[29 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x3833);
              reg = x3833;
            }
          }
        }
        {
          // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
          auto x3834 = arg2[29 * steps + ((cycle - 0) & mask)];
          assert(x3834 != Fp::invalid());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":90:46)
          auto x3835 = Fp(x3834.asUInt32() & x65.asUInt32());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":90:46)
          auto x3836 = x3835 * x64;
          // loc("zirgen/components/bytes.cpp":111:3)
          {
            auto& reg = arg2[30 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3836);
            reg = x3836;
          }
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":90:46)
          auto x3837 = Fp(x3834.asUInt32() & x54.asUInt32());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":90:46)
          auto x3838 = x3837 * x98;
          // loc("zirgen/components/bytes.cpp":111:3)
          {
            auto& reg = arg2[31 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3838);
            reg = x3838;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x3839 = arg2[30 * steps + ((cycle - 0) & mask)];
        assert(x3839 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":90:46)
        auto x3840 = x101 - x3839;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":90:46)
        auto x3841 = x3839 * x3840;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":90:46)
        assert(x3841 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:90");
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x3842 = arg2[29 * steps + ((cycle - 0) & mask)];
        assert(x3842 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x3843 = arg2[31 * steps + ((cycle - 0) & mask)];
        assert(x3843 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":90:46)
        auto x3844 = x3839 * x65;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":90:46)
        auto x3845 = x3843 * x58;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":90:46)
        auto x3846 = x3844 + x3845;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":90:46)
        auto x3847 = x3842 - x3846;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":90:46)
        assert(x3847 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:90");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":90:46)
        auto x3848 = x3829 * x3647;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":90:46)
        auto x3849 = x3593 * x3648;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":90:46)
        auto x3850 = x3594 * x3649;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":90:46)
        auto x3851 = x3595 * x3650;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":90:46)
        auto x3852 = x3848 + x3849;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":90:46)
        auto x3853 = x3852 + x3850;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":90:46)
        auto x3854 = x3853 + x3851;
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[217 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3854);
          reg = x3854;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[218 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[219 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[220 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/U32Reg/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x3855 = arg2[217 * steps + ((cycle - 0) & mask)];
        assert(x3855 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/U32Reg/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x3856 = arg2[218 * steps + ((cycle - 0) & mask)];
        assert(x3856 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/U32Reg/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x3857 = arg2[219 * steps + ((cycle - 0) & mask)];
        assert(x3857 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/U32Reg/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x3858 = arg2[220 * steps + ((cycle - 0) & mask)];
        assert(x3858 != Fp::invalid());
        extern_args[0] = x100;
        extern_args[1] = x3855;
        extern_args[2] = x3856;
        extern_args[3] = x3857;
        extern_args[4] = x3858;
        extern_log(ctx, cycle, "  fillByte = %4x, extended: %w", extern_args, extern_outs);
        if (x3538 != 0) {
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":90:46)
          auto x3859 = x3502 + x3534;
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[149 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3855);
            reg = x3855;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[150 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3856);
            reg = x3856;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[151 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3857);
            reg = x3857;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[152 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3858);
            reg = x3858;
          }
          {
            extern_args[0] = x3859;
            extern_args[1] = x3855;
            extern_args[2] = x3856;
            extern_args[3] = x3857;
            extern_args[4] = x3858;
            extern_args[5] = x98;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x3860 = arg2[149 * steps + ((cycle - 0) & mask)];
          assert(x3860 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x3861 = arg2[150 * steps + ((cycle - 0) & mask)];
          assert(x3861 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x3862 = arg2[151 * steps + ((cycle - 0) & mask)];
          assert(x3862 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x3863 = arg2[152 * steps + ((cycle - 0) & mask)];
          assert(x3863 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":178:3)
          {
            auto& reg = arg2[146 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3859);
            reg = x3859;
          }
          // loc("zirgen/components/ram.cpp":179:3)
          {
            auto& reg = arg2[147 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x966);
            reg = x966;
          }
          // loc("zirgen/components/ram.cpp":180:3)
          {
            auto& reg = arg2[148 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x98);
            reg = x98;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[149 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3860);
            reg = x3860;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[150 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3861);
            reg = x3861;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[151 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3862);
            reg = x3862;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[152 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3863);
            reg = x3863;
          }
        }
        if (x3537 != 0) {
          // loc("zirgen/components/ram.cpp":53:3)
          {
            auto& reg = arg2[146 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":54:3)
          {
            auto& reg = arg2[147 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":55:3)
          {
            auto& reg = arg2[148 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[149 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[150 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[151 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[152 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
        }
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":90:46)
        auto x3864 = x3359 - x81;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":90:46)
        assert(x3864 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:90");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":90:46)
        auto x3865 = x3352 - x83;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":90:46)
        assert(x3865 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:90");
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
        auto x3866 = x3313 * x65;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
        auto x3867 = x3315 * x53;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":82:7)
        auto x3868 = x3315 * x97;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:21)
        auto x3869 = x3318 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:21)
        auto x3870 = x3316 * x98;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
        auto x3871 = x3866 + x3869;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
        auto x3872 = x3867 + x3870;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
        auto x3873 = x3872 + x3314;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
        auto x3874 = x3871 + x3517;
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[199 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3874);
          reg = x3874;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[200 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3873);
          reg = x3873;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[201 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3868);
          reg = x3868;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[202 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3868);
          reg = x3868;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/OneHot/hot[4](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":91:46))
      auto x3875 = arg2[207 * steps + ((cycle - 0) & mask)];
      assert(x3875 != Fp::invalid());
      if (x3875 != 0) {
        if (x100 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":91:46))
          auto x3876 = arg2[213 * steps + ((cycle - 0) & mask)];
          assert(x3876 != Fp::invalid());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":91:46)
          auto x3877 = x3876 - x101;
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":91:46)
          assert(x3877 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:91");
        }
        if (x101 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":91:46))
          auto x3878 = arg2[213 * steps + ((cycle - 0) & mask)];
          assert(x3878 != Fp::invalid());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":91:46)
          auto x3879 = x3878 + x3594;
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":91:46)
          auto x3880 = x3879 - x101;
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":91:46)
          assert(x3880 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:91");
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":91:46))
        auto x3881 = arg2[213 * steps + ((cycle - 0) & mask)];
        assert(x3881 != Fp::invalid());
        if (x3881 != 0) {
          {
            // loc("zirgen/components/bytes.cpp":106:21)
            auto x3882 = Fp(x3648.asUInt32() & x97.asUInt32());
            // loc("zirgen/components/bytes.cpp":106:12)
            {
              auto& reg = arg2[29 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x3882);
              reg = x3882;
            }
          }
        }
        if (x3594 != 0) {
          {
            // loc("zirgen/components/bytes.cpp":106:21)
            auto x3883 = Fp(x3650.asUInt32() & x97.asUInt32());
            // loc("zirgen/components/bytes.cpp":106:12)
            {
              auto& reg = arg2[29 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x3883);
              reg = x3883;
            }
          }
        }
        {
          // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
          auto x3884 = arg2[29 * steps + ((cycle - 0) & mask)];
          assert(x3884 != Fp::invalid());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":91:46)
          auto x3885 = Fp(x3884.asUInt32() & x65.asUInt32());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":91:46)
          auto x3886 = x3885 * x64;
          // loc("zirgen/components/bytes.cpp":111:3)
          {
            auto& reg = arg2[30 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3886);
            reg = x3886;
          }
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":91:46)
          auto x3887 = Fp(x3884.asUInt32() & x54.asUInt32());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":91:46)
          auto x3888 = x3887 * x98;
          // loc("zirgen/components/bytes.cpp":111:3)
          {
            auto& reg = arg2[31 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3888);
            reg = x3888;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x3889 = arg2[30 * steps + ((cycle - 0) & mask)];
        assert(x3889 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":91:46)
        auto x3890 = x101 - x3889;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":91:46)
        auto x3891 = x3889 * x3890;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":91:46)
        assert(x3891 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:91");
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x3892 = arg2[29 * steps + ((cycle - 0) & mask)];
        assert(x3892 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x3893 = arg2[31 * steps + ((cycle - 0) & mask)];
        assert(x3893 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":91:46)
        auto x3894 = x3889 * x65;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":91:46)
        auto x3895 = x3893 * x58;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":91:46)
        auto x3896 = x3894 + x3895;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":91:46)
        auto x3897 = x3892 - x3896;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":91:46)
        assert(x3897 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:91");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":91:46)
        auto x3898 = x3881 * x3647;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":91:46)
        auto x3899 = x3881 * x3648;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":91:46)
        auto x3900 = x3594 * x3649;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":91:46)
        auto x3901 = x3594 * x3650;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":91:46)
        auto x3902 = x3898 + x3900;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":91:46)
        auto x3903 = x3899 + x3901;
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[217 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3902);
          reg = x3902;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[218 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3903);
          reg = x3903;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[219 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[220 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/U32Reg/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x3904 = arg2[217 * steps + ((cycle - 0) & mask)];
        assert(x3904 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/U32Reg/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x3905 = arg2[218 * steps + ((cycle - 0) & mask)];
        assert(x3905 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/U32Reg/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x3906 = arg2[219 * steps + ((cycle - 0) & mask)];
        assert(x3906 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/U32Reg/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x3907 = arg2[220 * steps + ((cycle - 0) & mask)];
        assert(x3907 != Fp::invalid());
        extern_args[0] = x100;
        extern_args[1] = x3904;
        extern_args[2] = x3905;
        extern_args[3] = x3906;
        extern_args[4] = x3907;
        extern_log(ctx, cycle, "  fillByte = %4x, extended: %w", extern_args, extern_outs);
        if (x3538 != 0) {
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":91:46)
          auto x3908 = x3502 + x3534;
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[149 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3904);
            reg = x3904;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[150 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3905);
            reg = x3905;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[151 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3906);
            reg = x3906;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[152 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3907);
            reg = x3907;
          }
          {
            extern_args[0] = x3908;
            extern_args[1] = x3904;
            extern_args[2] = x3905;
            extern_args[3] = x3906;
            extern_args[4] = x3907;
            extern_args[5] = x98;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x3909 = arg2[149 * steps + ((cycle - 0) & mask)];
          assert(x3909 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x3910 = arg2[150 * steps + ((cycle - 0) & mask)];
          assert(x3910 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x3911 = arg2[151 * steps + ((cycle - 0) & mask)];
          assert(x3911 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x3912 = arg2[152 * steps + ((cycle - 0) & mask)];
          assert(x3912 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":178:3)
          {
            auto& reg = arg2[146 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3908);
            reg = x3908;
          }
          // loc("zirgen/components/ram.cpp":179:3)
          {
            auto& reg = arg2[147 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x966);
            reg = x966;
          }
          // loc("zirgen/components/ram.cpp":180:3)
          {
            auto& reg = arg2[148 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x98);
            reg = x98;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[149 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3909);
            reg = x3909;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[150 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3910);
            reg = x3910;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[151 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3911);
            reg = x3911;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[152 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3912);
            reg = x3912;
          }
        }
        if (x3537 != 0) {
          // loc("zirgen/components/ram.cpp":53:3)
          {
            auto& reg = arg2[146 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":54:3)
          {
            auto& reg = arg2[147 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":55:3)
          {
            auto& reg = arg2[148 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[149 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[150 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[151 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[152 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
        }
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":91:46)
        auto x3913 = x3359 - x81;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":91:46)
        assert(x3913 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:91");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":91:46)
        auto x3914 = x3352 - x71;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":91:46)
        assert(x3914 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:91");
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
        auto x3915 = x3313 * x65;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
        auto x3916 = x3315 * x53;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":82:7)
        auto x3917 = x3315 * x97;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:21)
        auto x3918 = x3318 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:21)
        auto x3919 = x3316 * x98;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
        auto x3920 = x3915 + x3918;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
        auto x3921 = x3916 + x3919;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
        auto x3922 = x3921 + x3314;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
        auto x3923 = x3920 + x3517;
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[199 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3923);
          reg = x3923;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[200 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3922);
          reg = x3922;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[201 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3917);
          reg = x3917;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[202 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3917);
          reg = x3917;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/OneHot/hot[5](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":92:46))
      auto x3924 = arg2[208 * steps + ((cycle - 0) & mask)];
      assert(x3924 != Fp::invalid());
      if (x3924 != 0) {
        if (x100 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":92:46))
          auto x3925 = arg2[213 * steps + ((cycle - 0) & mask)];
          assert(x3925 != Fp::invalid());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":92:46)
          auto x3926 = x3925 - x101;
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":92:46)
          assert(x3926 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:92");
        }
        if (x100 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":92:46))
          auto x3927 = arg2[213 * steps + ((cycle - 0) & mask)];
          assert(x3927 != Fp::invalid());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":92:46)
          auto x3928 = x3927 + x3594;
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":92:46)
          auto x3929 = x3928 - x101;
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":92:46)
          assert(x3929 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:92");
        }
        // loc("zirgen/components/bytes.cpp":111:3)
        {
          auto& reg = arg2[29 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/bytes.cpp":111:3)
        {
          auto& reg = arg2[30 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/bytes.cpp":111:3)
        {
          auto& reg = arg2[31 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":92:46))
        auto x3930 = arg2[213 * steps + ((cycle - 0) & mask)];
        assert(x3930 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":92:46)
        auto x3931 = x3930 * x3523;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":92:46)
        auto x3932 = x3593 * x3523;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":92:46)
        auto x3933 = x3594 * x3523;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":92:46)
        auto x3934 = x3595 * x3523;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":92:46)
        auto x3935 = x101 - x3930;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":92:46)
        auto x3936 = x101 - x3593;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":92:46)
        auto x3937 = x101 - x3594;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":92:46)
        auto x3938 = x101 - x3595;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":92:46)
        auto x3939 = x3935 * x3647;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":92:46)
        auto x3940 = x3936 * x3648;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":92:46)
        auto x3941 = x3937 * x3649;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":92:46)
        auto x3942 = x3938 * x3650;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":92:46)
        auto x3943 = x3931 + x3939;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":92:46)
        auto x3944 = x3932 + x3940;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":92:46)
        auto x3945 = x3933 + x3941;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":92:46)
        auto x3946 = x3934 + x3942;
        extern_args[0] = x3943;
        extern_args[1] = x3944;
        extern_args[2] = x3945;
        extern_args[3] = x3946;
        extern_log(ctx, cycle, "  writeVal = %w", extern_args, extern_outs);
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[149 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3943);
          reg = x3943;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[150 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3944);
          reg = x3944;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[151 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3945);
          reg = x3945;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[152 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3946);
          reg = x3946;
        }
        {
          extern_args[0] = x3642;
          extern_args[1] = x3943;
          extern_args[2] = x3944;
          extern_args[3] = x3945;
          extern_args[4] = x3946;
          extern_args[5] = x98;
          extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x3947 = arg2[149 * steps + ((cycle - 0) & mask)];
        assert(x3947 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x3948 = arg2[150 * steps + ((cycle - 0) & mask)];
        assert(x3948 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x3949 = arg2[151 * steps + ((cycle - 0) & mask)];
        assert(x3949 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x3950 = arg2[152 * steps + ((cycle - 0) & mask)];
        assert(x3950 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[146 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3642);
          reg = x3642;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[147 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x966);
          reg = x966;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[148 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x98);
          reg = x98;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[149 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3947);
          reg = x3947;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[150 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3948);
          reg = x3948;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[151 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3949);
          reg = x3949;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[152 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3950);
          reg = x3950;
        }
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":92:46)
        auto x3951 = x3359 - x39;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":92:46)
        assert(x3951 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:92");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":92:46)
        assert(x3352 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:92");
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
        auto x3952 = x3313 * x65;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":90:7)
        auto x3953 = x3315 * x53;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":91:7)
        auto x3954 = x3315 * x97;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:21)
        auto x3955 = x3318 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":90:21)
        auto x3956 = x3316 * x98;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
        auto x3957 = x3952 + x3955;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":90:7)
        auto x3958 = x3953 + x3956;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":90:7)
        auto x3959 = x3958 + x3314;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
        auto x3960 = x3957 + x3534;
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[199 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3960);
          reg = x3960;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[200 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3959);
          reg = x3959;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[201 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3954);
          reg = x3954;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[202 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3954);
          reg = x3954;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/OneHot/hot[6](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":93:46))
      auto x3961 = arg2[209 * steps + ((cycle - 0) & mask)];
      assert(x3961 != Fp::invalid());
      if (x3961 != 0) {
        if (x100 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":93:46))
          auto x3962 = arg2[213 * steps + ((cycle - 0) & mask)];
          assert(x3962 != Fp::invalid());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":93:46)
          auto x3963 = x3962 - x101;
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":93:46)
          assert(x3963 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:93");
        }
        if (x101 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":93:46))
          auto x3964 = arg2[213 * steps + ((cycle - 0) & mask)];
          assert(x3964 != Fp::invalid());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":93:46)
          auto x3965 = x3964 + x3594;
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":93:46)
          auto x3966 = x3965 - x101;
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":93:46)
          assert(x3966 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:93");
        }
        // loc("zirgen/components/bytes.cpp":111:3)
        {
          auto& reg = arg2[29 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/bytes.cpp":111:3)
        {
          auto& reg = arg2[30 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/bytes.cpp":111:3)
        {
          auto& reg = arg2[31 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":93:46))
        auto x3967 = arg2[213 * steps + ((cycle - 0) & mask)];
        assert(x3967 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":93:46)
        auto x3968 = x3967 * x3524;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":93:46)
        auto x3969 = x3967 * x3523;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":93:46)
        auto x3970 = x3594 * x3524;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":93:46)
        auto x3971 = x3594 * x3523;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":93:46)
        auto x3972 = x101 - x3967;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":93:46)
        auto x3973 = x101 - x3594;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":93:46)
        auto x3974 = x3972 * x3647;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":93:46)
        auto x3975 = x3972 * x3648;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":93:46)
        auto x3976 = x3973 * x3649;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":93:46)
        auto x3977 = x3973 * x3650;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":93:46)
        auto x3978 = x3969 + x3974;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":93:46)
        auto x3979 = x3968 + x3975;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":93:46)
        auto x3980 = x3971 + x3976;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":93:46)
        auto x3981 = x3970 + x3977;
        extern_args[0] = x3978;
        extern_args[1] = x3979;
        extern_args[2] = x3980;
        extern_args[3] = x3981;
        extern_log(ctx, cycle, "  writeVal = %w", extern_args, extern_outs);
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[149 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3978);
          reg = x3978;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[150 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3979);
          reg = x3979;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[151 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3980);
          reg = x3980;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[152 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3981);
          reg = x3981;
        }
        {
          extern_args[0] = x3642;
          extern_args[1] = x3978;
          extern_args[2] = x3979;
          extern_args[3] = x3980;
          extern_args[4] = x3981;
          extern_args[5] = x98;
          extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x3982 = arg2[149 * steps + ((cycle - 0) & mask)];
        assert(x3982 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x3983 = arg2[150 * steps + ((cycle - 0) & mask)];
        assert(x3983 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x3984 = arg2[151 * steps + ((cycle - 0) & mask)];
        assert(x3984 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x3985 = arg2[152 * steps + ((cycle - 0) & mask)];
        assert(x3985 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[146 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3642);
          reg = x3642;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[147 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x966);
          reg = x966;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[148 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x98);
          reg = x98;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[149 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3982);
          reg = x3982;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[150 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3983);
          reg = x3983;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[151 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3984);
          reg = x3984;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[152 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3985);
          reg = x3985;
        }
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":93:46)
        auto x3986 = x3359 - x39;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":93:46)
        assert(x3986 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:93");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":93:46)
        auto x3987 = x3352 - x101;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":93:46)
        assert(x3987 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:93");
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
        auto x3988 = x3313 * x65;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":90:7)
        auto x3989 = x3315 * x53;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":91:7)
        auto x3990 = x3315 * x97;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:21)
        auto x3991 = x3318 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":90:21)
        auto x3992 = x3316 * x98;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
        auto x3993 = x3988 + x3991;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":90:7)
        auto x3994 = x3989 + x3992;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":90:7)
        auto x3995 = x3994 + x3314;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
        auto x3996 = x3993 + x3534;
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[199 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3996);
          reg = x3996;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[200 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3995);
          reg = x3995;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[201 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3990);
          reg = x3990;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[202 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3990);
          reg = x3990;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/OneHot/hot[7](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":94:46))
      auto x3997 = arg2[210 * steps + ((cycle - 0) & mask)];
      assert(x3997 != Fp::invalid());
      if (x3997 != 0) {
        if (x101 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":94:46))
          auto x3998 = arg2[213 * steps + ((cycle - 0) & mask)];
          assert(x3998 != Fp::invalid());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":94:46)
          auto x3999 = x3998 - x101;
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":94:46)
          assert(x3999 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:94");
        }
        if (x100 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":94:46))
          auto x4000 = arg2[213 * steps + ((cycle - 0) & mask)];
          assert(x4000 != Fp::invalid());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":94:46)
          auto x4001 = x4000 + x3594;
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":94:46)
          auto x4002 = x4001 - x101;
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":94:46)
          assert(x4002 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:94");
        }
        // loc("zirgen/components/bytes.cpp":111:3)
        {
          auto& reg = arg2[29 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/bytes.cpp":111:3)
        {
          auto& reg = arg2[30 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/bytes.cpp":111:3)
        {
          auto& reg = arg2[31 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":94:46))
        auto x4003 = arg2[213 * steps + ((cycle - 0) & mask)];
        assert(x4003 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":94:46)
        auto x4004 = x4003 * x3525;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":94:46)
        auto x4005 = x4003 * x3524;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":94:46)
        auto x4006 = x4003 * x3526;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":94:46)
        auto x4007 = x4003 * x3523;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":94:46)
        auto x4008 = x101 - x4003;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":94:46)
        auto x4009 = x4008 * x3647;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":94:46)
        auto x4010 = x4008 * x3648;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":94:46)
        auto x4011 = x4008 * x3649;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":94:46)
        auto x4012 = x4008 * x3650;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":94:46)
        auto x4013 = x4007 + x4009;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":94:46)
        auto x4014 = x4005 + x4010;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":94:46)
        auto x4015 = x4004 + x4011;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":94:46)
        auto x4016 = x4006 + x4012;
        extern_args[0] = x4013;
        extern_args[1] = x4014;
        extern_args[2] = x4015;
        extern_args[3] = x4016;
        extern_log(ctx, cycle, "  writeVal = %w", extern_args, extern_outs);
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[149 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4013);
          reg = x4013;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[150 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4014);
          reg = x4014;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[151 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4015);
          reg = x4015;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[152 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4016);
          reg = x4016;
        }
        {
          extern_args[0] = x3642;
          extern_args[1] = x4013;
          extern_args[2] = x4014;
          extern_args[3] = x4015;
          extern_args[4] = x4016;
          extern_args[5] = x98;
          extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x4017 = arg2[149 * steps + ((cycle - 0) & mask)];
        assert(x4017 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x4018 = arg2[150 * steps + ((cycle - 0) & mask)];
        assert(x4018 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x4019 = arg2[151 * steps + ((cycle - 0) & mask)];
        assert(x4019 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x4020 = arg2[152 * steps + ((cycle - 0) & mask)];
        assert(x4020 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[146 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3642);
          reg = x3642;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[147 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x966);
          reg = x966;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[148 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x98);
          reg = x98;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[149 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4017);
          reg = x4017;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[150 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4018);
          reg = x4018;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[151 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4019);
          reg = x4019;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[152 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4020);
          reg = x4020;
        }
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":94:46)
        auto x4021 = x3359 - x39;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":94:46)
        assert(x4021 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:94");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":94:46)
        auto x4022 = x3352 - x98;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":94:46)
        assert(x4022 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:94");
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
        auto x4023 = x3313 * x65;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":90:7)
        auto x4024 = x3315 * x53;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":91:7)
        auto x4025 = x3315 * x97;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:21)
        auto x4026 = x3318 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":90:21)
        auto x4027 = x3316 * x98;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
        auto x4028 = x4023 + x4026;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":90:7)
        auto x4029 = x4024 + x4027;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":90:7)
        auto x4030 = x4029 + x3314;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
        auto x4031 = x4028 + x3534;
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[199 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4031);
          reg = x4031;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[200 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4030);
          reg = x4030;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[201 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4025);
          reg = x4025;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[202 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4025);
          reg = x4025;
        }
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":60:7)
      auto x4032 = x3632 * x3669;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":60:7)
      auto x4033 = x4032 * x3670;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":60:7)
      assert(x4033 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:60");
    }
    // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[4](Reg)"("./zirgen/components/mux.h":59:25))
    auto x4034 = arg2[105 * steps + ((cycle - 0) & mask)];
    assert(x4034 != Fp::invalid());
    if (x4034 != 0) {
      // loc("Top/mux(Mux)/body(BodyStep)/user_mode(Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4035 = arg2[99 * steps + ((cycle - 1) & mask)];
      assert(x4035 != Fp::invalid());
      // loc("./zirgen/components/bits.h":37:23)
      {
        auto& reg = arg2[99 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4035);
        reg = x4035;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/next_major(Reg)"("zirgen/circuit/rv32im/v1/edsl/multiply.cpp":31:37))
      auto x4036 = arg2[100 * steps + ((cycle - 1) & mask)];
      assert(x4036 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/multiply.cpp":31:37)
      auto x4037 = x4036 - x66;
      // loc("zirgen/circuit/rv32im/v1/edsl/multiply.cpp":31:37)
      assert(x4037 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/multiply.cpp:31");
      // loc("zirgen/circuit/rv32im/v1/edsl/multiply.cpp":34:41)
      auto x4038 = x980 * x80;
      {
        extern_args[0] = x4038;
        extern_args[1] = x101;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x4039 = extern_outs[0];
        auto x4040 = extern_outs[1];
        auto x4041 = extern_outs[2];
        auto x4042 = extern_outs[3];
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4039);
          reg = x4039;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4040);
          reg = x4040;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[123 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4041);
          reg = x4041;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[124 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4042);
          reg = x4042;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4043 = arg2[121 * steps + ((cycle - 0) & mask)];
      assert(x4043 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4044 = arg2[122 * steps + ((cycle - 0) & mask)];
      assert(x4044 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4045 = arg2[123 * steps + ((cycle - 0) & mask)];
      assert(x4045 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4046 = arg2[124 * steps + ((cycle - 0) & mask)];
      assert(x4046 != Fp::invalid());
      // loc("zirgen/components/ram.cpp":178:3)
      {
        auto& reg = arg2[118 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4038);
        reg = x4038;
      }
      // loc("zirgen/components/ram.cpp":179:3)
      {
        auto& reg = arg2[119 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x966);
        reg = x966;
      }
      // loc("zirgen/components/ram.cpp":180:3)
      {
        auto& reg = arg2[120 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x101);
        reg = x101;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[121 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4043);
        reg = x4043;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[122 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4044);
        reg = x4044;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[123 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4045);
        reg = x4045;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[124 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4046);
        reg = x4046;
      }
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":21:16)
        auto x4047 = Fp(x4046.asUInt32() & x65.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":21:15)
        auto x4048 = x4047 * x64;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[175 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4048);
          reg = x4048;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":22:17)
        auto x4049 = Fp(x4046.asUInt32() & x61.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":22:16)
        auto x4050 = x4049 * x63;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[76 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4050);
          reg = x4050;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":23:16)
        auto x4051 = Fp(x4046.asUInt32() & x72.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":23:15)
        auto x4052 = x4051 * x60;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[174 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4052);
          reg = x4052;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":24:16)
        auto x4053 = Fp(x4046.asUInt32() & x68.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":24:15)
        auto x4054 = x4053 * x59;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[173 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4054);
          reg = x4054;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":25:17)
        auto x4055 = Fp(x4046.asUInt32() & x70.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":25:16)
        auto x4056 = x4055 * x58;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[75 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4056);
          reg = x4056;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":26:17)
        auto x4057 = Fp(x4046.asUInt32() & x101.asUInt32());
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[178 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4057);
          reg = x4057;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":27:17)
        auto x4058 = Fp(x4045.asUInt32() & x65.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":27:16)
        auto x4059 = x4058 * x64;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[177 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4059);
          reg = x4059;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":28:18)
        auto x4060 = Fp(x4045.asUInt32() & x61.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":28:17)
        auto x4061 = x4060 * x63;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[77 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4061);
          reg = x4061;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":29:17)
        auto x4062 = Fp(x4045.asUInt32() & x72.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":29:16)
        auto x4063 = x4062 * x60;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[176 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4063);
          reg = x4063;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":30:18)
        auto x4064 = Fp(x4045.asUInt32() & x76.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":30:17)
        auto x4065 = x4064 * x80;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[79 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4065);
          reg = x4065;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:18)
        auto x4066 = Fp(x4045.asUInt32() & x81.asUInt32());
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[78 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4066);
          reg = x4066;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:17)
        auto x4067 = Fp(x4044.asUInt32() & x65.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:16)
        auto x4068 = x4067 * x64;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[179 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4068);
          reg = x4068;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":33:19)
        auto x4069 = Fp(x4044.asUInt32() & x56.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":33:18)
        auto x4070 = x4069 * x57;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[180 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4070);
          reg = x4070;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":34:20)
        auto x4071 = Fp(x4044.asUInt32() & x55.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":34:19)
        auto x4072 = x4071 * x60;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[80 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4072);
          reg = x4072;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":35:17)
        auto x4073 = Fp(x4044.asUInt32() & x76.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":35:16)
        auto x4074 = x4073 * x80;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[82 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4074);
          reg = x4074;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":36:17)
        auto x4075 = Fp(x4044.asUInt32() & x81.asUInt32());
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[81 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4075);
          reg = x4075;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":37:16)
        auto x4076 = Fp(x4043.asUInt32() & x65.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":37:15)
        auto x4077 = x4076 * x64;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[181 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4077);
          reg = x4077;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":38:18)
        auto x4078 = Fp(x4043.asUInt32() & x54.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":38:5)
        {
          auto& reg = arg2[182 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4078);
          reg = x4078;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4079 = arg2[173 * steps + ((cycle - 0) & mask)];
      assert(x4079 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4080 = arg2[174 * steps + ((cycle - 0) & mask)];
      assert(x4080 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4081 = arg2[175 * steps + ((cycle - 0) & mask)];
      assert(x4081 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4082 = arg2[76 * steps + ((cycle - 0) & mask)];
      assert(x4082 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4083 = arg2[178 * steps + ((cycle - 0) & mask)];
      assert(x4083 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4084 = arg2[75 * steps + ((cycle - 0) & mask)];
      assert(x4084 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":63:10)
      auto x4085 = x4081 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":67:10)
      auto x4086 = x4082 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":67:39)
      auto x4087 = x4079 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":67:25)
      auto x4088 = x4080 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":67:10)
      auto x4089 = x4086 + x4088;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":67:10)
      auto x4090 = x4089 + x4087;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":67:10)
      auto x4091 = x4090 + x4084;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":63:10)
      auto x4092 = x4085 + x4091;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":40:21)
      auto x4093 = x4092 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":40:21)
      auto x4094 = x4093 + x4083;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":40:6)
      auto x4095 = x4046 - x4094;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":40:6)
      assert(x4095 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/decode.cpp:40");
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4096 = arg2[177 * steps + ((cycle - 0) & mask)];
      assert(x4096 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4097 = arg2[77 * steps + ((cycle - 0) & mask)];
      assert(x4097 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4098 = arg2[79 * steps + ((cycle - 0) & mask)];
      assert(x4098 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4099 = arg2[176 * steps + ((cycle - 0) & mask)];
      assert(x4099 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4100 = arg2[78 * steps + ((cycle - 0) & mask)];
      assert(x4100 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:22)
      auto x4101 = x4096 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:37)
      auto x4102 = x4097 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:69)
      auto x4103 = x4098 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:22)
      auto x4104 = x4101 + x4102;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:22)
      auto x4105 = x4104 + x4099;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:21)
      auto x4106 = x4105 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:21)
      auto x4107 = x4106 + x4103;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:21)
      auto x4108 = x4107 + x4100;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:6)
      auto x4109 = x4045 - x4108;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:6)
      assert(x4109 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/decode.cpp:41");
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4110 = arg2[179 * steps + ((cycle - 0) & mask)];
      assert(x4110 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4111 = arg2[180 * steps + ((cycle - 0) & mask)];
      assert(x4111 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4112 = arg2[82 * steps + ((cycle - 0) & mask)];
      assert(x4112 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4113 = arg2[80 * steps + ((cycle - 0) & mask)];
      assert(x4113 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4114 = arg2[81 * steps + ((cycle - 0) & mask)];
      assert(x4114 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":42:21)
      auto x4115 = x4110 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":59:10)
      auto x4116 = x4111 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":42:53)
      auto x4117 = x4112 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":59:10)
      auto x4118 = x4116 + x4113;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":42:36)
      auto x4119 = x4118 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":42:21)
      auto x4120 = x4115 + x4119;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":42:21)
      auto x4121 = x4120 + x4117;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":42:21)
      auto x4122 = x4121 + x4114;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":42:6)
      auto x4123 = x4044 - x4122;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":42:6)
      assert(x4123 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/decode.cpp:42");
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4124 = arg2[181 * steps + ((cycle - 0) & mask)];
      assert(x4124 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/Decoder/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x4125 = arg2[182 * steps + ((cycle - 0) & mask)];
      assert(x4125 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":43:21)
      auto x4126 = x4124 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":43:21)
      auto x4127 = x4126 + x4125;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":43:6)
      auto x4128 = x4043 - x4127;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":43:6)
      assert(x4128 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/decode.cpp:43");
      {
        extern_args[0] = x4043;
        extern_args[1] = x4044;
        extern_args[2] = x4045;
        extern_args[3] = x4046;
        extern_getMinor(ctx, cycle, "", extern_args, extern_outs);
        auto x4129 = extern_outs[0];
        {
          // loc("./zirgen/components/onehot.h":47:26)
          auto x4130 = (x4129 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[183 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4130);
            reg = x4130;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x4131 = x4129 - x101;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x4132 = (x4131 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[184 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4132);
            reg = x4132;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x4133 = x4129 - x98;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x4134 = (x4133 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[185 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4134);
            reg = x4134;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x4135 = x4129 - x81;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x4136 = (x4135 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[186 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4136);
            reg = x4136;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x4137 = x4129 - x83;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x4138 = (x4137 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[187 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4138);
            reg = x4138;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x4139 = x4129 - x71;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x4140 = (x4139 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[188 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4140);
            reg = x4140;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x4141 = x4129 - x70;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x4142 = (x4141 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[189 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4142);
            reg = x4142;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x4143 = x4129 - x69;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x4144 = (x4143 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[190 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4144);
            reg = x4144;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/OneHot/hot[1](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x4145 = arg2[184 * steps + ((cycle - 0) & mask)];
        assert(x4145 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/OneHot/hot[2](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x4146 = arg2[185 * steps + ((cycle - 0) & mask)];
        assert(x4146 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/OneHot/hot[3](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x4147 = arg2[186 * steps + ((cycle - 0) & mask)];
        assert(x4147 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/OneHot/hot[4](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x4148 = arg2[187 * steps + ((cycle - 0) & mask)];
        assert(x4148 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/OneHot/hot[5](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x4149 = arg2[188 * steps + ((cycle - 0) & mask)];
        assert(x4149 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/OneHot/hot[6](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x4150 = arg2[189 * steps + ((cycle - 0) & mask)];
        assert(x4150 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/OneHot/hot[7](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x4151 = arg2[190 * steps + ((cycle - 0) & mask)];
        assert(x4151 != Fp::invalid());
        // loc("./zirgen/components/onehot.h":56:19)
        auto x4152 = x4146 * x98;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x4153 = x4147 * x81;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x4154 = x4148 * x83;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x4155 = x4149 * x71;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x4156 = x4150 * x70;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x4157 = x4151 * x69;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x4158 = x4145 + x4152;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x4159 = x4158 + x4153;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x4160 = x4159 + x4154;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x4161 = x4160 + x4155;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x4162 = x4161 + x4156;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x4163 = x4162 + x4157;
        // loc("./zirgen/components/onehot.h":50:8)
        auto x4164 = x4163 - x4129;
        // loc("./zirgen/components/onehot.h":50:8)
        assert(x4164 == 0 && "eqz failed at: ./zirgen/components/onehot.h:50");
      }
      extern_args[0] = x100;
      extern_args[1] = x100;
      extern_args[2] = x100;
      extern_args[3] = x100;
      extern_args[4] = x100;
      extern_log(ctx, cycle, "  useImm=%u, usePo2=%u, signedA=%u, signedB=%u, useHigh=%u", extern_args, extern_outs);
      // loc("zirgen/circuit/rv32im/v1/edsl/multiply.cpp":68:57)
      auto x4165 = x4035 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/multiply.cpp":68:39)
      auto x4166 = x52 - x4165;
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/OneHot/hot[1](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":113:49))
      auto x4167 = arg2[184 * steps + ((cycle - 0) & mask)];
      assert(x4167 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/OneHot/hot[2](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":114:49))
      auto x4168 = arg2[185 * steps + ((cycle - 0) & mask)];
      assert(x4168 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/OneHot/hot[3](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":115:49))
      auto x4169 = arg2[186 * steps + ((cycle - 0) & mask)];
      assert(x4169 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/OneHot/hot[4](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":116:49))
      auto x4170 = arg2[187 * steps + ((cycle - 0) & mask)];
      assert(x4170 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/OneHot/hot[5](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":117:49))
      auto x4171 = arg2[188 * steps + ((cycle - 0) & mask)];
      assert(x4171 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":47:10)
      auto x4172 = x4098 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":47:26)
      auto x4173 = x4100 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":47:10)
      auto x4174 = x4172 + x4173;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":47:10)
      auto x4175 = x4174 + x4110;
      // loc("zirgen/circuit/rv32im/v1/edsl/multiply.cpp":68:39)
      auto x4176 = x4166 + x4175;
      // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":114:49)
      auto x4177 = x4167 + x4168;
      // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":115:49)
      auto x4178 = x4177 + x4169;
      // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":117:49)
      auto x4179 = x4170 + x4171;
      {
        extern_args[0] = x4176;
        extern_args[1] = x101;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x4180 = extern_outs[0];
        auto x4181 = extern_outs[1];
        auto x4182 = extern_outs[2];
        auto x4183 = extern_outs[3];
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[128 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4180);
          reg = x4180;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[129 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4181);
          reg = x4181;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[130 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4182);
          reg = x4182;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[131 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4183);
          reg = x4183;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4184 = arg2[128 * steps + ((cycle - 0) & mask)];
      assert(x4184 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4185 = arg2[129 * steps + ((cycle - 0) & mask)];
      assert(x4185 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4186 = arg2[130 * steps + ((cycle - 0) & mask)];
      assert(x4186 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4187 = arg2[131 * steps + ((cycle - 0) & mask)];
      assert(x4187 != Fp::invalid());
      // loc("zirgen/components/ram.cpp":178:3)
      {
        auto& reg = arg2[125 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4176);
        reg = x4176;
      }
      // loc("zirgen/components/ram.cpp":179:3)
      {
        auto& reg = arg2[126 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x966);
        reg = x966;
      }
      // loc("zirgen/components/ram.cpp":180:3)
      {
        auto& reg = arg2[127 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x101);
        reg = x101;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[128 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4184);
        reg = x4184;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[129 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4185);
        reg = x4185;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[130 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4186);
        reg = x4186;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[131 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4187);
        reg = x4187;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":51:10)
      auto x4188 = x4083 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":51:10)
      auto x4189 = x4188 + x4105;
      // loc("zirgen/circuit/rv32im/v1/edsl/multiply.cpp":69:39)
      auto x4190 = x4166 + x4189;
      {
        extern_args[0] = x4190;
        extern_args[1] = x101;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x4191 = extern_outs[0];
        auto x4192 = extern_outs[1];
        auto x4193 = extern_outs[2];
        auto x4194 = extern_outs[3];
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4191);
          reg = x4191;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4192);
          reg = x4192;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[137 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4193);
          reg = x4193;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[138 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4194);
          reg = x4194;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4195 = arg2[135 * steps + ((cycle - 0) & mask)];
      assert(x4195 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4196 = arg2[136 * steps + ((cycle - 0) & mask)];
      assert(x4196 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4197 = arg2[137 * steps + ((cycle - 0) & mask)];
      assert(x4197 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4198 = arg2[138 * steps + ((cycle - 0) & mask)];
      assert(x4198 != Fp::invalid());
      // loc("zirgen/components/ram.cpp":178:3)
      {
        auto& reg = arg2[132 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4190);
        reg = x4190;
      }
      // loc("zirgen/components/ram.cpp":179:3)
      {
        auto& reg = arg2[133 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x966);
        reg = x966;
      }
      // loc("zirgen/components/ram.cpp":180:3)
      {
        auto& reg = arg2[134 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x101);
        reg = x101;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[135 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4195);
        reg = x4195;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[136 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4196);
        reg = x4196;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[137 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4197);
        reg = x4197;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[138 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4198);
        reg = x4198;
      }
      extern_args[0] = x4175;
      extern_args[1] = x4184;
      extern_args[2] = x4185;
      extern_args[3] = x4186;
      extern_args[4] = x4187;
      extern_args[5] = x4189;
      extern_args[6] = x4195;
      extern_args[7] = x4196;
      extern_args[8] = x4197;
      extern_args[9] = x4198;
      extern_log(ctx, cycle, "  rs1=x%u -> %w, rs2=x%u -> %w", extern_args, extern_outs);
      // loc("zirgen/circuit/rv32im/v1/edsl/multiply.cpp":75:35)
      auto x4199 = x101 - x4171;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
      auto x4200 = x4079 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:21)
      auto x4201 = x4084 * x62;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x4202 = x4199 * x4195;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
      auto x4203 = x4200 + x4201;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
      auto x4204 = x4203 + x4189;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x4205 = x4171 * x4204;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x4206 = x4205 + x4202;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/multiply.cpp":77:16)
        auto x4207 = Fp(x4206.asUInt32() & x38.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/multiply.cpp":77:15)
        auto x4208 = x4207 * x57;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[83 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4208);
          reg = x4208;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/multiply.cpp":78:16)
        auto x4209 = Fp(x4206.asUInt32() & x62.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/multiply.cpp":78:15)
        auto x4210 = x4209 * x63;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[191 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4210);
          reg = x4210;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/multiply.cpp":79:14)
        auto x4211 = Fp(x4206.asUInt32() & x37.asUInt32());
        {
          // loc("zirgen/components/u32.cpp":203:21)
          auto x4212 = Fp(x4211.asUInt32() & x101.asUInt32());
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[192 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4212);
            reg = x4212;
          }
          // loc("zirgen/components/u32.cpp":203:21)
          auto x4213 = Fp(x4211.asUInt32() & x98.asUInt32());
          // loc("zirgen/components/u32.cpp":203:20)
          auto x4214 = x4213 * x58;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[193 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4214);
            reg = x4214;
          }
          // loc("zirgen/components/u32.cpp":203:21)
          auto x4215 = Fp(x4211.asUInt32() & x83.asUInt32());
          // loc("zirgen/components/u32.cpp":203:20)
          auto x4216 = x4215 * x80;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[194 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4216);
            reg = x4216;
          }
          // loc("zirgen/components/u32.cpp":203:21)
          auto x4217 = Fp(x4211.asUInt32() & x68.asUInt32());
          // loc("zirgen/components/u32.cpp":203:20)
          auto x4218 = x4217 * x59;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[195 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4218);
            reg = x4218;
          }
          // loc("zirgen/components/u32.cpp":203:21)
          auto x4219 = Fp(x4211.asUInt32() & x72.asUInt32());
          // loc("zirgen/components/u32.cpp":203:20)
          auto x4220 = x4219 * x60;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[196 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4220);
            reg = x4220;
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x4221 = arg2[192 * steps + ((cycle - 0) & mask)];
          assert(x4221 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x4222 = arg2[193 * steps + ((cycle - 0) & mask)];
          assert(x4222 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x4223 = arg2[194 * steps + ((cycle - 0) & mask)];
          assert(x4223 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x4224 = arg2[196 * steps + ((cycle - 0) & mask)];
          assert(x4224 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x4225 = arg2[195 * steps + ((cycle - 0) & mask)];
          assert(x4225 != Fp::invalid());
          // loc("zirgen/components/u32.cpp":205:42)
          auto x4226 = x4222 * x81;
          // loc("zirgen/components/u32.cpp":205:21)
          auto x4227 = x4223 * x73;
          // loc("zirgen/components/u32.cpp":206:15)
          auto x4228 = x4224 * x98;
          // loc("zirgen/components/u32.cpp":205:17)
          auto x4229 = x4227 + x101;
          // loc("zirgen/components/u32.cpp":206:15)
          auto x4230 = x4228 + x4225;
          // loc("zirgen/components/u32.cpp":205:58)
          auto x4231 = x4221 + x101;
          // loc("zirgen/components/u32.cpp":205:38)
          auto x4232 = x4226 + x101;
          // loc("zirgen/components/u32.cpp":208:13)
          auto x4233 = (x4230 == 0) ? Fp(1) : Fp(0);
          // loc("zirgen/components/u32.cpp":205:16)
          auto x4234 = x4229 * x4232;
          // loc("zirgen/components/u32.cpp":205:16)
          auto x4235 = x4234 * x4231;
          // loc("zirgen/components/u32.cpp":208:34)
          auto x4236 = x4230 - x101;
          // loc("zirgen/components/u32.cpp":208:55)
          auto x4237 = x4230 - x98;
          // loc("zirgen/components/u32.cpp":208:76)
          auto x4238 = x4230 - x81;
          // loc("zirgen/components/u32.cpp":208:34)
          auto x4239 = (x4236 == 0) ? Fp(1) : Fp(0);
          // loc("zirgen/components/u32.cpp":208:55)
          auto x4240 = (x4237 == 0) ? Fp(1) : Fp(0);
          // loc("zirgen/components/u32.cpp":208:76)
          auto x4241 = (x4238 == 0) ? Fp(1) : Fp(0);
          // loc("zirgen/components/u32.cpp":208:9)
          auto x4242 = x4233 * x4235;
          // loc("zirgen/components/u32.cpp":208:30)
          auto x4243 = x4239 * x4235;
          // loc("zirgen/components/u32.cpp":208:51)
          auto x4244 = x4240 * x4235;
          // loc("zirgen/components/u32.cpp":208:72)
          auto x4245 = x4241 * x4235;
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4242);
            reg = x4242;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4243);
            reg = x4243;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[199 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4244);
            reg = x4244;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[200 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4245);
            reg = x4245;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x4246 = arg2[192 * steps + ((cycle - 0) & mask)];
        assert(x4246 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x4247 = arg2[193 * steps + ((cycle - 0) & mask)];
        assert(x4247 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x4248 = arg2[194 * steps + ((cycle - 0) & mask)];
        assert(x4248 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x4249 = arg2[195 * steps + ((cycle - 0) & mask)];
        assert(x4249 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x4250 = arg2[196 * steps + ((cycle - 0) & mask)];
        assert(x4250 != Fp::invalid());
        // loc("zirgen/components/u32.cpp":217:17)
        auto x4251 = x4247 * x98;
        // loc("zirgen/components/u32.cpp":217:17)
        auto x4252 = x4248 * x83;
        // loc("zirgen/components/u32.cpp":217:17)
        auto x4253 = x4249 * x68;
        // loc("zirgen/components/u32.cpp":217:17)
        auto x4254 = x4250 * x72;
        // loc("zirgen/components/u32.cpp":217:11)
        auto x4255 = x4246 + x4251;
        // loc("zirgen/components/u32.cpp":217:11)
        auto x4256 = x4255 + x4252;
        // loc("zirgen/components/u32.cpp":217:11)
        auto x4257 = x4256 + x4253;
        // loc("zirgen/components/u32.cpp":217:11)
        auto x4258 = x4257 + x4254;
        // loc("zirgen/components/u32.cpp":211:6)
        auto x4259 = x4258 - x4211;
        // loc("zirgen/components/u32.cpp":211:6)
        assert(x4259 == 0 && "eqz failed at: zirgen/components/u32.cpp:211");
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4260 = arg2[191 * steps + ((cycle - 0) & mask)];
      assert(x4260 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4261 = arg2[192 * steps + ((cycle - 0) & mask)];
      assert(x4261 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4262 = arg2[193 * steps + ((cycle - 0) & mask)];
      assert(x4262 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4263 = arg2[194 * steps + ((cycle - 0) & mask)];
      assert(x4263 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4264 = arg2[195 * steps + ((cycle - 0) & mask)];
      assert(x4264 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4265 = arg2[196 * steps + ((cycle - 0) & mask)];
      assert(x4265 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4266 = arg2[83 * steps + ((cycle - 0) & mask)];
      assert(x4266 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/multiply.cpp":81:23)
      auto x4267 = x4266 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/multiply.cpp":81:37)
      auto x4268 = x4260 * x62;
      // loc("zirgen/components/u32.cpp":217:17)
      auto x4269 = x4262 * x98;
      // loc("zirgen/components/u32.cpp":217:17)
      auto x4270 = x4263 * x83;
      // loc("zirgen/components/u32.cpp":217:17)
      auto x4271 = x4264 * x68;
      // loc("zirgen/components/u32.cpp":217:17)
      auto x4272 = x4265 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/multiply.cpp":81:23)
      auto x4273 = x4267 + x4268;
      // loc("zirgen/components/u32.cpp":217:11)
      auto x4274 = x4261 + x4269;
      // loc("zirgen/components/u32.cpp":217:11)
      auto x4275 = x4274 + x4270;
      // loc("zirgen/components/u32.cpp":217:11)
      auto x4276 = x4275 + x4271;
      // loc("zirgen/components/u32.cpp":217:11)
      auto x4277 = x4276 + x4272;
      // loc("zirgen/circuit/rv32im/v1/edsl/multiply.cpp":81:23)
      auto x4278 = x4273 + x4277;
      // loc("zirgen/circuit/rv32im/v1/edsl/multiply.cpp":81:6)
      auto x4279 = x4206 - x4278;
      // loc("zirgen/circuit/rv32im/v1/edsl/multiply.cpp":81:6)
      assert(x4279 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/multiply.cpp:81");
      // loc("zirgen/circuit/rv32im/v1/edsl/multiply.cpp":84:42)
      auto x4280 = x101 - x4179;
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/U32Po2/U32Reg/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4281 = arg2[197 * steps + ((cycle - 0) & mask)];
      assert(x4281 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/U32Po2/U32Reg/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4282 = arg2[198 * steps + ((cycle - 0) & mask)];
      assert(x4282 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/U32Po2/U32Reg/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4283 = arg2[199 * steps + ((cycle - 0) & mask)];
      assert(x4283 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/U32Po2/U32Reg/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4284 = arg2[200 * steps + ((cycle - 0) & mask)];
      assert(x4284 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":121:20)
      auto x4285 = x4179 * x4281;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x4286 = x4179 * x4282;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x4287 = x4179 * x4283;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x4288 = x4179 * x4284;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x4289 = x4280 * x4195;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x4290 = x4280 * x4196;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x4291 = x4280 * x4197;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x4292 = x4280 * x4198;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x4293 = x4285 + x4289;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x4294 = x4286 + x4290;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x4295 = x4287 + x4291;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x4296 = x4288 + x4292;
      {
        // loc("zirgen/components/u32.cpp":136:18)
        auto x4297 = Fp(x4187.asUInt32() & x65.asUInt32());
        // loc("zirgen/components/u32.cpp":136:17)
        auto x4298 = x4297 * x64;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[201 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4298);
          reg = x4298;
        }
        // loc("zirgen/components/u32.cpp":137:25)
        auto x4299 = Fp(x4187.asUInt32() & x54.asUInt32());
        // loc("zirgen/components/u32.cpp":137:24)
        auto x4300 = x4299 * x98;
        // loc("zirgen/components/bytes.cpp":111:3)
        {
          auto& reg = arg2[18 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4300);
          reg = x4300;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
      auto x4301 = arg2[18 * steps + ((cycle - 0) & mask)];
      assert(x4301 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/U32Mul/TopBit/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4302 = arg2[201 * steps + ((cycle - 0) & mask)];
      assert(x4302 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":139:19)
      auto x4303 = x4302 * x65;
      // loc("zirgen/components/u32.cpp":139:34)
      auto x4304 = x4301 * x58;
      // loc("zirgen/components/u32.cpp":139:19)
      auto x4305 = x4303 + x4304;
      // loc("zirgen/components/u32.cpp":139:6)
      auto x4306 = x4187 - x4305;
      // loc("zirgen/components/u32.cpp":139:6)
      assert(x4306 == 0 && "eqz failed at: zirgen/components/u32.cpp:139");
      {
        // loc("zirgen/components/u32.cpp":136:18)
        auto x4307 = Fp(x4296.asUInt32() & x65.asUInt32());
        // loc("zirgen/components/u32.cpp":136:17)
        auto x4308 = x4307 * x64;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[202 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4308);
          reg = x4308;
        }
        // loc("zirgen/components/u32.cpp":137:25)
        auto x4309 = Fp(x4296.asUInt32() & x54.asUInt32());
        // loc("zirgen/components/u32.cpp":137:24)
        auto x4310 = x4309 * x98;
        // loc("zirgen/components/bytes.cpp":111:3)
        {
          auto& reg = arg2[19 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4310);
          reg = x4310;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
      auto x4311 = arg2[19 * steps + ((cycle - 0) & mask)];
      assert(x4311 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/U32Mul/TopBit/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4312 = arg2[202 * steps + ((cycle - 0) & mask)];
      assert(x4312 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":139:19)
      auto x4313 = x4312 * x65;
      // loc("zirgen/components/u32.cpp":139:34)
      auto x4314 = x4311 * x58;
      // loc("zirgen/components/u32.cpp":139:19)
      auto x4315 = x4313 + x4314;
      // loc("zirgen/components/u32.cpp":139:6)
      auto x4316 = x4296 - x4315;
      // loc("zirgen/components/u32.cpp":139:6)
      assert(x4316 == 0 && "eqz failed at: zirgen/components/u32.cpp:139");
      // loc("zirgen/components/u32.cpp":229:13)
      auto x4317 = x4167 * x4312;
      // loc("zirgen/components/u32.cpp":229:3)
      {
        auto& reg = arg2[203 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4317);
        reg = x4317;
      }
      // loc("zirgen/components/u32.cpp":230:13)
      auto x4318 = x4177 * x4302;
      // loc("zirgen/components/u32.cpp":230:3)
      {
        auto& reg = arg2[204 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4318);
        reg = x4318;
      }
      // loc("zirgen/components/u32.cpp":245:31)
      auto x4319 = x4184 * x4293;
      // loc("zirgen/components/u32.cpp":245:31)
      auto x4320 = x4185 * x4293;
      // loc("zirgen/components/u32.cpp":245:31)
      auto x4321 = x4184 * x4294;
      // loc("zirgen/components/u32.cpp":245:20)
      auto x4322 = x4320 + x4321;
      // loc("zirgen/components/u32.cpp":247:19)
      auto x4323 = x4322 * x95;
      // loc("zirgen/components/u32.cpp":247:13)
      auto x4324 = x4319 + x4323;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x4325 = Fp(x4324.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[20 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4325);
          reg = x4325;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x4326 = arg2[20 * steps + ((cycle - 0) & mask)];
      assert(x4326 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x4327 = x4324 - x4326;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x4328 = x4327 * x96;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x4329 = Fp(x4328.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[21 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4329);
          reg = x4329;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x4330 = arg2[21 * steps + ((cycle - 0) & mask)];
      assert(x4330 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x4331 = x4328 - x4330;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x4332 = x4331 * x96;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x4333 = Fp(x4332.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[22 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4333);
          reg = x4333;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x4334 = arg2[22 * steps + ((cycle - 0) & mask)];
      assert(x4334 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x4335 = x4332 - x4334;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x4336 = x4335 * x96;
      // loc("./zirgen/components/bits.h":78:23)
      {
        auto& reg = arg2[84 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4336);
        reg = x4336;
      }
      // loc("zirgen/components/u32.cpp":245:31)
      auto x4337 = x4186 * x4293;
      // loc("zirgen/components/u32.cpp":245:31)
      auto x4338 = x4187 * x4293;
      // loc("zirgen/components/u32.cpp":245:31)
      auto x4339 = x4184 * x4295;
      // loc("zirgen/components/u32.cpp":245:31)
      auto x4340 = x4184 * x4296;
      // loc("zirgen/components/u32.cpp":245:31)
      auto x4341 = x4185 * x4294;
      // loc("zirgen/components/u32.cpp":245:31)
      auto x4342 = x4185 * x4295;
      // loc("zirgen/components/u32.cpp":245:31)
      auto x4343 = x4186 * x4294;
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/U32Mul/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4344 = arg2[84 * steps + ((cycle - 0) & mask)];
      assert(x4344 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":235:19)
      auto x4345 = x4344 * x95;
      // loc("zirgen/components/u32.cpp":245:20)
      auto x4346 = x4337 + x4341;
      // loc("zirgen/components/u32.cpp":245:20)
      auto x4347 = x4338 + x4343;
      // loc("zirgen/components/u32.cpp":245:20)
      auto x4348 = x4346 + x4339;
      // loc("zirgen/components/u32.cpp":245:20)
      auto x4349 = x4347 + x4342;
      // loc("zirgen/components/u32.cpp":235:13)
      auto x4350 = x4334 + x4345;
      // loc("zirgen/components/u32.cpp":245:20)
      auto x4351 = x4349 + x4340;
      // loc("zirgen/components/u32.cpp":247:13)
      auto x4352 = x4350 + x4348;
      // loc("zirgen/components/u32.cpp":247:19)
      auto x4353 = x4351 * x95;
      // loc("zirgen/components/u32.cpp":247:13)
      auto x4354 = x4352 + x4353;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x4355 = Fp(x4354.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[23 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4355);
          reg = x4355;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x4356 = arg2[23 * steps + ((cycle - 0) & mask)];
      assert(x4356 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x4357 = x4354 - x4356;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x4358 = x4357 * x96;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x4359 = Fp(x4358.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[24 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4359);
          reg = x4359;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x4360 = arg2[24 * steps + ((cycle - 0) & mask)];
      assert(x4360 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x4361 = x4358 - x4360;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x4362 = x4361 * x96;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x4363 = Fp(x4362.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[25 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4363);
          reg = x4363;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x4364 = arg2[25 * steps + ((cycle - 0) & mask)];
      assert(x4364 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x4365 = x4362 - x4364;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x4366 = x4365 * x96;
      // loc("./zirgen/components/bits.h":78:23)
      {
        auto& reg = arg2[85 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4366);
        reg = x4366;
      }
      // loc("zirgen/components/u32.cpp":245:31)
      auto x4367 = x4187 * x4294;
      // loc("zirgen/components/u32.cpp":245:31)
      auto x4368 = x4187 * x4295;
      // loc("zirgen/components/u32.cpp":251:37)
      auto x4369 = x4294 * x95;
      // loc("zirgen/components/u32.cpp":245:31)
      auto x4370 = x4185 * x4296;
      // loc("zirgen/components/u32.cpp":250:53)
      auto x4371 = x4185 * x95;
      // loc("zirgen/components/u32.cpp":245:31)
      auto x4372 = x4186 * x4295;
      // loc("zirgen/components/u32.cpp":245:31)
      auto x4373 = x4186 * x4296;
      // loc("zirgen/components/u32.cpp":251:22)
      auto x4374 = x4293 + x4369;
      // loc("zirgen/components/u32.cpp":250:38)
      auto x4375 = x4184 + x4371;
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/U32Mul/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x4376 = arg2[203 * steps + ((cycle - 0) & mask)];
      assert(x4376 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/U32Mul/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x4377 = arg2[204 * steps + ((cycle - 0) & mask)];
      assert(x4377 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/U32Mul/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4378 = arg2[85 * steps + ((cycle - 0) & mask)];
      assert(x4378 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":250:30)
      auto x4379 = x4376 * x4375;
      // loc("zirgen/components/u32.cpp":251:14)
      auto x4380 = x4377 * x4374;
      // loc("zirgen/components/u32.cpp":235:19)
      auto x4381 = x4378 * x95;
      // loc("zirgen/components/u32.cpp":245:20)
      auto x4382 = x4367 + x4372;
      // loc("zirgen/components/u32.cpp":245:20)
      auto x4383 = x4368 + x4373;
      // loc("zirgen/components/u32.cpp":245:20)
      auto x4384 = x4382 + x4370;
      // loc("zirgen/components/u32.cpp":247:19)
      auto x4385 = x4383 * x95;
      // loc("zirgen/components/u32.cpp":235:13)
      auto x4386 = x4364 + x4381;
      // loc("zirgen/components/u32.cpp":247:13)
      auto x4387 = x4386 + x4384;
      // loc("zirgen/components/u32.cpp":247:13)
      auto x4388 = x4387 + x4385;
      // loc("zirgen/components/u32.cpp":250:13)
      auto x4389 = x4388 + x36;
      // loc("zirgen/components/u32.cpp":250:13)
      auto x4390 = x4389 - x4379;
      // loc("zirgen/components/u32.cpp":250:13)
      auto x4391 = x4390 - x4380;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x4392 = Fp(x4391.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[26 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4392);
          reg = x4392;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x4393 = arg2[26 * steps + ((cycle - 0) & mask)];
      assert(x4393 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x4394 = x4391 - x4393;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x4395 = x4394 * x96;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x4396 = Fp(x4395.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[27 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4396);
          reg = x4396;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x4397 = arg2[27 * steps + ((cycle - 0) & mask)];
      assert(x4397 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x4398 = x4395 - x4397;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x4399 = x4398 * x96;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x4400 = Fp(x4399.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[28 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4400);
          reg = x4400;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x4401 = arg2[28 * steps + ((cycle - 0) & mask)];
      assert(x4401 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x4402 = x4399 - x4401;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x4403 = x4402 * x96;
      // loc("./zirgen/components/bits.h":78:23)
      {
        auto& reg = arg2[86 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4403);
        reg = x4403;
      }
      // loc("zirgen/components/u32.cpp":245:31)
      auto x4404 = x4187 * x4296;
      // loc("zirgen/components/u32.cpp":255:37)
      auto x4405 = x4296 * x95;
      // loc("zirgen/components/u32.cpp":254:53)
      auto x4406 = x4187 * x95;
      // loc("zirgen/components/u32.cpp":255:22)
      auto x4407 = x4295 + x4405;
      // loc("zirgen/components/u32.cpp":254:38)
      auto x4408 = x4186 + x4406;
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/U32Mul/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4409 = arg2[86 * steps + ((cycle - 0) & mask)];
      assert(x4409 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":254:30)
      auto x4410 = x4376 * x4408;
      // loc("zirgen/components/u32.cpp":255:14)
      auto x4411 = x4377 * x4407;
      // loc("zirgen/components/u32.cpp":235:19)
      auto x4412 = x4409 * x95;
      // loc("zirgen/components/u32.cpp":235:13)
      auto x4413 = x4401 + x4412;
      // loc("zirgen/components/u32.cpp":247:13)
      auto x4414 = x4413 + x4404;
      // loc("zirgen/components/u32.cpp":254:13)
      auto x4415 = x4414 + x35;
      // loc("zirgen/components/u32.cpp":254:13)
      auto x4416 = x4415 - x4410;
      // loc("zirgen/components/u32.cpp":254:13)
      auto x4417 = x4416 - x4411;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x4418 = Fp(x4417.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[29 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4418);
          reg = x4418;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x4419 = arg2[29 * steps + ((cycle - 0) & mask)];
      assert(x4419 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x4420 = x4417 - x4419;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x4421 = x4420 * x96;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x4422 = Fp(x4421.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[30 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4422);
          reg = x4422;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x4423 = arg2[30 * steps + ((cycle - 0) & mask)];
      assert(x4423 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x4424 = x4421 - x4423;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x4425 = x4424 * x96;
      // loc("./zirgen/components/bits.h":78:23)
      {
        auto& reg = arg2[87 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4425);
        reg = x4425;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":55:10)
      auto x4426 = x4112 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":55:25)
      auto x4427 = x4114 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":55:10)
      auto x4428 = x4426 + x4427;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":55:10)
      auto x4429 = x4428 + x4124;
      {
        // loc("zirgen/components/iszero.cpp":21:24)
        auto x4430 = (x4429 == 0) ? Fp(1) : Fp(0);
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[205 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4430);
          reg = x4430;
        }
        // loc("zirgen/components/iszero.cpp":22:21)
        auto x4431 = inv(x4429);
        // loc("zirgen/components/iszero.cpp":22:5)
        {
          auto& reg = arg2[206 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4431);
          reg = x4431;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/IsZero/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4432 = arg2[205 * steps + ((cycle - 0) & mask)];
      assert(x4432 != Fp::invalid());
      if (x4432 != 0) {
        // loc("zirgen/components/iszero.cpp":26:23)
        assert(x4429 == 0 && "eqz failed at: zirgen/components/iszero.cpp:26");
      }
      // loc("zirgen/components/iszero.cpp":28:19)
      auto x4433 = x101 - x4432;
      if (x4433 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/IsZero/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x4434 = arg2[206 * steps + ((cycle - 0) & mask)];
        assert(x4434 != Fp::invalid());
        // loc("zirgen/components/iszero.cpp":28:26)
        auto x4435 = x4429 * x4434;
        // loc("zirgen/components/iszero.cpp":28:26)
        auto x4436 = x4435 - x101;
        // loc("zirgen/components/iszero.cpp":28:26)
        assert(x4436 == 0 && "eqz failed at: zirgen/components/iszero.cpp:28");
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/multiply.cpp":92:17)
      auto x4437 = x980 + x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":34:23)
      auto x4438 = x4437 + x83;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x4439 = Fp(x4438.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[6 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4439);
          reg = x4439;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x4440 = arg2[6 * steps + ((cycle - 0) & mask)];
      assert(x4440 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x4441 = x4438 - x4440;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x4442 = x4441 * x96;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x4443 = Fp(x4442.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[7 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4443);
          reg = x4443;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x4444 = arg2[7 * steps + ((cycle - 0) & mask)];
      assert(x4444 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x4445 = x4442 - x4444;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x4446 = x4445 * x96;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x4447 = Fp(x4446.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[8 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4447);
          reg = x4447;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x4448 = arg2[8 * steps + ((cycle - 0) & mask)];
      assert(x4448 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x4449 = x4446 - x4448;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x4450 = x4449 * x96;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":37:26)
        auto x4451 = Fp(x4450.asUInt32() & x81.asUInt32());
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[70 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4451);
          reg = x4451;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[0](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4452 = arg2[70 * steps + ((cycle - 0) & mask)];
      assert(x4452 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:18)
      auto x4453 = x4450 - x4452;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:17)
      auto x4454 = x4453 * x80;
      // loc("./zirgen/components/bits.h":78:23)
      {
        auto& reg = arg2[71 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4454);
        reg = x4454;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4455 = arg2[71 * steps + ((cycle - 0) & mask)];
      assert(x4455 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:23)
      auto x4456 = x101 - x4455;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:15)
      auto x4457 = x4455 * x4456;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:3)
      {
        auto& reg = arg2[98 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4457);
        reg = x4457;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:17)
      auto x4458 = x98 - x4455;
      // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x4459 = arg2[98 * steps + ((cycle - 0) & mask)];
      assert(x4459 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
      auto x4460 = x4459 * x4458;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
      assert(x4460 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:43");
      // loc("zirgen/circuit/rv32im/v1/edsl/multiply.cpp":93:3)
      {
        auto& reg = arg2[100 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x66);
        reg = x66;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/multiply.cpp":94:38)
      auto x4461 = x4178 * x4433;
      if (x4461 != 0) {
        // loc("zirgen/circuit/rv32im/v1/edsl/multiply.cpp":95:29)
        auto x4462 = x4166 + x4429;
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4393);
          reg = x4393;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4397);
          reg = x4397;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[144 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4419);
          reg = x4419;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[145 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4423);
          reg = x4423;
        }
        {
          extern_args[0] = x4462;
          extern_args[1] = x4393;
          extern_args[2] = x4397;
          extern_args[3] = x4419;
          extern_args[4] = x4423;
          extern_args[5] = x98;
          extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x4463 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x4463 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x4464 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x4464 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x4465 = arg2[144 * steps + ((cycle - 0) & mask)];
        assert(x4465 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x4466 = arg2[145 * steps + ((cycle - 0) & mask)];
        assert(x4466 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[139 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4462);
          reg = x4462;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x966);
          reg = x966;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x98);
          reg = x98;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4463);
          reg = x4463;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4464);
          reg = x4464;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[144 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4465);
          reg = x4465;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[145 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4466);
          reg = x4466;
        }
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/multiply.cpp":97:44)
      auto x4467 = x101 - x4178;
      // loc("zirgen/circuit/rv32im/v1/edsl/multiply.cpp":97:44)
      auto x4468 = x4467 * x4433;
      if (x4468 != 0) {
        // loc("zirgen/circuit/rv32im/v1/edsl/multiply.cpp":98:29)
        auto x4469 = x4166 + x4429;
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4326);
          reg = x4326;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4330);
          reg = x4330;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[144 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4356);
          reg = x4356;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[145 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4360);
          reg = x4360;
        }
        {
          extern_args[0] = x4469;
          extern_args[1] = x4326;
          extern_args[2] = x4330;
          extern_args[3] = x4356;
          extern_args[4] = x4360;
          extern_args[5] = x98;
          extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x4470 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x4470 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x4471 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x4471 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x4472 = arg2[144 * steps + ((cycle - 0) & mask)];
        assert(x4472 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x4473 = arg2[145 * steps + ((cycle - 0) & mask)];
        assert(x4473 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[139 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4469);
          reg = x4469;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x966);
          reg = x966;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x98);
          reg = x98;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4470);
          reg = x4470;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4471);
          reg = x4471;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[144 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4472);
          reg = x4472;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[145 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4473);
          reg = x4473;
        }
      }
      if (x4432 != 0) {
        // loc("zirgen/components/ram.cpp":53:3)
        {
          auto& reg = arg2[139 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/ram.cpp":54:3)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/ram.cpp":55:3)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[144 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[145 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":112:49))
      auto x4474 = arg2[183 * steps + ((cycle - 0) & mask)];
      assert(x4474 != Fp::invalid());
      if (x4474 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":112:49)
        auto x4475 = x4125 - x49;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":112:49)
        assert(x4475 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:112");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":112:49)
        assert(x4118 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:112");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":112:49)
        auto x4476 = x4092 - x101;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":112:49)
        assert(x4476 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:112");
      }
      if (x4167 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":113:49)
        auto x4477 = x4125 - x49;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":113:49)
        assert(x4477 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:113");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":113:49)
        auto x4478 = x4118 - x101;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":113:49)
        assert(x4478 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:113");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":113:49)
        auto x4479 = x4092 - x101;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":113:49)
        assert(x4479 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:113");
      }
      if (x4168 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":114:49)
        auto x4480 = x4125 - x49;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":114:49)
        assert(x4480 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:114");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":114:49)
        auto x4481 = x4118 - x98;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":114:49)
        assert(x4481 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:114");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":114:49)
        auto x4482 = x4092 - x101;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":114:49)
        assert(x4482 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:114");
      }
      if (x4169 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":115:49)
        auto x4483 = x4125 - x49;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":115:49)
        assert(x4483 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:115");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":115:49)
        auto x4484 = x4118 - x81;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":115:49)
        assert(x4484 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:115");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":115:49)
        auto x4485 = x4092 - x101;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":115:49)
        assert(x4485 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:115");
      }
      if (x4170 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":116:49)
        auto x4486 = x4125 - x49;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":116:49)
        assert(x4486 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:116");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":116:49)
        auto x4487 = x4118 - x101;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":116:49)
        assert(x4487 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:116");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":116:49)
        assert(x4092 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:116");
      }
      if (x4171 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":117:49)
        auto x4488 = x4125 - x48;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":117:49)
        assert(x4488 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:117");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":117:49)
        auto x4489 = x4118 - x101;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":117:49)
        assert(x4489 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:117");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":117:49)
        assert(x4092 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:117");
      }
      // loc("Top/mux(Mux)/body(BodyStep)/user_mode(Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4490 = arg2[99 * steps + ((cycle - 0) & mask)];
      assert(x4490 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":60:7)
      auto x4491 = x4490 * x4455;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":60:7)
      auto x4492 = x4491 * x4456;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":60:7)
      assert(x4492 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:60");
    }
    // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[5](Reg)"("./zirgen/components/mux.h":59:25))
    auto x4493 = arg2[106 * steps + ((cycle - 0) & mask)];
    assert(x4493 != Fp::invalid());
    if (x4493 != 0) {
      // loc("Top/mux(Mux)/body(BodyStep)/user_mode(Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4494 = arg2[99 * steps + ((cycle - 1) & mask)];
      assert(x4494 != Fp::invalid());
      // loc("./zirgen/components/bits.h":37:23)
      {
        auto& reg = arg2[99 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4494);
        reg = x4494;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/next_major(Reg)"("zirgen/circuit/rv32im/v1/edsl/divide.cpp":31:37))
      auto x4495 = arg2[100 * steps + ((cycle - 1) & mask)];
      assert(x4495 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":31:37)
      auto x4496 = x4495 - x66;
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":31:37)
      assert(x4496 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/divide.cpp:31");
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":34:41)
      auto x4497 = x980 * x80;
      {
        extern_args[0] = x4497;
        extern_args[1] = x101;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x4498 = extern_outs[0];
        auto x4499 = extern_outs[1];
        auto x4500 = extern_outs[2];
        auto x4501 = extern_outs[3];
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4498);
          reg = x4498;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4499);
          reg = x4499;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[123 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4500);
          reg = x4500;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[124 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4501);
          reg = x4501;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4502 = arg2[121 * steps + ((cycle - 0) & mask)];
      assert(x4502 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4503 = arg2[122 * steps + ((cycle - 0) & mask)];
      assert(x4503 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4504 = arg2[123 * steps + ((cycle - 0) & mask)];
      assert(x4504 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4505 = arg2[124 * steps + ((cycle - 0) & mask)];
      assert(x4505 != Fp::invalid());
      // loc("zirgen/components/ram.cpp":178:3)
      {
        auto& reg = arg2[118 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4497);
        reg = x4497;
      }
      // loc("zirgen/components/ram.cpp":179:3)
      {
        auto& reg = arg2[119 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x966);
        reg = x966;
      }
      // loc("zirgen/components/ram.cpp":180:3)
      {
        auto& reg = arg2[120 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x101);
        reg = x101;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[121 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4502);
        reg = x4502;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[122 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4503);
        reg = x4503;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[123 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4504);
        reg = x4504;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[124 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4505);
        reg = x4505;
      }
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":21:16)
        auto x4506 = Fp(x4505.asUInt32() & x65.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":21:15)
        auto x4507 = x4506 * x64;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[175 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4507);
          reg = x4507;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":22:17)
        auto x4508 = Fp(x4505.asUInt32() & x61.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":22:16)
        auto x4509 = x4508 * x63;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[76 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4509);
          reg = x4509;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":23:16)
        auto x4510 = Fp(x4505.asUInt32() & x72.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":23:15)
        auto x4511 = x4510 * x60;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[174 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4511);
          reg = x4511;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":24:16)
        auto x4512 = Fp(x4505.asUInt32() & x68.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":24:15)
        auto x4513 = x4512 * x59;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[173 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4513);
          reg = x4513;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":25:17)
        auto x4514 = Fp(x4505.asUInt32() & x70.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":25:16)
        auto x4515 = x4514 * x58;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[75 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4515);
          reg = x4515;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":26:17)
        auto x4516 = Fp(x4505.asUInt32() & x101.asUInt32());
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[178 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4516);
          reg = x4516;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":27:17)
        auto x4517 = Fp(x4504.asUInt32() & x65.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":27:16)
        auto x4518 = x4517 * x64;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[177 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4518);
          reg = x4518;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":28:18)
        auto x4519 = Fp(x4504.asUInt32() & x61.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":28:17)
        auto x4520 = x4519 * x63;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[77 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4520);
          reg = x4520;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":29:17)
        auto x4521 = Fp(x4504.asUInt32() & x72.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":29:16)
        auto x4522 = x4521 * x60;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[176 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4522);
          reg = x4522;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":30:18)
        auto x4523 = Fp(x4504.asUInt32() & x76.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":30:17)
        auto x4524 = x4523 * x80;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[79 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4524);
          reg = x4524;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:18)
        auto x4525 = Fp(x4504.asUInt32() & x81.asUInt32());
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[78 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4525);
          reg = x4525;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:17)
        auto x4526 = Fp(x4503.asUInt32() & x65.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:16)
        auto x4527 = x4526 * x64;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[179 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4527);
          reg = x4527;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":33:19)
        auto x4528 = Fp(x4503.asUInt32() & x56.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":33:18)
        auto x4529 = x4528 * x57;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[180 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4529);
          reg = x4529;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":34:20)
        auto x4530 = Fp(x4503.asUInt32() & x55.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":34:19)
        auto x4531 = x4530 * x60;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[80 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4531);
          reg = x4531;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":35:17)
        auto x4532 = Fp(x4503.asUInt32() & x76.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":35:16)
        auto x4533 = x4532 * x80;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[82 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4533);
          reg = x4533;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":36:17)
        auto x4534 = Fp(x4503.asUInt32() & x81.asUInt32());
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[81 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4534);
          reg = x4534;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":37:16)
        auto x4535 = Fp(x4502.asUInt32() & x65.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":37:15)
        auto x4536 = x4535 * x64;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[181 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4536);
          reg = x4536;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":38:18)
        auto x4537 = Fp(x4502.asUInt32() & x54.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":38:5)
        {
          auto& reg = arg2[182 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4537);
          reg = x4537;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4538 = arg2[173 * steps + ((cycle - 0) & mask)];
      assert(x4538 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4539 = arg2[174 * steps + ((cycle - 0) & mask)];
      assert(x4539 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4540 = arg2[175 * steps + ((cycle - 0) & mask)];
      assert(x4540 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4541 = arg2[76 * steps + ((cycle - 0) & mask)];
      assert(x4541 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4542 = arg2[178 * steps + ((cycle - 0) & mask)];
      assert(x4542 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4543 = arg2[75 * steps + ((cycle - 0) & mask)];
      assert(x4543 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":63:10)
      auto x4544 = x4540 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":67:10)
      auto x4545 = x4541 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":67:39)
      auto x4546 = x4538 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":67:25)
      auto x4547 = x4539 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":67:10)
      auto x4548 = x4545 + x4547;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":67:10)
      auto x4549 = x4548 + x4546;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":67:10)
      auto x4550 = x4549 + x4543;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":63:10)
      auto x4551 = x4544 + x4550;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":40:21)
      auto x4552 = x4551 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":40:21)
      auto x4553 = x4552 + x4542;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":40:6)
      auto x4554 = x4505 - x4553;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":40:6)
      assert(x4554 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/decode.cpp:40");
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4555 = arg2[177 * steps + ((cycle - 0) & mask)];
      assert(x4555 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4556 = arg2[77 * steps + ((cycle - 0) & mask)];
      assert(x4556 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4557 = arg2[79 * steps + ((cycle - 0) & mask)];
      assert(x4557 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4558 = arg2[176 * steps + ((cycle - 0) & mask)];
      assert(x4558 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4559 = arg2[78 * steps + ((cycle - 0) & mask)];
      assert(x4559 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:22)
      auto x4560 = x4555 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:37)
      auto x4561 = x4556 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:69)
      auto x4562 = x4557 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:22)
      auto x4563 = x4560 + x4561;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:22)
      auto x4564 = x4563 + x4558;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:21)
      auto x4565 = x4564 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:21)
      auto x4566 = x4565 + x4562;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:21)
      auto x4567 = x4566 + x4559;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:6)
      auto x4568 = x4504 - x4567;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:6)
      assert(x4568 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/decode.cpp:41");
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4569 = arg2[179 * steps + ((cycle - 0) & mask)];
      assert(x4569 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4570 = arg2[180 * steps + ((cycle - 0) & mask)];
      assert(x4570 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4571 = arg2[82 * steps + ((cycle - 0) & mask)];
      assert(x4571 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4572 = arg2[80 * steps + ((cycle - 0) & mask)];
      assert(x4572 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4573 = arg2[81 * steps + ((cycle - 0) & mask)];
      assert(x4573 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":42:21)
      auto x4574 = x4569 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":59:10)
      auto x4575 = x4570 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":42:53)
      auto x4576 = x4571 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":59:10)
      auto x4577 = x4575 + x4572;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":42:36)
      auto x4578 = x4577 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":42:21)
      auto x4579 = x4574 + x4578;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":42:21)
      auto x4580 = x4579 + x4576;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":42:21)
      auto x4581 = x4580 + x4573;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":42:6)
      auto x4582 = x4503 - x4581;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":42:6)
      assert(x4582 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/decode.cpp:42");
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4583 = arg2[181 * steps + ((cycle - 0) & mask)];
      assert(x4583 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/Decoder/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x4584 = arg2[182 * steps + ((cycle - 0) & mask)];
      assert(x4584 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":43:21)
      auto x4585 = x4583 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":43:21)
      auto x4586 = x4585 + x4584;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":43:6)
      auto x4587 = x4502 - x4586;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":43:6)
      assert(x4587 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/decode.cpp:43");
      {
        extern_args[0] = x4502;
        extern_args[1] = x4503;
        extern_args[2] = x4504;
        extern_args[3] = x4505;
        extern_getMinor(ctx, cycle, "", extern_args, extern_outs);
        auto x4588 = extern_outs[0];
        {
          // loc("./zirgen/components/onehot.h":47:26)
          auto x4589 = (x4588 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[183 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4589);
            reg = x4589;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x4590 = x4588 - x101;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x4591 = (x4590 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[184 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4591);
            reg = x4591;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x4592 = x4588 - x98;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x4593 = (x4592 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[185 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4593);
            reg = x4593;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x4594 = x4588 - x81;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x4595 = (x4594 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[186 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4595);
            reg = x4595;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x4596 = x4588 - x83;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x4597 = (x4596 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[187 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4597);
            reg = x4597;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x4598 = x4588 - x71;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x4599 = (x4598 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[188 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4599);
            reg = x4599;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x4600 = x4588 - x70;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x4601 = (x4600 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[189 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4601);
            reg = x4601;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x4602 = x4588 - x69;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x4603 = (x4602 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[190 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4603);
            reg = x4603;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/OneHot/hot[1](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x4604 = arg2[184 * steps + ((cycle - 0) & mask)];
        assert(x4604 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/OneHot/hot[2](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x4605 = arg2[185 * steps + ((cycle - 0) & mask)];
        assert(x4605 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/OneHot/hot[3](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x4606 = arg2[186 * steps + ((cycle - 0) & mask)];
        assert(x4606 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/OneHot/hot[4](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x4607 = arg2[187 * steps + ((cycle - 0) & mask)];
        assert(x4607 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/OneHot/hot[5](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x4608 = arg2[188 * steps + ((cycle - 0) & mask)];
        assert(x4608 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/OneHot/hot[6](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x4609 = arg2[189 * steps + ((cycle - 0) & mask)];
        assert(x4609 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/OneHot/hot[7](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x4610 = arg2[190 * steps + ((cycle - 0) & mask)];
        assert(x4610 != Fp::invalid());
        // loc("./zirgen/components/onehot.h":56:19)
        auto x4611 = x4605 * x98;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x4612 = x4606 * x81;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x4613 = x4607 * x83;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x4614 = x4608 * x71;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x4615 = x4609 * x70;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x4616 = x4610 * x69;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x4617 = x4604 + x4611;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x4618 = x4617 + x4612;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x4619 = x4618 + x4613;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x4620 = x4619 + x4614;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x4621 = x4620 + x4615;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x4622 = x4621 + x4616;
        // loc("./zirgen/components/onehot.h":50:8)
        auto x4623 = x4622 - x4588;
        // loc("./zirgen/components/onehot.h":50:8)
        assert(x4623 == 0 && "eqz failed at: ./zirgen/components/onehot.h:50");
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":135:49))
      auto x4624 = arg2[183 * steps + ((cycle - 0) & mask)];
      assert(x4624 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/OneHot/hot[2](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":137:49))
      auto x4625 = arg2[185 * steps + ((cycle - 0) & mask)];
      assert(x4625 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/OneHot/hot[3](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":138:49))
      auto x4626 = arg2[186 * steps + ((cycle - 0) & mask)];
      assert(x4626 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/OneHot/hot[4](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":139:49))
      auto x4627 = arg2[187 * steps + ((cycle - 0) & mask)];
      assert(x4627 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/OneHot/hot[5](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":140:49))
      auto x4628 = arg2[188 * steps + ((cycle - 0) & mask)];
      assert(x4628 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/OneHot/hot[6](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":141:49))
      auto x4629 = arg2[189 * steps + ((cycle - 0) & mask)];
      assert(x4629 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/OneHot/hot[7](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":142:49))
      auto x4630 = arg2[190 * steps + ((cycle - 0) & mask)];
      assert(x4630 != Fp::invalid());
      // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":137:49)
      auto x4631 = x4624 + x4625;
      // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":138:49)
      auto x4632 = x4625 + x4626;
      // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":140:49)
      auto x4633 = x4627 + x4628;
      // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":140:49)
      auto x4634 = x4631 + x4628;
      // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":141:49)
      auto x4635 = x4633 + x4629;
      // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":142:49)
      auto x4636 = x4629 + x4630;
      // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":142:49)
      auto x4637 = x4628 + x4630;
      // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":142:49)
      auto x4638 = x4634 + x4630;
      // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":142:49)
      auto x4639 = x4635 + x4630;
      // loc("./zirgen/components/bits.h":37:23)
      {
        auto& reg = arg2[201 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4638);
        reg = x4638;
      }
      // loc("./zirgen/components/bits.h":37:23)
      {
        auto& reg = arg2[202 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4637);
        reg = x4637;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4640 = arg2[201 * steps + ((cycle - 0) & mask)];
      assert(x4640 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4641 = arg2[202 * steps + ((cycle - 0) & mask)];
      assert(x4641 != Fp::invalid());
      extern_args[0] = x4636;
      extern_args[1] = x4639;
      extern_args[2] = x4640;
      extern_args[3] = x4641;
      extern_args[4] = x4632;
      extern_log(ctx, cycle, "  useImm=%u, usePo2=%u, signed=%u, onesComp=%u, useRem=%u", extern_args, extern_outs);
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":70:57)
      auto x4642 = x4494 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":70:39)
      auto x4643 = x52 - x4642;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":47:10)
      auto x4644 = x4557 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":47:26)
      auto x4645 = x4559 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":47:10)
      auto x4646 = x4644 + x4645;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":47:10)
      auto x4647 = x4646 + x4569;
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":70:39)
      auto x4648 = x4643 + x4647;
      {
        extern_args[0] = x4648;
        extern_args[1] = x101;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x4649 = extern_outs[0];
        auto x4650 = extern_outs[1];
        auto x4651 = extern_outs[2];
        auto x4652 = extern_outs[3];
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[128 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4649);
          reg = x4649;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[129 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4650);
          reg = x4650;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[130 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4651);
          reg = x4651;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[131 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4652);
          reg = x4652;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4653 = arg2[128 * steps + ((cycle - 0) & mask)];
      assert(x4653 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4654 = arg2[129 * steps + ((cycle - 0) & mask)];
      assert(x4654 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4655 = arg2[130 * steps + ((cycle - 0) & mask)];
      assert(x4655 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4656 = arg2[131 * steps + ((cycle - 0) & mask)];
      assert(x4656 != Fp::invalid());
      // loc("zirgen/components/ram.cpp":178:3)
      {
        auto& reg = arg2[125 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4648);
        reg = x4648;
      }
      // loc("zirgen/components/ram.cpp":179:3)
      {
        auto& reg = arg2[126 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x966);
        reg = x966;
      }
      // loc("zirgen/components/ram.cpp":180:3)
      {
        auto& reg = arg2[127 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x101);
        reg = x101;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[128 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4653);
        reg = x4653;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[129 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4654);
        reg = x4654;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[130 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4655);
        reg = x4655;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[131 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4656);
        reg = x4656;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":51:10)
      auto x4657 = x4542 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":51:10)
      auto x4658 = x4657 + x4564;
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":71:39)
      auto x4659 = x4643 + x4658;
      {
        extern_args[0] = x4659;
        extern_args[1] = x101;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x4660 = extern_outs[0];
        auto x4661 = extern_outs[1];
        auto x4662 = extern_outs[2];
        auto x4663 = extern_outs[3];
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4660);
          reg = x4660;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4661);
          reg = x4661;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[137 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4662);
          reg = x4662;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[138 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4663);
          reg = x4663;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4664 = arg2[135 * steps + ((cycle - 0) & mask)];
      assert(x4664 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4665 = arg2[136 * steps + ((cycle - 0) & mask)];
      assert(x4665 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4666 = arg2[137 * steps + ((cycle - 0) & mask)];
      assert(x4666 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4667 = arg2[138 * steps + ((cycle - 0) & mask)];
      assert(x4667 != Fp::invalid());
      // loc("zirgen/components/ram.cpp":178:3)
      {
        auto& reg = arg2[132 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4659);
        reg = x4659;
      }
      // loc("zirgen/components/ram.cpp":179:3)
      {
        auto& reg = arg2[133 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x966);
        reg = x966;
      }
      // loc("zirgen/components/ram.cpp":180:3)
      {
        auto& reg = arg2[134 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x101);
        reg = x101;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[135 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4664);
        reg = x4664;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[136 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4665);
        reg = x4665;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[137 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4666);
        reg = x4666;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[138 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4667);
        reg = x4667;
      }
      extern_args[0] = x4647;
      extern_args[1] = x4653;
      extern_args[2] = x4654;
      extern_args[3] = x4655;
      extern_args[4] = x4656;
      extern_args[5] = x4658;
      extern_args[6] = x4664;
      extern_args[7] = x4665;
      extern_args[8] = x4666;
      extern_args[9] = x4667;
      extern_log(ctx, cycle, "  rs1=x%u -> %w, rs2=x%u -> %w", extern_args, extern_outs);
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":77:35)
      auto x4668 = x101 - x4636;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
      auto x4669 = x4538 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:21)
      auto x4670 = x4543 * x62;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x4671 = x4668 * x4664;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
      auto x4672 = x4669 + x4670;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
      auto x4673 = x4672 + x4658;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x4674 = x4636 * x4673;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x4675 = x4674 + x4671;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":79:16)
        auto x4676 = Fp(x4675.asUInt32() & x38.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":79:15)
        auto x4677 = x4676 * x57;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[83 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4677);
          reg = x4677;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":80:16)
        auto x4678 = Fp(x4675.asUInt32() & x62.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":80:15)
        auto x4679 = x4678 * x63;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[191 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4679);
          reg = x4679;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":81:14)
        auto x4680 = Fp(x4675.asUInt32() & x37.asUInt32());
        {
          // loc("zirgen/components/u32.cpp":203:21)
          auto x4681 = Fp(x4680.asUInt32() & x101.asUInt32());
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[192 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4681);
            reg = x4681;
          }
          // loc("zirgen/components/u32.cpp":203:21)
          auto x4682 = Fp(x4680.asUInt32() & x98.asUInt32());
          // loc("zirgen/components/u32.cpp":203:20)
          auto x4683 = x4682 * x58;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[193 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4683);
            reg = x4683;
          }
          // loc("zirgen/components/u32.cpp":203:21)
          auto x4684 = Fp(x4680.asUInt32() & x83.asUInt32());
          // loc("zirgen/components/u32.cpp":203:20)
          auto x4685 = x4684 * x80;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[194 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4685);
            reg = x4685;
          }
          // loc("zirgen/components/u32.cpp":203:21)
          auto x4686 = Fp(x4680.asUInt32() & x68.asUInt32());
          // loc("zirgen/components/u32.cpp":203:20)
          auto x4687 = x4686 * x59;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[195 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4687);
            reg = x4687;
          }
          // loc("zirgen/components/u32.cpp":203:21)
          auto x4688 = Fp(x4680.asUInt32() & x72.asUInt32());
          // loc("zirgen/components/u32.cpp":203:20)
          auto x4689 = x4688 * x60;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[196 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4689);
            reg = x4689;
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x4690 = arg2[192 * steps + ((cycle - 0) & mask)];
          assert(x4690 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x4691 = arg2[193 * steps + ((cycle - 0) & mask)];
          assert(x4691 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x4692 = arg2[194 * steps + ((cycle - 0) & mask)];
          assert(x4692 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x4693 = arg2[196 * steps + ((cycle - 0) & mask)];
          assert(x4693 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x4694 = arg2[195 * steps + ((cycle - 0) & mask)];
          assert(x4694 != Fp::invalid());
          // loc("zirgen/components/u32.cpp":205:42)
          auto x4695 = x4691 * x81;
          // loc("zirgen/components/u32.cpp":205:21)
          auto x4696 = x4692 * x73;
          // loc("zirgen/components/u32.cpp":206:15)
          auto x4697 = x4693 * x98;
          // loc("zirgen/components/u32.cpp":205:17)
          auto x4698 = x4696 + x101;
          // loc("zirgen/components/u32.cpp":206:15)
          auto x4699 = x4697 + x4694;
          // loc("zirgen/components/u32.cpp":205:58)
          auto x4700 = x4690 + x101;
          // loc("zirgen/components/u32.cpp":205:38)
          auto x4701 = x4695 + x101;
          // loc("zirgen/components/u32.cpp":208:13)
          auto x4702 = (x4699 == 0) ? Fp(1) : Fp(0);
          // loc("zirgen/components/u32.cpp":205:16)
          auto x4703 = x4698 * x4701;
          // loc("zirgen/components/u32.cpp":205:16)
          auto x4704 = x4703 * x4700;
          // loc("zirgen/components/u32.cpp":208:34)
          auto x4705 = x4699 - x101;
          // loc("zirgen/components/u32.cpp":208:55)
          auto x4706 = x4699 - x98;
          // loc("zirgen/components/u32.cpp":208:76)
          auto x4707 = x4699 - x81;
          // loc("zirgen/components/u32.cpp":208:34)
          auto x4708 = (x4705 == 0) ? Fp(1) : Fp(0);
          // loc("zirgen/components/u32.cpp":208:55)
          auto x4709 = (x4706 == 0) ? Fp(1) : Fp(0);
          // loc("zirgen/components/u32.cpp":208:76)
          auto x4710 = (x4707 == 0) ? Fp(1) : Fp(0);
          // loc("zirgen/components/u32.cpp":208:9)
          auto x4711 = x4702 * x4704;
          // loc("zirgen/components/u32.cpp":208:30)
          auto x4712 = x4708 * x4704;
          // loc("zirgen/components/u32.cpp":208:51)
          auto x4713 = x4709 * x4704;
          // loc("zirgen/components/u32.cpp":208:72)
          auto x4714 = x4710 * x4704;
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4711);
            reg = x4711;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4712);
            reg = x4712;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[199 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4713);
            reg = x4713;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[200 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4714);
            reg = x4714;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x4715 = arg2[192 * steps + ((cycle - 0) & mask)];
        assert(x4715 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x4716 = arg2[193 * steps + ((cycle - 0) & mask)];
        assert(x4716 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x4717 = arg2[194 * steps + ((cycle - 0) & mask)];
        assert(x4717 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x4718 = arg2[195 * steps + ((cycle - 0) & mask)];
        assert(x4718 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x4719 = arg2[196 * steps + ((cycle - 0) & mask)];
        assert(x4719 != Fp::invalid());
        // loc("zirgen/components/u32.cpp":217:17)
        auto x4720 = x4716 * x98;
        // loc("zirgen/components/u32.cpp":217:17)
        auto x4721 = x4717 * x83;
        // loc("zirgen/components/u32.cpp":217:17)
        auto x4722 = x4718 * x68;
        // loc("zirgen/components/u32.cpp":217:17)
        auto x4723 = x4719 * x72;
        // loc("zirgen/components/u32.cpp":217:11)
        auto x4724 = x4715 + x4720;
        // loc("zirgen/components/u32.cpp":217:11)
        auto x4725 = x4724 + x4721;
        // loc("zirgen/components/u32.cpp":217:11)
        auto x4726 = x4725 + x4722;
        // loc("zirgen/components/u32.cpp":217:11)
        auto x4727 = x4726 + x4723;
        // loc("zirgen/components/u32.cpp":211:6)
        auto x4728 = x4727 - x4680;
        // loc("zirgen/components/u32.cpp":211:6)
        assert(x4728 == 0 && "eqz failed at: zirgen/components/u32.cpp:211");
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4729 = arg2[191 * steps + ((cycle - 0) & mask)];
      assert(x4729 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4730 = arg2[192 * steps + ((cycle - 0) & mask)];
      assert(x4730 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4731 = arg2[193 * steps + ((cycle - 0) & mask)];
      assert(x4731 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4732 = arg2[194 * steps + ((cycle - 0) & mask)];
      assert(x4732 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4733 = arg2[195 * steps + ((cycle - 0) & mask)];
      assert(x4733 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4734 = arg2[196 * steps + ((cycle - 0) & mask)];
      assert(x4734 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4735 = arg2[83 * steps + ((cycle - 0) & mask)];
      assert(x4735 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":83:23)
      auto x4736 = x4735 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":83:37)
      auto x4737 = x4729 * x62;
      // loc("zirgen/components/u32.cpp":217:17)
      auto x4738 = x4731 * x98;
      // loc("zirgen/components/u32.cpp":217:17)
      auto x4739 = x4732 * x83;
      // loc("zirgen/components/u32.cpp":217:17)
      auto x4740 = x4733 * x68;
      // loc("zirgen/components/u32.cpp":217:17)
      auto x4741 = x4734 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":83:23)
      auto x4742 = x4736 + x4737;
      // loc("zirgen/components/u32.cpp":217:11)
      auto x4743 = x4730 + x4738;
      // loc("zirgen/components/u32.cpp":217:11)
      auto x4744 = x4743 + x4739;
      // loc("zirgen/components/u32.cpp":217:11)
      auto x4745 = x4744 + x4740;
      // loc("zirgen/components/u32.cpp":217:11)
      auto x4746 = x4745 + x4741;
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":83:23)
      auto x4747 = x4742 + x4746;
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":83:6)
      auto x4748 = x4675 - x4747;
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":83:6)
      assert(x4748 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/divide.cpp:83");
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":86:42)
      auto x4749 = x101 - x4639;
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/U32Po2/U32Reg/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4750 = arg2[197 * steps + ((cycle - 0) & mask)];
      assert(x4750 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/U32Po2/U32Reg/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4751 = arg2[198 * steps + ((cycle - 0) & mask)];
      assert(x4751 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/U32Po2/U32Reg/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4752 = arg2[199 * steps + ((cycle - 0) & mask)];
      assert(x4752 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/U32Po2/U32Reg/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4753 = arg2[200 * steps + ((cycle - 0) & mask)];
      assert(x4753 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":121:20)
      auto x4754 = x4639 * x4750;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x4755 = x4639 * x4751;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x4756 = x4639 * x4752;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x4757 = x4639 * x4753;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x4758 = x4749 * x4664;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x4759 = x4749 * x4665;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x4760 = x4749 * x4666;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x4761 = x4749 * x4667;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x4762 = x4754 + x4758;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x4763 = x4755 + x4759;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x4764 = x4756 + x4760;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x4765 = x4757 + x4761;
      // loc("zirgen/components/bytes.cpp":111:3)
      {
        auto& reg = arg2[18 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4762);
        reg = x4762;
      }
      // loc("zirgen/components/bytes.cpp":111:3)
      {
        auto& reg = arg2[19 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4763);
        reg = x4763;
      }
      // loc("zirgen/components/bytes.cpp":111:3)
      {
        auto& reg = arg2[20 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4764);
        reg = x4764;
      }
      // loc("zirgen/components/bytes.cpp":111:3)
      {
        auto& reg = arg2[21 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4765);
        reg = x4765;
      }
      {
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x4766 = arg2[18 * steps + ((cycle - 0) & mask)];
        assert(x4766 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x4767 = arg2[19 * steps + ((cycle - 0) & mask)];
        assert(x4767 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x4768 = arg2[20 * steps + ((cycle - 0) & mask)];
        assert(x4768 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x4769 = arg2[21 * steps + ((cycle - 0) & mask)];
        assert(x4769 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":97:16)
        auto x4770 = x4640 + x4641;
        extern_args[0] = x4653;
        extern_args[1] = x4654;
        extern_args[2] = x4655;
        extern_args[3] = x4656;
        extern_args[4] = x4766;
        extern_args[5] = x4767;
        extern_args[6] = x4768;
        extern_args[7] = x4769;
        extern_args[8] = x4770;
        extern_divide(ctx, cycle, "", extern_args, extern_outs);
        auto x4771 = extern_outs[0];
        auto x4772 = extern_outs[1];
        auto x4773 = extern_outs[2];
        auto x4774 = extern_outs[3];
        auto x4775 = extern_outs[4];
        auto x4776 = extern_outs[5];
        auto x4777 = extern_outs[6];
        auto x4778 = extern_outs[7];
        // loc("zirgen/components/bytes.cpp":111:3)
        {
          auto& reg = arg2[22 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4771);
          reg = x4771;
        }
        // loc("zirgen/components/bytes.cpp":111:3)
        {
          auto& reg = arg2[26 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4775);
          reg = x4775;
        }
        // loc("zirgen/components/bytes.cpp":111:3)
        {
          auto& reg = arg2[23 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4772);
          reg = x4772;
        }
        // loc("zirgen/components/bytes.cpp":111:3)
        {
          auto& reg = arg2[27 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4776);
          reg = x4776;
        }
        // loc("zirgen/components/bytes.cpp":111:3)
        {
          auto& reg = arg2[24 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4773);
          reg = x4773;
        }
        // loc("zirgen/components/bytes.cpp":111:3)
        {
          auto& reg = arg2[28 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4777);
          reg = x4777;
        }
        // loc("zirgen/components/bytes.cpp":111:3)
        {
          auto& reg = arg2[25 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4774);
          reg = x4774;
        }
        // loc("zirgen/components/bytes.cpp":111:3)
        {
          auto& reg = arg2[29 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4778);
          reg = x4778;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
      auto x4779 = arg2[18 * steps + ((cycle - 0) & mask)];
      assert(x4779 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
      auto x4780 = arg2[19 * steps + ((cycle - 0) & mask)];
      assert(x4780 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
      auto x4781 = arg2[20 * steps + ((cycle - 0) & mask)];
      assert(x4781 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
      auto x4782 = arg2[21 * steps + ((cycle - 0) & mask)];
      assert(x4782 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
      auto x4783 = arg2[22 * steps + ((cycle - 0) & mask)];
      assert(x4783 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
      auto x4784 = arg2[23 * steps + ((cycle - 0) & mask)];
      assert(x4784 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
      auto x4785 = arg2[24 * steps + ((cycle - 0) & mask)];
      assert(x4785 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
      auto x4786 = arg2[25 * steps + ((cycle - 0) & mask)];
      assert(x4786 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
      auto x4787 = arg2[26 * steps + ((cycle - 0) & mask)];
      assert(x4787 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
      auto x4788 = arg2[27 * steps + ((cycle - 0) & mask)];
      assert(x4788 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
      auto x4789 = arg2[28 * steps + ((cycle - 0) & mask)];
      assert(x4789 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
      auto x4790 = arg2[29 * steps + ((cycle - 0) & mask)];
      assert(x4790 != Fp::invalid());
      extern_args[0] = x4653;
      extern_args[1] = x4654;
      extern_args[2] = x4655;
      extern_args[3] = x4656;
      extern_args[4] = x4779;
      extern_args[5] = x4780;
      extern_args[6] = x4781;
      extern_args[7] = x4782;
      extern_args[8] = x4783;
      extern_args[9] = x4784;
      extern_args[10] = x4785;
      extern_args[11] = x4786;
      extern_args[12] = x4787;
      extern_args[13] = x4788;
      extern_args[14] = x4789;
      extern_args[15] = x4790;
      extern_log(ctx, cycle, "  numer=%w, denom=%w, quot=%w, rem=%w", extern_args, extern_outs);
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":55:10)
      auto x4791 = x4571 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":55:25)
      auto x4792 = x4573 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":55:10)
      auto x4793 = x4791 + x4792;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":55:10)
      auto x4794 = x4793 + x4583;
      {
        // loc("zirgen/components/iszero.cpp":21:24)
        auto x4795 = (x4794 == 0) ? Fp(1) : Fp(0);
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[203 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4795);
          reg = x4795;
        }
        // loc("zirgen/components/iszero.cpp":22:21)
        auto x4796 = inv(x4794);
        // loc("zirgen/components/iszero.cpp":22:5)
        {
          auto& reg = arg2[204 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4796);
          reg = x4796;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/IsZero/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4797 = arg2[203 * steps + ((cycle - 0) & mask)];
      assert(x4797 != Fp::invalid());
      if (x4797 != 0) {
        // loc("zirgen/components/iszero.cpp":26:23)
        assert(x4794 == 0 && "eqz failed at: zirgen/components/iszero.cpp:26");
      }
      // loc("zirgen/components/iszero.cpp":28:19)
      auto x4798 = x101 - x4797;
      if (x4798 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/IsZero/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x4799 = arg2[204 * steps + ((cycle - 0) & mask)];
        assert(x4799 != Fp::invalid());
        // loc("zirgen/components/iszero.cpp":28:26)
        auto x4800 = x4794 * x4799;
        // loc("zirgen/components/iszero.cpp":28:26)
        auto x4801 = x4800 - x101;
        // loc("zirgen/components/iszero.cpp":28:26)
        assert(x4801 == 0 && "eqz failed at: zirgen/components/iszero.cpp:28");
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":108:37)
      auto x4802 = x4632 * x4798;
      if (x4802 != 0) {
        // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":110:22)
        auto x4803 = x4643 + x4794;
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4787);
          reg = x4787;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4788);
          reg = x4788;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[144 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4789);
          reg = x4789;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[145 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4790);
          reg = x4790;
        }
        {
          extern_args[0] = x4803;
          extern_args[1] = x4787;
          extern_args[2] = x4788;
          extern_args[3] = x4789;
          extern_args[4] = x4790;
          extern_args[5] = x98;
          extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x4804 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x4804 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x4805 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x4805 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x4806 = arg2[144 * steps + ((cycle - 0) & mask)];
        assert(x4806 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x4807 = arg2[145 * steps + ((cycle - 0) & mask)];
        assert(x4807 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[139 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4803);
          reg = x4803;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x966);
          reg = x966;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x98);
          reg = x98;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4804);
          reg = x4804;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4805);
          reg = x4805;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[144 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4806);
          reg = x4806;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[145 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4807);
          reg = x4807;
        }
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":113:43)
      auto x4808 = x101 - x4632;
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":113:43)
      auto x4809 = x4808 * x4798;
      if (x4809 != 0) {
        // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":115:22)
        auto x4810 = x4643 + x4794;
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4783);
          reg = x4783;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4784);
          reg = x4784;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[144 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4785);
          reg = x4785;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[145 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4786);
          reg = x4786;
        }
        {
          extern_args[0] = x4810;
          extern_args[1] = x4783;
          extern_args[2] = x4784;
          extern_args[3] = x4785;
          extern_args[4] = x4786;
          extern_args[5] = x98;
          extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x4811 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x4811 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x4812 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x4812 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x4813 = arg2[144 * steps + ((cycle - 0) & mask)];
        assert(x4813 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x4814 = arg2[145 * steps + ((cycle - 0) & mask)];
        assert(x4814 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[139 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4810);
          reg = x4810;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x966);
          reg = x966;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x98);
          reg = x98;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4811);
          reg = x4811;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4812);
          reg = x4812;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[144 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4813);
          reg = x4813;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[145 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4814);
          reg = x4814;
        }
      }
      if (x4797 != 0) {
        // loc("zirgen/components/ram.cpp":53:3)
        {
          auto& reg = arg2[139 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/ram.cpp":54:3)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/ram.cpp":55:3)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[144 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[145 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":121:17)
      auto x4815 = x980 + x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":34:23)
      auto x4816 = x4815 + x83;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x4817 = Fp(x4816.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[6 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4817);
          reg = x4817;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x4818 = arg2[6 * steps + ((cycle - 0) & mask)];
      assert(x4818 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x4819 = x4816 - x4818;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x4820 = x4819 * x96;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x4821 = Fp(x4820.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[7 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4821);
          reg = x4821;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x4822 = arg2[7 * steps + ((cycle - 0) & mask)];
      assert(x4822 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x4823 = x4820 - x4822;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x4824 = x4823 * x96;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x4825 = Fp(x4824.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[8 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4825);
          reg = x4825;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x4826 = arg2[8 * steps + ((cycle - 0) & mask)];
      assert(x4826 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x4827 = x4824 - x4826;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x4828 = x4827 * x96;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":37:26)
        auto x4829 = Fp(x4828.asUInt32() & x81.asUInt32());
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[70 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4829);
          reg = x4829;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[0](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4830 = arg2[70 * steps + ((cycle - 0) & mask)];
      assert(x4830 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:18)
      auto x4831 = x4828 - x4830;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:17)
      auto x4832 = x4831 * x80;
      // loc("./zirgen/components/bits.h":78:23)
      {
        auto& reg = arg2[71 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4832);
        reg = x4832;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4833 = arg2[71 * steps + ((cycle - 0) & mask)];
      assert(x4833 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:23)
      auto x4834 = x101 - x4833;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:15)
      auto x4835 = x4833 * x4834;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:3)
      {
        auto& reg = arg2[98 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4835);
        reg = x4835;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:17)
      auto x4836 = x98 - x4833;
      // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x4837 = arg2[98 * steps + ((cycle - 0) & mask)];
      assert(x4837 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
      auto x4838 = x4837 * x4836;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
      assert(x4838 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:43");
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":122:3)
      {
        auto& reg = arg2[100 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x69);
        reg = x69;
      }
      if (x4624 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":135:49)
        auto x4839 = x4584 - x49;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":135:49)
        assert(x4839 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:135");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":135:49)
        auto x4840 = x4577 - x83;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":135:49)
        assert(x4840 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:135");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":135:49)
        auto x4841 = x4551 - x101;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":135:49)
        assert(x4841 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:135");
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/OneHot/hot[1](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":136:49))
      auto x4842 = arg2[184 * steps + ((cycle - 0) & mask)];
      assert(x4842 != Fp::invalid());
      if (x4842 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":136:49)
        auto x4843 = x4584 - x49;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":136:49)
        assert(x4843 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:136");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":136:49)
        auto x4844 = x4577 - x71;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":136:49)
        assert(x4844 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:136");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":136:49)
        auto x4845 = x4551 - x101;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":136:49)
        assert(x4845 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:136");
      }
      if (x4625 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":137:49)
        auto x4846 = x4584 - x49;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":137:49)
        assert(x4846 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:137");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":137:49)
        auto x4847 = x4577 - x70;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":137:49)
        assert(x4847 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:137");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":137:49)
        auto x4848 = x4551 - x101;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":137:49)
        assert(x4848 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:137");
      }
      if (x4626 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":138:49)
        auto x4849 = x4584 - x49;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":138:49)
        assert(x4849 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:138");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":138:49)
        auto x4850 = x4577 - x69;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":138:49)
        assert(x4850 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:138");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":138:49)
        auto x4851 = x4551 - x101;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":138:49)
        assert(x4851 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:138");
      }
      if (x4627 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":139:49)
        auto x4852 = x4584 - x49;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":139:49)
        assert(x4852 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:139");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":139:49)
        auto x4853 = x4577 - x71;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":139:49)
        assert(x4853 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:139");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":139:49)
        assert(x4551 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:139");
      }
      if (x4628 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":140:49)
        auto x4854 = x4584 - x49;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":140:49)
        assert(x4854 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:140");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":140:49)
        auto x4855 = x4577 - x71;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":140:49)
        assert(x4855 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:140");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":140:49)
        auto x4856 = x4551 - x62;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":140:49)
        assert(x4856 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:140");
      }
      if (x4629 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":141:49)
        auto x4857 = x4584 - x48;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":141:49)
        assert(x4857 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:141");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":141:49)
        auto x4858 = x4577 - x71;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":141:49)
        assert(x4858 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:141");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":141:49)
        assert(x4551 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:141");
      }
      if (x4630 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":142:49)
        auto x4859 = x4584 - x48;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":142:49)
        assert(x4859 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:142");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":142:49)
        auto x4860 = x4577 - x71;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":142:49)
        assert(x4860 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:142");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":142:49)
        auto x4861 = x4551 - x62;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":142:49)
        assert(x4861 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:142");
      }
      // loc("Top/mux(Mux)/body(BodyStep)/user_mode(Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4862 = arg2[99 * steps + ((cycle - 0) & mask)];
      assert(x4862 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":60:7)
      auto x4863 = x4862 * x4833;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":60:7)
      auto x4864 = x4863 * x4834;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":60:7)
      assert(x4864 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:60");
    }
    // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[6](Reg)"("./zirgen/components/mux.h":59:25))
    auto x4865 = arg2[107 * steps + ((cycle - 0) & mask)];
    assert(x4865 != Fp::invalid());
    if (x4865 != 0) {
      // loc("Top/mux(Mux)/body(BodyStep)/user_mode(Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4866 = arg2[99 * steps + ((cycle - 1) & mask)];
      assert(x4866 != Fp::invalid());
      // loc("./zirgen/components/bits.h":37:23)
      {
        auto& reg = arg2[99 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4866);
        reg = x4866;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/next_major(Reg)"("zirgen/circuit/rv32im/v1/edsl/compute.cpp":218:37))
      auto x4867 = arg2[100 * steps + ((cycle - 1) & mask)];
      assert(x4867 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":218:37)
      auto x4868 = x4867 - x70;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":218:37)
      assert(x4868 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/compute.cpp:218");
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4869 = arg2[128 * steps + ((cycle - 1) & mask)];
      assert(x4869 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/ALU/U32Reg/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4870 = arg2[203 * steps + ((cycle - 1) & mask)];
      assert(x4870 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/ALU/U32Reg/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4871 = arg2[207 * steps + ((cycle - 1) & mask)];
      assert(x4871 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4872 = arg2[129 * steps + ((cycle - 1) & mask)];
      assert(x4872 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/ALU/U32Reg/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4873 = arg2[204 * steps + ((cycle - 1) & mask)];
      assert(x4873 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/ALU/U32Reg/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4874 = arg2[208 * steps + ((cycle - 1) & mask)];
      assert(x4874 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4875 = arg2[130 * steps + ((cycle - 1) & mask)];
      assert(x4875 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/ALU/U32Reg/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4876 = arg2[205 * steps + ((cycle - 1) & mask)];
      assert(x4876 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/ALU/U32Reg/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4877 = arg2[209 * steps + ((cycle - 1) & mask)];
      assert(x4877 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4878 = arg2[131 * steps + ((cycle - 1) & mask)];
      assert(x4878 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/ALU/U32Reg/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4879 = arg2[206 * steps + ((cycle - 1) & mask)];
      assert(x4879 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/ALU/U32Reg/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x4880 = arg2[210 * steps + ((cycle - 1) & mask)];
      assert(x4880 != Fp::invalid());
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:37)
        auto x4881 = Fp(x4869.asUInt32() & x101.asUInt32());
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[118 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4881);
          reg = x4881;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:37)
        auto x4882 = Fp(x4870.asUInt32() & x101.asUInt32());
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[150 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4882);
          reg = x4882;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:37)
        auto x4883 = Fp(x4869.asUInt32() & x98.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:36)
        auto x4884 = x4883 * x58;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[119 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4884);
          reg = x4884;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:37)
        auto x4885 = Fp(x4870.asUInt32() & x98.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:36)
        auto x4886 = x4885 * x58;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[151 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4886);
          reg = x4886;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:37)
        auto x4887 = Fp(x4869.asUInt32() & x83.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:36)
        auto x4888 = x4887 * x80;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[120 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4888);
          reg = x4888;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:37)
        auto x4889 = Fp(x4870.asUInt32() & x83.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:36)
        auto x4890 = x4889 * x80;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[152 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4890);
          reg = x4890;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:37)
        auto x4891 = Fp(x4869.asUInt32() & x68.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:36)
        auto x4892 = x4891 * x59;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4892);
          reg = x4892;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:37)
        auto x4893 = Fp(x4870.asUInt32() & x68.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:36)
        auto x4894 = x4893 * x59;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[153 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4894);
          reg = x4894;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:37)
        auto x4895 = Fp(x4869.asUInt32() & x72.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:36)
        auto x4896 = x4895 * x60;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4896);
          reg = x4896;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:37)
        auto x4897 = Fp(x4870.asUInt32() & x72.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:36)
        auto x4898 = x4897 * x60;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[154 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4898);
          reg = x4898;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:37)
        auto x4899 = Fp(x4869.asUInt32() & x62.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:36)
        auto x4900 = x4899 * x63;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[123 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4900);
          reg = x4900;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:37)
        auto x4901 = Fp(x4870.asUInt32() & x62.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:36)
        auto x4902 = x4901 * x63;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[155 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4902);
          reg = x4902;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:37)
        auto x4903 = Fp(x4869.asUInt32() & x56.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:36)
        auto x4904 = x4903 * x57;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[124 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4904);
          reg = x4904;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:37)
        auto x4905 = Fp(x4870.asUInt32() & x56.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:36)
        auto x4906 = x4905 * x57;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[156 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4906);
          reg = x4906;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:37)
        auto x4907 = Fp(x4869.asUInt32() & x65.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:36)
        auto x4908 = x4907 * x64;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[125 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4908);
          reg = x4908;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:37)
        auto x4909 = Fp(x4870.asUInt32() & x65.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:36)
        auto x4910 = x4909 * x64;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[157 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4910);
          reg = x4910;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:37)
        auto x4911 = Fp(x4872.asUInt32() & x101.asUInt32());
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[126 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4911);
          reg = x4911;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:37)
        auto x4912 = Fp(x4873.asUInt32() & x101.asUInt32());
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[158 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4912);
          reg = x4912;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:37)
        auto x4913 = Fp(x4872.asUInt32() & x98.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:36)
        auto x4914 = x4913 * x58;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[127 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4914);
          reg = x4914;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:37)
        auto x4915 = Fp(x4873.asUInt32() & x98.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:36)
        auto x4916 = x4915 * x58;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[159 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4916);
          reg = x4916;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:37)
        auto x4917 = Fp(x4872.asUInt32() & x83.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:36)
        auto x4918 = x4917 * x80;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[128 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4918);
          reg = x4918;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:37)
        auto x4919 = Fp(x4873.asUInt32() & x83.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:36)
        auto x4920 = x4919 * x80;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[160 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4920);
          reg = x4920;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:37)
        auto x4921 = Fp(x4872.asUInt32() & x68.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:36)
        auto x4922 = x4921 * x59;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[129 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4922);
          reg = x4922;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:37)
        auto x4923 = Fp(x4873.asUInt32() & x68.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:36)
        auto x4924 = x4923 * x59;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[161 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4924);
          reg = x4924;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:37)
        auto x4925 = Fp(x4872.asUInt32() & x72.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:36)
        auto x4926 = x4925 * x60;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[130 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4926);
          reg = x4926;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:37)
        auto x4927 = Fp(x4873.asUInt32() & x72.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:36)
        auto x4928 = x4927 * x60;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[162 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4928);
          reg = x4928;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:37)
        auto x4929 = Fp(x4872.asUInt32() & x62.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:36)
        auto x4930 = x4929 * x63;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[131 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4930);
          reg = x4930;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:37)
        auto x4931 = Fp(x4873.asUInt32() & x62.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:36)
        auto x4932 = x4931 * x63;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[163 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4932);
          reg = x4932;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:37)
        auto x4933 = Fp(x4872.asUInt32() & x56.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:36)
        auto x4934 = x4933 * x57;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[132 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4934);
          reg = x4934;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:37)
        auto x4935 = Fp(x4873.asUInt32() & x56.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:36)
        auto x4936 = x4935 * x57;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[164 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4936);
          reg = x4936;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:37)
        auto x4937 = Fp(x4872.asUInt32() & x65.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:36)
        auto x4938 = x4937 * x64;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[133 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4938);
          reg = x4938;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:37)
        auto x4939 = Fp(x4873.asUInt32() & x65.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:36)
        auto x4940 = x4939 * x64;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[165 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4940);
          reg = x4940;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:37)
        auto x4941 = Fp(x4875.asUInt32() & x101.asUInt32());
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[134 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4941);
          reg = x4941;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:37)
        auto x4942 = Fp(x4876.asUInt32() & x101.asUInt32());
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[166 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4942);
          reg = x4942;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:37)
        auto x4943 = Fp(x4875.asUInt32() & x98.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:36)
        auto x4944 = x4943 * x58;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4944);
          reg = x4944;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:37)
        auto x4945 = Fp(x4876.asUInt32() & x98.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:36)
        auto x4946 = x4945 * x58;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[167 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4946);
          reg = x4946;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:37)
        auto x4947 = Fp(x4875.asUInt32() & x83.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:36)
        auto x4948 = x4947 * x80;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4948);
          reg = x4948;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:37)
        auto x4949 = Fp(x4876.asUInt32() & x83.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:36)
        auto x4950 = x4949 * x80;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[168 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4950);
          reg = x4950;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:37)
        auto x4951 = Fp(x4875.asUInt32() & x68.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:36)
        auto x4952 = x4951 * x59;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[137 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4952);
          reg = x4952;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:37)
        auto x4953 = Fp(x4876.asUInt32() & x68.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:36)
        auto x4954 = x4953 * x59;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[169 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4954);
          reg = x4954;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:37)
        auto x4955 = Fp(x4875.asUInt32() & x72.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:36)
        auto x4956 = x4955 * x60;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[138 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4956);
          reg = x4956;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:37)
        auto x4957 = Fp(x4876.asUInt32() & x72.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:36)
        auto x4958 = x4957 * x60;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[170 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4958);
          reg = x4958;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:37)
        auto x4959 = Fp(x4875.asUInt32() & x62.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:36)
        auto x4960 = x4959 * x63;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[139 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4960);
          reg = x4960;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:37)
        auto x4961 = Fp(x4876.asUInt32() & x62.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:36)
        auto x4962 = x4961 * x63;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[171 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4962);
          reg = x4962;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:37)
        auto x4963 = Fp(x4875.asUInt32() & x56.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:36)
        auto x4964 = x4963 * x57;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4964);
          reg = x4964;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:37)
        auto x4965 = Fp(x4876.asUInt32() & x56.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:36)
        auto x4966 = x4965 * x57;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[172 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4966);
          reg = x4966;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:37)
        auto x4967 = Fp(x4875.asUInt32() & x65.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:36)
        auto x4968 = x4967 * x64;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4968);
          reg = x4968;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:37)
        auto x4969 = Fp(x4876.asUInt32() & x65.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:36)
        auto x4970 = x4969 * x64;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[173 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4970);
          reg = x4970;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:37)
        auto x4971 = Fp(x4878.asUInt32() & x101.asUInt32());
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4971);
          reg = x4971;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:37)
        auto x4972 = Fp(x4879.asUInt32() & x101.asUInt32());
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[174 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4972);
          reg = x4972;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:37)
        auto x4973 = Fp(x4878.asUInt32() & x98.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:36)
        auto x4974 = x4973 * x58;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4974);
          reg = x4974;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:37)
        auto x4975 = Fp(x4879.asUInt32() & x98.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:36)
        auto x4976 = x4975 * x58;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[175 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4976);
          reg = x4976;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:37)
        auto x4977 = Fp(x4878.asUInt32() & x83.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:36)
        auto x4978 = x4977 * x80;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[144 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4978);
          reg = x4978;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:37)
        auto x4979 = Fp(x4879.asUInt32() & x83.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:36)
        auto x4980 = x4979 * x80;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[176 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4980);
          reg = x4980;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:37)
        auto x4981 = Fp(x4878.asUInt32() & x68.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:36)
        auto x4982 = x4981 * x59;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[145 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4982);
          reg = x4982;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:37)
        auto x4983 = Fp(x4879.asUInt32() & x68.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:36)
        auto x4984 = x4983 * x59;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[177 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4984);
          reg = x4984;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:37)
        auto x4985 = Fp(x4878.asUInt32() & x72.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:36)
        auto x4986 = x4985 * x60;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[146 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4986);
          reg = x4986;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:37)
        auto x4987 = Fp(x4879.asUInt32() & x72.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:36)
        auto x4988 = x4987 * x60;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[178 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4988);
          reg = x4988;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:37)
        auto x4989 = Fp(x4878.asUInt32() & x62.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:36)
        auto x4990 = x4989 * x63;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[147 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4990);
          reg = x4990;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:37)
        auto x4991 = Fp(x4879.asUInt32() & x62.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:36)
        auto x4992 = x4991 * x63;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[179 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4992);
          reg = x4992;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:37)
        auto x4993 = Fp(x4878.asUInt32() & x56.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:36)
        auto x4994 = x4993 * x57;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[148 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4994);
          reg = x4994;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:37)
        auto x4995 = Fp(x4879.asUInt32() & x56.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:36)
        auto x4996 = x4995 * x57;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[180 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4996);
          reg = x4996;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:37)
        auto x4997 = Fp(x4878.asUInt32() & x65.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":226:36)
        auto x4998 = x4997 * x64;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[149 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4998);
          reg = x4998;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:37)
        auto x4999 = Fp(x4879.asUInt32() & x65.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":227:36)
        auto x5000 = x4999 * x64;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[181 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5000);
          reg = x5000;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5001 = arg2[118 * steps + ((cycle - 0) & mask)];
      assert(x5001 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5002 = arg2[119 * steps + ((cycle - 0) & mask)];
      assert(x5002 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5003 = arg2[120 * steps + ((cycle - 0) & mask)];
      assert(x5003 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5004 = arg2[121 * steps + ((cycle - 0) & mask)];
      assert(x5004 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5005 = arg2[122 * steps + ((cycle - 0) & mask)];
      assert(x5005 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5006 = arg2[123 * steps + ((cycle - 0) & mask)];
      assert(x5006 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5007 = arg2[124 * steps + ((cycle - 0) & mask)];
      assert(x5007 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5008 = arg2[125 * steps + ((cycle - 0) & mask)];
      assert(x5008 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5009 = arg2[126 * steps + ((cycle - 0) & mask)];
      assert(x5009 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5010 = arg2[127 * steps + ((cycle - 0) & mask)];
      assert(x5010 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5011 = arg2[128 * steps + ((cycle - 0) & mask)];
      assert(x5011 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5012 = arg2[129 * steps + ((cycle - 0) & mask)];
      assert(x5012 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5013 = arg2[130 * steps + ((cycle - 0) & mask)];
      assert(x5013 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5014 = arg2[131 * steps + ((cycle - 0) & mask)];
      assert(x5014 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5015 = arg2[132 * steps + ((cycle - 0) & mask)];
      assert(x5015 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5016 = arg2[133 * steps + ((cycle - 0) & mask)];
      assert(x5016 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5017 = arg2[134 * steps + ((cycle - 0) & mask)];
      assert(x5017 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5018 = arg2[135 * steps + ((cycle - 0) & mask)];
      assert(x5018 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5019 = arg2[136 * steps + ((cycle - 0) & mask)];
      assert(x5019 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5020 = arg2[137 * steps + ((cycle - 0) & mask)];
      assert(x5020 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5021 = arg2[138 * steps + ((cycle - 0) & mask)];
      assert(x5021 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5022 = arg2[139 * steps + ((cycle - 0) & mask)];
      assert(x5022 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5023 = arg2[140 * steps + ((cycle - 0) & mask)];
      assert(x5023 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5024 = arg2[141 * steps + ((cycle - 0) & mask)];
      assert(x5024 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5025 = arg2[142 * steps + ((cycle - 0) & mask)];
      assert(x5025 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5026 = arg2[143 * steps + ((cycle - 0) & mask)];
      assert(x5026 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5027 = arg2[144 * steps + ((cycle - 0) & mask)];
      assert(x5027 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5028 = arg2[145 * steps + ((cycle - 0) & mask)];
      assert(x5028 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5029 = arg2[146 * steps + ((cycle - 0) & mask)];
      assert(x5029 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5030 = arg2[147 * steps + ((cycle - 0) & mask)];
      assert(x5030 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5031 = arg2[148 * steps + ((cycle - 0) & mask)];
      assert(x5031 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5032 = arg2[149 * steps + ((cycle - 0) & mask)];
      assert(x5032 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5033 = arg2[150 * steps + ((cycle - 0) & mask)];
      assert(x5033 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5034 = arg2[151 * steps + ((cycle - 0) & mask)];
      assert(x5034 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5035 = arg2[152 * steps + ((cycle - 0) & mask)];
      assert(x5035 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5036 = arg2[153 * steps + ((cycle - 0) & mask)];
      assert(x5036 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5037 = arg2[154 * steps + ((cycle - 0) & mask)];
      assert(x5037 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5038 = arg2[155 * steps + ((cycle - 0) & mask)];
      assert(x5038 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5039 = arg2[156 * steps + ((cycle - 0) & mask)];
      assert(x5039 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5040 = arg2[157 * steps + ((cycle - 0) & mask)];
      assert(x5040 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5041 = arg2[158 * steps + ((cycle - 0) & mask)];
      assert(x5041 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5042 = arg2[159 * steps + ((cycle - 0) & mask)];
      assert(x5042 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5043 = arg2[160 * steps + ((cycle - 0) & mask)];
      assert(x5043 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5044 = arg2[161 * steps + ((cycle - 0) & mask)];
      assert(x5044 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5045 = arg2[162 * steps + ((cycle - 0) & mask)];
      assert(x5045 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5046 = arg2[163 * steps + ((cycle - 0) & mask)];
      assert(x5046 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5047 = arg2[164 * steps + ((cycle - 0) & mask)];
      assert(x5047 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5048 = arg2[165 * steps + ((cycle - 0) & mask)];
      assert(x5048 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5049 = arg2[166 * steps + ((cycle - 0) & mask)];
      assert(x5049 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5050 = arg2[167 * steps + ((cycle - 0) & mask)];
      assert(x5050 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5051 = arg2[168 * steps + ((cycle - 0) & mask)];
      assert(x5051 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5052 = arg2[169 * steps + ((cycle - 0) & mask)];
      assert(x5052 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5053 = arg2[170 * steps + ((cycle - 0) & mask)];
      assert(x5053 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5054 = arg2[171 * steps + ((cycle - 0) & mask)];
      assert(x5054 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5055 = arg2[172 * steps + ((cycle - 0) & mask)];
      assert(x5055 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5056 = arg2[173 * steps + ((cycle - 0) & mask)];
      assert(x5056 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5057 = arg2[174 * steps + ((cycle - 0) & mask)];
      assert(x5057 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5058 = arg2[175 * steps + ((cycle - 0) & mask)];
      assert(x5058 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5059 = arg2[176 * steps + ((cycle - 0) & mask)];
      assert(x5059 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5060 = arg2[177 * steps + ((cycle - 0) & mask)];
      assert(x5060 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5061 = arg2[178 * steps + ((cycle - 0) & mask)];
      assert(x5061 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5062 = arg2[179 * steps + ((cycle - 0) & mask)];
      assert(x5062 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5063 = arg2[180 * steps + ((cycle - 0) & mask)];
      assert(x5063 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_and(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5064 = arg2[181 * steps + ((cycle - 0) & mask)];
      assert(x5064 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5065 = x5001 * x5033;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5066 = x5002 * x5034;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5067 = x5003 * x5035;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5068 = x5004 * x5036;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5069 = x5005 * x5037;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5070 = x5006 * x5038;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5071 = x5007 * x5039;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5072 = x5008 * x5040;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5073 = x5009 * x5041;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5074 = x5010 * x5042;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5075 = x5011 * x5043;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5076 = x5012 * x5044;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5077 = x5013 * x5045;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5078 = x5014 * x5046;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5079 = x5015 * x5047;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5080 = x5016 * x5048;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5081 = x5017 * x5049;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5082 = x5018 * x5050;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5083 = x5019 * x5051;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5084 = x5020 * x5052;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5085 = x5021 * x5053;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5086 = x5022 * x5054;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5087 = x5023 * x5055;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5088 = x5024 * x5056;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5089 = x5025 * x5057;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5090 = x5026 * x5058;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5091 = x5027 * x5059;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5092 = x5028 * x5060;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5093 = x5029 * x5061;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5094 = x5030 * x5062;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5095 = x5031 * x5063;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5096 = x5032 * x5064;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":238:41)
      auto x5097 = x5002 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":238:41)
      auto x5098 = x5003 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":238:41)
      auto x5099 = x5004 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":238:41)
      auto x5100 = x5005 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":238:41)
      auto x5101 = x5006 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":238:41)
      auto x5102 = x5007 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":238:41)
      auto x5103 = x5008 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":238:41)
      auto x5104 = x5010 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":238:41)
      auto x5105 = x5011 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":238:41)
      auto x5106 = x5012 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":238:41)
      auto x5107 = x5013 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":238:41)
      auto x5108 = x5014 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":238:41)
      auto x5109 = x5015 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":238:41)
      auto x5110 = x5016 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":238:41)
      auto x5111 = x5018 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":238:41)
      auto x5112 = x5019 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":238:41)
      auto x5113 = x5020 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":238:41)
      auto x5114 = x5021 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":238:41)
      auto x5115 = x5022 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":238:41)
      auto x5116 = x5023 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":238:41)
      auto x5117 = x5024 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":238:41)
      auto x5118 = x5026 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":238:41)
      auto x5119 = x5027 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":238:41)
      auto x5120 = x5028 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":238:41)
      auto x5121 = x5029 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":238:41)
      auto x5122 = x5030 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":238:41)
      auto x5123 = x5031 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":238:41)
      auto x5124 = x5032 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":239:41)
      auto x5125 = x5034 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":239:41)
      auto x5126 = x5035 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":239:41)
      auto x5127 = x5036 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":239:41)
      auto x5128 = x5037 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":239:41)
      auto x5129 = x5038 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":239:41)
      auto x5130 = x5039 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":239:41)
      auto x5131 = x5040 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":239:41)
      auto x5132 = x5042 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":239:41)
      auto x5133 = x5043 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":239:41)
      auto x5134 = x5044 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":239:41)
      auto x5135 = x5045 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":239:41)
      auto x5136 = x5046 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":239:41)
      auto x5137 = x5047 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":239:41)
      auto x5138 = x5048 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":239:41)
      auto x5139 = x5050 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":239:41)
      auto x5140 = x5051 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":239:41)
      auto x5141 = x5052 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":239:41)
      auto x5142 = x5053 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":239:41)
      auto x5143 = x5054 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":239:41)
      auto x5144 = x5055 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":239:41)
      auto x5145 = x5056 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":239:41)
      auto x5146 = x5058 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":239:41)
      auto x5147 = x5059 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":239:41)
      auto x5148 = x5060 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":239:41)
      auto x5149 = x5061 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":239:41)
      auto x5150 = x5062 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":239:41)
      auto x5151 = x5063 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":239:41)
      auto x5152 = x5064 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5153 = x5066 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5154 = x5067 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5155 = x5068 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5156 = x5069 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5157 = x5070 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5158 = x5071 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5159 = x5072 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5160 = x5074 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5161 = x5075 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5162 = x5076 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5163 = x5077 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5164 = x5078 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5165 = x5079 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5166 = x5080 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5167 = x5082 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5168 = x5083 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5169 = x5084 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5170 = x5085 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5171 = x5086 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5172 = x5087 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5173 = x5088 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5174 = x5090 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5175 = x5091 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5176 = x5092 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5177 = x5093 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5178 = x5094 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5179 = x5095 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:41)
      auto x5180 = x5096 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":238:24)
      auto x5181 = x5001 + x5097;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":238:24)
      auto x5182 = x5009 + x5104;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":238:24)
      auto x5183 = x5017 + x5111;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":238:24)
      auto x5184 = x5025 + x5118;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":239:24)
      auto x5185 = x5033 + x5125;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":239:24)
      auto x5186 = x5041 + x5132;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":239:24)
      auto x5187 = x5049 + x5139;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":239:24)
      auto x5188 = x5057 + x5146;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:24)
      auto x5189 = x5065 + x5153;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:24)
      auto x5190 = x5073 + x5160;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:24)
      auto x5191 = x5081 + x5167;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:24)
      auto x5192 = x5089 + x5174;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":238:24)
      auto x5193 = x5181 + x5098;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":238:24)
      auto x5194 = x5182 + x5105;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":238:24)
      auto x5195 = x5183 + x5112;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":238:24)
      auto x5196 = x5184 + x5119;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":239:24)
      auto x5197 = x5185 + x5126;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":239:24)
      auto x5198 = x5186 + x5133;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":239:24)
      auto x5199 = x5187 + x5140;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":239:24)
      auto x5200 = x5188 + x5147;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:24)
      auto x5201 = x5189 + x5154;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:24)
      auto x5202 = x5190 + x5161;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:24)
      auto x5203 = x5191 + x5168;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:24)
      auto x5204 = x5192 + x5175;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":238:24)
      auto x5205 = x5193 + x5099;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":238:24)
      auto x5206 = x5194 + x5106;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":238:24)
      auto x5207 = x5195 + x5113;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":238:24)
      auto x5208 = x5196 + x5120;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":239:24)
      auto x5209 = x5197 + x5127;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":239:24)
      auto x5210 = x5198 + x5134;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":239:24)
      auto x5211 = x5199 + x5141;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":239:24)
      auto x5212 = x5200 + x5148;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:24)
      auto x5213 = x5201 + x5155;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:24)
      auto x5214 = x5202 + x5162;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:24)
      auto x5215 = x5203 + x5169;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:24)
      auto x5216 = x5204 + x5176;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":238:24)
      auto x5217 = x5205 + x5100;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":238:24)
      auto x5218 = x5206 + x5107;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":238:24)
      auto x5219 = x5207 + x5114;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":238:24)
      auto x5220 = x5208 + x5121;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":239:24)
      auto x5221 = x5209 + x5128;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":239:24)
      auto x5222 = x5210 + x5135;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":239:24)
      auto x5223 = x5211 + x5142;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":239:24)
      auto x5224 = x5212 + x5149;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:24)
      auto x5225 = x5213 + x5156;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:24)
      auto x5226 = x5214 + x5163;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:24)
      auto x5227 = x5215 + x5170;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:24)
      auto x5228 = x5216 + x5177;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":238:24)
      auto x5229 = x5217 + x5101;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":238:24)
      auto x5230 = x5218 + x5108;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":238:24)
      auto x5231 = x5219 + x5115;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":238:24)
      auto x5232 = x5220 + x5122;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":239:24)
      auto x5233 = x5221 + x5129;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":239:24)
      auto x5234 = x5222 + x5136;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":239:24)
      auto x5235 = x5223 + x5143;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":239:24)
      auto x5236 = x5224 + x5150;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:24)
      auto x5237 = x5225 + x5157;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:24)
      auto x5238 = x5226 + x5164;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:24)
      auto x5239 = x5227 + x5171;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:24)
      auto x5240 = x5228 + x5178;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":238:24)
      auto x5241 = x5229 + x5102;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":238:24)
      auto x5242 = x5230 + x5109;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":238:24)
      auto x5243 = x5231 + x5116;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":238:24)
      auto x5244 = x5232 + x5123;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":239:24)
      auto x5245 = x5233 + x5130;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":239:24)
      auto x5246 = x5234 + x5137;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":239:24)
      auto x5247 = x5235 + x5144;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":239:24)
      auto x5248 = x5236 + x5151;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:24)
      auto x5249 = x5237 + x5158;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:24)
      auto x5250 = x5238 + x5165;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:24)
      auto x5251 = x5239 + x5172;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:24)
      auto x5252 = x5240 + x5179;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":238:24)
      auto x5253 = x5241 + x5103;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":239:24)
      auto x5254 = x5245 + x5131;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:24)
      auto x5255 = x5249 + x5159;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":238:24)
      auto x5256 = x5242 + x5110;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":239:24)
      auto x5257 = x5246 + x5138;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:24)
      auto x5258 = x5250 + x5166;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":238:24)
      auto x5259 = x5243 + x5117;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":239:24)
      auto x5260 = x5247 + x5145;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:24)
      auto x5261 = x5251 + x5173;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":238:24)
      auto x5262 = x5244 + x5124;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":239:24)
      auto x5263 = x5248 + x5152;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":240:24)
      auto x5264 = x5252 + x5180;
      extern_args[0] = x4869;
      extern_args[1] = x4872;
      extern_args[2] = x4875;
      extern_args[3] = x4878;
      extern_args[4] = x5253;
      extern_args[5] = x5256;
      extern_args[6] = x5259;
      extern_args[7] = x5262;
      extern_log(ctx, cycle, "  a = %w, ax = %w", extern_args, extern_outs);
      extern_args[0] = x4870;
      extern_args[1] = x4873;
      extern_args[2] = x4876;
      extern_args[3] = x4879;
      extern_args[4] = x5254;
      extern_args[5] = x5257;
      extern_args[6] = x5260;
      extern_args[7] = x5263;
      extern_log(ctx, cycle, "  b = %w, bx = %w", extern_args, extern_outs);
      extern_args[0] = x4871;
      extern_args[1] = x4874;
      extern_args[2] = x4877;
      extern_args[3] = x4880;
      extern_args[4] = x5255;
      extern_args[5] = x5258;
      extern_args[6] = x5261;
      extern_args[7] = x5264;
      extern_log(ctx, cycle, "  c = %w, cx = %w", extern_args, extern_outs);
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":246:3)
      auto x5265 = x4869 - x5253;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":246:3)
      assert(x5265 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/compute.cpp:246");
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":246:3)
      auto x5266 = x4872 - x5256;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":246:3)
      assert(x5266 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/compute.cpp:246");
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":246:3)
      auto x5267 = x4875 - x5259;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":246:3)
      assert(x5267 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/compute.cpp:246");
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":246:3)
      auto x5268 = x4878 - x5262;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":246:3)
      assert(x5268 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/compute.cpp:246");
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":247:3)
      auto x5269 = x4870 - x5254;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":247:3)
      assert(x5269 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/compute.cpp:247");
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":247:3)
      auto x5270 = x4873 - x5257;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":247:3)
      assert(x5270 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/compute.cpp:247");
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":247:3)
      auto x5271 = x4876 - x5260;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":247:3)
      assert(x5271 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/compute.cpp:247");
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":247:3)
      auto x5272 = x4879 - x5263;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":247:3)
      assert(x5272 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/compute.cpp:247");
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":248:3)
      auto x5273 = x4871 - x5255;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":248:3)
      assert(x5273 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/compute.cpp:248");
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":248:3)
      auto x5274 = x4874 - x5258;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":248:3)
      assert(x5274 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/compute.cpp:248");
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":248:3)
      auto x5275 = x4877 - x5261;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":248:3)
      assert(x5275 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/compute.cpp:248");
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":248:3)
      auto x5276 = x4880 - x5264;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":248:3)
      assert(x5276 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/compute.cpp:248");
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":34:23)
      auto x5277 = x980 + x83;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x5278 = Fp(x5277.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[6 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5278);
          reg = x5278;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x5279 = arg2[6 * steps + ((cycle - 0) & mask)];
      assert(x5279 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x5280 = x5277 - x5279;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x5281 = x5280 * x96;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x5282 = Fp(x5281.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[7 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5282);
          reg = x5282;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x5283 = arg2[7 * steps + ((cycle - 0) & mask)];
      assert(x5283 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x5284 = x5281 - x5283;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x5285 = x5284 * x96;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x5286 = Fp(x5285.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[8 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5286);
          reg = x5286;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x5287 = arg2[8 * steps + ((cycle - 0) & mask)];
      assert(x5287 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x5288 = x5285 - x5287;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x5289 = x5288 * x96;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":37:26)
        auto x5290 = Fp(x5289.asUInt32() & x81.asUInt32());
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[70 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5290);
          reg = x5290;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[0](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5291 = arg2[70 * steps + ((cycle - 0) & mask)];
      assert(x5291 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:18)
      auto x5292 = x5289 - x5291;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:17)
      auto x5293 = x5292 * x80;
      // loc("./zirgen/components/bits.h":78:23)
      {
        auto& reg = arg2[71 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x5293);
        reg = x5293;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5294 = arg2[71 * steps + ((cycle - 0) & mask)];
      assert(x5294 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:23)
      auto x5295 = x101 - x5294;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:15)
      auto x5296 = x5294 * x5295;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:3)
      {
        auto& reg = arg2[98 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x5296);
        reg = x5296;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:17)
      auto x5297 = x98 - x5294;
      // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x5298 = arg2[98 * steps + ((cycle - 0) & mask)];
      assert(x5298 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
      auto x5299 = x5298 * x5297;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
      assert(x5299 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:43");
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":251:3)
      {
        auto& reg = arg2[100 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x66);
        reg = x66;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/user_mode(Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5300 = arg2[99 * steps + ((cycle - 0) & mask)];
      assert(x5300 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":60:7)
      auto x5301 = x5300 * x5294;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":60:7)
      auto x5302 = x5301 * x5295;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":60:7)
      assert(x5302 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:60");
    }
    // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[7](Reg)"("./zirgen/components/mux.h":59:25))
    auto x5303 = arg2[108 * steps + ((cycle - 0) & mask)];
    assert(x5303 != Fp::invalid());
    if (x5303 != 0) {
      // loc("Top/mux(Mux)/body(BodyStep)/user_mode(Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5304 = arg2[99 * steps + ((cycle - 1) & mask)];
      assert(x5304 != Fp::invalid());
      // loc("./zirgen/components/bits.h":37:23)
      {
        auto& reg = arg2[99 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x5304);
        reg = x5304;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/next_major(Reg)"("zirgen/circuit/rv32im/v1/edsl/divide.cpp":142:37))
      auto x5305 = arg2[100 * steps + ((cycle - 1) & mask)];
      assert(x5305 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":142:37)
      auto x5306 = x5305 - x69;
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":142:37)
      assert(x5306 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/divide.cpp:142");
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5307 = arg2[201 * steps + ((cycle - 1) & mask)];
      assert(x5307 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
      auto x5308 = arg2[18 * steps + ((cycle - 1) & mask)];
      assert(x5308 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
      auto x5309 = arg2[22 * steps + ((cycle - 1) & mask)];
      assert(x5309 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
      auto x5310 = arg2[26 * steps + ((cycle - 1) & mask)];
      assert(x5310 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5311 = arg2[128 * steps + ((cycle - 1) & mask)];
      assert(x5311 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
      auto x5312 = arg2[19 * steps + ((cycle - 1) & mask)];
      assert(x5312 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
      auto x5313 = arg2[23 * steps + ((cycle - 1) & mask)];
      assert(x5313 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
      auto x5314 = arg2[27 * steps + ((cycle - 1) & mask)];
      assert(x5314 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5315 = arg2[129 * steps + ((cycle - 1) & mask)];
      assert(x5315 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
      auto x5316 = arg2[20 * steps + ((cycle - 1) & mask)];
      assert(x5316 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
      auto x5317 = arg2[24 * steps + ((cycle - 1) & mask)];
      assert(x5317 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
      auto x5318 = arg2[28 * steps + ((cycle - 1) & mask)];
      assert(x5318 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5319 = arg2[130 * steps + ((cycle - 1) & mask)];
      assert(x5319 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5320 = arg2[202 * steps + ((cycle - 1) & mask)];
      assert(x5320 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
      auto x5321 = arg2[21 * steps + ((cycle - 1) & mask)];
      assert(x5321 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
      auto x5322 = arg2[25 * steps + ((cycle - 1) & mask)];
      assert(x5322 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
      auto x5323 = arg2[29 * steps + ((cycle - 1) & mask)];
      assert(x5323 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5324 = arg2[131 * steps + ((cycle - 1) & mask)];
      assert(x5324 != Fp::invalid());
      {
        // loc("zirgen/components/u32.cpp":136:18)
        auto x5325 = Fp(x5324.asUInt32() & x65.asUInt32());
        // loc("zirgen/components/u32.cpp":136:17)
        auto x5326 = x5325 * x64;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[118 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5326);
          reg = x5326;
        }
        // loc("zirgen/components/u32.cpp":137:25)
        auto x5327 = Fp(x5324.asUInt32() & x54.asUInt32());
        // loc("zirgen/components/u32.cpp":137:24)
        auto x5328 = x5327 * x98;
        // loc("zirgen/components/bytes.cpp":111:3)
        {
          auto& reg = arg2[9 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5328);
          reg = x5328;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_divide(VerifyDivideCycle)/TopBit/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5329 = arg2[118 * steps + ((cycle - 0) & mask)];
      assert(x5329 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
      auto x5330 = arg2[9 * steps + ((cycle - 0) & mask)];
      assert(x5330 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":139:19)
      auto x5331 = x5329 * x65;
      // loc("zirgen/components/u32.cpp":139:34)
      auto x5332 = x5330 * x58;
      // loc("zirgen/components/u32.cpp":139:19)
      auto x5333 = x5331 + x5332;
      // loc("zirgen/components/u32.cpp":139:6)
      auto x5334 = x5324 - x5333;
      // loc("zirgen/components/u32.cpp":139:6)
      assert(x5334 == 0 && "eqz failed at: zirgen/components/u32.cpp:139");
      {
        // loc("zirgen/components/u32.cpp":136:18)
        auto x5335 = Fp(x5321.asUInt32() & x65.asUInt32());
        // loc("zirgen/components/u32.cpp":136:17)
        auto x5336 = x5335 * x64;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[119 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5336);
          reg = x5336;
        }
        // loc("zirgen/components/u32.cpp":137:25)
        auto x5337 = Fp(x5321.asUInt32() & x54.asUInt32());
        // loc("zirgen/components/u32.cpp":137:24)
        auto x5338 = x5337 * x98;
        // loc("zirgen/components/bytes.cpp":111:3)
        {
          auto& reg = arg2[10 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5338);
          reg = x5338;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
      auto x5339 = arg2[10 * steps + ((cycle - 0) & mask)];
      assert(x5339 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_divide(VerifyDivideCycle)/TopBit/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5340 = arg2[119 * steps + ((cycle - 0) & mask)];
      assert(x5340 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":139:19)
      auto x5341 = x5340 * x65;
      // loc("zirgen/components/u32.cpp":139:34)
      auto x5342 = x5339 * x58;
      // loc("zirgen/components/u32.cpp":139:19)
      auto x5343 = x5341 + x5342;
      // loc("zirgen/components/u32.cpp":139:6)
      auto x5344 = x5321 - x5343;
      // loc("zirgen/components/u32.cpp":139:6)
      assert(x5344 == 0 && "eqz failed at: zirgen/components/u32.cpp:139");
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":156:17)
      auto x5345 = x5307 * x5329;
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":156:3)
      {
        auto& reg = arg2[120 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x5345);
        reg = x5345;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":157:29)
      auto x5346 = x101 - x5320;
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":157:17)
      auto x5347 = x5307 * x5346;
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":157:17)
      auto x5348 = x5347 * x5340;
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":157:3)
      {
        auto& reg = arg2[121 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x5348);
        reg = x5348;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_divide(VerifyDivideCycle)/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5349 = arg2[120 * steps + ((cycle - 0) & mask)];
      assert(x5349 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":121:20)
      auto x5350 = x5349 * x5311;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x5351 = x5349 * x5315;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x5352 = x5349 * x5319;
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":160:17)
      auto x5353 = x5349 * x5320;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x5354 = x5349 * x5324;
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":159:47)
      auto x5355 = x101 - x5349;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x5356 = x5355 * x5311;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x5357 = x5355 * x5315;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x5358 = x5355 * x5319;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x5359 = x5355 * x5324;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x5360 = x5356 + x95;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x5361 = x5357 + x97;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x5362 = x5358 + x97;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x5363 = x5359 + x97;
      // loc("zirgen/components/u32.cpp":113:20)
      auto x5364 = x5360 - x5350;
      // loc("zirgen/components/u32.cpp":113:20)
      auto x5365 = x5361 - x5351;
      // loc("zirgen/components/u32.cpp":113:20)
      auto x5366 = x5363 - x5354;
      // loc("zirgen/components/u32.cpp":113:20)
      auto x5367 = x5364 - x5353;
      // loc("zirgen/components/u32.cpp":113:20)
      auto x5368 = x5362 - x5352;
      // loc("zirgen/components/u32.cpp":162:29)
      auto x5369 = x5365 * x95;
      // loc("zirgen/components/u32.cpp":162:15)
      auto x5370 = x5367 + x5369;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x5371 = Fp(x5370.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[11 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5371);
          reg = x5371;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x5372 = arg2[11 * steps + ((cycle - 0) & mask)];
      assert(x5372 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x5373 = x5370 - x5372;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x5374 = x5373 * x96;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x5375 = Fp(x5374.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[12 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5375);
          reg = x5375;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x5376 = arg2[12 * steps + ((cycle - 0) & mask)];
      assert(x5376 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x5377 = x5374 - x5376;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x5378 = x5377 * x96;
      // loc("./zirgen/components/bits.h":78:23)
      {
        auto& reg = arg2[72 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x5378);
        reg = x5378;
      }
      // loc("zirgen/components/u32.cpp":164:41)
      auto x5379 = x5366 * x95;
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_divide(VerifyDivideCycle)/U32Normalize/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5380 = arg2[72 * steps + ((cycle - 0) & mask)];
      assert(x5380 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":164:16)
      auto x5381 = x5380 + x5368;
      // loc("zirgen/components/u32.cpp":164:16)
      auto x5382 = x5381 + x5379;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x5383 = Fp(x5382.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[13 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5383);
          reg = x5383;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x5384 = arg2[13 * steps + ((cycle - 0) & mask)];
      assert(x5384 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x5385 = x5382 - x5384;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x5386 = x5385 * x96;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x5387 = Fp(x5386.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[14 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5387);
          reg = x5387;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x5388 = arg2[14 * steps + ((cycle - 0) & mask)];
      assert(x5388 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x5389 = x5386 - x5388;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x5390 = x5389 * x96;
      // loc("./zirgen/components/bits.h":78:23)
      {
        auto& reg = arg2[73 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x5390);
        reg = x5390;
      }
      extern_args[0] = x5311;
      extern_args[1] = x5315;
      extern_args[2] = x5319;
      extern_args[3] = x5324;
      extern_args[4] = x5372;
      extern_args[5] = x5376;
      extern_args[6] = x5384;
      extern_args[7] = x5388;
      extern_log(ctx, cycle, "  numer = %w, numerAbs = %w", extern_args, extern_outs);
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_divide(VerifyDivideCycle)/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5391 = arg2[121 * steps + ((cycle - 0) & mask)];
      assert(x5391 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":121:20)
      auto x5392 = x5391 * x5308;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x5393 = x5391 * x5312;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x5394 = x5391 * x5316;
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":163:17)
      auto x5395 = x5391 * x5320;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x5396 = x5391 * x5321;
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":162:47)
      auto x5397 = x101 - x5391;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x5398 = x5397 * x5308;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x5399 = x5397 * x5312;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x5400 = x5397 * x5316;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x5401 = x5397 * x5321;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x5402 = x5398 + x95;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x5403 = x5399 + x97;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x5404 = x5400 + x97;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x5405 = x5401 + x97;
      // loc("zirgen/components/u32.cpp":113:20)
      auto x5406 = x5402 - x5392;
      // loc("zirgen/components/u32.cpp":113:20)
      auto x5407 = x5403 - x5393;
      // loc("zirgen/components/u32.cpp":113:20)
      auto x5408 = x5405 - x5396;
      // loc("zirgen/components/u32.cpp":113:20)
      auto x5409 = x5406 - x5395;
      // loc("zirgen/components/u32.cpp":113:20)
      auto x5410 = x5404 - x5394;
      // loc("zirgen/components/u32.cpp":162:29)
      auto x5411 = x5407 * x95;
      // loc("zirgen/components/u32.cpp":162:15)
      auto x5412 = x5409 + x5411;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x5413 = Fp(x5412.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[15 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5413);
          reg = x5413;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x5414 = arg2[15 * steps + ((cycle - 0) & mask)];
      assert(x5414 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x5415 = x5412 - x5414;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x5416 = x5415 * x96;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x5417 = Fp(x5416.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[16 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5417);
          reg = x5417;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x5418 = arg2[16 * steps + ((cycle - 0) & mask)];
      assert(x5418 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x5419 = x5416 - x5418;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x5420 = x5419 * x96;
      // loc("./zirgen/components/bits.h":78:23)
      {
        auto& reg = arg2[74 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x5420);
        reg = x5420;
      }
      // loc("zirgen/components/u32.cpp":164:41)
      auto x5421 = x5408 * x95;
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_divide(VerifyDivideCycle)/U32Normalize/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5422 = arg2[74 * steps + ((cycle - 0) & mask)];
      assert(x5422 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":164:16)
      auto x5423 = x5422 + x5410;
      // loc("zirgen/components/u32.cpp":164:16)
      auto x5424 = x5423 + x5421;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x5425 = Fp(x5424.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[17 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5425);
          reg = x5425;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x5426 = arg2[17 * steps + ((cycle - 0) & mask)];
      assert(x5426 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x5427 = x5424 - x5426;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x5428 = x5427 * x96;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x5429 = Fp(x5428.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[18 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5429);
          reg = x5429;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x5430 = arg2[18 * steps + ((cycle - 0) & mask)];
      assert(x5430 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x5431 = x5428 - x5430;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x5432 = x5431 * x96;
      // loc("./zirgen/components/bits.h":78:23)
      {
        auto& reg = arg2[75 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x5432);
        reg = x5432;
      }
      extern_args[0] = x5308;
      extern_args[1] = x5312;
      extern_args[2] = x5316;
      extern_args[3] = x5321;
      extern_args[4] = x5414;
      extern_args[5] = x5418;
      extern_args[6] = x5426;
      extern_args[7] = x5430;
      extern_log(ctx, cycle, "  demom = %w, denomAbs = %w", extern_args, extern_outs);
      // loc("zirgen/components/u32.cpp":153:26)
      auto x5433 = x5418 * x95;
      // loc("zirgen/components/u32.cpp":153:12)
      auto x5434 = x5414 + x5433;
      {
        // loc("zirgen/components/iszero.cpp":21:24)
        auto x5435 = (x5434 == 0) ? Fp(1) : Fp(0);
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[123 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5435);
          reg = x5435;
        }
        // loc("zirgen/components/iszero.cpp":22:21)
        auto x5436 = inv(x5434);
        // loc("zirgen/components/iszero.cpp":22:5)
        {
          auto& reg = arg2[124 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5436);
          reg = x5436;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_divide(VerifyDivideCycle)/IsZeroU32/IsZero/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5437 = arg2[123 * steps + ((cycle - 0) & mask)];
      assert(x5437 != Fp::invalid());
      if (x5437 != 0) {
        // loc("zirgen/components/iszero.cpp":26:23)
        assert(x5434 == 0 && "eqz failed at: zirgen/components/iszero.cpp:26");
      }
      // loc("zirgen/components/iszero.cpp":28:19)
      auto x5438 = x101 - x5437;
      if (x5438 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_divide(VerifyDivideCycle)/IsZeroU32/IsZero/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x5439 = arg2[124 * steps + ((cycle - 0) & mask)];
        assert(x5439 != Fp::invalid());
        // loc("zirgen/components/iszero.cpp":28:26)
        auto x5440 = x5434 * x5439;
        // loc("zirgen/components/iszero.cpp":28:26)
        auto x5441 = x5440 - x101;
        // loc("zirgen/components/iszero.cpp":28:26)
        assert(x5441 == 0 && "eqz failed at: zirgen/components/iszero.cpp:28");
      }
      // loc("zirgen/components/u32.cpp":154:27)
      auto x5442 = x5430 * x95;
      // loc("zirgen/components/u32.cpp":154:13)
      auto x5443 = x5426 + x5442;
      // loc("zirgen/components/u32.cpp":154:47)
      auto x5444 = x5438 * x82;
      // loc("zirgen/components/u32.cpp":154:13)
      auto x5445 = x5443 + x5444;
      {
        // loc("zirgen/components/iszero.cpp":21:24)
        auto x5446 = (x5445 == 0) ? Fp(1) : Fp(0);
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[125 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5446);
          reg = x5446;
        }
        // loc("zirgen/components/iszero.cpp":22:21)
        auto x5447 = inv(x5445);
        // loc("zirgen/components/iszero.cpp":22:5)
        {
          auto& reg = arg2[126 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5447);
          reg = x5447;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_divide(VerifyDivideCycle)/IsZeroU32/IsZero/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5448 = arg2[125 * steps + ((cycle - 0) & mask)];
      assert(x5448 != Fp::invalid());
      if (x5448 != 0) {
        // loc("zirgen/components/iszero.cpp":26:23)
        assert(x5445 == 0 && "eqz failed at: zirgen/components/iszero.cpp:26");
      }
      // loc("zirgen/components/iszero.cpp":28:19)
      auto x5449 = x101 - x5448;
      if (x5449 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_divide(VerifyDivideCycle)/IsZeroU32/IsZero/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x5450 = arg2[126 * steps + ((cycle - 0) & mask)];
        assert(x5450 != Fp::invalid());
        // loc("zirgen/components/iszero.cpp":28:26)
        auto x5451 = x5445 * x5450;
        // loc("zirgen/components/iszero.cpp":28:26)
        auto x5452 = x5451 - x101;
        // loc("zirgen/components/iszero.cpp":28:26)
        assert(x5452 == 0 && "eqz failed at: zirgen/components/iszero.cpp:28");
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":166:38)
      auto x5453 = x5349 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":166:64)
      auto x5454 = x5448 * x5349;
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":166:38)
      auto x5455 = x5453 * x5391;
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":166:16)
      auto x5456 = x5349 + x5391;
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":166:16)
      auto x5457 = x5456 - x5455;
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":166:16)
      auto x5458 = x5457 - x5454;
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":166:3)
      {
        auto& reg = arg2[122 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x5458);
        reg = x5458;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_divide(VerifyDivideCycle)/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5459 = arg2[122 * steps + ((cycle - 0) & mask)];
      assert(x5459 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":121:20)
      auto x5460 = x5459 * x5309;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x5461 = x5459 * x5313;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x5462 = x5459 * x5317;
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":169:16)
      auto x5463 = x5459 * x5320;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x5464 = x5459 * x5322;
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":168:46)
      auto x5465 = x101 - x5459;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x5466 = x5465 * x5309;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x5467 = x5465 * x5313;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x5468 = x5465 * x5317;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x5469 = x5465 * x5322;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x5470 = x5466 + x95;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x5471 = x5467 + x97;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x5472 = x5468 + x97;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x5473 = x5469 + x97;
      // loc("zirgen/components/u32.cpp":113:20)
      auto x5474 = x5470 - x5460;
      // loc("zirgen/components/u32.cpp":113:20)
      auto x5475 = x5471 - x5461;
      // loc("zirgen/components/u32.cpp":113:20)
      auto x5476 = x5473 - x5464;
      // loc("zirgen/components/u32.cpp":113:20)
      auto x5477 = x5474 - x5463;
      // loc("zirgen/components/u32.cpp":113:20)
      auto x5478 = x5472 - x5462;
      // loc("zirgen/components/u32.cpp":162:29)
      auto x5479 = x5475 * x95;
      // loc("zirgen/components/u32.cpp":162:15)
      auto x5480 = x5477 + x5479;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x5481 = Fp(x5480.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[19 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5481);
          reg = x5481;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x5482 = arg2[19 * steps + ((cycle - 0) & mask)];
      assert(x5482 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x5483 = x5480 - x5482;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x5484 = x5483 * x96;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x5485 = Fp(x5484.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[20 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5485);
          reg = x5485;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x5486 = arg2[20 * steps + ((cycle - 0) & mask)];
      assert(x5486 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x5487 = x5484 - x5486;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x5488 = x5487 * x96;
      // loc("./zirgen/components/bits.h":78:23)
      {
        auto& reg = arg2[76 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x5488);
        reg = x5488;
      }
      // loc("zirgen/components/u32.cpp":164:41)
      auto x5489 = x5476 * x95;
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_divide(VerifyDivideCycle)/U32Normalize/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5490 = arg2[76 * steps + ((cycle - 0) & mask)];
      assert(x5490 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":164:16)
      auto x5491 = x5490 + x5478;
      // loc("zirgen/components/u32.cpp":164:16)
      auto x5492 = x5491 + x5489;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x5493 = Fp(x5492.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[21 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5493);
          reg = x5493;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x5494 = arg2[21 * steps + ((cycle - 0) & mask)];
      assert(x5494 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x5495 = x5492 - x5494;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x5496 = x5495 * x96;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x5497 = Fp(x5496.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[22 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5497);
          reg = x5497;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x5498 = arg2[22 * steps + ((cycle - 0) & mask)];
      assert(x5498 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x5499 = x5496 - x5498;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x5500 = x5499 * x96;
      // loc("./zirgen/components/bits.h":78:23)
      {
        auto& reg = arg2[77 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x5500);
        reg = x5500;
      }
      extern_args[0] = x5309;
      extern_args[1] = x5313;
      extern_args[2] = x5317;
      extern_args[3] = x5322;
      extern_args[4] = x5482;
      extern_args[5] = x5486;
      extern_args[6] = x5494;
      extern_args[7] = x5498;
      extern_log(ctx, cycle, "  quot = %w, quotAbs = %w", extern_args, extern_outs);
      // loc("zirgen/components/u32.cpp":121:20)
      auto x5501 = x5349 * x5310;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x5502 = x5349 * x5314;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x5503 = x5349 * x5318;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x5504 = x5349 * x5323;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x5505 = x5355 * x5310;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x5506 = x5355 * x5314;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x5507 = x5355 * x5318;
      // loc("zirgen/components/u32.cpp":121:20)
      auto x5508 = x5355 * x5323;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x5509 = x5505 + x95;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x5510 = x5506 + x97;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x5511 = x5507 + x97;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x5512 = x5508 + x97;
      // loc("zirgen/components/u32.cpp":113:20)
      auto x5513 = x5509 - x5501;
      // loc("zirgen/components/u32.cpp":113:20)
      auto x5514 = x5510 - x5502;
      // loc("zirgen/components/u32.cpp":113:20)
      auto x5515 = x5512 - x5504;
      // loc("zirgen/components/u32.cpp":113:20)
      auto x5516 = x5513 - x5353;
      // loc("zirgen/components/u32.cpp":113:20)
      auto x5517 = x5511 - x5503;
      // loc("zirgen/components/u32.cpp":162:29)
      auto x5518 = x5514 * x95;
      // loc("zirgen/components/u32.cpp":162:15)
      auto x5519 = x5516 + x5518;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x5520 = Fp(x5519.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[23 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5520);
          reg = x5520;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x5521 = arg2[23 * steps + ((cycle - 0) & mask)];
      assert(x5521 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x5522 = x5519 - x5521;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x5523 = x5522 * x96;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x5524 = Fp(x5523.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[24 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5524);
          reg = x5524;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x5525 = arg2[24 * steps + ((cycle - 0) & mask)];
      assert(x5525 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x5526 = x5523 - x5525;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x5527 = x5526 * x96;
      // loc("./zirgen/components/bits.h":78:23)
      {
        auto& reg = arg2[78 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x5527);
        reg = x5527;
      }
      // loc("zirgen/components/u32.cpp":164:41)
      auto x5528 = x5515 * x95;
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_divide(VerifyDivideCycle)/U32Normalize/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5529 = arg2[78 * steps + ((cycle - 0) & mask)];
      assert(x5529 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":164:16)
      auto x5530 = x5529 + x5517;
      // loc("zirgen/components/u32.cpp":164:16)
      auto x5531 = x5530 + x5528;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x5532 = Fp(x5531.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[25 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5532);
          reg = x5532;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x5533 = arg2[25 * steps + ((cycle - 0) & mask)];
      assert(x5533 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x5534 = x5531 - x5533;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x5535 = x5534 * x96;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x5536 = Fp(x5535.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[26 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5536);
          reg = x5536;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x5537 = arg2[26 * steps + ((cycle - 0) & mask)];
      assert(x5537 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x5538 = x5535 - x5537;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x5539 = x5538 * x96;
      // loc("./zirgen/components/bits.h":78:23)
      {
        auto& reg = arg2[79 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x5539);
        reg = x5539;
      }
      extern_args[0] = x5310;
      extern_args[1] = x5314;
      extern_args[2] = x5318;
      extern_args[3] = x5323;
      extern_args[4] = x5521;
      extern_args[5] = x5525;
      extern_args[6] = x5533;
      extern_args[7] = x5537;
      extern_log(ctx, cycle, "  rem = %w, remAbs = %w", extern_args, extern_outs);
      // loc("zirgen/components/u32.cpp":105:20)
      auto x5540 = x5414 + x95;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x5541 = x5418 + x97;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x5542 = x5426 + x97;
      // loc("zirgen/components/u32.cpp":105:20)
      auto x5543 = x5430 + x97;
      // loc("zirgen/components/u32.cpp":113:20)
      auto x5544 = x5540 - x101;
      // loc("zirgen/components/u32.cpp":113:20)
      auto x5545 = x5541 - x5525;
      // loc("zirgen/components/u32.cpp":113:20)
      auto x5546 = x5543 - x5537;
      // loc("zirgen/components/u32.cpp":113:20)
      auto x5547 = x5544 - x5521;
      // loc("zirgen/components/u32.cpp":113:20)
      auto x5548 = x5542 - x5533;
      // loc("zirgen/components/u32.cpp":162:29)
      auto x5549 = x5545 * x95;
      // loc("zirgen/components/u32.cpp":162:15)
      auto x5550 = x5547 + x5549;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x5551 = Fp(x5550.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[27 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5551);
          reg = x5551;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x5552 = arg2[27 * steps + ((cycle - 0) & mask)];
      assert(x5552 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x5553 = x5550 - x5552;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x5554 = x5553 * x96;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x5555 = Fp(x5554.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[28 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5555);
          reg = x5555;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x5556 = arg2[28 * steps + ((cycle - 0) & mask)];
      assert(x5556 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x5557 = x5554 - x5556;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x5558 = x5557 * x96;
      // loc("./zirgen/components/bits.h":78:23)
      {
        auto& reg = arg2[80 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x5558);
        reg = x5558;
      }
      // loc("zirgen/components/u32.cpp":164:41)
      auto x5559 = x5546 * x95;
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_divide(VerifyDivideCycle)/U32Normalize/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5560 = arg2[80 * steps + ((cycle - 0) & mask)];
      assert(x5560 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":164:16)
      auto x5561 = x5560 + x5548;
      // loc("zirgen/components/u32.cpp":164:16)
      auto x5562 = x5561 + x5559;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x5563 = Fp(x5562.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[29 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5563);
          reg = x5563;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x5564 = arg2[29 * steps + ((cycle - 0) & mask)];
      assert(x5564 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x5565 = x5562 - x5564;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x5566 = x5565 * x96;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x5567 = Fp(x5566.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[30 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5567);
          reg = x5567;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x5568 = arg2[30 * steps + ((cycle - 0) & mask)];
      assert(x5568 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x5569 = x5566 - x5568;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x5570 = x5569 * x96;
      // loc("./zirgen/components/bits.h":78:23)
      {
        auto& reg = arg2[81 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x5570);
        reg = x5570;
      }
      // loc("zirgen/components/u32.cpp":276:14)
      auto x5571 = x5482 * x5414;
      // loc("zirgen/components/u32.cpp":277:21)
      auto x5572 = x5482 * x5418;
      // loc("zirgen/components/u32.cpp":277:51)
      auto x5573 = x5486 * x5414;
      // loc("zirgen/components/u32.cpp":276:14)
      auto x5574 = x5571 + x5521;
      // loc("zirgen/components/u32.cpp":277:21)
      auto x5575 = x5572 + x5573;
      // loc("zirgen/components/u32.cpp":277:21)
      auto x5576 = x5575 + x5525;
      // loc("zirgen/components/u32.cpp":277:14)
      auto x5577 = x5576 * x95;
      // loc("zirgen/components/u32.cpp":276:14)
      auto x5578 = x5574 + x5577;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x5579 = Fp(x5578.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[31 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5579);
          reg = x5579;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x5580 = arg2[31 * steps + ((cycle - 0) & mask)];
      assert(x5580 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x5581 = x5578 - x5580;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x5582 = x5581 * x96;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x5583 = Fp(x5582.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[32 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5583);
          reg = x5583;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x5584 = arg2[32 * steps + ((cycle - 0) & mask)];
      assert(x5584 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x5585 = x5582 - x5584;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x5586 = x5585 * x96;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x5587 = Fp(x5586.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[35 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5587);
          reg = x5587;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x5588 = arg2[35 * steps + ((cycle - 0) & mask)];
      assert(x5588 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x5589 = x5586 - x5588;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x5590 = x5589 * x96;
      // loc("./zirgen/components/bits.h":78:23)
      {
        auto& reg = arg2[82 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x5590);
        reg = x5590;
      }
      // loc("zirgen/components/u32.cpp":282:7)
      auto x5591 = x5486 * x5430;
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_divide(VerifyDivideCycle)/U32MulAcc/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5592 = arg2[82 * steps + ((cycle - 0) & mask)];
      assert(x5592 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":280:15)
      auto x5593 = x5592 * x95;
      // loc("zirgen/components/u32.cpp":280:15)
      auto x5594 = x5593 + x5588;
      // loc("zirgen/components/u32.cpp":282:7)
      assert(x5591 == 0 && "eqz failed at: zirgen/components/u32.cpp:282");
      // loc("zirgen/components/u32.cpp":283:7)
      auto x5595 = x5494 * x5426;
      // loc("zirgen/components/u32.cpp":283:7)
      assert(x5595 == 0 && "eqz failed at: zirgen/components/u32.cpp:283");
      // loc("zirgen/components/u32.cpp":284:7)
      auto x5596 = x5498 * x5418;
      // loc("zirgen/components/u32.cpp":284:7)
      assert(x5596 == 0 && "eqz failed at: zirgen/components/u32.cpp:284");
      // loc("zirgen/components/u32.cpp":285:7)
      auto x5597 = x5494 * x5430;
      // loc("zirgen/components/u32.cpp":285:7)
      assert(x5597 == 0 && "eqz failed at: zirgen/components/u32.cpp:285");
      // loc("zirgen/components/u32.cpp":286:7)
      auto x5598 = x5498 * x5426;
      // loc("zirgen/components/u32.cpp":286:7)
      assert(x5598 == 0 && "eqz failed at: zirgen/components/u32.cpp:286");
      // loc("zirgen/components/u32.cpp":287:7)
      auto x5599 = x5498 * x5430;
      // loc("zirgen/components/u32.cpp":287:7)
      assert(x5599 == 0 && "eqz failed at: zirgen/components/u32.cpp:287");
      // loc("zirgen/components/u32.cpp":289:15)
      auto x5600 = x5494 * x5414;
      // loc("zirgen/components/u32.cpp":291:22)
      auto x5601 = x5498 * x5414;
      // loc("zirgen/components/u32.cpp":290:15)
      auto x5602 = x5482 * x5426;
      // loc("zirgen/components/u32.cpp":292:52)
      auto x5603 = x5482 * x5430;
      // loc("zirgen/components/u32.cpp":289:45)
      auto x5604 = x5486 * x5418;
      // loc("zirgen/components/u32.cpp":292:22)
      auto x5605 = x5486 * x5426;
      // loc("zirgen/components/u32.cpp":291:52)
      auto x5606 = x5494 * x5418;
      // loc("zirgen/components/u32.cpp":289:15)
      auto x5607 = x5600 + x5604;
      // loc("zirgen/components/u32.cpp":291:22)
      auto x5608 = x5601 + x5606;
      // loc("zirgen/components/u32.cpp":289:15)
      auto x5609 = x5607 + x5602;
      // loc("zirgen/components/u32.cpp":291:22)
      auto x5610 = x5608 + x5605;
      // loc("zirgen/components/u32.cpp":289:15)
      auto x5611 = x5609 + x5533;
      // loc("zirgen/components/u32.cpp":291:22)
      auto x5612 = x5610 + x5603;
      // loc("zirgen/components/u32.cpp":289:15)
      auto x5613 = x5611 + x5594;
      // loc("zirgen/components/u32.cpp":291:22)
      auto x5614 = x5612 + x5537;
      // loc("zirgen/components/u32.cpp":291:15)
      auto x5615 = x5614 * x95;
      // loc("zirgen/components/u32.cpp":289:15)
      auto x5616 = x5613 + x5615;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x5617 = Fp(x5616.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[33 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5617);
          reg = x5617;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x5618 = arg2[33 * steps + ((cycle - 0) & mask)];
      assert(x5618 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x5619 = x5616 - x5618;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x5620 = x5619 * x96;
      // loc("zirgen/components/bytes.cpp":111:3)
      {
        auto& reg = arg2[34 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x5620);
        reg = x5620;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
      auto x5621 = arg2[34 * steps + ((cycle - 0) & mask)];
      assert(x5621 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/verify_divide(VerifyDivideCycle)/U32Normalize/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5622 = arg2[81 * steps + ((cycle - 0) & mask)];
      assert(x5622 != Fp::invalid());
      extern_args[0] = x5580;
      extern_args[1] = x5584;
      extern_args[2] = x5618;
      extern_args[3] = x5621;
      extern_args[4] = x5622;
      extern_log(ctx, cycle, "  mul->getOut() = %w, denomRemCheck->carry = %u", extern_args, extern_outs);
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":178:3)
      auto x5623 = x5580 - x5372;
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":178:3)
      assert(x5623 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/divide.cpp:178");
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":178:3)
      auto x5624 = x5584 - x5376;
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":178:3)
      assert(x5624 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/divide.cpp:178");
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":178:3)
      auto x5625 = x5618 - x5384;
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":178:3)
      assert(x5625 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/divide.cpp:178");
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":178:3)
      auto x5626 = x5621 - x5388;
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":178:3)
      assert(x5626 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/divide.cpp:178");
      if (x5449 != 0) {
        // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":179:36)
        auto x5627 = x5622 - x101;
        // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":179:36)
        assert(x5627 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/divide.cpp:179");
      }
      if (x5448 != 0) {
        // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":181:5)
        auto x5628 = x5310 - x5311;
        // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":181:5)
        assert(x5628 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/divide.cpp:181");
        // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":181:5)
        auto x5629 = x5314 - x5315;
        // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":181:5)
        assert(x5629 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/divide.cpp:181");
        // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":181:5)
        auto x5630 = x5318 - x5319;
        // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":181:5)
        assert(x5630 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/divide.cpp:181");
        // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":181:5)
        auto x5631 = x5323 - x5324;
        // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":181:5)
        assert(x5631 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/divide.cpp:181");
        // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":182:5)
        auto x5632 = x5309 - x97;
        // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":182:5)
        assert(x5632 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/divide.cpp:182");
        // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":182:5)
        auto x5633 = x5313 - x97;
        // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":182:5)
        assert(x5633 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/divide.cpp:182");
        // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":182:5)
        auto x5634 = x5317 - x97;
        // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":182:5)
        assert(x5634 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/divide.cpp:182");
        // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":182:5)
        auto x5635 = x5322 - x97;
        // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":182:5)
        assert(x5635 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/divide.cpp:182");
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":34:23)
      auto x5636 = x980 + x83;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x5637 = Fp(x5636.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[6 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5637);
          reg = x5637;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x5638 = arg2[6 * steps + ((cycle - 0) & mask)];
      assert(x5638 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x5639 = x5636 - x5638;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x5640 = x5639 * x96;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x5641 = Fp(x5640.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[7 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5641);
          reg = x5641;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x5642 = arg2[7 * steps + ((cycle - 0) & mask)];
      assert(x5642 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x5643 = x5640 - x5642;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x5644 = x5643 * x96;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x5645 = Fp(x5644.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[8 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5645);
          reg = x5645;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x5646 = arg2[8 * steps + ((cycle - 0) & mask)];
      assert(x5646 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x5647 = x5644 - x5646;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x5648 = x5647 * x96;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":37:26)
        auto x5649 = Fp(x5648.asUInt32() & x81.asUInt32());
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[70 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5649);
          reg = x5649;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[0](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5650 = arg2[70 * steps + ((cycle - 0) & mask)];
      assert(x5650 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:18)
      auto x5651 = x5648 - x5650;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:17)
      auto x5652 = x5651 * x80;
      // loc("./zirgen/components/bits.h":78:23)
      {
        auto& reg = arg2[71 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x5652);
        reg = x5652;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5653 = arg2[71 * steps + ((cycle - 0) & mask)];
      assert(x5653 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:23)
      auto x5654 = x101 - x5653;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:15)
      auto x5655 = x5653 * x5654;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:3)
      {
        auto& reg = arg2[98 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x5655);
        reg = x5655;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:17)
      auto x5656 = x98 - x5653;
      // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x5657 = arg2[98 * steps + ((cycle - 0) & mask)];
      assert(x5657 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
      auto x5658 = x5657 * x5656;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
      assert(x5658 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:43");
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":185:3)
      {
        auto& reg = arg2[100 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x66);
        reg = x66;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/user_mode(Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5659 = arg2[99 * steps + ((cycle - 0) & mask)];
      assert(x5659 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":60:7)
      auto x5660 = x5659 * x5653;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":60:7)
      auto x5661 = x5660 * x5654;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":60:7)
      assert(x5661 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:60");
    }
    // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[8](Reg)"("./zirgen/components/mux.h":59:25))
    auto x5662 = arg2[109 * steps + ((cycle - 0) & mask)];
    assert(x5662 != Fp::invalid());
    if (x5662 != 0) {
      // loc("Top/mux(Mux)/body(BodyStep)/user_mode(Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5663 = arg2[99 * steps + ((cycle - 1) & mask)];
      assert(x5663 != Fp::invalid());
      {
        extern_isTrap(ctx, cycle, "", extern_args, extern_outs);
        auto x5664 = extern_outs[0];
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5664);
          reg = x5664;
        }
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":204:8)
      auto x5665 = x101 - x5663;
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x5666 = arg2[197 * steps + ((cycle - 0) & mask)];
      assert(x5666 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":204:7)
      auto x5667 = x5665 * x5666;
      // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":204:7)
      assert(x5667 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/ecall.cpp:204");
      // loc("Top/mux(Mux)/body(BodyStep)/next_major(Reg)"("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":206:37))
      auto x5668 = arg2[100 * steps + ((cycle - 1) & mask)];
      assert(x5668 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":206:37)
      auto x5669 = x5668 - x66;
      // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":206:37)
      assert(x5669 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/ecall.cpp:206");
      if (x5666 != 0) {
        {
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[189 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[190 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[191 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[192 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[193 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[194 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[195 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[196 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/OneHot/hot[1](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x5670 = arg2[190 * steps + ((cycle - 0) & mask)];
        assert(x5670 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/OneHot/hot[2](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x5671 = arg2[191 * steps + ((cycle - 0) & mask)];
        assert(x5671 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/OneHot/hot[3](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x5672 = arg2[192 * steps + ((cycle - 0) & mask)];
        assert(x5672 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/OneHot/hot[4](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x5673 = arg2[193 * steps + ((cycle - 0) & mask)];
        assert(x5673 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/OneHot/hot[5](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x5674 = arg2[194 * steps + ((cycle - 0) & mask)];
        assert(x5674 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/OneHot/hot[6](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x5675 = arg2[195 * steps + ((cycle - 0) & mask)];
        assert(x5675 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/OneHot/hot[7](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x5676 = arg2[196 * steps + ((cycle - 0) & mask)];
        assert(x5676 != Fp::invalid());
        // loc("./zirgen/components/onehot.h":56:19)
        auto x5677 = x5671 * x98;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x5678 = x5672 * x81;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x5679 = x5673 * x83;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x5680 = x5674 * x71;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x5681 = x5675 * x70;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x5682 = x5676 * x69;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x5683 = x5670 + x5677;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x5684 = x5683 + x5678;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x5685 = x5684 + x5679;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x5686 = x5685 + x5680;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x5687 = x5686 + x5681;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x5688 = x5687 + x5682;
        // loc("./zirgen/components/onehot.h":50:8)
        auto x5689 = x5688 - x69;
        // loc("./zirgen/components/onehot.h":50:8)
        assert(x5689 == 0 && "eqz failed at: ./zirgen/components/onehot.h:50");
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":211:16)
      auto x5690 = x101 - x5666;
      if (x5690 != 0) {
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":213:43)
        auto x5691 = x980 * x80;
        {
          extern_args[0] = x5691;
          extern_args[1] = x101;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x5692 = extern_outs[0];
          auto x5693 = extern_outs[1];
          auto x5694 = extern_outs[2];
          auto x5695 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[121 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5692);
            reg = x5692;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[122 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5693);
            reg = x5693;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[123 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5694);
            reg = x5694;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[124 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5695);
            reg = x5695;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x5696 = arg2[121 * steps + ((cycle - 0) & mask)];
        assert(x5696 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x5697 = arg2[122 * steps + ((cycle - 0) & mask)];
        assert(x5697 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x5698 = arg2[123 * steps + ((cycle - 0) & mask)];
        assert(x5698 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x5699 = arg2[124 * steps + ((cycle - 0) & mask)];
        assert(x5699 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[118 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5691);
          reg = x5691;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[119 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x966);
          reg = x966;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[120 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5696);
          reg = x5696;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5697);
          reg = x5697;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[123 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5698);
          reg = x5698;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[124 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5699);
          reg = x5699;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":215:8)
        auto x5700 = x5696 - x34;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":215:8)
        assert(x5700 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/ecall.cpp:215");
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":216:9)
        assert(x5697 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/ecall.cpp:216");
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":217:9)
        assert(x5698 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/ecall.cpp:217");
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":218:9)
        assert(x5699 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/ecall.cpp:218");
        {
          extern_args[0] = x33;
          extern_args[1] = x101;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x5701 = extern_outs[0];
          auto x5702 = extern_outs[1];
          auto x5703 = extern_outs[2];
          auto x5704 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[128 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5701);
            reg = x5701;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[129 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5702);
            reg = x5702;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[130 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5703);
            reg = x5703;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[131 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5704);
            reg = x5704;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x5705 = arg2[128 * steps + ((cycle - 0) & mask)];
        assert(x5705 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x5706 = arg2[129 * steps + ((cycle - 0) & mask)];
        assert(x5706 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x5707 = arg2[130 * steps + ((cycle - 0) & mask)];
        assert(x5707 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x5708 = arg2[131 * steps + ((cycle - 0) & mask)];
        assert(x5708 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[125 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x33);
          reg = x33;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[126 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x966);
          reg = x966;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[127 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[128 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5705);
          reg = x5705;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[129 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5706);
          reg = x5706;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[130 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5707);
          reg = x5707;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[131 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5708);
          reg = x5708;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":222:55)
        auto x5709 = x5663 * x69;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":222:18)
        auto x5710 = x5665 * x5705;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":222:18)
        auto x5711 = x5710 + x5709;
        {
          // loc("./zirgen/components/onehot.h":47:26)
          auto x5712 = (x5711 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[189 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5712);
            reg = x5712;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x5713 = x5711 - x101;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x5714 = (x5713 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[190 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5714);
            reg = x5714;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x5715 = x5711 - x98;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x5716 = (x5715 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[191 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5716);
            reg = x5716;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x5717 = x5711 - x81;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x5718 = (x5717 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[192 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5718);
            reg = x5718;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x5719 = x5711 - x83;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x5720 = (x5719 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[193 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5720);
            reg = x5720;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x5721 = x5711 - x71;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x5722 = (x5721 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[194 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5722);
            reg = x5722;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x5723 = x5711 - x70;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x5724 = (x5723 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[195 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5724);
            reg = x5724;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x5725 = x5711 - x69;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x5726 = (x5725 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[196 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5726);
            reg = x5726;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/OneHot/hot[1](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x5727 = arg2[190 * steps + ((cycle - 0) & mask)];
        assert(x5727 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/OneHot/hot[2](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x5728 = arg2[191 * steps + ((cycle - 0) & mask)];
        assert(x5728 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/OneHot/hot[3](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x5729 = arg2[192 * steps + ((cycle - 0) & mask)];
        assert(x5729 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/OneHot/hot[4](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x5730 = arg2[193 * steps + ((cycle - 0) & mask)];
        assert(x5730 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/OneHot/hot[5](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x5731 = arg2[194 * steps + ((cycle - 0) & mask)];
        assert(x5731 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/OneHot/hot[6](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x5732 = arg2[195 * steps + ((cycle - 0) & mask)];
        assert(x5732 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/OneHot/hot[7](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x5733 = arg2[196 * steps + ((cycle - 0) & mask)];
        assert(x5733 != Fp::invalid());
        // loc("./zirgen/components/onehot.h":56:19)
        auto x5734 = x5728 * x98;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x5735 = x5729 * x81;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x5736 = x5730 * x83;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x5737 = x5731 * x71;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x5738 = x5732 * x70;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x5739 = x5733 * x69;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x5740 = x5727 + x5734;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x5741 = x5740 + x5735;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x5742 = x5741 + x5736;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x5743 = x5742 + x5737;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x5744 = x5743 + x5738;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x5745 = x5744 + x5739;
        // loc("./zirgen/components/onehot.h":50:8)
        auto x5746 = x5745 - x5711;
        // loc("./zirgen/components/onehot.h":50:8)
        assert(x5746 == 0 && "eqz failed at: ./zirgen/components/onehot.h:50");
      }
      {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/OneHot/hot[1](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x5747 = arg2[190 * steps + ((cycle - 0) & mask)];
        assert(x5747 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/OneHot/hot[2](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x5748 = arg2[191 * steps + ((cycle - 0) & mask)];
        assert(x5748 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/OneHot/hot[3](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x5749 = arg2[192 * steps + ((cycle - 0) & mask)];
        assert(x5749 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/OneHot/hot[4](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x5750 = arg2[193 * steps + ((cycle - 0) & mask)];
        assert(x5750 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/OneHot/hot[5](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x5751 = arg2[194 * steps + ((cycle - 0) & mask)];
        assert(x5751 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/OneHot/hot[6](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x5752 = arg2[195 * steps + ((cycle - 0) & mask)];
        assert(x5752 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/OneHot/hot[7](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x5753 = arg2[196 * steps + ((cycle - 0) & mask)];
        assert(x5753 != Fp::invalid());
        // loc("./zirgen/components/onehot.h":56:19)
        auto x5754 = x5748 * x98;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x5755 = x5749 * x81;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x5756 = x5750 * x83;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x5757 = x5751 * x71;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x5758 = x5752 * x70;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x5759 = x5753 * x69;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x5760 = x5747 + x5754;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x5761 = x5760 + x5755;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x5762 = x5761 + x5756;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x5763 = x5762 + x5757;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x5764 = x5763 + x5758;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x5765 = x5764 + x5759;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":227:47)
        auto x5766 = (x5765 == 0) ? Fp(1) : Fp(0);
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":227:47)
        auto x5767 = x101 - x5766;
        if (x5767 != 0) {
          extern_args[0] = x5765;
          extern_log(ctx, cycle, "  ecall, selector = %u", extern_args, extern_outs);
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/OneHot/hot[0](Reg)"("./zirgen/components/mux.h":59:25))
      auto x5768 = arg2[189 * steps + ((cycle - 0) & mask)];
      assert(x5768 != Fp::invalid());
      if (x5768 != 0) {
        {
          extern_args[0] = x32;
          extern_args[1] = x101;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x5769 = extern_outs[0];
          auto x5770 = extern_outs[1];
          auto x5771 = extern_outs[2];
          auto x5772 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5769);
            reg = x5769;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5770);
            reg = x5770;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5771);
            reg = x5771;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5772);
            reg = x5772;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x5773 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x5773 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x5774 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x5774 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x5775 = arg2[144 * steps + ((cycle - 0) & mask)];
        assert(x5775 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x5776 = arg2[145 * steps + ((cycle - 0) & mask)];
        assert(x5776 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[139 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x32);
          reg = x32;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x966);
          reg = x966;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5773);
          reg = x5773;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5774);
          reg = x5774;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[144 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5775);
          reg = x5775;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[145 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5776);
          reg = x5776;
        }
        // loc("./zirgen/components/u32.h":35:12)
        auto x5777 = x5774 * x95;
        // loc("./zirgen/components/u32.h":36:12)
        auto x5778 = x5775 * x82;
        // loc("./zirgen/components/u32.h":37:12)
        auto x5779 = x5776 * x84;
        // loc("./zirgen/components/u32.h":34:12)
        auto x5780 = x5773 + x5777;
        // loc("./zirgen/components/u32.h":34:12)
        auto x5781 = x5780 + x5778;
        // loc("./zirgen/components/u32.h":34:12)
        auto x5782 = x5781 + x5779;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":29:18)
        auto x5783 = x5782 * x80;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":29:3)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5783);
          reg = x5783;
        }
        {
          extern_args[0] = x31;
          extern_args[1] = x101;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x5784 = extern_outs[0];
          auto x5785 = extern_outs[1];
          auto x5786 = extern_outs[2];
          auto x5787 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[135 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5784);
            reg = x5784;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[136 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5785);
            reg = x5785;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5786);
            reg = x5786;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5787);
            reg = x5787;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x5788 = arg2[135 * steps + ((cycle - 0) & mask)];
        assert(x5788 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x5789 = arg2[136 * steps + ((cycle - 0) & mask)];
        assert(x5789 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x5790 = arg2[137 * steps + ((cycle - 0) & mask)];
        assert(x5790 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x5791 = arg2[138 * steps + ((cycle - 0) & mask)];
        assert(x5791 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[132 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x31);
          reg = x31;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[133 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x966);
          reg = x966;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[134 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5788);
          reg = x5788;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5789);
          reg = x5789;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[137 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5790);
          reg = x5790;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[138 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5791);
          reg = x5791;
        }
        extern_args[0] = x5788;
        extern_args[1] = x5789;
        extern_args[2] = x5790;
        extern_args[3] = x5791;
        extern_args[4] = x5773;
        extern_args[5] = x5774;
        extern_args[6] = x5775;
        extern_args[7] = x5776;
        extern_log(ctx, cycle, "ECallHalt> exitCode = %w, ramAddr = %w", extern_args, extern_outs);
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":35:17)
        auto x5792 = x980 + x83;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":34:23)
        auto x5793 = x5792 + x83;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x5794 = Fp(x5793.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5794);
            reg = x5794;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x5795 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x5795 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x5796 = x5793 - x5795;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x5797 = x5796 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x5798 = Fp(x5797.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5798);
            reg = x5798;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x5799 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x5799 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x5800 = x5797 - x5799;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x5801 = x5800 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x5802 = Fp(x5801.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5802);
            reg = x5802;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x5803 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x5803 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x5804 = x5801 - x5803;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x5805 = x5804 * x96;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":37:26)
          auto x5806 = Fp(x5805.asUInt32() & x81.asUInt32());
          // loc("./zirgen/components/bits.h":78:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5806);
            reg = x5806;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[0](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x5807 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x5807 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:18)
        auto x5808 = x5805 - x5807;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:17)
        auto x5809 = x5808 * x80;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5809);
          reg = x5809;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x5810 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x5810 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:23)
        auto x5811 = x101 - x5810;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:15)
        auto x5812 = x5810 * x5811;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5812);
          reg = x5812;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:17)
        auto x5813 = x98 - x5810;
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x5814 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x5814 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        auto x5815 = x5814 * x5813;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        assert(x5815 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:43");
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[99 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5663);
          reg = x5663;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":37:3)
        {
          auto& reg = arg2[100 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x72);
          reg = x72;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/OneHot/hot[1](Reg)"("./zirgen/components/mux.h":59:25))
      auto x5816 = arg2[190 * steps + ((cycle - 0) & mask)];
      assert(x5816 != Fp::invalid());
      if (x5816 != 0) {
        {
          extern_args[0] = x31;
          extern_args[1] = x101;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x5817 = extern_outs[0];
          auto x5818 = extern_outs[1];
          auto x5819 = extern_outs[2];
          auto x5820 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[135 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5817);
            reg = x5817;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[136 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5818);
            reg = x5818;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5819);
            reg = x5819;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5820);
            reg = x5820;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x5821 = arg2[135 * steps + ((cycle - 0) & mask)];
        assert(x5821 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x5822 = arg2[136 * steps + ((cycle - 0) & mask)];
        assert(x5822 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x5823 = arg2[137 * steps + ((cycle - 0) & mask)];
        assert(x5823 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x5824 = arg2[138 * steps + ((cycle - 0) & mask)];
        assert(x5824 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[132 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x31);
          reg = x31;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[133 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x966);
          reg = x966;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[134 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5821);
          reg = x5821;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5822);
          reg = x5822;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[137 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5823);
          reg = x5823;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[138 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5824);
          reg = x5824;
        }
        {
          // loc("./zirgen/components/onehot.h":47:26)
          auto x5825 = (x5821 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5825);
            reg = x5825;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x5826 = x5821 - x101;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x5827 = (x5826 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[199 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5827);
            reg = x5827;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x5828 = x5821 - x98;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x5829 = (x5828 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[200 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5829);
            reg = x5829;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x5830 = x5821 - x81;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x5831 = (x5830 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[201 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5831);
            reg = x5831;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x5832 = x5821 - x83;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x5833 = (x5832 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[202 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5833);
            reg = x5833;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x5834 = x5821 - x71;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x5835 = (x5834 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[203 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5835);
            reg = x5835;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x5836 = x5821 - x70;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x5837 = (x5836 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[204 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5837);
            reg = x5837;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x5838 = x5821 - x69;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x5839 = (x5838 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[205 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5839);
            reg = x5839;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/Mux/1(ECallInput)/OneHot/hot[1](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x5840 = arg2[199 * steps + ((cycle - 0) & mask)];
        assert(x5840 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/Mux/1(ECallInput)/OneHot/hot[2](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x5841 = arg2[200 * steps + ((cycle - 0) & mask)];
        assert(x5841 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/Mux/1(ECallInput)/OneHot/hot[3](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x5842 = arg2[201 * steps + ((cycle - 0) & mask)];
        assert(x5842 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/Mux/1(ECallInput)/OneHot/hot[4](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x5843 = arg2[202 * steps + ((cycle - 0) & mask)];
        assert(x5843 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/Mux/1(ECallInput)/OneHot/hot[5](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x5844 = arg2[203 * steps + ((cycle - 0) & mask)];
        assert(x5844 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/Mux/1(ECallInput)/OneHot/hot[6](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x5845 = arg2[204 * steps + ((cycle - 0) & mask)];
        assert(x5845 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/Mux/1(ECallInput)/OneHot/hot[7](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x5846 = arg2[205 * steps + ((cycle - 0) & mask)];
        assert(x5846 != Fp::invalid());
        // loc("./zirgen/components/onehot.h":56:19)
        auto x5847 = x5841 * x98;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x5848 = x5842 * x81;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x5849 = x5843 * x83;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x5850 = x5844 * x71;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x5851 = x5845 * x70;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x5852 = x5846 * x69;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x5853 = x5840 + x5847;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x5854 = x5853 + x5848;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x5855 = x5854 + x5849;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x5856 = x5855 + x5850;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x5857 = x5856 + x5851;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x5858 = x5857 + x5852;
        // loc("./zirgen/components/onehot.h":50:8)
        auto x5859 = x5858 - x5821;
        // loc("./zirgen/components/onehot.h":50:8)
        assert(x5859 == 0 && "eqz failed at: ./zirgen/components/onehot.h:50");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/Mux/1(ECallInput)/OneHot/hot[0](Reg)"("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":52:23))
        auto x5860 = arg2[198 * steps + ((cycle - 0) & mask)];
        assert(x5860 != Fp::invalid());
        if (x5860 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[0](U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5861 = arg1[0];
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[0](U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5862 = arg1[1];
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[0](U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5863 = arg1[2];
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[0](U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5864 = arg1[3];
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[206 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5861);
            reg = x5861;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[207 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5862);
            reg = x5862;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[208 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5863);
            reg = x5863;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[209 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5864);
            reg = x5864;
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5865 = arg2[206 * steps + ((cycle - 0) & mask)];
          assert(x5865 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5866 = arg2[207 * steps + ((cycle - 0) & mask)];
          assert(x5866 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5867 = arg2[208 * steps + ((cycle - 0) & mask)];
          assert(x5867 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5868 = arg2[209 * steps + ((cycle - 0) & mask)];
          assert(x5868 != Fp::invalid());
          extern_args[0] = x5858;
          extern_args[1] = x5865;
          extern_args[2] = x5866;
          extern_args[3] = x5867;
          extern_args[4] = x5868;
          extern_log(ctx, cycle, "  Read from %u: %w", extern_args, extern_outs);
        }
        if (x5840 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[1](U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5869 = arg1[4];
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[1](U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5870 = arg1[5];
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[1](U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5871 = arg1[6];
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[1](U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5872 = arg1[7];
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[206 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5869);
            reg = x5869;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[207 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5870);
            reg = x5870;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[208 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5871);
            reg = x5871;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[209 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5872);
            reg = x5872;
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5873 = arg2[206 * steps + ((cycle - 0) & mask)];
          assert(x5873 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5874 = arg2[207 * steps + ((cycle - 0) & mask)];
          assert(x5874 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5875 = arg2[208 * steps + ((cycle - 0) & mask)];
          assert(x5875 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5876 = arg2[209 * steps + ((cycle - 0) & mask)];
          assert(x5876 != Fp::invalid());
          extern_args[0] = x5858;
          extern_args[1] = x5873;
          extern_args[2] = x5874;
          extern_args[3] = x5875;
          extern_args[4] = x5876;
          extern_log(ctx, cycle, "  Read from %u: %w", extern_args, extern_outs);
        }
        if (x5841 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[2](U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5877 = arg1[10];
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[2](U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5878 = arg1[11];
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[2](U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5879 = arg1[8];
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[2](U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5880 = arg1[9];
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[206 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5879);
            reg = x5879;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[207 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5880);
            reg = x5880;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[208 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5877);
            reg = x5877;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[209 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5878);
            reg = x5878;
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5881 = arg2[206 * steps + ((cycle - 0) & mask)];
          assert(x5881 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5882 = arg2[207 * steps + ((cycle - 0) & mask)];
          assert(x5882 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5883 = arg2[208 * steps + ((cycle - 0) & mask)];
          assert(x5883 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5884 = arg2[209 * steps + ((cycle - 0) & mask)];
          assert(x5884 != Fp::invalid());
          extern_args[0] = x5858;
          extern_args[1] = x5881;
          extern_args[2] = x5882;
          extern_args[3] = x5883;
          extern_args[4] = x5884;
          extern_log(ctx, cycle, "  Read from %u: %w", extern_args, extern_outs);
        }
        if (x5842 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[3](U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5885 = arg1[12];
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[3](U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5886 = arg1[13];
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[3](U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5887 = arg1[14];
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[3](U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5888 = arg1[15];
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[206 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5885);
            reg = x5885;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[207 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5886);
            reg = x5886;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[208 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5887);
            reg = x5887;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[209 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5888);
            reg = x5888;
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5889 = arg2[206 * steps + ((cycle - 0) & mask)];
          assert(x5889 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5890 = arg2[207 * steps + ((cycle - 0) & mask)];
          assert(x5890 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5891 = arg2[208 * steps + ((cycle - 0) & mask)];
          assert(x5891 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5892 = arg2[209 * steps + ((cycle - 0) & mask)];
          assert(x5892 != Fp::invalid());
          extern_args[0] = x5858;
          extern_args[1] = x5889;
          extern_args[2] = x5890;
          extern_args[3] = x5891;
          extern_args[4] = x5892;
          extern_log(ctx, cycle, "  Read from %u: %w", extern_args, extern_outs);
        }
        if (x5843 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[4](U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5893 = arg1[16];
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[4](U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5894 = arg1[17];
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[4](U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5895 = arg1[18];
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[4](U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5896 = arg1[19];
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[206 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5893);
            reg = x5893;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[207 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5894);
            reg = x5894;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[208 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5895);
            reg = x5895;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[209 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5896);
            reg = x5896;
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5897 = arg2[206 * steps + ((cycle - 0) & mask)];
          assert(x5897 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5898 = arg2[207 * steps + ((cycle - 0) & mask)];
          assert(x5898 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5899 = arg2[208 * steps + ((cycle - 0) & mask)];
          assert(x5899 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5900 = arg2[209 * steps + ((cycle - 0) & mask)];
          assert(x5900 != Fp::invalid());
          extern_args[0] = x5858;
          extern_args[1] = x5897;
          extern_args[2] = x5898;
          extern_args[3] = x5899;
          extern_args[4] = x5900;
          extern_log(ctx, cycle, "  Read from %u: %w", extern_args, extern_outs);
        }
        if (x5844 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[5](U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5901 = arg1[20];
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[5](U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5902 = arg1[21];
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[5](U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5903 = arg1[22];
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[5](U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5904 = arg1[23];
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[206 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5901);
            reg = x5901;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[207 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5902);
            reg = x5902;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[208 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5903);
            reg = x5903;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[209 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5904);
            reg = x5904;
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5905 = arg2[206 * steps + ((cycle - 0) & mask)];
          assert(x5905 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5906 = arg2[207 * steps + ((cycle - 0) & mask)];
          assert(x5906 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5907 = arg2[208 * steps + ((cycle - 0) & mask)];
          assert(x5907 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5908 = arg2[209 * steps + ((cycle - 0) & mask)];
          assert(x5908 != Fp::invalid());
          extern_args[0] = x5858;
          extern_args[1] = x5905;
          extern_args[2] = x5906;
          extern_args[3] = x5907;
          extern_args[4] = x5908;
          extern_log(ctx, cycle, "  Read from %u: %w", extern_args, extern_outs);
        }
        if (x5845 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[6](U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5909 = arg1[24];
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[6](U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5910 = arg1[25];
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[6](U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5911 = arg1[26];
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[6](U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5912 = arg1[27];
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[206 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5909);
            reg = x5909;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[207 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5910);
            reg = x5910;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[208 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5911);
            reg = x5911;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[209 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5912);
            reg = x5912;
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5913 = arg2[206 * steps + ((cycle - 0) & mask)];
          assert(x5913 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5914 = arg2[207 * steps + ((cycle - 0) & mask)];
          assert(x5914 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5915 = arg2[208 * steps + ((cycle - 0) & mask)];
          assert(x5915 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5916 = arg2[209 * steps + ((cycle - 0) & mask)];
          assert(x5916 != Fp::invalid());
          extern_args[0] = x5858;
          extern_args[1] = x5913;
          extern_args[2] = x5914;
          extern_args[3] = x5915;
          extern_args[4] = x5916;
          extern_log(ctx, cycle, "  Read from %u: %w", extern_args, extern_outs);
        }
        if (x5846 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[7](U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5917 = arg1[28];
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[7](U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5918 = arg1[29];
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[7](U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5919 = arg1[30];
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[7](U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5920 = arg1[31];
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[206 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5917);
            reg = x5917;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[207 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5918);
            reg = x5918;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[208 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5919);
            reg = x5919;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[209 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5920);
            reg = x5920;
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5921 = arg2[206 * steps + ((cycle - 0) & mask)];
          assert(x5921 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5922 = arg2[207 * steps + ((cycle - 0) & mask)];
          assert(x5922 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5923 = arg2[208 * steps + ((cycle - 0) & mask)];
          assert(x5923 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x5924 = arg2[209 * steps + ((cycle - 0) & mask)];
          assert(x5924 != Fp::invalid());
          extern_args[0] = x5858;
          extern_args[1] = x5921;
          extern_args[2] = x5922;
          extern_args[3] = x5923;
          extern_args[4] = x5924;
          extern_log(ctx, cycle, "  Read from %u: %w", extern_args, extern_outs);
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x5925 = arg2[206 * steps + ((cycle - 0) & mask)];
        assert(x5925 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x5926 = arg2[207 * steps + ((cycle - 0) & mask)];
        assert(x5926 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x5927 = arg2[208 * steps + ((cycle - 0) & mask)];
        assert(x5927 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x5928 = arg2[209 * steps + ((cycle - 0) & mask)];
        assert(x5928 != Fp::invalid());
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5925);
          reg = x5925;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5926);
          reg = x5926;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[144 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5927);
          reg = x5927;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[145 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5928);
          reg = x5928;
        }
        {
          extern_args[0] = x31;
          extern_args[1] = x5925;
          extern_args[2] = x5926;
          extern_args[3] = x5927;
          extern_args[4] = x5928;
          extern_args[5] = x98;
          extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x5929 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x5929 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x5930 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x5930 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x5931 = arg2[144 * steps + ((cycle - 0) & mask)];
        assert(x5931 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x5932 = arg2[145 * steps + ((cycle - 0) & mask)];
        assert(x5932 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[139 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x31);
          reg = x31;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x966);
          reg = x966;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x98);
          reg = x98;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5929);
          reg = x5929;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5930);
          reg = x5930;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[144 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5931);
          reg = x5931;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[145 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5932);
          reg = x5932;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":62:17)
        auto x5933 = x980 + x83;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":34:23)
        auto x5934 = x5933 + x83;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x5935 = Fp(x5934.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5935);
            reg = x5935;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x5936 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x5936 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x5937 = x5934 - x5936;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x5938 = x5937 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x5939 = Fp(x5938.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5939);
            reg = x5939;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x5940 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x5940 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x5941 = x5938 - x5940;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x5942 = x5941 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x5943 = Fp(x5942.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5943);
            reg = x5943;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x5944 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x5944 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x5945 = x5942 - x5944;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x5946 = x5945 * x96;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":37:26)
          auto x5947 = Fp(x5946.asUInt32() & x81.asUInt32());
          // loc("./zirgen/components/bits.h":78:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5947);
            reg = x5947;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[0](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x5948 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x5948 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:18)
        auto x5949 = x5946 - x5948;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:17)
        auto x5950 = x5949 * x80;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5950);
          reg = x5950;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x5951 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x5951 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:23)
        auto x5952 = x101 - x5951;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:15)
        auto x5953 = x5951 * x5952;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5953);
          reg = x5953;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:17)
        auto x5954 = x98 - x5951;
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x5955 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x5955 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        auto x5956 = x5955 * x5954;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        assert(x5956 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:43");
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[99 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5663);
          reg = x5663;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":64:3)
        {
          auto& reg = arg2[100 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x66);
          reg = x66;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/OneHot/hot[2](Reg)"("./zirgen/components/mux.h":59:25))
      auto x5957 = arg2[191 * steps + ((cycle - 0) & mask)];
      assert(x5957 != Fp::invalid());
      if (x5957 != 0) {
        {
          extern_args[0] = x31;
          extern_args[1] = x101;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x5958 = extern_outs[0];
          auto x5959 = extern_outs[1];
          auto x5960 = extern_outs[2];
          auto x5961 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[135 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5958);
            reg = x5958;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[136 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5959);
            reg = x5959;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5960);
            reg = x5960;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5961);
            reg = x5961;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x5962 = arg2[135 * steps + ((cycle - 0) & mask)];
        assert(x5962 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x5963 = arg2[136 * steps + ((cycle - 0) & mask)];
        assert(x5963 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x5964 = arg2[137 * steps + ((cycle - 0) & mask)];
        assert(x5964 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x5965 = arg2[138 * steps + ((cycle - 0) & mask)];
        assert(x5965 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[132 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x31);
          reg = x31;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[133 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x966);
          reg = x966;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[134 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5962);
          reg = x5962;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5963);
          reg = x5963;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[137 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5964);
          reg = x5964;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[138 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5965);
          reg = x5965;
        }
        {
          extern_args[0] = x32;
          extern_args[1] = x101;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x5966 = extern_outs[0];
          auto x5967 = extern_outs[1];
          auto x5968 = extern_outs[2];
          auto x5969 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5966);
            reg = x5966;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5967);
            reg = x5967;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5968);
            reg = x5968;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5969);
            reg = x5969;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x5970 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x5970 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x5971 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x5971 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x5972 = arg2[144 * steps + ((cycle - 0) & mask)];
        assert(x5972 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x5973 = arg2[145 * steps + ((cycle - 0) & mask)];
        assert(x5973 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[139 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x32);
          reg = x32;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x966);
          reg = x966;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5970);
          reg = x5970;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5971);
          reg = x5971;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[144 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5972);
          reg = x5972;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[145 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5973);
          reg = x5973;
        }
        {
          // loc("./zirgen/components/u32.h":35:12)
          auto x5974 = x5971 * x95;
          // loc("./zirgen/components/u32.h":36:12)
          auto x5975 = x5972 * x82;
          // loc("./zirgen/components/u32.h":37:12)
          auto x5976 = x5973 * x84;
          // loc("./zirgen/components/u32.h":34:12)
          auto x5977 = x5970 + x5974;
          // loc("./zirgen/components/u32.h":34:12)
          auto x5978 = x5977 + x5975;
          // loc("./zirgen/components/u32.h":34:12)
          auto x5979 = x5978 + x5976;
          // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":91:22)
          auto x5980 = Fp(x5979.asUInt32() & x81.asUInt32());
          if (x5980 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":93:26)
            auto x5981 = x5979 - x5980;
            // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":93:26)
            auto x5982 = x5981 + x83;
            // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":93:25)
            auto x5983 = x5982 * x80;
            // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":93:7)
            {
              auto& reg = arg2[198 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x5983);
              reg = x5983;
            }
            // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":94:42)
            auto x5984 = x5980 - x101;
            // loc("./zirgen/components/bits.h":78:23)
            {
              auto& reg = arg2[76 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x5984);
              reg = x5984;
            }
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":96:23)
          auto x5985 = (x5980 == 0) ? Fp(1) : Fp(0);
          if (x5985 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":97:25)
            auto x5986 = x5979 * x80;
            // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":97:7)
            {
              auto& reg = arg2[198 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x5986);
              reg = x5986;
            }
            // loc("./zirgen/components/bits.h":78:23)
            {
              auto& reg = arg2[76 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x81);
              reg = x81;
            }
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/Mux/2(ECallSoftware)/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x5987 = arg2[198 * steps + ((cycle - 0) & mask)];
        assert(x5987 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/Mux/2(ECallSoftware)/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x5988 = arg2[76 * steps + ((cycle - 0) & mask)];
        assert(x5988 != Fp::invalid());
        // loc("./zirgen/components/u32.h":35:12)
        auto x5989 = x5971 * x95;
        // loc("./zirgen/components/u32.h":36:12)
        auto x5990 = x5972 * x82;
        // loc("./zirgen/components/u32.h":37:12)
        auto x5991 = x5973 * x84;
        // loc("./zirgen/components/u32.h":34:12)
        auto x5992 = x5970 + x5989;
        // loc("./zirgen/components/u32.h":34:12)
        auto x5993 = x5992 + x5990;
        // loc("./zirgen/components/u32.h":34:12)
        auto x5994 = x5993 + x5991;
        extern_args[0] = x5994;
        extern_args[1] = x5987;
        extern_args[2] = x5988;
        extern_log(ctx, cycle, "Calculated orig = %u, output chunks = %u, first cycle-1 = %u", extern_args, extern_outs);
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":107:7)
        auto x5995 = x5987 - x101;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":107:44)
        auto x5996 = x5988 + x101;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":107:6)
        auto x5997 = x5995 * x83;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":107:6)
        auto x5998 = x5997 + x5996;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":106:6)
        auto x5999 = x5994 - x5998;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":106:6)
        assert(x5999 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/ecall.cpp:106");
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":110:31)
        auto x6000 = x5962 * x80;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x6001 = Fp(x6000.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[21 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6001);
            reg = x6001;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x6002 = arg2[21 * steps + ((cycle - 0) & mask)];
        assert(x6002 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x6003 = x6000 - x6002;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x6004 = x6003 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":110:7)
        assert(x6004 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/ecall.cpp:110");
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x6005 = Fp(x6000.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[22 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6005);
            reg = x6005;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x6006 = arg2[22 * steps + ((cycle - 0) & mask)];
        assert(x6006 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x6007 = x6000 - x6006;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x6008 = x6007 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":111:7)
        assert(x6008 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/ecall.cpp:111");
        {
          extern_args[0] = x5994;
          extern_syscallInit(ctx, cycle, "", extern_args, extern_outs);
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":34:23)
        auto x6009 = x980 + x83;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x6010 = Fp(x6009.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6010);
            reg = x6010;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x6011 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x6011 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x6012 = x6009 - x6011;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x6013 = x6012 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x6014 = Fp(x6013.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6014);
            reg = x6014;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x6015 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x6015 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x6016 = x6013 - x6015;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x6017 = x6016 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x6018 = Fp(x6017.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6018);
            reg = x6018;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x6019 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x6019 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x6020 = x6017 - x6019;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x6021 = x6020 * x96;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":37:26)
          auto x6022 = Fp(x6021.asUInt32() & x81.asUInt32());
          // loc("./zirgen/components/bits.h":78:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6022);
            reg = x6022;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[0](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6023 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x6023 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:18)
        auto x6024 = x6021 - x6023;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:17)
        auto x6025 = x6024 * x80;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6025);
          reg = x6025;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6026 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x6026 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:23)
        auto x6027 = x101 - x6026;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:15)
        auto x6028 = x6026 * x6027;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6028);
          reg = x6028;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:17)
        auto x6029 = x98 - x6026;
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x6030 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x6030 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        auto x6031 = x6030 * x6029;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        assert(x6031 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:43");
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[99 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5663);
          reg = x5663;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":117:3)
        {
          auto& reg = arg2[100 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x75);
          reg = x75;
        }
        extern_log(ctx, cycle, "Set next major to be ecall copy in", extern_args, extern_outs);
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/OneHot/hot[3](Reg)"("./zirgen/components/mux.h":59:25))
      auto x6032 = arg2[192 * steps + ((cycle - 0) & mask)];
      assert(x6032 != Fp::invalid());
      if (x6032 != 0) {
        {
          extern_args[0] = x31;
          extern_args[1] = x101;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x6033 = extern_outs[0];
          auto x6034 = extern_outs[1];
          auto x6035 = extern_outs[2];
          auto x6036 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[135 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6033);
            reg = x6033;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[136 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6034);
            reg = x6034;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6035);
            reg = x6035;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6036);
            reg = x6036;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6037 = arg2[135 * steps + ((cycle - 0) & mask)];
        assert(x6037 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6038 = arg2[136 * steps + ((cycle - 0) & mask)];
        assert(x6038 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6039 = arg2[137 * steps + ((cycle - 0) & mask)];
        assert(x6039 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6040 = arg2[138 * steps + ((cycle - 0) & mask)];
        assert(x6040 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[132 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x31);
          reg = x31;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[133 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x966);
          reg = x966;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[134 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6037);
          reg = x6037;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6038);
          reg = x6038;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[137 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6039);
          reg = x6039;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[138 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6040);
          reg = x6040;
        }
        {
          extern_args[0] = x32;
          extern_args[1] = x101;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x6041 = extern_outs[0];
          auto x6042 = extern_outs[1];
          auto x6043 = extern_outs[2];
          auto x6044 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6041);
            reg = x6041;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6042);
            reg = x6042;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6043);
            reg = x6043;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6044);
            reg = x6044;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6045 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x6045 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6046 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x6046 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6047 = arg2[144 * steps + ((cycle - 0) & mask)];
        assert(x6047 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6048 = arg2[145 * steps + ((cycle - 0) & mask)];
        assert(x6048 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[139 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x32);
          reg = x32;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x966);
          reg = x966;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6045);
          reg = x6045;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6046);
          reg = x6046;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[144 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6047);
          reg = x6047;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[145 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6048);
          reg = x6048;
        }
        {
          extern_args[0] = x30;
          extern_args[1] = x101;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x6049 = extern_outs[0];
          auto x6050 = extern_outs[1];
          auto x6051 = extern_outs[2];
          auto x6052 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[149 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6049);
            reg = x6049;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[150 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6050);
            reg = x6050;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[151 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6051);
            reg = x6051;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[152 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6052);
            reg = x6052;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6053 = arg2[149 * steps + ((cycle - 0) & mask)];
        assert(x6053 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6054 = arg2[150 * steps + ((cycle - 0) & mask)];
        assert(x6054 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6055 = arg2[151 * steps + ((cycle - 0) & mask)];
        assert(x6055 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6056 = arg2[152 * steps + ((cycle - 0) & mask)];
        assert(x6056 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[146 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x30);
          reg = x30;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[147 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x966);
          reg = x966;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[148 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[149 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6053);
          reg = x6053;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[150 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6054);
          reg = x6054;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[151 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6055);
          reg = x6055;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[152 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6056);
          reg = x6056;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":132:17)
        auto x6057 = x980 + x83;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":34:23)
        auto x6058 = x6057 + x83;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x6059 = Fp(x6058.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6059);
            reg = x6059;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x6060 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x6060 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x6061 = x6058 - x6060;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x6062 = x6061 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x6063 = Fp(x6062.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6063);
            reg = x6063;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x6064 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x6064 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x6065 = x6062 - x6064;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x6066 = x6065 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x6067 = Fp(x6066.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6067);
            reg = x6067;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x6068 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x6068 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x6069 = x6066 - x6068;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x6070 = x6069 * x96;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":37:26)
          auto x6071 = Fp(x6070.asUInt32() & x81.asUInt32());
          // loc("./zirgen/components/bits.h":78:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6071);
            reg = x6071;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[0](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6072 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x6072 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:18)
        auto x6073 = x6070 - x6072;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:17)
        auto x6074 = x6073 * x80;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6074);
          reg = x6074;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6075 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x6075 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:23)
        auto x6076 = x101 - x6075;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:15)
        auto x6077 = x6075 * x6076;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6077);
          reg = x6077;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:17)
        auto x6078 = x98 - x6075;
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x6079 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x6079 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        auto x6080 = x6079 * x6078;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        assert(x6080 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:43");
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[99 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5663);
          reg = x5663;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":134:3)
        {
          auto& reg = arg2[100 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x67);
          reg = x67;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/OneHot/hot[4](Reg)"("./zirgen/components/mux.h":59:25))
      auto x6081 = arg2[193 * steps + ((cycle - 0) & mask)];
      assert(x6081 != Fp::invalid());
      if (x6081 != 0) {
        {
          extern_args[0] = x32;
          extern_args[1] = x101;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x6082 = extern_outs[0];
          auto x6083 = extern_outs[1];
          auto x6084 = extern_outs[2];
          auto x6085 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[135 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6082);
            reg = x6082;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[136 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6083);
            reg = x6083;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6084);
            reg = x6084;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6085);
            reg = x6085;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6086 = arg2[135 * steps + ((cycle - 0) & mask)];
        assert(x6086 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6087 = arg2[136 * steps + ((cycle - 0) & mask)];
        assert(x6087 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6088 = arg2[137 * steps + ((cycle - 0) & mask)];
        assert(x6088 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6089 = arg2[138 * steps + ((cycle - 0) & mask)];
        assert(x6089 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[132 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x32);
          reg = x32;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[133 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x966);
          reg = x966;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[134 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6086);
          reg = x6086;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6087);
          reg = x6087;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[137 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6088);
          reg = x6088;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[138 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6089);
          reg = x6089;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":34:23)
        auto x6090 = x980 + x83;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x6091 = Fp(x6090.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6091);
            reg = x6091;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x6092 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x6092 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x6093 = x6090 - x6092;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x6094 = x6093 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x6095 = Fp(x6094.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6095);
            reg = x6095;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x6096 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x6096 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x6097 = x6094 - x6096;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x6098 = x6097 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x6099 = Fp(x6098.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6099);
            reg = x6099;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x6100 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x6100 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x6101 = x6098 - x6100;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x6102 = x6101 * x96;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":37:26)
          auto x6103 = Fp(x6102.asUInt32() & x81.asUInt32());
          // loc("./zirgen/components/bits.h":78:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6103);
            reg = x6103;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[0](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6104 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x6104 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:18)
        auto x6105 = x6102 - x6104;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:17)
        auto x6106 = x6105 * x80;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6106);
          reg = x6106;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6107 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x6107 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:23)
        auto x6108 = x101 - x6107;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:15)
        auto x6109 = x6107 * x6108;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6109);
          reg = x6109;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:17)
        auto x6110 = x98 - x6107;
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x6111 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x6111 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        auto x6112 = x6111 * x6110;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        assert(x6112 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:43");
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[99 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5663);
          reg = x5663;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":147:3)
        {
          auto& reg = arg2[100 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x74);
          reg = x74;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/OneHot/hot[5](Reg)"("./zirgen/components/mux.h":59:25))
      auto x6113 = arg2[194 * steps + ((cycle - 0) & mask)];
      assert(x6113 != Fp::invalid());
      if (x6113 != 0) {
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":167:36)
        assert(x5663 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/ecall.cpp:167");
        {
          extern_args[0] = x29;
          extern_args[1] = x101;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x6114 = extern_outs[0];
          auto x6115 = extern_outs[1];
          auto x6116 = extern_outs[2];
          auto x6117 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[135 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6114);
            reg = x6114;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[136 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6115);
            reg = x6115;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6116);
            reg = x6116;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6117);
            reg = x6117;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6118 = arg2[135 * steps + ((cycle - 0) & mask)];
        assert(x6118 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6119 = arg2[136 * steps + ((cycle - 0) & mask)];
        assert(x6119 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6120 = arg2[137 * steps + ((cycle - 0) & mask)];
        assert(x6120 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6121 = arg2[138 * steps + ((cycle - 0) & mask)];
        assert(x6121 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[132 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x29);
          reg = x29;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[133 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x966);
          reg = x966;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[134 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6118);
          reg = x6118;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6119);
          reg = x6119;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[137 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6120);
          reg = x6120;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[138 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6121);
          reg = x6121;
        }
        // loc("./zirgen/components/u32.h":35:12)
        auto x6122 = x6119 * x95;
        // loc("./zirgen/components/u32.h":36:12)
        auto x6123 = x6120 * x82;
        // loc("./zirgen/components/u32.h":37:12)
        auto x6124 = x6121 * x84;
        // loc("./zirgen/components/u32.h":34:12)
        auto x6125 = x6118 + x6122;
        // loc("./zirgen/components/u32.h":34:12)
        auto x6126 = x6125 + x6123;
        // loc("./zirgen/components/u32.h":34:12)
        auto x6127 = x6126 + x6124;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":34:23)
        auto x6128 = x6127 + x83;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x6129 = Fp(x6128.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6129);
            reg = x6129;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x6130 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x6130 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x6131 = x6128 - x6130;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x6132 = x6131 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x6133 = Fp(x6132.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6133);
            reg = x6133;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x6134 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x6134 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x6135 = x6132 - x6134;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x6136 = x6135 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x6137 = Fp(x6136.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6137);
            reg = x6137;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x6138 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x6138 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x6139 = x6136 - x6138;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x6140 = x6139 * x96;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":37:26)
          auto x6141 = Fp(x6140.asUInt32() & x81.asUInt32());
          // loc("./zirgen/components/bits.h":78:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6141);
            reg = x6141;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[0](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6142 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x6142 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:18)
        auto x6143 = x6140 - x6142;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:17)
        auto x6144 = x6143 * x80;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6144);
          reg = x6144;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6145 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x6145 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:23)
        auto x6146 = x101 - x6145;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:15)
        auto x6147 = x6145 * x6146;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6147);
          reg = x6147;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:17)
        auto x6148 = x98 - x6145;
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x6149 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x6149 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        auto x6150 = x6149 * x6148;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        assert(x6150 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:43");
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[99 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        {
          extern_args[0] = x101;
          extern_setUserMode(ctx, cycle, "", extern_args, extern_outs);
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":173:3)
        {
          auto& reg = arg2[100 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x66);
          reg = x66;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/OneHot/hot[6](Reg)"("./zirgen/components/mux.h":59:25))
      auto x6151 = arg2[195 * steps + ((cycle - 0) & mask)];
      assert(x6151 != Fp::invalid());
      if (x6151 != 0) {
        {
          extern_args[0] = x28;
          extern_args[1] = x101;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x6152 = extern_outs[0];
          auto x6153 = extern_outs[1];
          auto x6154 = extern_outs[2];
          auto x6155 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[135 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6152);
            reg = x6152;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[136 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6153);
            reg = x6153;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6154);
            reg = x6154;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6155);
            reg = x6155;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6156 = arg2[135 * steps + ((cycle - 0) & mask)];
        assert(x6156 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6157 = arg2[136 * steps + ((cycle - 0) & mask)];
        assert(x6157 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6158 = arg2[137 * steps + ((cycle - 0) & mask)];
        assert(x6158 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6159 = arg2[138 * steps + ((cycle - 0) & mask)];
        assert(x6159 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[132 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x28);
          reg = x28;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[133 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x966);
          reg = x966;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[134 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6156);
          reg = x6156;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6157);
          reg = x6157;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[137 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6158);
          reg = x6158;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[138 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6159);
          reg = x6159;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":34:23)
        auto x6160 = x980 + x83;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x6161 = Fp(x6160.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6161);
            reg = x6161;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x6162 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x6162 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x6163 = x6160 - x6162;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x6164 = x6163 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x6165 = Fp(x6164.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6165);
            reg = x6165;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x6166 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x6166 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x6167 = x6164 - x6166;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x6168 = x6167 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x6169 = Fp(x6168.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6169);
            reg = x6169;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x6170 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x6170 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x6171 = x6168 - x6170;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x6172 = x6171 * x96;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":37:26)
          auto x6173 = Fp(x6172.asUInt32() & x81.asUInt32());
          // loc("./zirgen/components/bits.h":78:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6173);
            reg = x6173;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[0](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6174 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x6174 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:18)
        auto x6175 = x6172 - x6174;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:17)
        auto x6176 = x6175 * x80;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6176);
          reg = x6176;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6177 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x6177 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:23)
        auto x6178 = x101 - x6177;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:15)
        auto x6179 = x6177 * x6178;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6179);
          reg = x6179;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:17)
        auto x6180 = x98 - x6177;
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x6181 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x6181 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        auto x6182 = x6181 * x6180;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        assert(x6182 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:43");
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[99 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5663);
          reg = x5663;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":161:3)
        {
          auto& reg = arg2[100 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x73);
          reg = x73;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/OneHot/hot[7](Reg)"("./zirgen/components/mux.h":59:25))
      auto x6183 = arg2[196 * steps + ((cycle - 0) & mask)];
      assert(x6183 != Fp::invalid());
      if (x6183 != 0) {
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":180:7)
        assert(x5665 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/ecall.cpp:180");
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":55:52)
        auto x6184 = x970 * x83;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":55:41)
        auto x6185 = x969 + x6184;
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x967);
          reg = x967;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x968);
          reg = x968;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[137 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x971);
          reg = x971;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[138 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6185);
          reg = x6185;
        }
        {
          extern_args[0] = x29;
          extern_args[1] = x967;
          extern_args[2] = x968;
          extern_args[3] = x971;
          extern_args[4] = x6185;
          extern_args[5] = x98;
          extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6186 = arg2[135 * steps + ((cycle - 0) & mask)];
        assert(x6186 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6187 = arg2[136 * steps + ((cycle - 0) & mask)];
        assert(x6187 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6188 = arg2[137 * steps + ((cycle - 0) & mask)];
        assert(x6188 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6189 = arg2[138 * steps + ((cycle - 0) & mask)];
        assert(x6189 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[132 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x29);
          reg = x29;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[133 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x966);
          reg = x966;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[134 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x98);
          reg = x98;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6186);
          reg = x6186;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6187);
          reg = x6187;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[137 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6188);
          reg = x6188;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[138 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6189);
          reg = x6189;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":184:18)
        auto x6190 = x5666 * x26;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":184:53)
        auto x6191 = x5690 * x27;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":184:18)
        auto x6192 = x6190 + x6191;
        {
          extern_args[0] = x6192;
          extern_args[1] = x101;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x6193 = extern_outs[0];
          auto x6194 = extern_outs[1];
          auto x6195 = extern_outs[2];
          auto x6196 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6193);
            reg = x6193;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6194);
            reg = x6194;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6195);
            reg = x6195;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6196);
            reg = x6196;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6197 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x6197 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6198 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x6198 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6199 = arg2[144 * steps + ((cycle - 0) & mask)];
        assert(x6199 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6200 = arg2[145 * steps + ((cycle - 0) & mask)];
        assert(x6200 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[139 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6192);
          reg = x6192;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x966);
          reg = x966;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6197);
          reg = x6197;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6198);
          reg = x6198;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[144 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6199);
          reg = x6199;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[145 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6200);
          reg = x6200;
        }
        // loc("./zirgen/components/u32.h":35:12)
        auto x6201 = x6198 * x95;
        // loc("./zirgen/components/u32.h":36:12)
        auto x6202 = x6199 * x82;
        // loc("./zirgen/components/u32.h":37:12)
        auto x6203 = x6200 * x84;
        // loc("./zirgen/components/u32.h":34:12)
        auto x6204 = x6197 + x6201;
        // loc("./zirgen/components/u32.h":34:12)
        auto x6205 = x6204 + x6202;
        // loc("./zirgen/components/u32.h":34:12)
        auto x6206 = x6205 + x6203;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":34:23)
        auto x6207 = x6206 + x83;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x6208 = Fp(x6207.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6208);
            reg = x6208;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x6209 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x6209 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x6210 = x6207 - x6209;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x6211 = x6210 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x6212 = Fp(x6211.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6212);
            reg = x6212;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x6213 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x6213 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x6214 = x6211 - x6213;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x6215 = x6214 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x6216 = Fp(x6215.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6216);
            reg = x6216;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x6217 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x6217 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x6218 = x6215 - x6217;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x6219 = x6218 * x96;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":37:26)
          auto x6220 = Fp(x6219.asUInt32() & x81.asUInt32());
          // loc("./zirgen/components/bits.h":78:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6220);
            reg = x6220;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[0](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6221 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x6221 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:18)
        auto x6222 = x6219 - x6221;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:17)
        auto x6223 = x6222 * x80;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6223);
          reg = x6223;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6224 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x6224 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:23)
        auto x6225 = x101 - x6224;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:15)
        auto x6226 = x6224 * x6225;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6226);
          reg = x6226;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:17)
        auto x6227 = x98 - x6224;
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x6228 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x6228 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        auto x6229 = x6228 * x6227;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        assert(x6229 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:43");
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[99 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        {
          extern_args[0] = x100;
          extern_setUserMode(ctx, cycle, "", extern_args, extern_outs);
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":190:3)
        {
          auto& reg = arg2[100 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x66);
          reg = x66;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/user_mode(Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6230 = arg2[99 * steps + ((cycle - 0) & mask)];
      assert(x6230 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6231 = arg2[71 * steps + ((cycle - 0) & mask)];
      assert(x6231 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":60:7)
      auto x6232 = x6230 * x6231;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":60:26)
      auto x6233 = x101 - x6231;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":60:7)
      auto x6234 = x6232 * x6233;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":60:7)
      assert(x6234 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:60");
    }
    // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[9](Reg)"("./zirgen/components/mux.h":59:25))
    auto x6235 = arg2[110 * steps + ((cycle - 0) & mask)];
    assert(x6235 != Fp::invalid());
    if (x6235 != 0) {
      // loc("Top/mux(Mux)/body(BodyStep)/user_mode(Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6236 = arg2[99 * steps + ((cycle - 1) & mask)];
      assert(x6236 != Fp::invalid());
      // loc("./zirgen/components/bits.h":37:23)
      {
        auto& reg = arg2[99 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x6236);
        reg = x6236;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/next_major(Reg)"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":184:37))
      auto x6237 = arg2[100 * steps + ((cycle - 1) & mask)];
      assert(x6237 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":184:37)
      auto x6238 = x6237 - x67;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":184:37)
      assert(x6238 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/sha.cpp:184");
      // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[8](Reg)"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":185:69))
      auto x6239 = arg2[109 * steps + ((cycle - 1) & mask)];
      assert(x6239 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[12](Reg)"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":186:77))
      auto x6240 = arg2[113 * steps + ((cycle - 1) & mask)];
      assert(x6240 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":187:35)
      auto x6241 = x6239 + x6240;
      if (x6241 != 0) {
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[151 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":189:5)
        {
          auto& reg = arg2[145 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x83);
          reg = x83;
        }
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":191:39)
      auto x6242 = x101 - x6239;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":191:39)
      auto x6243 = x6242 - x6240;
      if (x6243 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6244 = arg2[151 * steps + ((cycle - 1) & mask)];
        assert(x6244 != Fp::invalid());
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[151 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6244);
          reg = x6244;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":194:40))
        auto x6245 = arg2[145 * steps + ((cycle - 1) & mask)];
        assert(x6245 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":194:40)
        auto x6246 = x6245 - x101;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":194:5)
        {
          auto& reg = arg2[145 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6246);
          reg = x6246;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6247 = arg2[145 * steps + ((cycle - 0) & mask)];
      assert(x6247 != Fp::invalid());
      {
        // loc("zirgen/components/iszero.cpp":21:24)
        auto x6248 = (x6247 == 0) ? Fp(1) : Fp(0);
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[146 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6248);
          reg = x6248;
        }
        // loc("zirgen/components/iszero.cpp":22:21)
        auto x6249 = inv(x6247);
        // loc("zirgen/components/iszero.cpp":22:5)
        {
          auto& reg = arg2[147 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6249);
          reg = x6249;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/IsZero/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6250 = arg2[146 * steps + ((cycle - 0) & mask)];
      assert(x6250 != Fp::invalid());
      if (x6250 != 0) {
        // loc("zirgen/components/iszero.cpp":26:23)
        assert(x6247 == 0 && "eqz failed at: zirgen/components/iszero.cpp:26");
      }
      // loc("zirgen/components/iszero.cpp":28:19)
      auto x6251 = x101 - x6250;
      if (x6251 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/IsZero/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x6252 = arg2[147 * steps + ((cycle - 0) & mask)];
        assert(x6252 != Fp::invalid());
        // loc("zirgen/components/iszero.cpp":28:26)
        auto x6253 = x6247 * x6252;
        // loc("zirgen/components/iszero.cpp":28:26)
        auto x6254 = x6253 - x101;
        // loc("zirgen/components/iszero.cpp":28:26)
        assert(x6254 == 0 && "eqz failed at: zirgen/components/iszero.cpp:28");
      }
      if (x6250 != 0) {
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":198:29)
        {
          auto& reg = arg2[100 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x78);
          reg = x78;
        }
      }
      if (x6251 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[10](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x6255 = arg2[111 * steps + ((cycle - 0) & mask)];
        assert(x6255 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[11](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x6256 = arg2[112 * steps + ((cycle - 0) & mask)];
        assert(x6256 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[12](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x6257 = arg2[113 * steps + ((cycle - 0) & mask)];
        assert(x6257 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[13](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x6258 = arg2[114 * steps + ((cycle - 0) & mask)];
        assert(x6258 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[14](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x6259 = arg2[115 * steps + ((cycle - 0) & mask)];
        assert(x6259 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[15](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x6260 = arg2[116 * steps + ((cycle - 0) & mask)];
        assert(x6260 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[16](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x6261 = arg2[117 * steps + ((cycle - 0) & mask)];
        assert(x6261 != Fp::invalid());
        // loc("./zirgen/components/onehot.h":56:19)
        auto x6262 = x2555 * x98;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x6263 = x3268 * x81;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x6264 = x4034 * x83;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x6265 = x4493 * x71;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x6266 = x4865 * x70;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x6267 = x5303 * x69;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x6268 = x5662 * x68;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x6269 = x6235 * x67;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x6270 = x6255 * x78;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x6271 = x6256 * x77;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x6272 = x6257 * x76;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x6273 = x6258 * x75;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x6274 = x6259 * x74;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x6275 = x6260 * x73;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x6276 = x6261 * x72;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x6277 = x1761 + x6262;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x6278 = x6277 + x6263;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x6279 = x6278 + x6264;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x6280 = x6279 + x6265;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x6281 = x6280 + x6266;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x6282 = x6281 + x6267;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x6283 = x6282 + x6268;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x6284 = x6283 + x6269;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x6285 = x6284 + x6270;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x6286 = x6285 + x6271;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x6287 = x6286 + x6272;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x6288 = x6287 + x6273;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x6289 = x6288 + x6274;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x6290 = x6289 + x6275;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x6291 = x6290 + x6276;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":199:33)
        {
          auto& reg = arg2[100 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6291);
          reg = x6291;
        }
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":34:23)
      auto x6292 = x980 + x83;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x6293 = Fp(x6292.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[6 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6293);
          reg = x6293;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x6294 = arg2[6 * steps + ((cycle - 0) & mask)];
      assert(x6294 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x6295 = x6292 - x6294;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x6296 = x6295 * x96;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x6297 = Fp(x6296.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[7 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6297);
          reg = x6297;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x6298 = arg2[7 * steps + ((cycle - 0) & mask)];
      assert(x6298 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x6299 = x6296 - x6298;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x6300 = x6299 * x96;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x6301 = Fp(x6300.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[8 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6301);
          reg = x6301;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x6302 = arg2[8 * steps + ((cycle - 0) & mask)];
      assert(x6302 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x6303 = x6300 - x6302;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x6304 = x6303 * x96;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":37:26)
        auto x6305 = Fp(x6304.asUInt32() & x81.asUInt32());
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[70 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6305);
          reg = x6305;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[0](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6306 = arg2[70 * steps + ((cycle - 0) & mask)];
      assert(x6306 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:18)
      auto x6307 = x6304 - x6306;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:17)
      auto x6308 = x6307 * x80;
      // loc("./zirgen/components/bits.h":78:23)
      {
        auto& reg = arg2[71 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x6308);
        reg = x6308;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6309 = arg2[71 * steps + ((cycle - 0) & mask)];
      assert(x6309 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:23)
      auto x6310 = x101 - x6309;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:15)
      auto x6311 = x6309 * x6310;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:3)
      {
        auto& reg = arg2[98 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x6311);
        reg = x6311;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:17)
      auto x6312 = x98 - x6309;
      // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x6313 = arg2[98 * steps + ((cycle - 0) & mask)];
      assert(x6313 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
      auto x6314 = x6313 * x6312;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
      assert(x6314 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:43");
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6315 = arg2[151 * steps + ((cycle - 0) & mask)];
      assert(x6315 != Fp::invalid());
      extern_args[0] = x67;
      extern_args[1] = x6315;
      extern_args[2] = x6247;
      extern_log(ctx, cycle, "SHA_INIT: major = %u, minor = %u, count = %u", extern_args, extern_outs);
      if (x6239 != 0) {
        {
          extern_args[0] = x25;
          extern_args[1] = x101;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x6316 = extern_outs[0];
          auto x6317 = extern_outs[1];
          auto x6318 = extern_outs[2];
          auto x6319 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[121 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6316);
            reg = x6316;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[122 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6317);
            reg = x6317;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[123 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6318);
            reg = x6318;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[124 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6319);
            reg = x6319;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6320 = arg2[121 * steps + ((cycle - 0) & mask)];
        assert(x6320 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6321 = arg2[122 * steps + ((cycle - 0) & mask)];
        assert(x6321 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6322 = arg2[123 * steps + ((cycle - 0) & mask)];
        assert(x6322 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6323 = arg2[124 * steps + ((cycle - 0) & mask)];
        assert(x6323 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[118 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x25);
          reg = x25;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[119 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x966);
          reg = x966;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[120 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6320);
          reg = x6320;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6321);
          reg = x6321;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[123 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6322);
          reg = x6322;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[124 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6323);
          reg = x6323;
        }
        {
          extern_args[0] = x24;
          extern_args[1] = x101;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x6324 = extern_outs[0];
          auto x6325 = extern_outs[1];
          auto x6326 = extern_outs[2];
          auto x6327 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[128 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6324);
            reg = x6324;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[129 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6325);
            reg = x6325;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[130 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6326);
            reg = x6326;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[131 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6327);
            reg = x6327;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6328 = arg2[128 * steps + ((cycle - 0) & mask)];
        assert(x6328 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6329 = arg2[129 * steps + ((cycle - 0) & mask)];
        assert(x6329 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6330 = arg2[130 * steps + ((cycle - 0) & mask)];
        assert(x6330 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6331 = arg2[131 * steps + ((cycle - 0) & mask)];
        assert(x6331 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[125 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x24);
          reg = x24;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[126 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x966);
          reg = x966;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[127 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[128 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6328);
          reg = x6328;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[129 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6329);
          reg = x6329;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[130 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6330);
          reg = x6330;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[131 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6331);
          reg = x6331;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6332 = arg2[135 * steps + ((cycle - 1) & mask)];
        assert(x6332 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6333 = arg2[136 * steps + ((cycle - 1) & mask)];
        assert(x6333 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6334 = arg2[137 * steps + ((cycle - 1) & mask)];
        assert(x6334 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6335 = arg2[138 * steps + ((cycle - 1) & mask)];
        assert(x6335 != Fp::invalid());
        // loc("./zirgen/components/u32.h":35:12)
        auto x6336 = x6333 * x95;
        // loc("./zirgen/components/u32.h":36:12)
        auto x6337 = x6334 * x82;
        // loc("./zirgen/components/u32.h":37:12)
        auto x6338 = x6335 * x84;
        // loc("./zirgen/components/u32.h":34:12)
        auto x6339 = x6332 + x6336;
        // loc("./zirgen/components/u32.h":34:12)
        auto x6340 = x6339 + x6337;
        // loc("./zirgen/components/u32.h":34:12)
        auto x6341 = x6340 + x6338;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":208:58)
        auto x6342 = x6341 * x80;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":208:5)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6342);
          reg = x6342;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6343 = arg2[142 * steps + ((cycle - 1) & mask)];
        assert(x6343 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6344 = arg2[143 * steps + ((cycle - 1) & mask)];
        assert(x6344 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6345 = arg2[144 * steps + ((cycle - 1) & mask)];
        assert(x6345 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6346 = arg2[145 * steps + ((cycle - 1) & mask)];
        assert(x6346 != Fp::invalid());
        // loc("./zirgen/components/u32.h":35:12)
        auto x6347 = x6344 * x95;
        // loc("./zirgen/components/u32.h":36:12)
        auto x6348 = x6345 * x82;
        // loc("./zirgen/components/u32.h":37:12)
        auto x6349 = x6346 * x84;
        // loc("./zirgen/components/u32.h":34:12)
        auto x6350 = x6343 + x6347;
        // loc("./zirgen/components/u32.h":34:12)
        auto x6351 = x6350 + x6348;
        // loc("./zirgen/components/u32.h":34:12)
        auto x6352 = x6351 + x6349;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":209:57)
        auto x6353 = x6352 * x80;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":209:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6353);
          reg = x6353;
        }
        // loc("./zirgen/components/u32.h":35:12)
        auto x6354 = x6321 * x95;
        // loc("./zirgen/components/u32.h":36:12)
        auto x6355 = x6322 * x82;
        // loc("./zirgen/components/u32.h":37:12)
        auto x6356 = x6323 * x84;
        // loc("./zirgen/components/u32.h":34:12)
        auto x6357 = x6320 + x6354;
        // loc("./zirgen/components/u32.h":34:12)
        auto x6358 = x6357 + x6355;
        // loc("./zirgen/components/u32.h":34:12)
        auto x6359 = x6358 + x6356;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":210:16)
        auto x6360 = x6359 * x80;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":210:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6360);
          reg = x6360;
        }
        // loc("./zirgen/components/u32.h":35:12)
        auto x6361 = x6329 * x95;
        // loc("./zirgen/components/u32.h":36:12)
        auto x6362 = x6330 * x82;
        // loc("./zirgen/components/u32.h":37:12)
        auto x6363 = x6331 * x84;
        // loc("./zirgen/components/u32.h":34:12)
        auto x6364 = x6328 + x6361;
        // loc("./zirgen/components/u32.h":34:12)
        auto x6365 = x6364 + x6362;
        // loc("./zirgen/components/u32.h":34:12)
        auto x6366 = x6365 + x6363;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":211:16)
        auto x6367 = x6366 * x80;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":211:5)
        {
          auto& reg = arg2[144 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6367);
          reg = x6367;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6368 = arg2[149 * steps + ((cycle - 1) & mask)];
        assert(x6368 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6369 = arg2[150 * steps + ((cycle - 1) & mask)];
        assert(x6369 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6370 = arg2[151 * steps + ((cycle - 1) & mask)];
        assert(x6370 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6371 = arg2[152 * steps + ((cycle - 1) & mask)];
        assert(x6371 != Fp::invalid());
        // loc("./zirgen/components/u32.h":35:12)
        auto x6372 = x6369 * x95;
        // loc("./zirgen/components/u32.h":36:12)
        auto x6373 = x6370 * x82;
        // loc("./zirgen/components/u32.h":37:12)
        auto x6374 = x6371 * x84;
        // loc("./zirgen/components/u32.h":34:12)
        auto x6375 = x6368 + x6372;
        // loc("./zirgen/components/u32.h":34:12)
        auto x6376 = x6375 + x6373;
        // loc("./zirgen/components/u32.h":34:12)
        auto x6377 = x6376 + x6374;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":212:5)
        {
          auto& reg = arg2[148 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6377);
          reg = x6377;
        }
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[153 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":214:5)
        {
          auto& reg = arg2[154 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x6378 = arg2[141 * steps + ((cycle - 0) & mask)];
        assert(x6378 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x6379 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x6379 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x6380 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x6380 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x6381 = arg2[144 * steps + ((cycle - 0) & mask)];
        assert(x6381 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6382 = arg2[148 * steps + ((cycle - 0) & mask)];
        assert(x6382 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":216:10)
        auto x6383 = x6378 * x83;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":217:10)
        auto x6384 = x6379 * x83;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":218:10)
        auto x6385 = x6380 * x83;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":219:10)
        auto x6386 = x6381 * x83;
        extern_args[0] = x6383;
        extern_args[1] = x6384;
        extern_args[2] = x6385;
        extern_args[3] = x6386;
        extern_args[4] = x6382;
        extern_log(ctx, cycle, "  FromEcall: stateOut = %10x, stateIn = %10x, data0 = %10x, data1 = %10x, repeat: %u", extern_args, extern_outs);
      }
      if (x6240 != 0) {
        // loc("zirgen/components/ram.cpp":53:3)
        {
          auto& reg = arg2[118 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/ram.cpp":54:3)
        {
          auto& reg = arg2[119 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/ram.cpp":55:3)
        {
          auto& reg = arg2[120 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[123 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[124 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/ram.cpp":53:3)
        {
          auto& reg = arg2[125 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/ram.cpp":54:3)
        {
          auto& reg = arg2[126 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/ram.cpp":55:3)
        {
          auto& reg = arg2[127 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[128 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[129 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[130 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[131 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/page_fault(PageFaultCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":226:53))
        auto x6387 = arg2[118 * steps + ((cycle - 1) & mask)];
        assert(x6387 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":226:5)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6387);
          reg = x6387;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/page_fault(PageFaultCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":227:51))
        auto x6388 = arg2[119 * steps + ((cycle - 1) & mask)];
        assert(x6388 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":227:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6388);
          reg = x6388;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/page_fault(PageFaultCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":228:64))
        auto x6389 = arg2[122 * steps + ((cycle - 1) & mask)];
        assert(x6389 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/page_fault.cpp":24:10)
        auto x6390 = x6389 * x23;
        // loc("zirgen/circuit/rv32im/v1/edsl/page_fault.cpp":24:10)
        auto x6391 = x6390 * x80;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":228:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6391);
          reg = x6391;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":229:64)
        auto x6392 = x6391 + x68;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":229:5)
        {
          auto& reg = arg2[144 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6392);
          reg = x6392;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/page_fault(PageFaultCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":230:49))
        auto x6393 = arg2[123 * steps + ((cycle - 1) & mask)];
        assert(x6393 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":230:5)
        {
          auto& reg = arg2[148 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6393);
          reg = x6393;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/page_fault(PageFaultCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6394 = arg2[120 * steps + ((cycle - 1) & mask)];
        assert(x6394 != Fp::invalid());
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[153 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6394);
          reg = x6394;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":232:5)
        {
          auto& reg = arg2[154 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x6395 = arg2[141 * steps + ((cycle - 0) & mask)];
        assert(x6395 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x6396 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x6396 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x6397 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x6397 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x6398 = arg2[144 * steps + ((cycle - 0) & mask)];
        assert(x6398 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6399 = arg2[148 * steps + ((cycle - 0) & mask)];
        assert(x6399 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":234:10)
        auto x6400 = x6395 * x83;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":235:10)
        auto x6401 = x6396 * x83;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":236:10)
        auto x6402 = x6397 * x83;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":237:10)
        auto x6403 = x6398 * x83;
        extern_args[0] = x6400;
        extern_args[1] = x6401;
        extern_args[2] = x6402;
        extern_args[3] = x6403;
        extern_args[4] = x6399;
        extern_log(ctx, cycle, "  FromPageFault: stateOut = %10x, stateIn = %10x, data0 = %10x, data1 = %10x, repeat: %u", extern_args, extern_outs);
      }
      if (x6243 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":241:42))
        auto x6404 = arg2[141 * steps + ((cycle - 1) & mask)];
        assert(x6404 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":241:5)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6404);
          reg = x6404;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":242:40))
        auto x6405 = arg2[142 * steps + ((cycle - 1) & mask)];
        assert(x6405 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":242:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6405);
          reg = x6405;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":243:36))
        auto x6406 = arg2[143 * steps + ((cycle - 1) & mask)];
        assert(x6406 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":243:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6406);
          reg = x6406;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":244:36))
        auto x6407 = arg2[144 * steps + ((cycle - 1) & mask)];
        assert(x6407 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":244:5)
        {
          auto& reg = arg2[144 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6407);
          reg = x6407;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":245:38))
        auto x6408 = arg2[148 * steps + ((cycle - 1) & mask)];
        assert(x6408 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":245:5)
        {
          auto& reg = arg2[148 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6408);
          reg = x6408;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6409 = arg2[153 * steps + ((cycle - 1) & mask)];
        assert(x6409 != Fp::invalid());
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[153 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6409);
          reg = x6409;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":247:38))
        auto x6410 = arg2[154 * steps + ((cycle - 1) & mask)];
        assert(x6410 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":247:5)
        {
          auto& reg = arg2[154 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6410);
          reg = x6410;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x6411 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x6411 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":250:24)
        auto x6412 = x6411 + x6247;
        {
          extern_args[0] = x6412;
          extern_args[1] = x101;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x6413 = extern_outs[0];
          auto x6414 = extern_outs[1];
          auto x6415 = extern_outs[2];
          auto x6416 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[121 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6413);
            reg = x6413;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[122 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6414);
            reg = x6414;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[123 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6415);
            reg = x6415;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[124 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6416);
            reg = x6416;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6417 = arg2[121 * steps + ((cycle - 0) & mask)];
        assert(x6417 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6418 = arg2[122 * steps + ((cycle - 0) & mask)];
        assert(x6418 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6419 = arg2[123 * steps + ((cycle - 0) & mask)];
        assert(x6419 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6420 = arg2[124 * steps + ((cycle - 0) & mask)];
        assert(x6420 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[118 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6412);
          reg = x6412;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[119 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x966);
          reg = x966;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[120 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6417);
          reg = x6417;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6418);
          reg = x6418;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[123 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6419);
          reg = x6419;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[124 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6420);
          reg = x6420;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":251:24)
        auto x6421 = x6412 + x83;
        {
          extern_args[0] = x6421;
          extern_args[1] = x101;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x6422 = extern_outs[0];
          auto x6423 = extern_outs[1];
          auto x6424 = extern_outs[2];
          auto x6425 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[128 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6422);
            reg = x6422;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[129 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6423);
            reg = x6423;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[130 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6424);
            reg = x6424;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[131 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6425);
            reg = x6425;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6426 = arg2[128 * steps + ((cycle - 0) & mask)];
        assert(x6426 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6427 = arg2[129 * steps + ((cycle - 0) & mask)];
        assert(x6427 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6428 = arg2[130 * steps + ((cycle - 0) & mask)];
        assert(x6428 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6429 = arg2[131 * steps + ((cycle - 0) & mask)];
        assert(x6429 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[125 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6421);
          reg = x6421;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[126 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x966);
          reg = x966;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[127 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[128 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6426);
          reg = x6426;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[129 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6427);
          reg = x6427;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[130 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6428);
          reg = x6428;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[131 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6429);
          reg = x6429;
        }
      }
      // loc("./zirgen/components/bits.h":37:23)
      {
        auto& reg = arg2[152 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6430 = arg2[148 * steps + ((cycle - 0) & mask)];
      assert(x6430 != Fp::invalid());
      {
        // loc("zirgen/components/iszero.cpp":21:24)
        auto x6431 = (x6430 == 0) ? Fp(1) : Fp(0);
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[149 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6431);
          reg = x6431;
        }
        // loc("zirgen/components/iszero.cpp":22:21)
        auto x6432 = inv(x6430);
        // loc("zirgen/components/iszero.cpp":22:5)
        {
          auto& reg = arg2[150 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6432);
          reg = x6432;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/IsZero/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6433 = arg2[149 * steps + ((cycle - 0) & mask)];
      assert(x6433 != Fp::invalid());
      if (x6433 != 0) {
        // loc("zirgen/components/iszero.cpp":26:23)
        assert(x6430 == 0 && "eqz failed at: zirgen/components/iszero.cpp:26");
      }
      // loc("zirgen/components/iszero.cpp":28:19)
      auto x6434 = x101 - x6433;
      if (x6434 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/IsZero/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x6435 = arg2[150 * steps + ((cycle - 0) & mask)];
        assert(x6435 != Fp::invalid());
        // loc("zirgen/components/iszero.cpp":28:26)
        auto x6436 = x6430 * x6435;
        // loc("zirgen/components/iszero.cpp":28:26)
        auto x6437 = x6436 - x101;
        // loc("zirgen/components/iszero.cpp":28:26)
        assert(x6437 == 0 && "eqz failed at: zirgen/components/iszero.cpp:28");
      }
      {
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[79 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[80 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[81 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[82 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[83 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[84 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[85 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[86 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[87 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[88 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[12 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[13 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[14 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[15 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[16 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[17 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6438 = arg2[12 * steps + ((cycle - 0) & mask)];
      assert(x6438 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6439 = arg2[13 * steps + ((cycle - 0) & mask)];
      assert(x6439 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6440 = arg2[14 * steps + ((cycle - 0) & mask)];
      assert(x6440 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6441 = arg2[15 * steps + ((cycle - 0) & mask)];
      assert(x6441 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6442 = arg2[16 * steps + ((cycle - 0) & mask)];
      assert(x6442 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6443 = arg2[17 * steps + ((cycle - 0) & mask)];
      assert(x6443 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6444 = arg2[79 * steps + ((cycle - 0) & mask)];
      assert(x6444 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6445 = arg2[80 * steps + ((cycle - 0) & mask)];
      assert(x6445 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6446 = arg2[81 * steps + ((cycle - 0) & mask)];
      assert(x6446 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6447 = arg2[82 * steps + ((cycle - 0) & mask)];
      assert(x6447 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6448 = arg2[83 * steps + ((cycle - 0) & mask)];
      assert(x6448 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6449 = arg2[84 * steps + ((cycle - 0) & mask)];
      assert(x6449 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6450 = arg2[85 * steps + ((cycle - 0) & mask)];
      assert(x6450 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6451 = arg2[86 * steps + ((cycle - 0) & mask)];
      assert(x6451 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6452 = arg2[87 * steps + ((cycle - 0) & mask)];
      assert(x6452 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6453 = arg2[88 * steps + ((cycle - 0) & mask)];
      assert(x6453 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6454 = x6438 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6455 = x6439 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6456 = x6440 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6457 = x6441 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6458 = x6442 * x41;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6459 = x6443 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6460 = x6445 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6461 = x6446 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6462 = x6447 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6463 = x6448 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6464 = x6449 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6465 = x6450 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6466 = x6451 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6467 = x6452 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6468 = x6453 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6469 = x6444 + x6460;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6470 = x6469 + x6461;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6471 = x6470 + x6462;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6472 = x6471 + x6463;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6473 = x6472 + x6464;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6474 = x6473 + x6465;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6475 = x6474 + x6466;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6476 = x6475 + x6467;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6477 = x6476 + x6468;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6478 = x6477 + x6454;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6479 = x6478 + x6455;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6480 = x6479 + x6456;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6481 = x6480 + x6457;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6482 = x6481 + x6458;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6483 = x6482 + x6459;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":121:16)
      auto x6484 = x100 - x6483;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":121:15)
      auto x6485 = x6484 * x10;
      // loc("./zirgen/components/bits.h":78:23)
      {
        auto& reg = arg2[77 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x6485);
        reg = x6485;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6486 = arg2[77 * steps + ((cycle - 0) & mask)];
      assert(x6486 != Fp::invalid());
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6487 = Fp(x6486.asUInt32() & x101.asUInt32());
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[18 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6487);
          reg = x6487;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6488 = Fp(x6486.asUInt32() & x98.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6489 = x6488 * x58;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[19 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6489);
          reg = x6489;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6490 = Fp(x6486.asUInt32() & x83.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6491 = x6490 * x80;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[20 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6491);
          reg = x6491;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6492 = Fp(x6486.asUInt32() & x68.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6493 = x6492 * x59;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[21 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6493);
          reg = x6493;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6494 = Fp(x6486.asUInt32() & x72.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6495 = x6494 * x60;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[22 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6495);
          reg = x6495;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6496 = Fp(x6486.asUInt32() & x62.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6497 = x6496 * x63;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[23 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6497);
          reg = x6497;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6498 = Fp(x6486.asUInt32() & x56.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6499 = x6498 * x57;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[24 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6499);
          reg = x6499;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6500 = Fp(x6486.asUInt32() & x65.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6501 = x6500 * x64;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[25 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6501);
          reg = x6501;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6502 = Fp(x6486.asUInt32() & x95.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6503 = x6502 * x96;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[26 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6503);
          reg = x6503;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6504 = Fp(x6486.asUInt32() & x21.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6505 = x6504 * x22;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[27 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6505);
          reg = x6505;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6506 = Fp(x6486.asUInt32() & x23.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6507 = x6506 * x20;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[28 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6507);
          reg = x6507;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6508 = Fp(x6486.asUInt32() & x18.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6509 = x6508 * x19;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[29 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6509);
          reg = x6509;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6510 = Fp(x6486.asUInt32() & x16.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6511 = x6510 * x17;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[30 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6511);
          reg = x6511;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6512 = Fp(x6486.asUInt32() & x14.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6513 = x6512 * x15;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[31 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6513);
          reg = x6513;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6514 = Fp(x6486.asUInt32() & x41.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6515 = x6514 * x13;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[32 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6515);
          reg = x6515;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6516 = Fp(x6486.asUInt32() & x11.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6517 = x6516 * x12;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[33 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6517);
          reg = x6517;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6518 = arg2[18 * steps + ((cycle - 0) & mask)];
      assert(x6518 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6519 = arg2[19 * steps + ((cycle - 0) & mask)];
      assert(x6519 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6520 = arg2[20 * steps + ((cycle - 0) & mask)];
      assert(x6520 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6521 = arg2[21 * steps + ((cycle - 0) & mask)];
      assert(x6521 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6522 = arg2[22 * steps + ((cycle - 0) & mask)];
      assert(x6522 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6523 = arg2[23 * steps + ((cycle - 0) & mask)];
      assert(x6523 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6524 = arg2[24 * steps + ((cycle - 0) & mask)];
      assert(x6524 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6525 = arg2[25 * steps + ((cycle - 0) & mask)];
      assert(x6525 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6526 = arg2[26 * steps + ((cycle - 0) & mask)];
      assert(x6526 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6527 = arg2[27 * steps + ((cycle - 0) & mask)];
      assert(x6527 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6528 = arg2[28 * steps + ((cycle - 0) & mask)];
      assert(x6528 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6529 = arg2[29 * steps + ((cycle - 0) & mask)];
      assert(x6529 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6530 = arg2[30 * steps + ((cycle - 0) & mask)];
      assert(x6530 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6531 = arg2[31 * steps + ((cycle - 0) & mask)];
      assert(x6531 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6532 = arg2[32 * steps + ((cycle - 0) & mask)];
      assert(x6532 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6533 = arg2[33 * steps + ((cycle - 0) & mask)];
      assert(x6533 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6534 = x6519 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6535 = x6520 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6536 = x6521 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6537 = x6522 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6538 = x6523 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6539 = x6524 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6540 = x6525 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6541 = x6526 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6542 = x6527 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6543 = x6528 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6544 = x6529 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6545 = x6530 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6546 = x6531 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6547 = x6532 * x41;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6548 = x6533 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6549 = x6518 + x6534;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6550 = x6549 + x6535;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6551 = x6550 + x6536;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6552 = x6551 + x6537;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6553 = x6552 + x6538;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6554 = x6553 + x6539;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6555 = x6554 + x6540;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6556 = x6555 + x6541;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6557 = x6556 + x6542;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6558 = x6557 + x6543;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6559 = x6558 + x6544;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6560 = x6559 + x6545;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6561 = x6560 + x6546;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6562 = x6561 + x6547;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6563 = x6562 + x6548;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":121:16)
      auto x6564 = x6486 - x6563;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":121:15)
      auto x6565 = x6564 * x10;
      // loc("./zirgen/components/bits.h":78:23)
      {
        auto& reg = arg2[78 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x6565);
        reg = x6565;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6566 = arg2[121 * steps + ((cycle - 0) & mask)];
      assert(x6566 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6567 = arg2[122 * steps + ((cycle - 0) & mask)];
      assert(x6567 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6568 = arg2[123 * steps + ((cycle - 0) & mask)];
      assert(x6568 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6569 = arg2[124 * steps + ((cycle - 0) & mask)];
      assert(x6569 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":146:61)
      auto x6570 = x6566 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":146:26)
      auto x6571 = x6568 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":146:46)
      auto x6572 = x6567 + x6570;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":146:11)
      auto x6573 = x6569 + x6571;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6574 = Fp(x6573.asUInt32() & x101.asUInt32());
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[161 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6574);
          reg = x6574;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6575 = Fp(x6573.asUInt32() & x98.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6576 = x6575 * x58;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[162 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6576);
          reg = x6576;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6577 = Fp(x6573.asUInt32() & x83.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6578 = x6577 * x80;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[163 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6578);
          reg = x6578;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6579 = Fp(x6573.asUInt32() & x68.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6580 = x6579 * x59;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[164 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6580);
          reg = x6580;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6581 = Fp(x6573.asUInt32() & x72.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6582 = x6581 * x60;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[165 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6582);
          reg = x6582;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6583 = Fp(x6573.asUInt32() & x62.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6584 = x6583 * x63;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[166 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6584);
          reg = x6584;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6585 = Fp(x6573.asUInt32() & x56.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6586 = x6585 * x57;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[167 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6586);
          reg = x6586;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6587 = Fp(x6573.asUInt32() & x65.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6588 = x6587 * x64;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[168 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6588);
          reg = x6588;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6589 = Fp(x6573.asUInt32() & x95.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6590 = x6589 * x96;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[169 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6590);
          reg = x6590;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6591 = Fp(x6573.asUInt32() & x21.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6592 = x6591 * x22;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[170 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6592);
          reg = x6592;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6593 = Fp(x6573.asUInt32() & x23.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6594 = x6593 * x20;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[171 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6594);
          reg = x6594;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6595 = Fp(x6573.asUInt32() & x18.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6596 = x6595 * x19;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[172 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6596);
          reg = x6596;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6597 = Fp(x6573.asUInt32() & x16.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6598 = x6597 * x17;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[173 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6598);
          reg = x6598;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6599 = Fp(x6573.asUInt32() & x14.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6600 = x6599 * x15;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[174 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6600);
          reg = x6600;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6601 = Fp(x6573.asUInt32() & x41.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6602 = x6601 * x13;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[175 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6602);
          reg = x6602;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6603 = Fp(x6573.asUInt32() & x11.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6604 = x6603 * x12;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[176 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6604);
          reg = x6604;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6605 = arg2[161 * steps + ((cycle - 0) & mask)];
      assert(x6605 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6606 = arg2[162 * steps + ((cycle - 0) & mask)];
      assert(x6606 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6607 = arg2[163 * steps + ((cycle - 0) & mask)];
      assert(x6607 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6608 = arg2[164 * steps + ((cycle - 0) & mask)];
      assert(x6608 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6609 = arg2[165 * steps + ((cycle - 0) & mask)];
      assert(x6609 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6610 = arg2[166 * steps + ((cycle - 0) & mask)];
      assert(x6610 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6611 = arg2[167 * steps + ((cycle - 0) & mask)];
      assert(x6611 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6612 = arg2[168 * steps + ((cycle - 0) & mask)];
      assert(x6612 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6613 = arg2[169 * steps + ((cycle - 0) & mask)];
      assert(x6613 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6614 = arg2[170 * steps + ((cycle - 0) & mask)];
      assert(x6614 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6615 = arg2[171 * steps + ((cycle - 0) & mask)];
      assert(x6615 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6616 = arg2[172 * steps + ((cycle - 0) & mask)];
      assert(x6616 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6617 = arg2[173 * steps + ((cycle - 0) & mask)];
      assert(x6617 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6618 = arg2[174 * steps + ((cycle - 0) & mask)];
      assert(x6618 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6619 = arg2[175 * steps + ((cycle - 0) & mask)];
      assert(x6619 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6620 = arg2[176 * steps + ((cycle - 0) & mask)];
      assert(x6620 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6621 = x6606 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6622 = x6607 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6623 = x6608 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6624 = x6609 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6625 = x6610 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6626 = x6611 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6627 = x6612 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6628 = x6613 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6629 = x6614 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6630 = x6615 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6631 = x6616 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6632 = x6617 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6633 = x6618 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6634 = x6619 * x41;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6635 = x6620 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6636 = x6605 + x6621;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6637 = x6636 + x6622;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6638 = x6637 + x6623;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6639 = x6638 + x6624;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6640 = x6639 + x6625;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6641 = x6640 + x6626;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6642 = x6641 + x6627;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6643 = x6642 + x6628;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6644 = x6643 + x6629;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6645 = x6644 + x6630;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6646 = x6645 + x6631;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6647 = x6646 + x6632;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6648 = x6647 + x6633;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6649 = x6648 + x6634;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6650 = x6649 + x6635;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":121:16)
      auto x6651 = x6573 - x6650;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":121:15)
      auto x6652 = x6651 * x10;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":132:26)
        auto x6653 = Fp(x6652.asUInt32() & x81.asUInt32());
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[73 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6653);
          reg = x6653;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6654 = arg2[73 * steps + ((cycle - 0) & mask)];
      assert(x6654 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":133:20)
      auto x6655 = x6652 - x6654;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":133:19)
      auto x6656 = x6655 * x80;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":134:20)
      auto x6657 = x101 - x6656;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":134:7)
      auto x6658 = x6656 * x6657;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":134:7)
      assert(x6658 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/sha.cpp:134");
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":135:32)
      auto x6659 = x6572 + x6652;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6660 = Fp(x6659.asUInt32() & x101.asUInt32());
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[177 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6660);
          reg = x6660;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6661 = Fp(x6659.asUInt32() & x98.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6662 = x6661 * x58;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[178 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6662);
          reg = x6662;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6663 = Fp(x6659.asUInt32() & x83.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6664 = x6663 * x80;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[179 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6664);
          reg = x6664;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6665 = Fp(x6659.asUInt32() & x68.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6666 = x6665 * x59;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[180 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6666);
          reg = x6666;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6667 = Fp(x6659.asUInt32() & x72.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6668 = x6667 * x60;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[181 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6668);
          reg = x6668;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6669 = Fp(x6659.asUInt32() & x62.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6670 = x6669 * x63;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[182 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6670);
          reg = x6670;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6671 = Fp(x6659.asUInt32() & x56.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6672 = x6671 * x57;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[183 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6672);
          reg = x6672;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6673 = Fp(x6659.asUInt32() & x65.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6674 = x6673 * x64;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[184 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6674);
          reg = x6674;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6675 = Fp(x6659.asUInt32() & x95.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6676 = x6675 * x96;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[185 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6676);
          reg = x6676;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6677 = Fp(x6659.asUInt32() & x21.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6678 = x6677 * x22;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[186 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6678);
          reg = x6678;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6679 = Fp(x6659.asUInt32() & x23.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6680 = x6679 * x20;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[187 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6680);
          reg = x6680;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6681 = Fp(x6659.asUInt32() & x18.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6682 = x6681 * x19;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[188 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6682);
          reg = x6682;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6683 = Fp(x6659.asUInt32() & x16.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6684 = x6683 * x17;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[189 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6684);
          reg = x6684;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6685 = Fp(x6659.asUInt32() & x14.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6686 = x6685 * x15;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[190 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6686);
          reg = x6686;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6687 = Fp(x6659.asUInt32() & x41.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6688 = x6687 * x13;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[191 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6688);
          reg = x6688;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6689 = Fp(x6659.asUInt32() & x11.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6690 = x6689 * x12;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[192 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6690);
          reg = x6690;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6691 = arg2[177 * steps + ((cycle - 0) & mask)];
      assert(x6691 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6692 = arg2[178 * steps + ((cycle - 0) & mask)];
      assert(x6692 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6693 = arg2[179 * steps + ((cycle - 0) & mask)];
      assert(x6693 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6694 = arg2[180 * steps + ((cycle - 0) & mask)];
      assert(x6694 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6695 = arg2[181 * steps + ((cycle - 0) & mask)];
      assert(x6695 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6696 = arg2[182 * steps + ((cycle - 0) & mask)];
      assert(x6696 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6697 = arg2[183 * steps + ((cycle - 0) & mask)];
      assert(x6697 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6698 = arg2[184 * steps + ((cycle - 0) & mask)];
      assert(x6698 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6699 = arg2[185 * steps + ((cycle - 0) & mask)];
      assert(x6699 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6700 = arg2[186 * steps + ((cycle - 0) & mask)];
      assert(x6700 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6701 = arg2[187 * steps + ((cycle - 0) & mask)];
      assert(x6701 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6702 = arg2[188 * steps + ((cycle - 0) & mask)];
      assert(x6702 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6703 = arg2[189 * steps + ((cycle - 0) & mask)];
      assert(x6703 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6704 = arg2[190 * steps + ((cycle - 0) & mask)];
      assert(x6704 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6705 = arg2[191 * steps + ((cycle - 0) & mask)];
      assert(x6705 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6706 = arg2[192 * steps + ((cycle - 0) & mask)];
      assert(x6706 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6707 = x6692 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6708 = x6693 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6709 = x6694 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6710 = x6695 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6711 = x6696 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6712 = x6697 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6713 = x6698 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6714 = x6699 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6715 = x6700 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6716 = x6701 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6717 = x6702 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6718 = x6703 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6719 = x6704 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6720 = x6705 * x41;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6721 = x6706 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6722 = x6691 + x6707;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6723 = x6722 + x6708;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6724 = x6723 + x6709;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6725 = x6724 + x6710;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6726 = x6725 + x6711;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6727 = x6726 + x6712;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6728 = x6727 + x6713;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6729 = x6728 + x6714;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6730 = x6729 + x6715;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6731 = x6730 + x6716;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6732 = x6731 + x6717;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6733 = x6732 + x6718;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6734 = x6733 + x6719;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6735 = x6734 + x6720;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6736 = x6735 + x6721;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":121:16)
      auto x6737 = x6659 - x6736;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":121:15)
      auto x6738 = x6737 * x10;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":136:27)
        auto x6739 = Fp(x6738.asUInt32() & x81.asUInt32());
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[74 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6739);
          reg = x6739;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6740 = arg2[74 * steps + ((cycle - 0) & mask)];
      assert(x6740 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":137:21)
      auto x6741 = x6738 - x6740;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":137:20)
      auto x6742 = x6741 * x80;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":138:21)
      auto x6743 = x101 - x6742;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":138:7)
      auto x6744 = x6742 * x6743;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":138:7)
      assert(x6744 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/sha.cpp:138");
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6745 = arg2[128 * steps + ((cycle - 0) & mask)];
      assert(x6745 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6746 = arg2[129 * steps + ((cycle - 0) & mask)];
      assert(x6746 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6747 = arg2[130 * steps + ((cycle - 0) & mask)];
      assert(x6747 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6748 = arg2[131 * steps + ((cycle - 0) & mask)];
      assert(x6748 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":146:61)
      auto x6749 = x6745 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":146:26)
      auto x6750 = x6747 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":146:46)
      auto x6751 = x6746 + x6749;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":146:11)
      auto x6752 = x6748 + x6750;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6753 = Fp(x6752.asUInt32() & x101.asUInt32());
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[193 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6753);
          reg = x6753;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6754 = Fp(x6752.asUInt32() & x98.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6755 = x6754 * x58;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[194 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6755);
          reg = x6755;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6756 = Fp(x6752.asUInt32() & x83.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6757 = x6756 * x80;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[195 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6757);
          reg = x6757;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6758 = Fp(x6752.asUInt32() & x68.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6759 = x6758 * x59;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[196 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6759);
          reg = x6759;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6760 = Fp(x6752.asUInt32() & x72.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6761 = x6760 * x60;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6761);
          reg = x6761;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6762 = Fp(x6752.asUInt32() & x62.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6763 = x6762 * x63;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6763);
          reg = x6763;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6764 = Fp(x6752.asUInt32() & x56.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6765 = x6764 * x57;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[199 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6765);
          reg = x6765;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6766 = Fp(x6752.asUInt32() & x65.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6767 = x6766 * x64;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[200 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6767);
          reg = x6767;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6768 = Fp(x6752.asUInt32() & x95.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6769 = x6768 * x96;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[201 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6769);
          reg = x6769;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6770 = Fp(x6752.asUInt32() & x21.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6771 = x6770 * x22;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[202 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6771);
          reg = x6771;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6772 = Fp(x6752.asUInt32() & x23.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6773 = x6772 * x20;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[203 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6773);
          reg = x6773;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6774 = Fp(x6752.asUInt32() & x18.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6775 = x6774 * x19;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[204 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6775);
          reg = x6775;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6776 = Fp(x6752.asUInt32() & x16.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6777 = x6776 * x17;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[205 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6777);
          reg = x6777;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6778 = Fp(x6752.asUInt32() & x14.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6779 = x6778 * x15;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[206 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6779);
          reg = x6779;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6780 = Fp(x6752.asUInt32() & x41.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6781 = x6780 * x13;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[207 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6781);
          reg = x6781;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6782 = Fp(x6752.asUInt32() & x11.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6783 = x6782 * x12;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[208 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6783);
          reg = x6783;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6784 = arg2[193 * steps + ((cycle - 0) & mask)];
      assert(x6784 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6785 = arg2[194 * steps + ((cycle - 0) & mask)];
      assert(x6785 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6786 = arg2[195 * steps + ((cycle - 0) & mask)];
      assert(x6786 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6787 = arg2[196 * steps + ((cycle - 0) & mask)];
      assert(x6787 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6788 = arg2[197 * steps + ((cycle - 0) & mask)];
      assert(x6788 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6789 = arg2[198 * steps + ((cycle - 0) & mask)];
      assert(x6789 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6790 = arg2[199 * steps + ((cycle - 0) & mask)];
      assert(x6790 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6791 = arg2[200 * steps + ((cycle - 0) & mask)];
      assert(x6791 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6792 = arg2[201 * steps + ((cycle - 0) & mask)];
      assert(x6792 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6793 = arg2[202 * steps + ((cycle - 0) & mask)];
      assert(x6793 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6794 = arg2[203 * steps + ((cycle - 0) & mask)];
      assert(x6794 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6795 = arg2[204 * steps + ((cycle - 0) & mask)];
      assert(x6795 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6796 = arg2[205 * steps + ((cycle - 0) & mask)];
      assert(x6796 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6797 = arg2[206 * steps + ((cycle - 0) & mask)];
      assert(x6797 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6798 = arg2[207 * steps + ((cycle - 0) & mask)];
      assert(x6798 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6799 = arg2[208 * steps + ((cycle - 0) & mask)];
      assert(x6799 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6800 = x6785 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6801 = x6786 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6802 = x6787 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6803 = x6788 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6804 = x6789 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6805 = x6790 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6806 = x6791 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6807 = x6792 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6808 = x6793 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6809 = x6794 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6810 = x6795 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6811 = x6796 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6812 = x6797 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6813 = x6798 * x41;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6814 = x6799 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6815 = x6784 + x6800;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6816 = x6815 + x6801;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6817 = x6816 + x6802;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6818 = x6817 + x6803;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6819 = x6818 + x6804;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6820 = x6819 + x6805;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6821 = x6820 + x6806;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6822 = x6821 + x6807;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6823 = x6822 + x6808;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6824 = x6823 + x6809;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6825 = x6824 + x6810;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6826 = x6825 + x6811;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6827 = x6826 + x6812;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6828 = x6827 + x6813;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6829 = x6828 + x6814;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":121:16)
      auto x6830 = x6752 - x6829;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":121:15)
      auto x6831 = x6830 * x10;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":132:26)
        auto x6832 = Fp(x6831.asUInt32() & x81.asUInt32());
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[75 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6832);
          reg = x6832;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6833 = arg2[75 * steps + ((cycle - 0) & mask)];
      assert(x6833 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":133:20)
      auto x6834 = x6831 - x6833;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":133:19)
      auto x6835 = x6834 * x80;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":134:20)
      auto x6836 = x101 - x6835;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":134:7)
      auto x6837 = x6835 * x6836;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":134:7)
      assert(x6837 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/sha.cpp:134");
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":135:32)
      auto x6838 = x6751 + x6831;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6839 = Fp(x6838.asUInt32() & x101.asUInt32());
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[209 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6839);
          reg = x6839;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6840 = Fp(x6838.asUInt32() & x98.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6841 = x6840 * x58;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[210 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6841);
          reg = x6841;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6842 = Fp(x6838.asUInt32() & x83.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6843 = x6842 * x80;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[211 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6843);
          reg = x6843;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6844 = Fp(x6838.asUInt32() & x68.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6845 = x6844 * x59;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[212 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6845);
          reg = x6845;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6846 = Fp(x6838.asUInt32() & x72.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6847 = x6846 * x60;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[213 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6847);
          reg = x6847;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6848 = Fp(x6838.asUInt32() & x62.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6849 = x6848 * x63;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[214 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6849);
          reg = x6849;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6850 = Fp(x6838.asUInt32() & x56.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6851 = x6850 * x57;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[215 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6851);
          reg = x6851;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6852 = Fp(x6838.asUInt32() & x65.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6853 = x6852 * x64;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[216 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6853);
          reg = x6853;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6854 = Fp(x6838.asUInt32() & x95.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6855 = x6854 * x96;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[217 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6855);
          reg = x6855;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6856 = Fp(x6838.asUInt32() & x21.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6857 = x6856 * x22;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[218 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6857);
          reg = x6857;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6858 = Fp(x6838.asUInt32() & x23.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6859 = x6858 * x20;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[219 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6859);
          reg = x6859;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6860 = Fp(x6838.asUInt32() & x18.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6861 = x6860 * x19;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[220 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6861);
          reg = x6861;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6862 = Fp(x6838.asUInt32() & x16.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6863 = x6862 * x17;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[221 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6863);
          reg = x6863;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6864 = Fp(x6838.asUInt32() & x14.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6865 = x6864 * x15;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[222 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6865);
          reg = x6865;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6866 = Fp(x6838.asUInt32() & x41.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6867 = x6866 * x13;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[223 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6867);
          reg = x6867;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x6868 = Fp(x6838.asUInt32() & x11.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x6869 = x6868 * x12;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[224 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6869);
          reg = x6869;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6870 = arg2[209 * steps + ((cycle - 0) & mask)];
      assert(x6870 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6871 = arg2[210 * steps + ((cycle - 0) & mask)];
      assert(x6871 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6872 = arg2[211 * steps + ((cycle - 0) & mask)];
      assert(x6872 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6873 = arg2[212 * steps + ((cycle - 0) & mask)];
      assert(x6873 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6874 = arg2[213 * steps + ((cycle - 0) & mask)];
      assert(x6874 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6875 = arg2[214 * steps + ((cycle - 0) & mask)];
      assert(x6875 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6876 = arg2[215 * steps + ((cycle - 0) & mask)];
      assert(x6876 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6877 = arg2[216 * steps + ((cycle - 0) & mask)];
      assert(x6877 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6878 = arg2[217 * steps + ((cycle - 0) & mask)];
      assert(x6878 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6879 = arg2[218 * steps + ((cycle - 0) & mask)];
      assert(x6879 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6880 = arg2[219 * steps + ((cycle - 0) & mask)];
      assert(x6880 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6881 = arg2[220 * steps + ((cycle - 0) & mask)];
      assert(x6881 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6882 = arg2[221 * steps + ((cycle - 0) & mask)];
      assert(x6882 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6883 = arg2[222 * steps + ((cycle - 0) & mask)];
      assert(x6883 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6884 = arg2[223 * steps + ((cycle - 0) & mask)];
      assert(x6884 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6885 = arg2[224 * steps + ((cycle - 0) & mask)];
      assert(x6885 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6886 = x6871 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6887 = x6872 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6888 = x6873 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6889 = x6874 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6890 = x6875 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6891 = x6876 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6892 = x6877 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6893 = x6878 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6894 = x6879 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6895 = x6880 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6896 = x6881 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6897 = x6882 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6898 = x6883 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6899 = x6884 * x41;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x6900 = x6885 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6901 = x6870 + x6886;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6902 = x6901 + x6887;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6903 = x6902 + x6888;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6904 = x6903 + x6889;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6905 = x6904 + x6890;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6906 = x6905 + x6891;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6907 = x6906 + x6892;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6908 = x6907 + x6893;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6909 = x6908 + x6894;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6910 = x6909 + x6895;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6911 = x6910 + x6896;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6912 = x6911 + x6897;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6913 = x6912 + x6898;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6914 = x6913 + x6899;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x6915 = x6914 + x6900;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":121:16)
      auto x6916 = x6838 - x6915;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":121:15)
      auto x6917 = x6916 * x10;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":136:27)
        auto x6918 = Fp(x6917.asUInt32() & x81.asUInt32());
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[76 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6918);
          reg = x6918;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6919 = arg2[76 * steps + ((cycle - 0) & mask)];
      assert(x6919 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":137:21)
      auto x6920 = x6917 - x6919;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":137:20)
      auto x6921 = x6920 * x80;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":138:21)
      auto x6922 = x101 - x6921;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":138:7)
      auto x6923 = x6921 * x6922;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":138:7)
      assert(x6923 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/sha.cpp:138");
      // loc("Top/mux(Mux)/body(BodyStep)/user_mode(Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6924 = arg2[99 * steps + ((cycle - 0) & mask)];
      assert(x6924 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":60:7)
      auto x6925 = x6924 * x6309;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":60:7)
      auto x6926 = x6925 * x6310;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":60:7)
      assert(x6926 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:60");
    }
    // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[10](Reg)"("./zirgen/components/mux.h":59:25))
    auto x6927 = arg2[111 * steps + ((cycle - 0) & mask)];
    assert(x6927 != Fp::invalid());
    if (x6927 != 0) {
      // loc("Top/mux(Mux)/body(BodyStep)/user_mode(Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6928 = arg2[99 * steps + ((cycle - 1) & mask)];
      assert(x6928 != Fp::invalid());
      // loc("./zirgen/components/bits.h":37:23)
      {
        auto& reg = arg2[99 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x6928);
        reg = x6928;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/next_major(Reg)"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":273:37))
      auto x6929 = arg2[100 * steps + ((cycle - 1) & mask)];
      assert(x6929 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":273:37)
      auto x6930 = x6929 - x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":273:37)
      assert(x6930 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/sha.cpp:273");
      // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[9](Reg)"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":274:70))
      auto x6931 = arg2[110 * steps + ((cycle - 1) & mask)];
      assert(x6931 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[11](Reg)"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":275:70))
      auto x6932 = arg2[112 * steps + ((cycle - 1) & mask)];
      assert(x6932 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":276:29)
      auto x6933 = x6931 + x6932;
      if (x6933 != 0) {
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[151 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":278:5)
        {
          auto& reg = arg2[145 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x69);
          reg = x69;
        }
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":280:33)
      auto x6934 = x101 - x6931;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":280:33)
      auto x6935 = x6934 - x6932;
      if (x6935 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/IsZero/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6936 = arg2[146 * steps + ((cycle - 1) & mask)];
        assert(x6936 != Fp::invalid());
        if (x6936 != 0) {
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[151 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":284:7)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x69);
            reg = x69;
          }
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":286:20)
        auto x6937 = x101 - x6936;
        if (x6937 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x6938 = arg2[151 * steps + ((cycle - 1) & mask)];
          assert(x6938 != Fp::invalid());
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[151 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6938);
            reg = x6938;
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":289:42))
          auto x6939 = arg2[145 * steps + ((cycle - 1) & mask)];
          assert(x6939 != Fp::invalid());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":289:42)
          auto x6940 = x6939 - x101;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":289:7)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6940);
            reg = x6940;
          }
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6941 = arg2[145 * steps + ((cycle - 0) & mask)];
      assert(x6941 != Fp::invalid());
      {
        // loc("zirgen/components/iszero.cpp":21:24)
        auto x6942 = (x6941 == 0) ? Fp(1) : Fp(0);
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[146 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6942);
          reg = x6942;
        }
        // loc("zirgen/components/iszero.cpp":22:21)
        auto x6943 = inv(x6941);
        // loc("zirgen/components/iszero.cpp":22:5)
        {
          auto& reg = arg2[147 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6943);
          reg = x6943;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/IsZero/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x6944 = arg2[146 * steps + ((cycle - 0) & mask)];
      assert(x6944 != Fp::invalid());
      if (x6944 != 0) {
        // loc("zirgen/components/iszero.cpp":26:23)
        assert(x6941 == 0 && "eqz failed at: zirgen/components/iszero.cpp:26");
      }
      // loc("zirgen/components/iszero.cpp":28:19)
      auto x6945 = x101 - x6944;
      if (x6945 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/IsZero/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x6946 = arg2[147 * steps + ((cycle - 0) & mask)];
        assert(x6946 != Fp::invalid());
        // loc("zirgen/components/iszero.cpp":28:26)
        auto x6947 = x6941 * x6946;
        // loc("zirgen/components/iszero.cpp":28:26)
        auto x6948 = x6947 - x101;
        // loc("zirgen/components/iszero.cpp":28:26)
        assert(x6948 == 0 && "eqz failed at: zirgen/components/iszero.cpp:28");
      }
      if (x6944 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x6949 = arg2[151 * steps + ((cycle - 0) & mask)];
        assert(x6949 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":296:17)
        auto x6950 = x101 - x6949;
        if (x6950 != 0) {
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":296:21)
          {
            auto& reg = arg2[100 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x78);
            reg = x78;
          }
        }
        if (x6949 != 0) {
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":297:17)
          {
            auto& reg = arg2[100 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x77);
            reg = x77;
          }
        }
      }
      if (x6945 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[11](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x6951 = arg2[112 * steps + ((cycle - 0) & mask)];
        assert(x6951 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[12](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x6952 = arg2[113 * steps + ((cycle - 0) & mask)];
        assert(x6952 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[13](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x6953 = arg2[114 * steps + ((cycle - 0) & mask)];
        assert(x6953 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[14](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x6954 = arg2[115 * steps + ((cycle - 0) & mask)];
        assert(x6954 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[15](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x6955 = arg2[116 * steps + ((cycle - 0) & mask)];
        assert(x6955 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[16](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x6956 = arg2[117 * steps + ((cycle - 0) & mask)];
        assert(x6956 != Fp::invalid());
        // loc("./zirgen/components/onehot.h":56:19)
        auto x6957 = x2555 * x98;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x6958 = x3268 * x81;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x6959 = x4034 * x83;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x6960 = x4493 * x71;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x6961 = x4865 * x70;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x6962 = x5303 * x69;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x6963 = x5662 * x68;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x6964 = x6235 * x67;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x6965 = x6927 * x78;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x6966 = x6951 * x77;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x6967 = x6952 * x76;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x6968 = x6953 * x75;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x6969 = x6954 * x74;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x6970 = x6955 * x73;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x6971 = x6956 * x72;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x6972 = x1761 + x6957;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x6973 = x6972 + x6958;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x6974 = x6973 + x6959;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x6975 = x6974 + x6960;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x6976 = x6975 + x6961;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x6977 = x6976 + x6962;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x6978 = x6977 + x6963;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x6979 = x6978 + x6964;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x6980 = x6979 + x6965;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x6981 = x6980 + x6966;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x6982 = x6981 + x6967;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x6983 = x6982 + x6968;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x6984 = x6983 + x6969;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x6985 = x6984 + x6970;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x6986 = x6985 + x6971;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":299:33)
        {
          auto& reg = arg2[100 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6986);
          reg = x6986;
        }
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":34:23)
      auto x6987 = x980 + x83;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x6988 = Fp(x6987.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[6 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6988);
          reg = x6988;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x6989 = arg2[6 * steps + ((cycle - 0) & mask)];
      assert(x6989 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x6990 = x6987 - x6989;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x6991 = x6990 * x96;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x6992 = Fp(x6991.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[7 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6992);
          reg = x6992;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x6993 = arg2[7 * steps + ((cycle - 0) & mask)];
      assert(x6993 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x6994 = x6991 - x6993;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x6995 = x6994 * x96;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x6996 = Fp(x6995.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[8 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6996);
          reg = x6996;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x6997 = arg2[8 * steps + ((cycle - 0) & mask)];
      assert(x6997 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x6998 = x6995 - x6997;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x6999 = x6998 * x96;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":37:26)
        auto x7000 = Fp(x6999.asUInt32() & x81.asUInt32());
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[70 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7000);
          reg = x7000;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[0](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7001 = arg2[70 * steps + ((cycle - 0) & mask)];
      assert(x7001 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:18)
      auto x7002 = x6999 - x7001;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:17)
      auto x7003 = x7002 * x80;
      // loc("./zirgen/components/bits.h":78:23)
      {
        auto& reg = arg2[71 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x7003);
        reg = x7003;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7004 = arg2[71 * steps + ((cycle - 0) & mask)];
      assert(x7004 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:23)
      auto x7005 = x101 - x7004;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:15)
      auto x7006 = x7004 * x7005;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:3)
      {
        auto& reg = arg2[98 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x7006);
        reg = x7006;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:17)
      auto x7007 = x98 - x7004;
      // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x7008 = arg2[98 * steps + ((cycle - 0) & mask)];
      assert(x7008 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
      auto x7009 = x7008 * x7007;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
      assert(x7009 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:43");
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":302:40))
      auto x7010 = arg2[141 * steps + ((cycle - 1) & mask)];
      assert(x7010 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":302:3)
      {
        auto& reg = arg2[141 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x7010);
        reg = x7010;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":303:38))
      auto x7011 = arg2[142 * steps + ((cycle - 1) & mask)];
      assert(x7011 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":303:3)
      {
        auto& reg = arg2[142 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x7011);
        reg = x7011;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":304:34))
      auto x7012 = arg2[143 * steps + ((cycle - 1) & mask)];
      assert(x7012 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":304:3)
      {
        auto& reg = arg2[143 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x7012);
        reg = x7012;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":305:34))
      auto x7013 = arg2[144 * steps + ((cycle - 1) & mask)];
      assert(x7013 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":305:3)
      {
        auto& reg = arg2[144 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x7013);
        reg = x7013;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":306:36))
      auto x7014 = arg2[148 * steps + ((cycle - 1) & mask)];
      assert(x7014 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":306:3)
      {
        auto& reg = arg2[148 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x7014);
        reg = x7014;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7015 = arg2[153 * steps + ((cycle - 1) & mask)];
      assert(x7015 != Fp::invalid());
      // loc("./zirgen/components/bits.h":37:23)
      {
        auto& reg = arg2[153 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x7015);
        reg = x7015;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":308:36))
      auto x7016 = arg2[154 * steps + ((cycle - 1) & mask)];
      assert(x7016 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":308:3)
      {
        auto& reg = arg2[154 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x7016);
        reg = x7016;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7017 = arg2[148 * steps + ((cycle - 0) & mask)];
      assert(x7017 != Fp::invalid());
      {
        // loc("zirgen/components/iszero.cpp":21:24)
        auto x7018 = (x7017 == 0) ? Fp(1) : Fp(0);
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[149 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7018);
          reg = x7018;
        }
        // loc("zirgen/components/iszero.cpp":22:21)
        auto x7019 = inv(x7017);
        // loc("zirgen/components/iszero.cpp":22:5)
        {
          auto& reg = arg2[150 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7019);
          reg = x7019;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/IsZero/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7020 = arg2[149 * steps + ((cycle - 0) & mask)];
      assert(x7020 != Fp::invalid());
      if (x7020 != 0) {
        // loc("zirgen/components/iszero.cpp":26:23)
        assert(x7017 == 0 && "eqz failed at: zirgen/components/iszero.cpp:26");
      }
      // loc("zirgen/components/iszero.cpp":28:19)
      auto x7021 = x101 - x7020;
      if (x7021 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/IsZero/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x7022 = arg2[150 * steps + ((cycle - 0) & mask)];
        assert(x7022 != Fp::invalid());
        // loc("zirgen/components/iszero.cpp":28:26)
        auto x7023 = x7017 * x7022;
        // loc("zirgen/components/iszero.cpp":28:26)
        auto x7024 = x7023 - x101;
        // loc("zirgen/components/iszero.cpp":28:26)
        assert(x7024 == 0 && "eqz failed at: zirgen/components/iszero.cpp:28");
      }
      // loc("./zirgen/components/bits.h":37:23)
      {
        auto& reg = arg2[152 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x7025 = arg2[141 * steps + ((cycle - 0) & mask)];
      assert(x7025 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x7026 = arg2[143 * steps + ((cycle - 0) & mask)];
      assert(x7026 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x7027 = arg2[144 * steps + ((cycle - 0) & mask)];
      assert(x7027 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7028 = arg2[151 * steps + ((cycle - 0) & mask)];
      assert(x7028 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":316:8)
      auto x7029 = x7026 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":317:8)
      auto x7030 = x7027 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":318:8)
      auto x7031 = x7025 * x83;
      extern_args[0] = x78;
      extern_args[1] = x7028;
      extern_args[2] = x6941;
      extern_args[3] = x7029;
      extern_args[4] = x7030;
      extern_args[5] = x7031;
      extern_args[6] = x7017;
      extern_log(ctx, cycle, "SHA_LOAD: major = %u, minor = %u, count = %u, data0 = %10x, data1 = %10x, state = %10x, repeat: %u", extern_args, extern_outs);
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":322:15)
      auto x7032 = x101 - x7028;
      if (x7032 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":323:43))
        auto x7033 = arg2[154 * steps + ((cycle - 0) & mask)];
        assert(x7033 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":323:24)
        auto x7034 = x7026 + x69;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":323:24)
        auto x7035 = x7034 - x6941;
        {
          extern_args[0] = x7035;
          extern_args[1] = x7033;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x7036 = extern_outs[0];
          auto x7037 = extern_outs[1];
          auto x7038 = extern_outs[2];
          auto x7039 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[121 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x7036);
            reg = x7036;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[122 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x7037);
            reg = x7037;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[123 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x7038);
            reg = x7038;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[124 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x7039);
            reg = x7039;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x7040 = arg2[121 * steps + ((cycle - 0) & mask)];
        assert(x7040 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x7041 = arg2[122 * steps + ((cycle - 0) & mask)];
        assert(x7041 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x7042 = arg2[123 * steps + ((cycle - 0) & mask)];
        assert(x7042 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x7043 = arg2[124 * steps + ((cycle - 0) & mask)];
        assert(x7043 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[118 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7035);
          reg = x7035;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[119 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x966);
          reg = x966;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[120 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7033);
          reg = x7033;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7040);
          reg = x7040;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7041);
          reg = x7041;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[123 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7042);
          reg = x7042;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[124 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7043);
          reg = x7043;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":324:24)
        auto x7044 = x9 - x6941;
        {
          extern_args[0] = x7044;
          extern_args[1] = x101;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x7045 = extern_outs[0];
          auto x7046 = extern_outs[1];
          auto x7047 = extern_outs[2];
          auto x7048 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[128 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x7045);
            reg = x7045;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[129 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x7046);
            reg = x7046;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[130 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x7047);
            reg = x7047;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[131 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x7048);
            reg = x7048;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x7049 = arg2[128 * steps + ((cycle - 0) & mask)];
        assert(x7049 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x7050 = arg2[129 * steps + ((cycle - 0) & mask)];
        assert(x7050 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x7051 = arg2[130 * steps + ((cycle - 0) & mask)];
        assert(x7051 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x7052 = arg2[131 * steps + ((cycle - 0) & mask)];
        assert(x7052 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[125 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7044);
          reg = x7044;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[126 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x966);
          reg = x966;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[127 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[128 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7049);
          reg = x7049;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[129 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7050);
          reg = x7050;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[130 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7051);
          reg = x7051;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[131 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7052);
          reg = x7052;
        }
      }
      if (x7028 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":327:43))
        auto x7053 = arg2[154 * steps + ((cycle - 0) & mask)];
        assert(x7053 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":327:24)
        auto x7054 = x7027 + x69;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":327:24)
        auto x7055 = x7054 - x6941;
        {
          extern_args[0] = x7055;
          extern_args[1] = x7053;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x7056 = extern_outs[0];
          auto x7057 = extern_outs[1];
          auto x7058 = extern_outs[2];
          auto x7059 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[121 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x7056);
            reg = x7056;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[122 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x7057);
            reg = x7057;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[123 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x7058);
            reg = x7058;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[124 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x7059);
            reg = x7059;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x7060 = arg2[121 * steps + ((cycle - 0) & mask)];
        assert(x7060 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x7061 = arg2[122 * steps + ((cycle - 0) & mask)];
        assert(x7061 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x7062 = arg2[123 * steps + ((cycle - 0) & mask)];
        assert(x7062 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x7063 = arg2[124 * steps + ((cycle - 0) & mask)];
        assert(x7063 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[118 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7055);
          reg = x7055;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[119 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x966);
          reg = x966;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[120 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7053);
          reg = x7053;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7060);
          reg = x7060;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7061);
          reg = x7061;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[123 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7062);
          reg = x7062;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[124 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7063);
          reg = x7063;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":328:24)
        auto x7064 = x8 - x6941;
        {
          extern_args[0] = x7064;
          extern_args[1] = x101;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x7065 = extern_outs[0];
          auto x7066 = extern_outs[1];
          auto x7067 = extern_outs[2];
          auto x7068 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[128 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x7065);
            reg = x7065;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[129 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x7066);
            reg = x7066;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[130 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x7067);
            reg = x7067;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[131 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x7068);
            reg = x7068;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x7069 = arg2[128 * steps + ((cycle - 0) & mask)];
        assert(x7069 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x7070 = arg2[129 * steps + ((cycle - 0) & mask)];
        assert(x7070 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x7071 = arg2[130 * steps + ((cycle - 0) & mask)];
        assert(x7071 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x7072 = arg2[131 * steps + ((cycle - 0) & mask)];
        assert(x7072 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[125 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7064);
          reg = x7064;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[126 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x966);
          reg = x966;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[127 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[128 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7069);
          reg = x7069;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[129 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7070);
          reg = x7070;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[130 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7071);
          reg = x7071;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[131 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7072);
          reg = x7072;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7073 = arg2[121 * steps + ((cycle - 0) & mask)];
      assert(x7073 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7074 = arg2[122 * steps + ((cycle - 0) & mask)];
      assert(x7074 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7075 = arg2[123 * steps + ((cycle - 0) & mask)];
      assert(x7075 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7076 = arg2[124 * steps + ((cycle - 0) & mask)];
      assert(x7076 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":146:61)
      auto x7077 = x7073 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":146:26)
      auto x7078 = x7075 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":146:46)
      auto x7079 = x7074 + x7077;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":146:11)
      auto x7080 = x7076 + x7078;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x7081 = Fp(x7080.asUInt32() & x101.asUInt32());
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[79 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7081);
          reg = x7081;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x7082 = Fp(x7080.asUInt32() & x98.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x7083 = x7082 * x58;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[80 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7083);
          reg = x7083;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x7084 = Fp(x7080.asUInt32() & x83.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x7085 = x7084 * x80;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[81 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7085);
          reg = x7085;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x7086 = Fp(x7080.asUInt32() & x68.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x7087 = x7086 * x59;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[82 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7087);
          reg = x7087;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x7088 = Fp(x7080.asUInt32() & x72.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x7089 = x7088 * x60;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[83 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7089);
          reg = x7089;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x7090 = Fp(x7080.asUInt32() & x62.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x7091 = x7090 * x63;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[84 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7091);
          reg = x7091;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x7092 = Fp(x7080.asUInt32() & x56.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x7093 = x7092 * x57;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[85 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7093);
          reg = x7093;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x7094 = Fp(x7080.asUInt32() & x65.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x7095 = x7094 * x64;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[86 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7095);
          reg = x7095;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x7096 = Fp(x7080.asUInt32() & x95.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x7097 = x7096 * x96;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[87 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7097);
          reg = x7097;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x7098 = Fp(x7080.asUInt32() & x21.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x7099 = x7098 * x22;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[88 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7099);
          reg = x7099;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x7100 = Fp(x7080.asUInt32() & x23.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x7101 = x7100 * x20;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[12 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7101);
          reg = x7101;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x7102 = Fp(x7080.asUInt32() & x18.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x7103 = x7102 * x19;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[13 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7103);
          reg = x7103;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x7104 = Fp(x7080.asUInt32() & x16.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x7105 = x7104 * x17;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[14 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7105);
          reg = x7105;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x7106 = Fp(x7080.asUInt32() & x14.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x7107 = x7106 * x15;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[15 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7107);
          reg = x7107;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x7108 = Fp(x7080.asUInt32() & x41.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x7109 = x7108 * x13;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[16 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7109);
          reg = x7109;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x7110 = Fp(x7080.asUInt32() & x11.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x7111 = x7110 * x12;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[17 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7111);
          reg = x7111;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7112 = arg2[12 * steps + ((cycle - 0) & mask)];
      assert(x7112 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7113 = arg2[13 * steps + ((cycle - 0) & mask)];
      assert(x7113 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7114 = arg2[14 * steps + ((cycle - 0) & mask)];
      assert(x7114 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7115 = arg2[15 * steps + ((cycle - 0) & mask)];
      assert(x7115 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7116 = arg2[16 * steps + ((cycle - 0) & mask)];
      assert(x7116 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7117 = arg2[17 * steps + ((cycle - 0) & mask)];
      assert(x7117 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7118 = arg2[79 * steps + ((cycle - 0) & mask)];
      assert(x7118 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7119 = arg2[80 * steps + ((cycle - 0) & mask)];
      assert(x7119 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7120 = arg2[81 * steps + ((cycle - 0) & mask)];
      assert(x7120 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7121 = arg2[82 * steps + ((cycle - 0) & mask)];
      assert(x7121 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7122 = arg2[83 * steps + ((cycle - 0) & mask)];
      assert(x7122 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7123 = arg2[84 * steps + ((cycle - 0) & mask)];
      assert(x7123 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7124 = arg2[85 * steps + ((cycle - 0) & mask)];
      assert(x7124 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7125 = arg2[86 * steps + ((cycle - 0) & mask)];
      assert(x7125 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7126 = arg2[87 * steps + ((cycle - 0) & mask)];
      assert(x7126 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7127 = arg2[88 * steps + ((cycle - 0) & mask)];
      assert(x7127 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x7128 = x7112 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x7129 = x7113 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x7130 = x7114 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x7131 = x7115 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x7132 = x7116 * x41;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x7133 = x7117 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x7134 = x7119 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x7135 = x7120 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x7136 = x7121 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x7137 = x7122 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x7138 = x7123 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x7139 = x7124 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x7140 = x7125 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x7141 = x7126 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x7142 = x7127 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x7143 = x7118 + x7134;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x7144 = x7143 + x7135;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x7145 = x7144 + x7136;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x7146 = x7145 + x7137;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x7147 = x7146 + x7138;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x7148 = x7147 + x7139;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x7149 = x7148 + x7140;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x7150 = x7149 + x7141;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x7151 = x7150 + x7142;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x7152 = x7151 + x7128;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x7153 = x7152 + x7129;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x7154 = x7153 + x7130;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x7155 = x7154 + x7131;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x7156 = x7155 + x7132;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x7157 = x7156 + x7133;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":121:16)
      auto x7158 = x7080 - x7157;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":121:15)
      auto x7159 = x7158 * x10;
      // loc("./zirgen/components/bits.h":78:23)
      {
        auto& reg = arg2[77 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x7159);
        reg = x7159;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7160 = arg2[77 * steps + ((cycle - 0) & mask)];
      assert(x7160 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":127:30)
      auto x7161 = x7079 + x7160;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x7162 = Fp(x7161.asUInt32() & x101.asUInt32());
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[18 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7162);
          reg = x7162;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x7163 = Fp(x7161.asUInt32() & x98.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x7164 = x7163 * x58;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[19 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7164);
          reg = x7164;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x7165 = Fp(x7161.asUInt32() & x83.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x7166 = x7165 * x80;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[20 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7166);
          reg = x7166;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x7167 = Fp(x7161.asUInt32() & x68.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x7168 = x7167 * x59;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[21 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7168);
          reg = x7168;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x7169 = Fp(x7161.asUInt32() & x72.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x7170 = x7169 * x60;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[22 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7170);
          reg = x7170;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x7171 = Fp(x7161.asUInt32() & x62.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x7172 = x7171 * x63;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[23 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7172);
          reg = x7172;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x7173 = Fp(x7161.asUInt32() & x56.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x7174 = x7173 * x57;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[24 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7174);
          reg = x7174;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x7175 = Fp(x7161.asUInt32() & x65.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x7176 = x7175 * x64;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[25 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7176);
          reg = x7176;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x7177 = Fp(x7161.asUInt32() & x95.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x7178 = x7177 * x96;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[26 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7178);
          reg = x7178;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x7179 = Fp(x7161.asUInt32() & x21.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x7180 = x7179 * x22;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[27 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7180);
          reg = x7180;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x7181 = Fp(x7161.asUInt32() & x23.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x7182 = x7181 * x20;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[28 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7182);
          reg = x7182;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x7183 = Fp(x7161.asUInt32() & x18.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x7184 = x7183 * x19;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[29 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7184);
          reg = x7184;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x7185 = Fp(x7161.asUInt32() & x16.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x7186 = x7185 * x17;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[30 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7186);
          reg = x7186;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x7187 = Fp(x7161.asUInt32() & x14.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x7188 = x7187 * x15;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[31 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7188);
          reg = x7188;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x7189 = Fp(x7161.asUInt32() & x41.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x7190 = x7189 * x13;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[32 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7190);
          reg = x7190;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x7191 = Fp(x7161.asUInt32() & x11.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x7192 = x7191 * x12;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[33 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x7192);
          reg = x7192;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7193 = arg2[18 * steps + ((cycle - 0) & mask)];
      assert(x7193 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7194 = arg2[19 * steps + ((cycle - 0) & mask)];
      assert(x7194 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7195 = arg2[20 * steps + ((cycle - 0) & mask)];
      assert(x7195 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7196 = arg2[21 * steps + ((cycle - 0) & mask)];
      assert(x7196 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7197 = arg2[22 * steps + ((cycle - 0) & mask)];
      assert(x7197 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7198 = arg2[23 * steps + ((cycle - 0) & mask)];
      assert(x7198 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7199 = arg2[24 * steps + ((cycle - 0) & mask)];
      assert(x7199 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7200 = arg2[25 * steps + ((cycle - 0) & mask)];
      assert(x7200 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7201 = arg2[26 * steps + ((cycle - 0) & mask)];
      assert(x7201 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7202 = arg2[27 * steps + ((cycle - 0) & mask)];
      assert(x7202 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7203 = arg2[28 * steps + ((cycle - 0) & mask)];
      assert(x7203 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7204 = arg2[29 * steps + ((cycle - 0) & mask)];
      assert(x7204 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7205 = arg2[30 * steps + ((cycle - 0) & mask)];
      assert(x7205 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7206 = arg2[31 * steps + ((cycle - 0) & mask)];
      assert(x7206 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7207 = arg2[32 * steps + ((cycle - 0) & mask)];
      assert(x7207 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7208 = arg2[33 * steps + ((cycle - 0) & mask)];
      assert(x7208 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x7209 = x7194 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x7210 = x7195 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x7211 = x7196 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x7212 = x7197 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x7213 = x7198 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x7214 = x7199 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x7215 = x7200 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x7216 = x7201 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x7217 = x7202 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x7218 = x7203 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x7219 = x7204 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x7220 = x7205 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x7221 = x7206 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x7222 = x7207 * x41;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x7223 = x7208 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x7224 = x7193 + x7209;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x7225 = x7224 + x7210;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x7226 = x7225 + x7211;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x7227 = x7226 + x7212;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x7228 = x7227 + x7213;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x7229 = x7228 + x7214;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x7230 = x7229 + x7215;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x7231 = x7230 + x7216;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x7232 = x7231 + x7217;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x7233 = x7232 + x7218;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x7234 = x7233 + x7219;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x7235 = x7234 + x7220;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x7236 = x7235 + x7221;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x7237 = x7236 + x7222;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x7238 = x7237 + x7223;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":121:16)
      auto x7239 = x7161 - x7238;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":121:15)
      auto x7240 = x7239 * x10;
      // loc("./zirgen/components/bits.h":78:23)
      {
        auto& reg = arg2[78 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x7240);
        reg = x7240;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7241 = arg2[128 * steps + ((cycle - 0) & mask)];
      assert(x7241 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7242 = arg2[129 * steps + ((cycle - 0) & mask)];
      assert(x7242 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7243 = arg2[130 * steps + ((cycle - 0) & mask)];
      assert(x7243 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7244 = arg2[131 * steps + ((cycle - 0) & mask)];
      assert(x7244 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7245 = arg2[161 * steps + ((cycle - 1) & mask)];
      assert(x7245 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7246 = arg2[162 * steps + ((cycle - 1) & mask)];
      assert(x7246 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7247 = arg2[163 * steps + ((cycle - 1) & mask)];
      assert(x7247 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7248 = arg2[164 * steps + ((cycle - 1) & mask)];
      assert(x7248 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7249 = arg2[165 * steps + ((cycle - 1) & mask)];
      assert(x7249 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7250 = arg2[166 * steps + ((cycle - 1) & mask)];
      assert(x7250 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7251 = arg2[167 * steps + ((cycle - 1) & mask)];
      assert(x7251 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7252 = arg2[168 * steps + ((cycle - 1) & mask)];
      assert(x7252 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7253 = arg2[169 * steps + ((cycle - 1) & mask)];
      assert(x7253 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7254 = arg2[170 * steps + ((cycle - 1) & mask)];
      assert(x7254 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7255 = arg2[171 * steps + ((cycle - 1) & mask)];
      assert(x7255 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7256 = arg2[172 * steps + ((cycle - 1) & mask)];
      assert(x7256 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7257 = arg2[173 * steps + ((cycle - 1) & mask)];
      assert(x7257 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7258 = arg2[174 * steps + ((cycle - 1) & mask)];
      assert(x7258 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7259 = arg2[175 * steps + ((cycle - 1) & mask)];
      assert(x7259 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7260 = arg2[176 * steps + ((cycle - 1) & mask)];
      assert(x7260 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7261 = arg2[177 * steps + ((cycle - 1) & mask)];
      assert(x7261 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7262 = arg2[178 * steps + ((cycle - 1) & mask)];
      assert(x7262 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7263 = arg2[179 * steps + ((cycle - 1) & mask)];
      assert(x7263 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7264 = arg2[180 * steps + ((cycle - 1) & mask)];
      assert(x7264 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7265 = arg2[181 * steps + ((cycle - 1) & mask)];
      assert(x7265 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7266 = arg2[182 * steps + ((cycle - 1) & mask)];
      assert(x7266 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7267 = arg2[183 * steps + ((cycle - 1) & mask)];
      assert(x7267 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7268 = arg2[184 * steps + ((cycle - 1) & mask)];
      assert(x7268 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7269 = arg2[185 * steps + ((cycle - 1) & mask)];
      assert(x7269 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7270 = arg2[186 * steps + ((cycle - 1) & mask)];
      assert(x7270 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7271 = arg2[187 * steps + ((cycle - 1) & mask)];
      assert(x7271 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7272 = arg2[188 * steps + ((cycle - 1) & mask)];
      assert(x7272 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7273 = arg2[189 * steps + ((cycle - 1) & mask)];
      assert(x7273 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7274 = arg2[190 * steps + ((cycle - 1) & mask)];
      assert(x7274 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7275 = arg2[191 * steps + ((cycle - 1) & mask)];
      assert(x7275 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7276 = arg2[192 * steps + ((cycle - 1) & mask)];
      assert(x7276 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7277 = arg2[193 * steps + ((cycle - 1) & mask)];
      assert(x7277 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7278 = arg2[194 * steps + ((cycle - 1) & mask)];
      assert(x7278 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7279 = arg2[195 * steps + ((cycle - 1) & mask)];
      assert(x7279 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7280 = arg2[196 * steps + ((cycle - 1) & mask)];
      assert(x7280 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7281 = arg2[197 * steps + ((cycle - 1) & mask)];
      assert(x7281 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7282 = arg2[198 * steps + ((cycle - 1) & mask)];
      assert(x7282 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7283 = arg2[199 * steps + ((cycle - 1) & mask)];
      assert(x7283 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7284 = arg2[200 * steps + ((cycle - 1) & mask)];
      assert(x7284 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7285 = arg2[201 * steps + ((cycle - 1) & mask)];
      assert(x7285 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7286 = arg2[202 * steps + ((cycle - 1) & mask)];
      assert(x7286 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7287 = arg2[203 * steps + ((cycle - 1) & mask)];
      assert(x7287 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7288 = arg2[204 * steps + ((cycle - 1) & mask)];
      assert(x7288 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7289 = arg2[205 * steps + ((cycle - 1) & mask)];
      assert(x7289 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7290 = arg2[206 * steps + ((cycle - 1) & mask)];
      assert(x7290 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7291 = arg2[207 * steps + ((cycle - 1) & mask)];
      assert(x7291 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7292 = arg2[208 * steps + ((cycle - 1) & mask)];
      assert(x7292 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7293 = arg2[209 * steps + ((cycle - 1) & mask)];
      assert(x7293 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7294 = arg2[210 * steps + ((cycle - 1) & mask)];
      assert(x7294 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7295 = arg2[211 * steps + ((cycle - 1) & mask)];
      assert(x7295 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7296 = arg2[212 * steps + ((cycle - 1) & mask)];
      assert(x7296 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7297 = arg2[213 * steps + ((cycle - 1) & mask)];
      assert(x7297 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7298 = arg2[214 * steps + ((cycle - 1) & mask)];
      assert(x7298 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7299 = arg2[215 * steps + ((cycle - 1) & mask)];
      assert(x7299 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7300 = arg2[216 * steps + ((cycle - 1) & mask)];
      assert(x7300 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7301 = arg2[217 * steps + ((cycle - 1) & mask)];
      assert(x7301 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7302 = arg2[218 * steps + ((cycle - 1) & mask)];
      assert(x7302 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7303 = arg2[219 * steps + ((cycle - 1) & mask)];
      assert(x7303 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7304 = arg2[220 * steps + ((cycle - 1) & mask)];
      assert(x7304 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7305 = arg2[221 * steps + ((cycle - 1) & mask)];
      assert(x7305 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7306 = arg2[222 * steps + ((cycle - 1) & mask)];
      assert(x7306 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7307 = arg2[223 * steps + ((cycle - 1) & mask)];
      assert(x7307 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7308 = arg2[224 * steps + ((cycle - 1) & mask)];
      assert(x7308 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7309 = arg2[193 * steps + ((cycle - 2) & mask)];
      assert(x7309 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7310 = arg2[194 * steps + ((cycle - 2) & mask)];
      assert(x7310 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7311 = arg2[195 * steps + ((cycle - 2) & mask)];
      assert(x7311 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7312 = arg2[196 * steps + ((cycle - 2) & mask)];
      assert(x7312 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7313 = arg2[197 * steps + ((cycle - 2) & mask)];
      assert(x7313 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7314 = arg2[198 * steps + ((cycle - 2) & mask)];
      assert(x7314 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7315 = arg2[199 * steps + ((cycle - 2) & mask)];
      assert(x7315 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7316 = arg2[200 * steps + ((cycle - 2) & mask)];
      assert(x7316 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7317 = arg2[201 * steps + ((cycle - 2) & mask)];
      assert(x7317 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7318 = arg2[202 * steps + ((cycle - 2) & mask)];
      assert(x7318 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7319 = arg2[203 * steps + ((cycle - 2) & mask)];
      assert(x7319 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7320 = arg2[204 * steps + ((cycle - 2) & mask)];
      assert(x7320 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7321 = arg2[205 * steps + ((cycle - 2) & mask)];
      assert(x7321 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7322 = arg2[206 * steps + ((cycle - 2) & mask)];
      assert(x7322 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7323 = arg2[207 * steps + ((cycle - 2) & mask)];
      assert(x7323 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7324 = arg2[208 * steps + ((cycle - 2) & mask)];
      assert(x7324 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7325 = arg2[209 * steps + ((cycle - 2) & mask)];
      assert(x7325 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7326 = arg2[210 * steps + ((cycle - 2) & mask)];
      assert(x7326 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7327 = arg2[211 * steps + ((cycle - 2) & mask)];
      assert(x7327 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7328 = arg2[212 * steps + ((cycle - 2) & mask)];
      assert(x7328 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7329 = arg2[213 * steps + ((cycle - 2) & mask)];
      assert(x7329 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7330 = arg2[214 * steps + ((cycle - 2) & mask)];
      assert(x7330 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7331 = arg2[215 * steps + ((cycle - 2) & mask)];
      assert(x7331 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7332 = arg2[216 * steps + ((cycle - 2) & mask)];
      assert(x7332 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7333 = arg2[217 * steps + ((cycle - 2) & mask)];
      assert(x7333 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7334 = arg2[218 * steps + ((cycle - 2) & mask)];
      assert(x7334 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7335 = arg2[219 * steps + ((cycle - 2) & mask)];
      assert(x7335 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7336 = arg2[220 * steps + ((cycle - 2) & mask)];
      assert(x7336 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7337 = arg2[221 * steps + ((cycle - 2) & mask)];
      assert(x7337 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7338 = arg2[222 * steps + ((cycle - 2) & mask)];
      assert(x7338 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7339 = arg2[223 * steps + ((cycle - 2) & mask)];
      assert(x7339 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7340 = arg2[224 * steps + ((cycle - 2) & mask)];
      assert(x7340 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7341 = arg2[161 * steps + ((cycle - 2) & mask)];
      assert(x7341 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7342 = arg2[162 * steps + ((cycle - 2) & mask)];
      assert(x7342 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7343 = arg2[163 * steps + ((cycle - 2) & mask)];
      assert(x7343 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7344 = arg2[164 * steps + ((cycle - 2) & mask)];
      assert(x7344 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7345 = arg2[165 * steps + ((cycle - 2) & mask)];
      assert(x7345 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7346 = arg2[166 * steps + ((cycle - 2) & mask)];
      assert(x7346 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7347 = arg2[167 * steps + ((cycle - 2) & mask)];
      assert(x7347 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7348 = arg2[168 * steps + ((cycle - 2) & mask)];
      assert(x7348 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7349 = arg2[169 * steps + ((cycle - 2) & mask)];
      assert(x7349 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7350 = arg2[170 * steps + ((cycle - 2) & mask)];
      assert(x7350 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7351 = arg2[171 * steps + ((cycle - 2) & mask)];
      assert(x7351 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7352 = arg2[172 * steps + ((cycle - 2) & mask)];
      assert(x7352 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7353 = arg2[173 * steps + ((cycle - 2) & mask)];
      assert(x7353 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7354 = arg2[174 * steps + ((cycle - 2) & mask)];
      assert(x7354 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7355 = arg2[175 * steps + ((cycle - 2) & mask)];
      assert(x7355 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7356 = arg2[176 * steps + ((cycle - 2) & mask)];
      assert(x7356 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7357 = arg2[177 * steps + ((cycle - 2) & mask)];
      assert(x7357 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7358 = arg2[178 * steps + ((cycle - 2) & mask)];
      assert(x7358 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7359 = arg2[179 * steps + ((cycle - 2) & mask)];
      assert(x7359 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7360 = arg2[180 * steps + ((cycle - 2) & mask)];
      assert(x7360 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7361 = arg2[181 * steps + ((cycle - 2) & mask)];
      assert(x7361 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7362 = arg2[182 * steps + ((cycle - 2) & mask)];
      assert(x7362 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7363 = arg2[183 * steps + ((cycle - 2) & mask)];
      assert(x7363 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7364 = arg2[184 * steps + ((cycle - 2) & mask)];
      assert(x7364 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7365 = arg2[185 * steps + ((cycle - 2) & mask)];
      assert(x7365 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7366 = arg2[186 * steps + ((cycle - 2) & mask)];
      assert(x7366 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7367 = arg2[187 * steps + ((cycle - 2) & mask)];
      assert(x7367 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7368 = arg2[188 * steps + ((cycle - 2) & mask)];
      assert(x7368 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7369 = arg2[189 * steps + ((cycle - 2) & mask)];
      assert(x7369 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7370 = arg2[190 * steps + ((cycle - 2) & mask)];
      assert(x7370 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7371 = arg2[191 * steps + ((cycle - 2) & mask)];
      assert(x7371 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7372 = arg2[192 * steps + ((cycle - 2) & mask)];
      assert(x7372 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7373 = arg2[193 * steps + ((cycle - 3) & mask)];
      assert(x7373 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7374 = arg2[194 * steps + ((cycle - 3) & mask)];
      assert(x7374 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7375 = arg2[195 * steps + ((cycle - 3) & mask)];
      assert(x7375 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7376 = arg2[196 * steps + ((cycle - 3) & mask)];
      assert(x7376 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7377 = arg2[197 * steps + ((cycle - 3) & mask)];
      assert(x7377 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7378 = arg2[198 * steps + ((cycle - 3) & mask)];
      assert(x7378 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7379 = arg2[199 * steps + ((cycle - 3) & mask)];
      assert(x7379 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7380 = arg2[200 * steps + ((cycle - 3) & mask)];
      assert(x7380 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7381 = arg2[201 * steps + ((cycle - 3) & mask)];
      assert(x7381 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7382 = arg2[202 * steps + ((cycle - 3) & mask)];
      assert(x7382 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7383 = arg2[203 * steps + ((cycle - 3) & mask)];
      assert(x7383 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7384 = arg2[204 * steps + ((cycle - 3) & mask)];
      assert(x7384 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7385 = arg2[205 * steps + ((cycle - 3) & mask)];
      assert(x7385 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7386 = arg2[206 * steps + ((cycle - 3) & mask)];
      assert(x7386 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7387 = arg2[207 * steps + ((cycle - 3) & mask)];
      assert(x7387 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7388 = arg2[208 * steps + ((cycle - 3) & mask)];
      assert(x7388 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7389 = arg2[209 * steps + ((cycle - 3) & mask)];
      assert(x7389 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7390 = arg2[210 * steps + ((cycle - 3) & mask)];
      assert(x7390 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7391 = arg2[211 * steps + ((cycle - 3) & mask)];
      assert(x7391 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7392 = arg2[212 * steps + ((cycle - 3) & mask)];
      assert(x7392 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7393 = arg2[213 * steps + ((cycle - 3) & mask)];
      assert(x7393 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7394 = arg2[214 * steps + ((cycle - 3) & mask)];
      assert(x7394 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7395 = arg2[215 * steps + ((cycle - 3) & mask)];
      assert(x7395 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7396 = arg2[216 * steps + ((cycle - 3) & mask)];
      assert(x7396 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7397 = arg2[217 * steps + ((cycle - 3) & mask)];
      assert(x7397 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7398 = arg2[218 * steps + ((cycle - 3) & mask)];
      assert(x7398 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7399 = arg2[219 * steps + ((cycle - 3) & mask)];
      assert(x7399 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7400 = arg2[220 * steps + ((cycle - 3) & mask)];
      assert(x7400 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7401 = arg2[221 * steps + ((cycle - 3) & mask)];
      assert(x7401 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7402 = arg2[222 * steps + ((cycle - 3) & mask)];
      assert(x7402 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7403 = arg2[223 * steps + ((cycle - 3) & mask)];
      assert(x7403 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7404 = arg2[224 * steps + ((cycle - 3) & mask)];
      assert(x7404 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7405 = arg2[161 * steps + ((cycle - 3) & mask)];
      assert(x7405 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7406 = arg2[162 * steps + ((cycle - 3) & mask)];
      assert(x7406 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7407 = arg2[163 * steps + ((cycle - 3) & mask)];
      assert(x7407 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7408 = arg2[164 * steps + ((cycle - 3) & mask)];
      assert(x7408 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7409 = arg2[165 * steps + ((cycle - 3) & mask)];
      assert(x7409 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7410 = arg2[166 * steps + ((cycle - 3) & mask)];
      assert(x7410 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7411 = arg2[167 * steps + ((cycle - 3) & mask)];
      assert(x7411 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7412 = arg2[168 * steps + ((cycle - 3) & mask)];
      assert(x7412 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7413 = arg2[169 * steps + ((cycle - 3) & mask)];
      assert(x7413 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7414 = arg2[170 * steps + ((cycle - 3) & mask)];
      assert(x7414 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7415 = arg2[171 * steps + ((cycle - 3) & mask)];
      assert(x7415 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7416 = arg2[172 * steps + ((cycle - 3) & mask)];
      assert(x7416 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7417 = arg2[173 * steps + ((cycle - 3) & mask)];
      assert(x7417 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7418 = arg2[174 * steps + ((cycle - 3) & mask)];
      assert(x7418 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7419 = arg2[175 * steps + ((cycle - 3) & mask)];
      assert(x7419 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7420 = arg2[176 * steps + ((cycle - 3) & mask)];
      assert(x7420 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7421 = arg2[177 * steps + ((cycle - 3) & mask)];
      assert(x7421 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7422 = arg2[178 * steps + ((cycle - 3) & mask)];
      assert(x7422 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7423 = arg2[179 * steps + ((cycle - 3) & mask)];
      assert(x7423 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7424 = arg2[180 * steps + ((cycle - 3) & mask)];
      assert(x7424 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7425 = arg2[181 * steps + ((cycle - 3) & mask)];
      assert(x7425 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7426 = arg2[182 * steps + ((cycle - 3) & mask)];
      assert(x7426 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7427 = arg2[183 * steps + ((cycle - 3) & mask)];
      assert(x7427 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7428 = arg2[184 * steps + ((cycle - 3) & mask)];
      assert(x7428 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7429 = arg2[185 * steps + ((cycle - 3) & mask)];
      assert(x7429 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7430 = arg2[186 * steps + ((cycle - 3) & mask)];
      assert(x7430 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7431 = arg2[187 * steps + ((cycle - 3) & mask)];
      assert(x7431 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7432 = arg2[188 * steps + ((cycle - 3) & mask)];
      assert(x7432 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7433 = arg2[189 * steps + ((cycle - 3) & mask)];
      assert(x7433 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7434 = arg2[190 * steps + ((cycle - 3) & mask)];
      assert(x7434 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7435 = arg2[191 * steps + ((cycle - 3) & mask)];
      assert(x7435 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7436 = arg2[192 * steps + ((cycle - 3) & mask)];
      assert(x7436 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7437 = arg2[161 * steps + ((cycle - 4) & mask)];
      assert(x7437 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7438 = arg2[162 * steps + ((cycle - 4) & mask)];
      assert(x7438 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7439 = arg2[163 * steps + ((cycle - 4) & mask)];
      assert(x7439 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7440 = arg2[164 * steps + ((cycle - 4) & mask)];
      assert(x7440 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7441 = arg2[165 * steps + ((cycle - 4) & mask)];
      assert(x7441 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7442 = arg2[166 * steps + ((cycle - 4) & mask)];
      assert(x7442 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7443 = arg2[167 * steps + ((cycle - 4) & mask)];
      assert(x7443 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7444 = arg2[168 * steps + ((cycle - 4) & mask)];
      assert(x7444 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7445 = arg2[169 * steps + ((cycle - 4) & mask)];
      assert(x7445 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7446 = arg2[170 * steps + ((cycle - 4) & mask)];
      assert(x7446 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7447 = arg2[171 * steps + ((cycle - 4) & mask)];
      assert(x7447 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7448 = arg2[172 * steps + ((cycle - 4) & mask)];
      assert(x7448 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7449 = arg2[173 * steps + ((cycle - 4) & mask)];
      assert(x7449 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7450 = arg2[174 * steps + ((cycle - 4) & mask)];
      assert(x7450 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7451 = arg2[175 * steps + ((cycle - 4) & mask)];
      assert(x7451 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7452 = arg2[176 * steps + ((cycle - 4) & mask)];
      assert(x7452 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7453 = arg2[177 * steps + ((cycle - 4) & mask)];
      assert(x7453 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7454 = arg2[178 * steps + ((cycle - 4) & mask)];
      assert(x7454 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7455 = arg2[179 * steps + ((cycle - 4) & mask)];
      assert(x7455 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7456 = arg2[180 * steps + ((cycle - 4) & mask)];
      assert(x7456 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7457 = arg2[181 * steps + ((cycle - 4) & mask)];
      assert(x7457 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7458 = arg2[182 * steps + ((cycle - 4) & mask)];
      assert(x7458 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7459 = arg2[183 * steps + ((cycle - 4) & mask)];
      assert(x7459 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7460 = arg2[184 * steps + ((cycle - 4) & mask)];
      assert(x7460 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7461 = arg2[185 * steps + ((cycle - 4) & mask)];
      assert(x7461 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7462 = arg2[186 * steps + ((cycle - 4) & mask)];
      assert(x7462 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7463 = arg2[187 * steps + ((cycle - 4) & mask)];
      assert(x7463 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7464 = arg2[188 * steps + ((cycle - 4) & mask)];
      assert(x7464 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7465 = arg2[189 * steps + ((cycle - 4) & mask)];
      assert(x7465 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7466 = arg2[190 * steps + ((cycle - 4) & mask)];
      assert(x7466 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7467 = arg2[191 * steps + ((cycle - 4) & mask)];
      assert(x7467 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7468 = arg2[192 * steps + ((cycle - 4) & mask)];
      assert(x7468 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7469 = arg2[193 * steps + ((cycle - 4) & mask)];
      assert(x7469 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7470 = arg2[194 * steps + ((cycle - 4) & mask)];
      assert(x7470 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7471 = arg2[195 * steps + ((cycle - 4) & mask)];
      assert(x7471 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7472 = arg2[196 * steps + ((cycle - 4) & mask)];
      assert(x7472 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7473 = arg2[197 * steps + ((cycle - 4) & mask)];
      assert(x7473 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7474 = arg2[198 * steps + ((cycle - 4) & mask)];
      assert(x7474 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7475 = arg2[199 * steps + ((cycle - 4) & mask)];
      assert(x7475 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7476 = arg2[200 * steps + ((cycle - 4) & mask)];
      assert(x7476 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7477 = arg2[201 * steps + ((cycle - 4) & mask)];
      assert(x7477 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7478 = arg2[202 * steps + ((cycle - 4) & mask)];
      assert(x7478 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7479 = arg2[203 * steps + ((cycle - 4) & mask)];
      assert(x7479 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7480 = arg2[204 * steps + ((cycle - 4) & mask)];
      assert(x7480 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7481 = arg2[205 * steps + ((cycle - 4) & mask)];
      assert(x7481 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7482 = arg2[206 * steps + ((cycle - 4) & mask)];
      assert(x7482 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7483 = arg2[207 * steps + ((cycle - 4) & mask)];
      assert(x7483 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7484 = arg2[208 * steps + ((cycle - 4) & mask)];
      assert(x7484 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7485 = arg2[209 * steps + ((cycle - 4) & mask)];
      assert(x7485 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7486 = arg2[210 * steps + ((cycle - 4) & mask)];
      assert(x7486 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7487 = arg2[211 * steps + ((cycle - 4) & mask)];
      assert(x7487 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7488 = arg2[212 * steps + ((cycle - 4) & mask)];
      assert(x7488 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7489 = arg2[213 * steps + ((cycle - 4) & mask)];
      assert(x7489 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7490 = arg2[214 * steps + ((cycle - 4) & mask)];
      assert(x7490 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7491 = arg2[215 * steps + ((cycle - 4) & mask)];
      assert(x7491 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7492 = arg2[216 * steps + ((cycle - 4) & mask)];
      assert(x7492 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7493 = arg2[217 * steps + ((cycle - 4) & mask)];
      assert(x7493 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7494 = arg2[218 * steps + ((cycle - 4) & mask)];
      assert(x7494 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7495 = arg2[219 * steps + ((cycle - 4) & mask)];
      assert(x7495 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7496 = arg2[220 * steps + ((cycle - 4) & mask)];
      assert(x7496 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7497 = arg2[221 * steps + ((cycle - 4) & mask)];
      assert(x7497 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7498 = arg2[222 * steps + ((cycle - 4) & mask)];
      assert(x7498 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7499 = arg2[223 * steps + ((cycle - 4) & mask)];
      assert(x7499 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x7500 = arg2[224 * steps + ((cycle - 4) & mask)];
      assert(x7500 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7501 = x7245 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x7502 = x7245 * x7341;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7503 = x7246 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x7504 = x7246 * x7342;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7505 = x7247 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x7506 = x7247 * x7343;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7507 = x7248 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x7508 = x7248 * x7344;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7509 = x7249 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x7510 = x7249 * x7345;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7511 = x7250 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x7512 = x7250 * x7346;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7513 = x7251 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x7514 = x7251 * x7347;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7515 = x7252 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x7516 = x7252 * x7348;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7517 = x7253 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x7518 = x7253 * x7349;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7519 = x7254 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x7520 = x7254 * x7350;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7521 = x7255 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x7522 = x7255 * x7351;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7523 = x7256 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x7524 = x7256 * x7352;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7525 = x7257 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x7526 = x7257 * x7353;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7527 = x7258 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x7528 = x7258 * x7354;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7529 = x7259 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x7530 = x7259 * x7355;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7531 = x7260 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x7532 = x7260 * x7356;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7533 = x7261 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x7534 = x7261 * x7357;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7535 = x7262 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x7536 = x7262 * x7358;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7537 = x7263 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x7538 = x7263 * x7359;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7539 = x7264 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x7540 = x7264 * x7360;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7541 = x7265 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x7542 = x7265 * x7361;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7543 = x7266 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x7544 = x7266 * x7362;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7545 = x7267 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x7546 = x7267 * x7363;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7547 = x7268 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x7548 = x7268 * x7364;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7549 = x7269 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x7550 = x7269 * x7365;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7551 = x7270 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x7552 = x7270 * x7366;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7553 = x7271 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x7554 = x7271 * x7367;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7555 = x7272 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x7556 = x7272 * x7368;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7557 = x7273 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x7558 = x7273 * x7369;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7559 = x7274 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x7560 = x7274 * x7370;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7561 = x7275 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x7562 = x7275 * x7371;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7563 = x7276 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x7564 = x7276 * x7372;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7565 = x7277 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x7566 = x7277 * x7309;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7567 = x7278 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x7568 = x7278 * x7310;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7569 = x7279 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x7570 = x7279 * x7311;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7571 = x7280 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x7572 = x7280 * x7312;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7573 = x7281 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x7574 = x7281 * x7313;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7575 = x7282 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x7576 = x7282 * x7314;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7577 = x7283 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x7578 = x7283 * x7315;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7579 = x7284 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x7580 = x7284 * x7316;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7581 = x7285 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x7582 = x7285 * x7317;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7583 = x7286 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x7584 = x7286 * x7318;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7585 = x7287 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x7586 = x7287 * x7319;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7587 = x7288 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x7588 = x7288 * x7320;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7589 = x7289 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x7590 = x7289 * x7321;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7591 = x7290 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x7592 = x7290 * x7322;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7593 = x7291 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x7594 = x7291 * x7323;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7595 = x7292 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x7596 = x7292 * x7324;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7597 = x7293 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x7598 = x7293 * x7325;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7599 = x7294 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x7600 = x7294 * x7326;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7601 = x7295 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x7602 = x7295 * x7327;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7603 = x7296 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x7604 = x7296 * x7328;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7605 = x7297 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x7606 = x7297 * x7329;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7607 = x7298 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x7608 = x7298 * x7330;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7609 = x7299 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x7610 = x7299 * x7331;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7611 = x7300 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x7612 = x7300 * x7332;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7613 = x7301 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x7614 = x7301 * x7333;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7615 = x7302 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x7616 = x7302 * x7334;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7617 = x7303 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x7618 = x7303 * x7335;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7619 = x7304 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x7620 = x7304 * x7336;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7621 = x7305 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x7622 = x7305 * x7337;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7623 = x7306 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x7624 = x7306 * x7338;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7625 = x7307 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x7626 = x7307 * x7339;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7627 = x7308 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x7628 = x7308 * x7340;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":142:26)
      auto x7629 = x7242 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":142:61)
      auto x7630 = x7244 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7631 = x7438 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7632 = x7439 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7633 = x7440 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7634 = x7441 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7635 = x7442 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7636 = x7443 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7637 = x7444 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7638 = x7445 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7639 = x7446 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7640 = x7447 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7641 = x7448 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7642 = x7449 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7643 = x7450 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7644 = x7451 * x41;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7645 = x7452 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7646 = x7454 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7647 = x7455 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7648 = x7456 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7649 = x7457 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7650 = x7458 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7651 = x7459 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7652 = x7460 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7653 = x7461 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7654 = x7462 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7655 = x7463 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7656 = x7464 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7657 = x7465 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7658 = x7466 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7659 = x7467 * x41;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7660 = x7468 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7661 = x7470 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7662 = x7471 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7663 = x7472 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7664 = x7473 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7665 = x7474 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7666 = x7475 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7667 = x7476 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7668 = x7477 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7669 = x7478 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7670 = x7479 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7671 = x7480 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7672 = x7481 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7673 = x7482 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7674 = x7483 * x41;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7675 = x7484 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7676 = x7486 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7677 = x7487 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7678 = x7488 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7679 = x7489 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7680 = x7490 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7681 = x7491 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7682 = x7492 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7683 = x7493 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7684 = x7494 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7685 = x7495 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7686 = x7496 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7687 = x7497 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7688 = x7498 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7689 = x7499 * x41;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x7690 = x7500 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7691 = x7501 * x7254;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x7692 = x7502 * x7405;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7693 = x7503 * x7255;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x7694 = x7504 * x7406;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7695 = x7505 * x7256;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x7696 = x7506 * x7407;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7697 = x7507 * x7257;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x7698 = x7508 * x7408;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7699 = x7509 * x7258;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x7700 = x7510 * x7409;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7701 = x7511 * x7259;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x7702 = x7512 * x7410;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7703 = x7513 * x7260;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x7704 = x7514 * x7411;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7705 = x7515 * x7261;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x7706 = x7516 * x7412;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7707 = x7517 * x7262;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x7708 = x7518 * x7413;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7709 = x7519 * x7263;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x7710 = x7520 * x7414;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7711 = x7521 * x7264;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x7712 = x7522 * x7415;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7713 = x7523 * x7265;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x7714 = x7524 * x7416;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7715 = x7525 * x7266;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x7716 = x7526 * x7417;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7717 = x7527 * x7267;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x7718 = x7528 * x7418;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7719 = x7529 * x7268;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x7720 = x7530 * x7419;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7721 = x7531 * x7269;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x7722 = x7532 * x7420;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7723 = x7533 * x7270;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x7724 = x7534 * x7421;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7725 = x7535 * x7271;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x7726 = x7536 * x7422;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7727 = x7537 * x7272;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x7728 = x7538 * x7423;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7729 = x7539 * x7273;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x7730 = x7540 * x7424;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7731 = x7541 * x7274;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x7732 = x7542 * x7425;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7733 = x7543 * x7275;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x7734 = x7544 * x7426;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7735 = x7545 * x7276;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x7736 = x7546 * x7427;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7737 = x7547 * x7245;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x7738 = x7548 * x7428;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7739 = x7549 * x7246;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x7740 = x7550 * x7429;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7741 = x7551 * x7247;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x7742 = x7552 * x7430;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7743 = x7553 * x7248;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x7744 = x7554 * x7431;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7745 = x7555 * x7249;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x7746 = x7556 * x7432;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7747 = x7557 * x7250;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x7748 = x7558 * x7433;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7749 = x7559 * x7251;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x7750 = x7560 * x7434;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7751 = x7561 * x7252;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x7752 = x7562 * x7435;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7753 = x7563 * x7253;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x7754 = x7564 * x7436;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7755 = x7565 * x7291;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7756 = x7567 * x7292;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7757 = x7569 * x7293;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7758 = x7571 * x7294;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7759 = x7573 * x7295;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7760 = x7575 * x7296;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7761 = x7577 * x7297;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7762 = x7579 * x7298;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7763 = x7581 * x7299;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7764 = x7583 * x7300;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7765 = x7585 * x7301;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7766 = x7587 * x7302;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7767 = x7589 * x7303;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7768 = x7591 * x7304;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7769 = x7593 * x7305;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7770 = x7595 * x7306;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7771 = x7597 * x7307;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7772 = x7599 * x7308;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7773 = x7601 * x7277;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7774 = x7603 * x7278;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7775 = x7605 * x7279;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7776 = x7607 * x7280;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7777 = x7609 * x7281;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7778 = x7611 * x7282;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7779 = x7613 * x7283;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7780 = x7615 * x7284;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7781 = x7617 * x7285;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7782 = x7619 * x7286;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7783 = x7621 * x7287;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7784 = x7623 * x7288;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7785 = x7625 * x7289;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x7786 = x7627 * x7290;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x7787 = x101 - x7245;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x7788 = x101 - x7246;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x7789 = x101 - x7247;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x7790 = x101 - x7248;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x7791 = x101 - x7249;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x7792 = x101 - x7250;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x7793 = x101 - x7251;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x7794 = x101 - x7252;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x7795 = x101 - x7253;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x7796 = x101 - x7254;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x7797 = x101 - x7255;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x7798 = x101 - x7256;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x7799 = x101 - x7257;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x7800 = x101 - x7258;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x7801 = x101 - x7259;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x7802 = x101 - x7260;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x7803 = x101 - x7261;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x7804 = x101 - x7262;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x7805 = x101 - x7263;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x7806 = x101 - x7264;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x7807 = x101 - x7265;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x7808 = x101 - x7266;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x7809 = x101 - x7267;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x7810 = x101 - x7268;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x7811 = x101 - x7269;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x7812 = x101 - x7270;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x7813 = x101 - x7271;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x7814 = x101 - x7272;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x7815 = x101 - x7273;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x7816 = x101 - x7274;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x7817 = x101 - x7275;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x7818 = x101 - x7276;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x7819 = x101 - x7277;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x7820 = x101 - x7278;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x7821 = x101 - x7279;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x7822 = x101 - x7280;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x7823 = x101 - x7281;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x7824 = x101 - x7282;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x7825 = x101 - x7283;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x7826 = x101 - x7284;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x7827 = x101 - x7285;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x7828 = x101 - x7286;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x7829 = x101 - x7287;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x7830 = x101 - x7288;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x7831 = x101 - x7289;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x7832 = x101 - x7290;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x7833 = x101 - x7291;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x7834 = x101 - x7292;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x7835 = x101 - x7293;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x7836 = x101 - x7294;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x7837 = x101 - x7295;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x7838 = x101 - x7296;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x7839 = x101 - x7297;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x7840 = x101 - x7298;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x7841 = x101 - x7299;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x7842 = x101 - x7300;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x7843 = x101 - x7301;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x7844 = x101 - x7302;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x7845 = x101 - x7303;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x7846 = x101 - x7304;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x7847 = x101 - x7305;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x7848 = x101 - x7306;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x7849 = x101 - x7307;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x7850 = x101 - x7308;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x7851 = x101 - x7341;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x7852 = x101 - x7342;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x7853 = x101 - x7343;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x7854 = x101 - x7344;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x7855 = x101 - x7345;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x7856 = x101 - x7346;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x7857 = x101 - x7347;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x7858 = x101 - x7348;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x7859 = x101 - x7349;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x7860 = x101 - x7350;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x7861 = x101 - x7351;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x7862 = x101 - x7352;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x7863 = x101 - x7353;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x7864 = x101 - x7354;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x7865 = x101 - x7355;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x7866 = x101 - x7356;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x7867 = x101 - x7357;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x7868 = x101 - x7358;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x7869 = x101 - x7359;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x7870 = x101 - x7360;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x7871 = x101 - x7361;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x7872 = x101 - x7362;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x7873 = x101 - x7363;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x7874 = x101 - x7364;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x7875 = x101 - x7365;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x7876 = x101 - x7366;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x7877 = x101 - x7367;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x7878 = x101 - x7368;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x7879 = x101 - x7369;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x7880 = x101 - x7370;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x7881 = x101 - x7371;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x7882 = x101 - x7372;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x7883 = x101 - x7405;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x7884 = x101 - x7406;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x7885 = x101 - x7407;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x7886 = x101 - x7408;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x7887 = x101 - x7409;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x7888 = x101 - x7410;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x7889 = x101 - x7411;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x7890 = x101 - x7412;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x7891 = x101 - x7413;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x7892 = x101 - x7414;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x7893 = x101 - x7415;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x7894 = x101 - x7416;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x7895 = x101 - x7417;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x7896 = x101 - x7418;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x7897 = x101 - x7419;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x7898 = x101 - x7420;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x7899 = x101 - x7421;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x7900 = x101 - x7422;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x7901 = x101 - x7423;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x7902 = x101 - x7424;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x7903 = x101 - x7425;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x7904 = x101 - x7426;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x7905 = x101 - x7427;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x7906 = x101 - x7428;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x7907 = x101 - x7429;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x7908 = x101 - x7430;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x7909 = x101 - x7431;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x7910 = x101 - x7432;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x7911 = x101 - x7433;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x7912 = x101 - x7434;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x7913 = x101 - x7435;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x7914 = x101 - x7436;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":142:11)
      auto x7915 = x7241 + x7629;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":142:46)
      auto x7916 = x7243 + x7630;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7917 = x7245 + x7254;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7918 = x7246 + x7255;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7919 = x7247 + x7256;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7920 = x7248 + x7257;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7921 = x7249 + x7258;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7922 = x7250 + x7259;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7923 = x7251 + x7260;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7924 = x7252 + x7261;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7925 = x7253 + x7262;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7926 = x7254 + x7263;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7927 = x7255 + x7264;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7928 = x7256 + x7265;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7929 = x7257 + x7266;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7930 = x7258 + x7267;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7931 = x7259 + x7268;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7932 = x7260 + x7269;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7933 = x7261 + x7270;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7934 = x7262 + x7271;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7935 = x7263 + x7272;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7936 = x7264 + x7273;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7937 = x7265 + x7274;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7938 = x7266 + x7275;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7939 = x7267 + x7276;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7940 = x7268 + x7245;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7941 = x7269 + x7246;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7942 = x7270 + x7247;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7943 = x7271 + x7248;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7944 = x7272 + x7249;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7945 = x7273 + x7250;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7946 = x7274 + x7251;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7947 = x7275 + x7252;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7948 = x7276 + x7253;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7949 = x7277 + x7291;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7950 = x7278 + x7292;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7951 = x7279 + x7293;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7952 = x7280 + x7294;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7953 = x7281 + x7295;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7954 = x7282 + x7296;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7955 = x7283 + x7297;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7956 = x7284 + x7298;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7957 = x7285 + x7299;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7958 = x7286 + x7300;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7959 = x7287 + x7301;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7960 = x7288 + x7302;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7961 = x7289 + x7303;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7962 = x7290 + x7304;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7963 = x7291 + x7305;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7964 = x7292 + x7306;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7965 = x7293 + x7307;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7966 = x7294 + x7308;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7967 = x7295 + x7277;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7968 = x7296 + x7278;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7969 = x7297 + x7279;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7970 = x7298 + x7280;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7971 = x7299 + x7281;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7972 = x7300 + x7282;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7973 = x7301 + x7283;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7974 = x7302 + x7284;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7975 = x7303 + x7285;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7976 = x7304 + x7286;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7977 = x7305 + x7287;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7978 = x7306 + x7288;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7979 = x7307 + x7289;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x7980 = x7308 + x7290;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x7981 = x7245 * x7851;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x7982 = x7246 * x7852;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x7983 = x7247 * x7853;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x7984 = x7248 * x7854;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x7985 = x7249 * x7855;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x7986 = x7250 * x7856;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x7987 = x7251 * x7857;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x7988 = x7252 * x7858;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x7989 = x7253 * x7859;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x7990 = x7254 * x7860;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x7991 = x7255 * x7861;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x7992 = x7256 * x7862;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x7993 = x7257 * x7863;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x7994 = x7258 * x7864;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x7995 = x7259 * x7865;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x7996 = x7260 * x7866;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x7997 = x7261 * x7867;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x7998 = x7262 * x7868;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x7999 = x7263 * x7869;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x8000 = x7264 * x7870;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x8001 = x7265 * x7871;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x8002 = x7266 * x7872;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x8003 = x7267 * x7873;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x8004 = x7268 * x7874;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x8005 = x7269 * x7875;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x8006 = x7270 * x7876;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x8007 = x7271 * x7877;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x8008 = x7272 * x7878;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x8009 = x7273 * x7879;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x8010 = x7274 * x7880;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x8011 = x7275 * x7881;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x8012 = x7276 * x7882;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8013 = x7502 * x7883;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8014 = x7504 * x7884;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8015 = x7506 * x7885;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8016 = x7508 * x7886;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8017 = x7510 * x7887;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8018 = x7512 * x7888;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8019 = x7514 * x7889;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8020 = x7516 * x7890;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8021 = x7518 * x7891;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8022 = x7520 * x7892;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8023 = x7522 * x7893;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8024 = x7524 * x7894;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8025 = x7526 * x7895;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8026 = x7528 * x7896;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8027 = x7530 * x7897;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8028 = x7532 * x7898;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8029 = x7534 * x7899;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8030 = x7536 * x7900;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8031 = x7538 * x7901;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8032 = x7540 * x7902;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8033 = x7542 * x7903;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8034 = x7544 * x7904;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8035 = x7546 * x7905;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8036 = x7548 * x7906;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8037 = x7550 * x7907;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8038 = x7552 * x7908;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8039 = x7554 * x7909;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8040 = x7556 * x7910;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8041 = x7558 * x7911;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8042 = x7560 * x7912;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8043 = x7562 * x7913;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8044 = x7564 * x7914;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8045 = x7787 * x7341;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8046 = x7788 * x7342;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8047 = x7789 * x7343;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8048 = x7790 * x7344;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8049 = x7791 * x7345;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8050 = x7792 * x7346;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8051 = x7793 * x7347;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8052 = x7794 * x7348;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8053 = x7795 * x7349;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8054 = x7796 * x7350;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8055 = x7797 * x7351;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8056 = x7798 * x7352;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8057 = x7799 * x7353;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8058 = x7800 * x7354;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8059 = x7801 * x7355;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8060 = x7802 * x7356;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8061 = x7803 * x7357;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8062 = x7804 * x7358;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8063 = x7805 * x7359;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8064 = x7806 * x7360;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8065 = x7807 * x7361;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8066 = x7808 * x7362;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8067 = x7809 * x7363;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8068 = x7810 * x7364;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8069 = x7811 * x7365;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8070 = x7812 * x7366;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8071 = x7813 * x7367;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8072 = x7814 * x7368;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8073 = x7815 * x7369;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8074 = x7816 * x7370;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8075 = x7817 * x7371;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8076 = x7818 * x7372;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x8077 = x7981 * x7405;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x8078 = x7982 * x7406;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x8079 = x7983 * x7407;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x8080 = x7984 * x7408;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x8081 = x7985 * x7409;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x8082 = x7986 * x7410;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x8083 = x7987 * x7411;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x8084 = x7988 * x7412;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x8085 = x7989 * x7413;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x8086 = x7990 * x7414;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x8087 = x7991 * x7415;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x8088 = x7992 * x7416;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x8089 = x7993 * x7417;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x8090 = x7994 * x7418;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x8091 = x7995 * x7419;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x8092 = x7996 * x7420;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x8093 = x7997 * x7421;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x8094 = x7998 * x7422;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x8095 = x7999 * x7423;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x8096 = x8000 * x7424;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x8097 = x8001 * x7425;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x8098 = x8002 * x7426;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x8099 = x8003 * x7427;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x8100 = x8004 * x7428;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x8101 = x8005 * x7429;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x8102 = x8006 * x7430;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x8103 = x8007 * x7431;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x8104 = x8008 * x7432;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x8105 = x8009 * x7433;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x8106 = x8010 * x7434;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x8107 = x8011 * x7435;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x8108 = x8012 * x7436;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8109 = x8045 * x7405;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8110 = x8046 * x7406;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8111 = x8047 * x7407;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8112 = x8048 * x7408;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8113 = x8049 * x7409;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8114 = x8050 * x7410;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8115 = x8051 * x7411;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8116 = x8052 * x7412;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8117 = x8053 * x7413;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8118 = x8054 * x7414;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8119 = x8055 * x7415;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8120 = x8056 * x7416;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8121 = x8057 * x7417;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8122 = x8058 * x7418;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8123 = x8059 * x7419;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8124 = x8060 * x7420;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8125 = x8061 * x7421;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8126 = x8062 * x7422;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8127 = x8063 * x7423;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8128 = x8064 * x7424;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8129 = x8065 * x7425;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8130 = x8066 * x7426;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8131 = x8067 * x7427;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8132 = x8068 * x7428;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8133 = x8069 * x7429;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8134 = x8070 * x7430;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8135 = x8071 * x7431;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8136 = x8072 * x7432;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8137 = x8073 * x7433;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8138 = x8074 * x7434;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8139 = x8075 * x7435;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x8140 = x8076 * x7436;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x8141 = x7819 * x7373;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x8142 = x7820 * x7374;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x8143 = x7821 * x7375;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x8144 = x7822 * x7376;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x8145 = x7823 * x7377;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x8146 = x7824 * x7378;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x8147 = x7825 * x7379;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x8148 = x7826 * x7380;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x8149 = x7827 * x7381;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x8150 = x7828 * x7382;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x8151 = x7829 * x7383;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x8152 = x7830 * x7384;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x8153 = x7831 * x7385;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x8154 = x7832 * x7386;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x8155 = x7833 * x7387;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x8156 = x7834 * x7388;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x8157 = x7835 * x7389;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x8158 = x7836 * x7390;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x8159 = x7837 * x7391;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x8160 = x7838 * x7392;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x8161 = x7839 * x7393;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x8162 = x7840 * x7394;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x8163 = x7841 * x7395;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x8164 = x7842 * x7396;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x8165 = x7843 * x7397;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x8166 = x7844 * x7398;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x8167 = x7845 * x7399;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x8168 = x7846 * x7400;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x8169 = x7847 * x7401;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x8170 = x7848 * x7402;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x8171 = x7849 * x7403;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x8172 = x7850 * x7404;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8173 = x7917 - x7691;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8174 = x7918 - x7693;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8175 = x7919 - x7695;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8176 = x7920 - x7697;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8177 = x7921 - x7699;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8178 = x7922 - x7701;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8179 = x7923 - x7703;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8180 = x7924 - x7705;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8181 = x7925 - x7707;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8182 = x7926 - x7709;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8183 = x7927 - x7711;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8184 = x7928 - x7713;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8185 = x7929 - x7715;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8186 = x7930 - x7717;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8187 = x7931 - x7719;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8188 = x7932 - x7721;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8189 = x7933 - x7723;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8190 = x7934 - x7725;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8191 = x7935 - x7727;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8192 = x7936 - x7729;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8193 = x7937 - x7731;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8194 = x7938 - x7733;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8195 = x7939 - x7735;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8196 = x7940 - x7737;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8197 = x7941 - x7739;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8198 = x7942 - x7741;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8199 = x7943 - x7743;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8200 = x7944 - x7745;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8201 = x7945 - x7747;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8202 = x7946 - x7749;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8203 = x7947 - x7751;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8204 = x7948 - x7753;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8205 = x7949 - x7755;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8206 = x7950 - x7756;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8207 = x7951 - x7757;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8208 = x7952 - x7758;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8209 = x7953 - x7759;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8210 = x7954 - x7760;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8211 = x7955 - x7761;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8212 = x7956 - x7762;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8213 = x7957 - x7763;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8214 = x7958 - x7764;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8215 = x7959 - x7765;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8216 = x7960 - x7766;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8217 = x7961 - x7767;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8218 = x7962 - x7768;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8219 = x7963 - x7769;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8220 = x7964 - x7770;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8221 = x7965 - x7771;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8222 = x7966 - x7772;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8223 = x7967 - x7773;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8224 = x7968 - x7774;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8225 = x7969 - x7775;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8226 = x7970 - x7776;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8227 = x7971 - x7777;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8228 = x7972 - x7778;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8229 = x7973 - x7779;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8230 = x7974 - x7780;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8231 = x7975 - x7781;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8232 = x7976 - x7782;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8233 = x7977 - x7783;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8234 = x7978 - x7784;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8235 = x7979 - x7785;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8236 = x7980 - x7786;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8237 = x7437 + x7631;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8238 = x7453 + x7646;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8239 = x7469 + x7661;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8240 = x7485 + x7676;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8241 = x7245 + x8184;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8242 = x7246 + x8185;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8243 = x7247 + x8186;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8244 = x7248 + x8187;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8245 = x7249 + x8188;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8246 = x7250 + x8189;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8247 = x7251 + x8190;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8248 = x7252 + x8191;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8249 = x7253 + x8192;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8250 = x7254 + x8193;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8251 = x7255 + x8194;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8252 = x7256 + x8195;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8253 = x7257 + x8196;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8254 = x7258 + x8197;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8255 = x7259 + x8198;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8256 = x7260 + x8199;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8257 = x7261 + x8200;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8258 = x7262 + x8201;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8259 = x7263 + x8202;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8260 = x7264 + x8203;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8261 = x7265 + x8204;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8262 = x7266 + x8173;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8263 = x7267 + x8174;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8264 = x7268 + x8175;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8265 = x7269 + x8176;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8266 = x7270 + x8177;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8267 = x7271 + x8178;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8268 = x7272 + x8179;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8269 = x7273 + x8180;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8270 = x7274 + x8181;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8271 = x7275 + x8182;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8272 = x7276 + x8183;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8273 = x7277 + x8210;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8274 = x7278 + x8211;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8275 = x7279 + x8212;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8276 = x7280 + x8213;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8277 = x7281 + x8214;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8278 = x7282 + x8215;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8279 = x7283 + x8216;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8280 = x7284 + x8217;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8281 = x7285 + x8218;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8282 = x7286 + x8219;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8283 = x7287 + x8220;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8284 = x7288 + x8221;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8285 = x7289 + x8222;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8286 = x7290 + x8223;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8287 = x7291 + x8224;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8288 = x7292 + x8225;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8289 = x7293 + x8226;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8290 = x7294 + x8227;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8291 = x7295 + x8228;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8292 = x7296 + x8229;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8293 = x7297 + x8230;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8294 = x7298 + x8231;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8295 = x7299 + x8232;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8296 = x7300 + x8233;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8297 = x7301 + x8234;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8298 = x7302 + x8235;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8299 = x7303 + x8236;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8300 = x7304 + x8205;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8301 = x7305 + x8206;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8302 = x7306 + x8207;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8303 = x7307 + x8208;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8304 = x7308 + x8209;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x8305 = x7566 + x8141;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x8306 = x7568 + x8142;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x8307 = x7570 + x8143;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x8308 = x7572 + x8144;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x8309 = x7574 + x8145;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x8310 = x7576 + x8146;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x8311 = x7578 + x8147;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x8312 = x7580 + x8148;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x8313 = x7582 + x8149;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x8314 = x7584 + x8150;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x8315 = x7586 + x8151;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x8316 = x7588 + x8152;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x8317 = x7590 + x8153;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x8318 = x7592 + x8154;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x8319 = x7594 + x8155;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x8320 = x7596 + x8156;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x8321 = x7598 + x8157;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x8322 = x7600 + x8158;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x8323 = x7602 + x8159;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x8324 = x7604 + x8160;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x8325 = x7606 + x8161;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x8326 = x7608 + x8162;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x8327 = x7610 + x8163;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x8328 = x7612 + x8164;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x8329 = x7614 + x8165;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x8330 = x7616 + x8166;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x8331 = x7618 + x8167;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x8332 = x7620 + x8168;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x8333 = x7622 + x8169;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x8334 = x7624 + x8170;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x8335 = x7626 + x8171;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x8336 = x7628 + x8172;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8337 = x8013 + x8077;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8338 = x8014 + x8078;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8339 = x8015 + x8079;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8340 = x8016 + x8080;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8341 = x8017 + x8081;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8342 = x8018 + x8082;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8343 = x8019 + x8083;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8344 = x8020 + x8084;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8345 = x8021 + x8085;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8346 = x8022 + x8086;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8347 = x8023 + x8087;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8348 = x8024 + x8088;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8349 = x8025 + x8089;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8350 = x8026 + x8090;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8351 = x8027 + x8091;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8352 = x8028 + x8092;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8353 = x8029 + x8093;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8354 = x8030 + x8094;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8355 = x8031 + x8095;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8356 = x8032 + x8096;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8357 = x8033 + x8097;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8358 = x8034 + x8098;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8359 = x8035 + x8099;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8360 = x8036 + x8100;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8361 = x8037 + x8101;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8362 = x8038 + x8102;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8363 = x8039 + x8103;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8364 = x8040 + x8104;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8365 = x8041 + x8105;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8366 = x8042 + x8106;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8367 = x8043 + x8107;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8368 = x8044 + x8108;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8369 = x8306 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8370 = x8307 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8371 = x8308 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8372 = x8309 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8373 = x8310 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8374 = x8311 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8375 = x8312 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8376 = x8313 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8377 = x8314 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8378 = x8315 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8379 = x8316 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8380 = x8317 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8381 = x8318 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8382 = x8319 * x41;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8383 = x8320 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8384 = x8322 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8385 = x8323 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8386 = x8324 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8387 = x8325 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8388 = x8326 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8389 = x8327 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8390 = x8328 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8391 = x8329 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8392 = x8330 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8393 = x8331 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8394 = x8332 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8395 = x8333 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8396 = x8334 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8397 = x8335 * x41;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8398 = x8336 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8399 = x7501 * x8184;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8400 = x7503 * x8185;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8401 = x7505 * x8186;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8402 = x7507 * x8187;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8403 = x7509 * x8188;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8404 = x7511 * x8189;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8405 = x7513 * x8190;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8406 = x7515 * x8191;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8407 = x7517 * x8192;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8408 = x7519 * x8193;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8409 = x7521 * x8194;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8410 = x7523 * x8195;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8411 = x7525 * x8196;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8412 = x7527 * x8197;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8413 = x7529 * x8198;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8414 = x7531 * x8199;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8415 = x7533 * x8200;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8416 = x7535 * x8201;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8417 = x7537 * x8202;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8418 = x7539 * x8203;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8419 = x7541 * x8204;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8420 = x7543 * x8173;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8421 = x7545 * x8174;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8422 = x7547 * x8175;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8423 = x7549 * x8176;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8424 = x7551 * x8177;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8425 = x7553 * x8178;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8426 = x7555 * x8179;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8427 = x7557 * x8180;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8428 = x7559 * x8181;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8429 = x7561 * x8182;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8430 = x7563 * x8183;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8431 = x7565 * x8210;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8432 = x7567 * x8211;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8433 = x7569 * x8212;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8434 = x7571 * x8213;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8435 = x7573 * x8214;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8436 = x7575 * x8215;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8437 = x7577 * x8216;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8438 = x7579 * x8217;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8439 = x7581 * x8218;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8440 = x7583 * x8219;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8441 = x7585 * x8220;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8442 = x7587 * x8221;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8443 = x7589 * x8222;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8444 = x7591 * x8223;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8445 = x7593 * x8224;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8446 = x7595 * x8225;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8447 = x7597 * x8226;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8448 = x7599 * x8227;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8449 = x7601 * x8228;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8450 = x7603 * x8229;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8451 = x7605 * x8230;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8452 = x7607 * x8231;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8453 = x7609 * x8232;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8454 = x7611 * x8233;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8455 = x7613 * x8234;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8456 = x7615 * x8235;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8457 = x7617 * x8236;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8458 = x7619 * x8205;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8459 = x7621 * x8206;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8460 = x7623 * x8207;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8461 = x7625 * x8208;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x8462 = x7627 * x8209;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8463 = x8241 - x8399;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8464 = x8242 - x8400;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8465 = x8243 - x8401;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8466 = x8244 - x8402;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8467 = x8245 - x8403;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8468 = x8246 - x8404;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8469 = x8247 - x8405;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8470 = x8248 - x8406;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8471 = x8249 - x8407;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8472 = x8250 - x8408;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8473 = x8251 - x8409;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8474 = x8252 - x8410;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8475 = x8253 - x8411;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8476 = x8254 - x8412;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8477 = x8255 - x8413;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8478 = x8256 - x8414;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8479 = x8257 - x8415;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8480 = x8258 - x8416;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8481 = x8259 - x8417;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8482 = x8260 - x8418;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8483 = x8261 - x8419;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8484 = x8262 - x8420;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8485 = x8263 - x8421;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8486 = x8264 - x8422;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8487 = x8265 - x8423;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8488 = x8266 - x8424;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8489 = x8267 - x8425;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8490 = x8268 - x8426;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8491 = x8269 - x8427;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8492 = x8270 - x8428;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8493 = x8271 - x8429;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8494 = x8272 - x8430;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8495 = x8273 - x8431;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8496 = x8274 - x8432;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8497 = x8275 - x8433;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8498 = x8276 - x8434;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8499 = x8277 - x8435;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8500 = x8278 - x8436;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8501 = x8279 - x8437;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8502 = x8280 - x8438;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8503 = x8281 - x8439;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8504 = x8282 - x8440;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8505 = x8283 - x8441;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8506 = x8284 - x8442;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8507 = x8285 - x8443;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8508 = x8286 - x8444;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8509 = x8287 - x8445;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8510 = x8288 - x8446;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8511 = x8289 - x8447;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8512 = x8290 - x8448;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8513 = x8291 - x8449;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8514 = x8292 - x8450;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8515 = x8293 - x8451;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8516 = x8294 - x8452;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8517 = x8295 - x8453;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8518 = x8296 - x8454;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8519 = x8297 - x8455;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8520 = x8298 - x8456;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8521 = x8299 - x8457;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8522 = x8300 - x8458;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8523 = x8301 - x8459;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8524 = x8302 - x8460;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8525 = x8303 - x8461;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x8526 = x8304 - x8462;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8527 = x8237 + x7632;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8528 = x8238 + x7647;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8529 = x8239 + x7662;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8530 = x8240 + x7677;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8531 = x8337 + x8109;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8532 = x8338 + x8110;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8533 = x8339 + x8111;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8534 = x8340 + x8112;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8535 = x8341 + x8113;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8536 = x8342 + x8114;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8537 = x8343 + x8115;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8538 = x8344 + x8116;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8539 = x8345 + x8117;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8540 = x8346 + x8118;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8541 = x8347 + x8119;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8542 = x8348 + x8120;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8543 = x8349 + x8121;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8544 = x8350 + x8122;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8545 = x8351 + x8123;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8546 = x8352 + x8124;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8547 = x8353 + x8125;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8548 = x8354 + x8126;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8549 = x8355 + x8127;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8550 = x8356 + x8128;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8551 = x8357 + x8129;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8552 = x8358 + x8130;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8553 = x8359 + x8131;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8554 = x8360 + x8132;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8555 = x8361 + x8133;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8556 = x8362 + x8134;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8557 = x8363 + x8135;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8558 = x8364 + x8136;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8559 = x8365 + x8137;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8560 = x8366 + x8138;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8561 = x8367 + x8139;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8562 = x8368 + x8140;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8563 = x8463 * x41;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8564 = x8464 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8565 = x8466 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8566 = x8467 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8567 = x8468 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8568 = x8469 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8569 = x8470 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8570 = x8471 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8571 = x8472 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8572 = x8473 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8573 = x8474 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8574 = x8475 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8575 = x8476 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8576 = x8477 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8577 = x8478 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8578 = x8479 * x41;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8579 = x8480 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8580 = x8482 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8581 = x8483 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8582 = x8484 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8583 = x8485 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8584 = x8486 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8585 = x8487 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8586 = x8488 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8587 = x8489 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8588 = x8490 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8589 = x8491 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8590 = x8492 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8591 = x8493 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8592 = x8494 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8593 = x8495 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8594 = x8496 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8595 = x8497 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8596 = x8498 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8597 = x8499 * x41;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8598 = x8500 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8599 = x8502 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8600 = x8503 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8601 = x8504 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8602 = x8505 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8603 = x8506 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8604 = x8507 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8605 = x8508 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8606 = x8509 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8607 = x8510 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8608 = x8511 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8609 = x8512 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8610 = x8513 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8611 = x8514 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8612 = x8515 * x41;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8613 = x8516 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8614 = x8518 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8615 = x8519 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8616 = x8520 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8617 = x8521 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8618 = x8522 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8619 = x8523 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8620 = x8524 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8621 = x8525 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8622 = x8526 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8623 = x8527 + x7633;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8624 = x8528 + x7648;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8625 = x8529 + x7663;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8626 = x8530 + x7678;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8627 = x8531 + x7692;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8628 = x8532 + x7694;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8629 = x8533 + x7696;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8630 = x8534 + x7698;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8631 = x8535 + x7700;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8632 = x8536 + x7702;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8633 = x8537 + x7704;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8634 = x8538 + x7706;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8635 = x8539 + x7708;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8636 = x8540 + x7710;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8637 = x8541 + x7712;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8638 = x8542 + x7714;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8639 = x8543 + x7716;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8640 = x8544 + x7718;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8641 = x8545 + x7720;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8642 = x8546 + x7722;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8643 = x8547 + x7724;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8644 = x8548 + x7726;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8645 = x8549 + x7728;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8646 = x8550 + x7730;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8647 = x8551 + x7732;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8648 = x8552 + x7734;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8649 = x8553 + x7736;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8650 = x8554 + x7738;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8651 = x8555 + x7740;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8652 = x8556 + x7742;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8653 = x8557 + x7744;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8654 = x8558 + x7746;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8655 = x8559 + x7748;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8656 = x8560 + x7750;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8657 = x8561 + x7752;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x8658 = x8562 + x7754;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8659 = x8305 + x8369;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8660 = x8321 + x8384;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8661 = x8628 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8662 = x8629 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8663 = x8630 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8664 = x8631 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8665 = x8632 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8666 = x8633 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8667 = x8634 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8668 = x8635 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8669 = x8636 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8670 = x8637 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8671 = x8638 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8672 = x8639 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8673 = x8640 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8674 = x8641 * x41;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8675 = x8642 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8676 = x8644 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8677 = x8645 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8678 = x8646 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8679 = x8647 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8680 = x8648 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8681 = x8649 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8682 = x8650 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8683 = x8651 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8684 = x8652 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8685 = x8653 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8686 = x8654 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8687 = x8655 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8688 = x8656 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8689 = x8657 * x41;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x8690 = x8658 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8691 = x8623 + x7634;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8692 = x8624 + x7649;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8693 = x8625 + x7664;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8694 = x8626 + x7679;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8695 = x8659 + x8370;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8696 = x8660 + x8385;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8697 = x8465 + x8565;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8698 = x8481 + x8580;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8699 = x8501 + x8599;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8700 = x8517 + x8614;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8701 = x8691 + x7635;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8702 = x8692 + x7650;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8703 = x8693 + x7665;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8704 = x8694 + x7680;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8705 = x8695 + x8371;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8706 = x8696 + x8386;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8707 = x8697 + x8566;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8708 = x8698 + x8581;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8709 = x8699 + x8600;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8710 = x8700 + x8615;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8711 = x8627 + x8661;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8712 = x8643 + x8676;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8713 = x8701 + x7636;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8714 = x8702 + x7651;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8715 = x8703 + x7666;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8716 = x8704 + x7681;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8717 = x8705 + x8372;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8718 = x8706 + x8387;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8719 = x8707 + x8567;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8720 = x8708 + x8582;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8721 = x8709 + x8601;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8722 = x8710 + x8616;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8723 = x8711 + x8662;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8724 = x8712 + x8677;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8725 = x8713 + x7637;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8726 = x8714 + x7652;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8727 = x8715 + x7667;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8728 = x8716 + x7682;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8729 = x8717 + x8373;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8730 = x8718 + x8388;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8731 = x8719 + x8568;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8732 = x8720 + x8583;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8733 = x8721 + x8602;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8734 = x8722 + x8617;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8735 = x8723 + x8663;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8736 = x8724 + x8678;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8737 = x8725 + x7638;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8738 = x8726 + x7653;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8739 = x8727 + x7668;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8740 = x8728 + x7683;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8741 = x8729 + x8374;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8742 = x8730 + x8389;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8743 = x8731 + x8569;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8744 = x8732 + x8584;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8745 = x8733 + x8603;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8746 = x8734 + x8618;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8747 = x8735 + x8664;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8748 = x8736 + x8679;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8749 = x8737 + x7639;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8750 = x8738 + x7654;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8751 = x8739 + x7669;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8752 = x8740 + x7684;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8753 = x8741 + x8375;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8754 = x8742 + x8390;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8755 = x8743 + x8570;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8756 = x8744 + x8585;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8757 = x8745 + x8604;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8758 = x8746 + x8619;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8759 = x8747 + x8665;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8760 = x8748 + x8680;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8761 = x8749 + x7640;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8762 = x8750 + x7655;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8763 = x8751 + x7670;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8764 = x8752 + x7685;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8765 = x8753 + x8376;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8766 = x8754 + x8391;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8767 = x8755 + x8571;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8768 = x8756 + x8586;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8769 = x8757 + x8605;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8770 = x8758 + x8620;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8771 = x8759 + x8666;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8772 = x8760 + x8681;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8773 = x8761 + x7641;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8774 = x8762 + x7656;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8775 = x8763 + x7671;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8776 = x8764 + x7686;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8777 = x8765 + x8377;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8778 = x8766 + x8392;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8779 = x8767 + x8572;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8780 = x8768 + x8587;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8781 = x8769 + x8606;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8782 = x8770 + x8621;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8783 = x8771 + x8667;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8784 = x8772 + x8682;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8785 = x8773 + x7642;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8786 = x8774 + x7657;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8787 = x8775 + x7672;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8788 = x8776 + x7687;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8789 = x8777 + x8378;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8790 = x8778 + x8393;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8791 = x8779 + x8573;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8792 = x8780 + x8588;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8793 = x8781 + x8607;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8794 = x8782 + x8622;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8795 = x8783 + x8668;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8796 = x8784 + x8683;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8797 = x8785 + x7643;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8798 = x8786 + x7658;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8799 = x8787 + x7673;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8800 = x8788 + x7688;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8801 = x8789 + x8379;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8802 = x8790 + x8394;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8803 = x8791 + x8574;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8804 = x8792 + x8589;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8805 = x8793 + x8608;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8806 = x8794 + x8593;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8807 = x8795 + x8669;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8808 = x8796 + x8684;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8809 = x8797 + x7644;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8810 = x8798 + x7659;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8811 = x8799 + x7674;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8812 = x8800 + x7689;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8813 = x8801 + x8380;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8814 = x8802 + x8395;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8815 = x8803 + x8575;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8816 = x8804 + x8590;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8817 = x8805 + x8609;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8818 = x8806 + x8594;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8819 = x8807 + x8670;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8820 = x8808 + x8685;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8821 = x8809 + x7645;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8822 = x8810 + x7660;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8823 = x8811 + x7675;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8824 = x8812 + x7690;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8825 = x8813 + x8381;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8826 = x8814 + x8396;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8827 = x8815 + x8576;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8828 = x8816 + x8591;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8829 = x8817 + x8610;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8830 = x8818 + x8595;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8831 = x8819 + x8671;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8832 = x8820 + x8686;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8833 = x8825 + x8382;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8834 = x8826 + x8397;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8835 = x8827 + x8577;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8836 = x8828 + x8592;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8837 = x8829 + x8611;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8838 = x8830 + x8596;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8839 = x8831 + x8672;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8840 = x8832 + x8687;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8841 = x8833 + x8383;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8842 = x8834 + x8398;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8843 = x8835 + x8578;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8844 = x8836 + x8563;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8845 = x8837 + x8612;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8846 = x8838 + x8597;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8847 = x8839 + x8673;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8848 = x8840 + x8688;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8849 = x8843 + x8579;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8850 = x8844 + x8564;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8851 = x8845 + x8613;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8852 = x8846 + x8598;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8853 = x8847 + x8674;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8854 = x8848 + x8689;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":93:14)
      auto x8855 = x8841 + x8851;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":93:14)
      auto x8856 = x8842 + x8852;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":93:14)
      auto x8857 = x8823 + x8855;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":93:14)
      auto x8858 = x8824 + x8856;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":93:14)
      auto x8859 = x7915 + x8857;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":93:14)
      auto x8860 = x7916 + x8858;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":93:14)
      auto x8861 = x7238 + x8860;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":93:14)
      auto x8862 = x7157 + x8859;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8863 = x8853 + x8675;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x8864 = x8854 + x8690;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":93:14)
      auto x8865 = x8861 + x8822;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":93:14)
      auto x8866 = x8862 + x8821;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":93:14)
      auto x8867 = x8863 + x8849;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":93:14)
      auto x8868 = x8864 + x8850;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":93:14)
      auto x8869 = x8861 + x8868;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":93:14)
      auto x8870 = x8862 + x8867;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":502:5)
      {
        auto& reg = arg2[155 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x8870);
        reg = x8870;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":503:5)
      {
        auto& reg = arg2[157 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x8866);
        reg = x8866;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":502:5)
      {
        auto& reg = arg2[156 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x8869);
        reg = x8869;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":503:5)
      {
        auto& reg = arg2[158 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x8865);
        reg = x8865;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":150:11))
      auto x8871 = arg2[155 * steps + ((cycle - 0) & mask)];
      assert(x8871 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":150:26))
      auto x8872 = arg2[156 * steps + ((cycle - 0) & mask)];
      assert(x8872 != Fp::invalid());
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x8873 = Fp(x8871.asUInt32() & x101.asUInt32());
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[161 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8873);
          reg = x8873;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x8874 = Fp(x8871.asUInt32() & x98.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x8875 = x8874 * x58;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[162 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8875);
          reg = x8875;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x8876 = Fp(x8871.asUInt32() & x83.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x8877 = x8876 * x80;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[163 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8877);
          reg = x8877;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x8878 = Fp(x8871.asUInt32() & x68.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x8879 = x8878 * x59;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[164 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8879);
          reg = x8879;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x8880 = Fp(x8871.asUInt32() & x72.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x8881 = x8880 * x60;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[165 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8881);
          reg = x8881;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x8882 = Fp(x8871.asUInt32() & x62.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x8883 = x8882 * x63;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[166 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8883);
          reg = x8883;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x8884 = Fp(x8871.asUInt32() & x56.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x8885 = x8884 * x57;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[167 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8885);
          reg = x8885;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x8886 = Fp(x8871.asUInt32() & x65.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x8887 = x8886 * x64;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[168 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8887);
          reg = x8887;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x8888 = Fp(x8871.asUInt32() & x95.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x8889 = x8888 * x96;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[169 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8889);
          reg = x8889;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x8890 = Fp(x8871.asUInt32() & x21.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x8891 = x8890 * x22;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[170 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8891);
          reg = x8891;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x8892 = Fp(x8871.asUInt32() & x23.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x8893 = x8892 * x20;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[171 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8893);
          reg = x8893;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x8894 = Fp(x8871.asUInt32() & x18.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x8895 = x8894 * x19;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[172 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8895);
          reg = x8895;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x8896 = Fp(x8871.asUInt32() & x16.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x8897 = x8896 * x17;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[173 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8897);
          reg = x8897;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x8898 = Fp(x8871.asUInt32() & x14.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x8899 = x8898 * x15;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[174 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8899);
          reg = x8899;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x8900 = Fp(x8871.asUInt32() & x41.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x8901 = x8900 * x13;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[175 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8901);
          reg = x8901;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x8902 = Fp(x8871.asUInt32() & x11.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x8903 = x8902 * x12;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[176 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8903);
          reg = x8903;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x8904 = arg2[161 * steps + ((cycle - 0) & mask)];
      assert(x8904 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x8905 = arg2[162 * steps + ((cycle - 0) & mask)];
      assert(x8905 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x8906 = arg2[163 * steps + ((cycle - 0) & mask)];
      assert(x8906 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x8907 = arg2[164 * steps + ((cycle - 0) & mask)];
      assert(x8907 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x8908 = arg2[165 * steps + ((cycle - 0) & mask)];
      assert(x8908 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x8909 = arg2[166 * steps + ((cycle - 0) & mask)];
      assert(x8909 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x8910 = arg2[167 * steps + ((cycle - 0) & mask)];
      assert(x8910 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x8911 = arg2[168 * steps + ((cycle - 0) & mask)];
      assert(x8911 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x8912 = arg2[169 * steps + ((cycle - 0) & mask)];
      assert(x8912 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x8913 = arg2[170 * steps + ((cycle - 0) & mask)];
      assert(x8913 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x8914 = arg2[171 * steps + ((cycle - 0) & mask)];
      assert(x8914 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x8915 = arg2[172 * steps + ((cycle - 0) & mask)];
      assert(x8915 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x8916 = arg2[173 * steps + ((cycle - 0) & mask)];
      assert(x8916 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x8917 = arg2[174 * steps + ((cycle - 0) & mask)];
      assert(x8917 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x8918 = arg2[175 * steps + ((cycle - 0) & mask)];
      assert(x8918 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x8919 = arg2[176 * steps + ((cycle - 0) & mask)];
      assert(x8919 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x8920 = x8905 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x8921 = x8906 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x8922 = x8907 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x8923 = x8908 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x8924 = x8909 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x8925 = x8910 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x8926 = x8911 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x8927 = x8912 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x8928 = x8913 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x8929 = x8914 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x8930 = x8915 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x8931 = x8916 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x8932 = x8917 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x8933 = x8918 * x41;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x8934 = x8919 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x8935 = x8904 + x8920;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x8936 = x8935 + x8921;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x8937 = x8936 + x8922;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x8938 = x8937 + x8923;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x8939 = x8938 + x8924;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x8940 = x8939 + x8925;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x8941 = x8940 + x8926;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x8942 = x8941 + x8927;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x8943 = x8942 + x8928;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x8944 = x8943 + x8929;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x8945 = x8944 + x8930;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x8946 = x8945 + x8931;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x8947 = x8946 + x8932;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x8948 = x8947 + x8933;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x8949 = x8948 + x8934;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":121:16)
      auto x8950 = x8871 - x8949;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":121:15)
      auto x8951 = x8950 * x10;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":132:26)
        auto x8952 = Fp(x8951.asUInt32() & x81.asUInt32());
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[73 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8952);
          reg = x8952;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x8953 = arg2[73 * steps + ((cycle - 0) & mask)];
      assert(x8953 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":133:20)
      auto x8954 = x8951 - x8953;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":133:19)
      auto x8955 = x8954 * x80;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":134:20)
      auto x8956 = x101 - x8955;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":134:7)
      auto x8957 = x8955 * x8956;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":134:7)
      assert(x8957 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/sha.cpp:134");
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":135:32)
      auto x8958 = x8872 + x8951;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x8959 = Fp(x8958.asUInt32() & x101.asUInt32());
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[177 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8959);
          reg = x8959;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x8960 = Fp(x8958.asUInt32() & x98.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x8961 = x8960 * x58;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[178 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8961);
          reg = x8961;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x8962 = Fp(x8958.asUInt32() & x83.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x8963 = x8962 * x80;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[179 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8963);
          reg = x8963;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x8964 = Fp(x8958.asUInt32() & x68.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x8965 = x8964 * x59;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[180 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8965);
          reg = x8965;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x8966 = Fp(x8958.asUInt32() & x72.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x8967 = x8966 * x60;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[181 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8967);
          reg = x8967;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x8968 = Fp(x8958.asUInt32() & x62.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x8969 = x8968 * x63;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[182 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8969);
          reg = x8969;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x8970 = Fp(x8958.asUInt32() & x56.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x8971 = x8970 * x57;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[183 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8971);
          reg = x8971;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x8972 = Fp(x8958.asUInt32() & x65.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x8973 = x8972 * x64;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[184 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8973);
          reg = x8973;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x8974 = Fp(x8958.asUInt32() & x95.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x8975 = x8974 * x96;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[185 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8975);
          reg = x8975;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x8976 = Fp(x8958.asUInt32() & x21.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x8977 = x8976 * x22;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[186 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8977);
          reg = x8977;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x8978 = Fp(x8958.asUInt32() & x23.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x8979 = x8978 * x20;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[187 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8979);
          reg = x8979;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x8980 = Fp(x8958.asUInt32() & x18.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x8981 = x8980 * x19;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[188 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8981);
          reg = x8981;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x8982 = Fp(x8958.asUInt32() & x16.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x8983 = x8982 * x17;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[189 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8983);
          reg = x8983;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x8984 = Fp(x8958.asUInt32() & x14.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x8985 = x8984 * x15;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[190 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8985);
          reg = x8985;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x8986 = Fp(x8958.asUInt32() & x41.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x8987 = x8986 * x13;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[191 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8987);
          reg = x8987;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x8988 = Fp(x8958.asUInt32() & x11.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x8989 = x8988 * x12;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[192 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8989);
          reg = x8989;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x8990 = arg2[177 * steps + ((cycle - 0) & mask)];
      assert(x8990 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x8991 = arg2[178 * steps + ((cycle - 0) & mask)];
      assert(x8991 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x8992 = arg2[179 * steps + ((cycle - 0) & mask)];
      assert(x8992 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x8993 = arg2[180 * steps + ((cycle - 0) & mask)];
      assert(x8993 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x8994 = arg2[181 * steps + ((cycle - 0) & mask)];
      assert(x8994 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x8995 = arg2[182 * steps + ((cycle - 0) & mask)];
      assert(x8995 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x8996 = arg2[183 * steps + ((cycle - 0) & mask)];
      assert(x8996 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x8997 = arg2[184 * steps + ((cycle - 0) & mask)];
      assert(x8997 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x8998 = arg2[185 * steps + ((cycle - 0) & mask)];
      assert(x8998 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x8999 = arg2[186 * steps + ((cycle - 0) & mask)];
      assert(x8999 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9000 = arg2[187 * steps + ((cycle - 0) & mask)];
      assert(x9000 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9001 = arg2[188 * steps + ((cycle - 0) & mask)];
      assert(x9001 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9002 = arg2[189 * steps + ((cycle - 0) & mask)];
      assert(x9002 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9003 = arg2[190 * steps + ((cycle - 0) & mask)];
      assert(x9003 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9004 = arg2[191 * steps + ((cycle - 0) & mask)];
      assert(x9004 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9005 = arg2[192 * steps + ((cycle - 0) & mask)];
      assert(x9005 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x9006 = x8991 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x9007 = x8992 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x9008 = x8993 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x9009 = x8994 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x9010 = x8995 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x9011 = x8996 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x9012 = x8997 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x9013 = x8998 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x9014 = x8999 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x9015 = x9000 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x9016 = x9001 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x9017 = x9002 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x9018 = x9003 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x9019 = x9004 * x41;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x9020 = x9005 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x9021 = x8990 + x9006;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x9022 = x9021 + x9007;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x9023 = x9022 + x9008;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x9024 = x9023 + x9009;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x9025 = x9024 + x9010;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x9026 = x9025 + x9011;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x9027 = x9026 + x9012;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x9028 = x9027 + x9013;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x9029 = x9028 + x9014;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x9030 = x9029 + x9015;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x9031 = x9030 + x9016;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x9032 = x9031 + x9017;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x9033 = x9032 + x9018;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x9034 = x9033 + x9019;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x9035 = x9034 + x9020;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":121:16)
      auto x9036 = x8958 - x9035;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":121:15)
      auto x9037 = x9036 * x10;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":136:27)
        auto x9038 = Fp(x9037.asUInt32() & x81.asUInt32());
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[74 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x9038);
          reg = x9038;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9039 = arg2[74 * steps + ((cycle - 0) & mask)];
      assert(x9039 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":137:21)
      auto x9040 = x9037 - x9039;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":137:20)
      auto x9041 = x9040 * x80;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":138:21)
      auto x9042 = x101 - x9041;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":138:7)
      auto x9043 = x9041 * x9042;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":138:7)
      assert(x9043 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/sha.cpp:138");
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":150:11))
      auto x9044 = arg2[157 * steps + ((cycle - 0) & mask)];
      assert(x9044 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":150:26))
      auto x9045 = arg2[158 * steps + ((cycle - 0) & mask)];
      assert(x9045 != Fp::invalid());
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x9046 = Fp(x9044.asUInt32() & x101.asUInt32());
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[193 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x9046);
          reg = x9046;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x9047 = Fp(x9044.asUInt32() & x98.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x9048 = x9047 * x58;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[194 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x9048);
          reg = x9048;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x9049 = Fp(x9044.asUInt32() & x83.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x9050 = x9049 * x80;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[195 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x9050);
          reg = x9050;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x9051 = Fp(x9044.asUInt32() & x68.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x9052 = x9051 * x59;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[196 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x9052);
          reg = x9052;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x9053 = Fp(x9044.asUInt32() & x72.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x9054 = x9053 * x60;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x9054);
          reg = x9054;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x9055 = Fp(x9044.asUInt32() & x62.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x9056 = x9055 * x63;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x9056);
          reg = x9056;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x9057 = Fp(x9044.asUInt32() & x56.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x9058 = x9057 * x57;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[199 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x9058);
          reg = x9058;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x9059 = Fp(x9044.asUInt32() & x65.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x9060 = x9059 * x64;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[200 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x9060);
          reg = x9060;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x9061 = Fp(x9044.asUInt32() & x95.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x9062 = x9061 * x96;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[201 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x9062);
          reg = x9062;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x9063 = Fp(x9044.asUInt32() & x21.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x9064 = x9063 * x22;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[202 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x9064);
          reg = x9064;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x9065 = Fp(x9044.asUInt32() & x23.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x9066 = x9065 * x20;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[203 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x9066);
          reg = x9066;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x9067 = Fp(x9044.asUInt32() & x18.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x9068 = x9067 * x19;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[204 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x9068);
          reg = x9068;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x9069 = Fp(x9044.asUInt32() & x16.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x9070 = x9069 * x17;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[205 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x9070);
          reg = x9070;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x9071 = Fp(x9044.asUInt32() & x14.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x9072 = x9071 * x15;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[206 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x9072);
          reg = x9072;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x9073 = Fp(x9044.asUInt32() & x41.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x9074 = x9073 * x13;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[207 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x9074);
          reg = x9074;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x9075 = Fp(x9044.asUInt32() & x11.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x9076 = x9075 * x12;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[208 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x9076);
          reg = x9076;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9077 = arg2[193 * steps + ((cycle - 0) & mask)];
      assert(x9077 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9078 = arg2[194 * steps + ((cycle - 0) & mask)];
      assert(x9078 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9079 = arg2[195 * steps + ((cycle - 0) & mask)];
      assert(x9079 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9080 = arg2[196 * steps + ((cycle - 0) & mask)];
      assert(x9080 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9081 = arg2[197 * steps + ((cycle - 0) & mask)];
      assert(x9081 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9082 = arg2[198 * steps + ((cycle - 0) & mask)];
      assert(x9082 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9083 = arg2[199 * steps + ((cycle - 0) & mask)];
      assert(x9083 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9084 = arg2[200 * steps + ((cycle - 0) & mask)];
      assert(x9084 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9085 = arg2[201 * steps + ((cycle - 0) & mask)];
      assert(x9085 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9086 = arg2[202 * steps + ((cycle - 0) & mask)];
      assert(x9086 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9087 = arg2[203 * steps + ((cycle - 0) & mask)];
      assert(x9087 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9088 = arg2[204 * steps + ((cycle - 0) & mask)];
      assert(x9088 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9089 = arg2[205 * steps + ((cycle - 0) & mask)];
      assert(x9089 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9090 = arg2[206 * steps + ((cycle - 0) & mask)];
      assert(x9090 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9091 = arg2[207 * steps + ((cycle - 0) & mask)];
      assert(x9091 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9092 = arg2[208 * steps + ((cycle - 0) & mask)];
      assert(x9092 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x9093 = x9078 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x9094 = x9079 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x9095 = x9080 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x9096 = x9081 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x9097 = x9082 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x9098 = x9083 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x9099 = x9084 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x9100 = x9085 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x9101 = x9086 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x9102 = x9087 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x9103 = x9088 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x9104 = x9089 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x9105 = x9090 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x9106 = x9091 * x41;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x9107 = x9092 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x9108 = x9077 + x9093;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x9109 = x9108 + x9094;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x9110 = x9109 + x9095;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x9111 = x9110 + x9096;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x9112 = x9111 + x9097;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x9113 = x9112 + x9098;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x9114 = x9113 + x9099;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x9115 = x9114 + x9100;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x9116 = x9115 + x9101;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x9117 = x9116 + x9102;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x9118 = x9117 + x9103;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x9119 = x9118 + x9104;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x9120 = x9119 + x9105;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x9121 = x9120 + x9106;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x9122 = x9121 + x9107;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":121:16)
      auto x9123 = x9044 - x9122;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":121:15)
      auto x9124 = x9123 * x10;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":132:26)
        auto x9125 = Fp(x9124.asUInt32() & x81.asUInt32());
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[75 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x9125);
          reg = x9125;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9126 = arg2[75 * steps + ((cycle - 0) & mask)];
      assert(x9126 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":133:20)
      auto x9127 = x9124 - x9126;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":133:19)
      auto x9128 = x9127 * x80;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":134:20)
      auto x9129 = x101 - x9128;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":134:7)
      auto x9130 = x9128 * x9129;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":134:7)
      assert(x9130 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/sha.cpp:134");
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":135:32)
      auto x9131 = x9045 + x9124;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x9132 = Fp(x9131.asUInt32() & x101.asUInt32());
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[209 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x9132);
          reg = x9132;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x9133 = Fp(x9131.asUInt32() & x98.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x9134 = x9133 * x58;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[210 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x9134);
          reg = x9134;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x9135 = Fp(x9131.asUInt32() & x83.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x9136 = x9135 * x80;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[211 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x9136);
          reg = x9136;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x9137 = Fp(x9131.asUInt32() & x68.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x9138 = x9137 * x59;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[212 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x9138);
          reg = x9138;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x9139 = Fp(x9131.asUInt32() & x72.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x9140 = x9139 * x60;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[213 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x9140);
          reg = x9140;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x9141 = Fp(x9131.asUInt32() & x62.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x9142 = x9141 * x63;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[214 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x9142);
          reg = x9142;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x9143 = Fp(x9131.asUInt32() & x56.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x9144 = x9143 * x57;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[215 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x9144);
          reg = x9144;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x9145 = Fp(x9131.asUInt32() & x65.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x9146 = x9145 * x64;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[216 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x9146);
          reg = x9146;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x9147 = Fp(x9131.asUInt32() & x95.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x9148 = x9147 * x96;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[217 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x9148);
          reg = x9148;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x9149 = Fp(x9131.asUInt32() & x21.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x9150 = x9149 * x22;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[218 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x9150);
          reg = x9150;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x9151 = Fp(x9131.asUInt32() & x23.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x9152 = x9151 * x20;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[219 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x9152);
          reg = x9152;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x9153 = Fp(x9131.asUInt32() & x18.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x9154 = x9153 * x19;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[220 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x9154);
          reg = x9154;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x9155 = Fp(x9131.asUInt32() & x16.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x9156 = x9155 * x17;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[221 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x9156);
          reg = x9156;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x9157 = Fp(x9131.asUInt32() & x14.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x9158 = x9157 * x15;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[222 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x9158);
          reg = x9158;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x9159 = Fp(x9131.asUInt32() & x41.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x9160 = x9159 * x13;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[223 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x9160);
          reg = x9160;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
        auto x9161 = Fp(x9131.asUInt32() & x11.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
        auto x9162 = x9161 * x12;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[224 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x9162);
          reg = x9162;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9163 = arg2[209 * steps + ((cycle - 0) & mask)];
      assert(x9163 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9164 = arg2[210 * steps + ((cycle - 0) & mask)];
      assert(x9164 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9165 = arg2[211 * steps + ((cycle - 0) & mask)];
      assert(x9165 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9166 = arg2[212 * steps + ((cycle - 0) & mask)];
      assert(x9166 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9167 = arg2[213 * steps + ((cycle - 0) & mask)];
      assert(x9167 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9168 = arg2[214 * steps + ((cycle - 0) & mask)];
      assert(x9168 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9169 = arg2[215 * steps + ((cycle - 0) & mask)];
      assert(x9169 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9170 = arg2[216 * steps + ((cycle - 0) & mask)];
      assert(x9170 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9171 = arg2[217 * steps + ((cycle - 0) & mask)];
      assert(x9171 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9172 = arg2[218 * steps + ((cycle - 0) & mask)];
      assert(x9172 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9173 = arg2[219 * steps + ((cycle - 0) & mask)];
      assert(x9173 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9174 = arg2[220 * steps + ((cycle - 0) & mask)];
      assert(x9174 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9175 = arg2[221 * steps + ((cycle - 0) & mask)];
      assert(x9175 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9176 = arg2[222 * steps + ((cycle - 0) & mask)];
      assert(x9176 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9177 = arg2[223 * steps + ((cycle - 0) & mask)];
      assert(x9177 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9178 = arg2[224 * steps + ((cycle - 0) & mask)];
      assert(x9178 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x9179 = x9164 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x9180 = x9165 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x9181 = x9166 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x9182 = x9167 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x9183 = x9168 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x9184 = x9169 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x9185 = x9170 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x9186 = x9171 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x9187 = x9172 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x9188 = x9173 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x9189 = x9174 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x9190 = x9175 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x9191 = x9176 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x9192 = x9177 * x41;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
      auto x9193 = x9178 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x9194 = x9163 + x9179;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x9195 = x9194 + x9180;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x9196 = x9195 + x9181;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x9197 = x9196 + x9182;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x9198 = x9197 + x9183;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x9199 = x9198 + x9184;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x9200 = x9199 + x9185;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x9201 = x9200 + x9186;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x9202 = x9201 + x9187;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x9203 = x9202 + x9188;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x9204 = x9203 + x9189;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x9205 = x9204 + x9190;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x9206 = x9205 + x9191;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x9207 = x9206 + x9192;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
      auto x9208 = x9207 + x9193;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":121:16)
      auto x9209 = x9131 - x9208;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":121:15)
      auto x9210 = x9209 * x10;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":136:27)
        auto x9211 = Fp(x9210.asUInt32() & x81.asUInt32());
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[76 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x9211);
          reg = x9211;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9212 = arg2[76 * steps + ((cycle - 0) & mask)];
      assert(x9212 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":137:21)
      auto x9213 = x9210 - x9212;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":137:20)
      auto x9214 = x9213 * x80;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":138:21)
      auto x9215 = x101 - x9214;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":138:7)
      auto x9216 = x9214 * x9215;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":138:7)
      assert(x9216 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/sha.cpp:138");
      // loc("Top/mux(Mux)/body(BodyStep)/user_mode(Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9217 = arg2[99 * steps + ((cycle - 0) & mask)];
      assert(x9217 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":60:7)
      auto x9218 = x9217 * x7004;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":60:7)
      auto x9219 = x9218 * x7005;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":60:7)
      assert(x9219 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:60");
    }
    // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[11](Reg)"("./zirgen/components/mux.h":59:25))
    auto x9220 = arg2[112 * steps + ((cycle - 0) & mask)];
    assert(x9220 != Fp::invalid());
    if (x9220 != 0) {
      // loc("Top/mux(Mux)/body(BodyStep)/user_mode(Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9221 = arg2[99 * steps + ((cycle - 1) & mask)];
      assert(x9221 != Fp::invalid());
      // loc("./zirgen/components/bits.h":37:23)
      {
        auto& reg = arg2[99 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x9221);
        reg = x9221;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/next_major(Reg)"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":351:37))
      auto x9222 = arg2[100 * steps + ((cycle - 1) & mask)];
      assert(x9222 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":351:37)
      auto x9223 = x9222 - x77;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":351:37)
      assert(x9223 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/sha.cpp:351");
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/IsZero/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9224 = arg2[146 * steps + ((cycle - 1) & mask)];
      assert(x9224 != Fp::invalid());
      if (x9224 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[10](Reg)"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":354:72))
        auto x9225 = arg2[111 * steps + ((cycle - 1) & mask)];
        assert(x9225 != Fp::invalid());
        if (x9225 != 0) {
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[151 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":357:7)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x7);
            reg = x7;
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":358:40))
          auto x9226 = arg2[148 * steps + ((cycle - 1) & mask)];
          assert(x9226 != Fp::invalid());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":358:7)
          {
            auto& reg = arg2[148 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x9226);
            reg = x9226;
          }
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":360:22)
        auto x9227 = x101 - x9225;
        if (x9227 != 0) {
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[151 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":362:7)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x81);
            reg = x81;
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":363:44))
          auto x9228 = arg2[148 * steps + ((cycle - 1) & mask)];
          assert(x9228 != Fp::invalid());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":363:44)
          auto x9229 = x9228 - x101;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":363:7)
          {
            auto& reg = arg2[148 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x9229);
            reg = x9229;
          }
        }
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":366:18)
      auto x9230 = x101 - x9224;
      if (x9230 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x9231 = arg2[151 * steps + ((cycle - 1) & mask)];
        assert(x9231 != Fp::invalid());
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[151 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x9231);
          reg = x9231;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":369:40))
        auto x9232 = arg2[145 * steps + ((cycle - 1) & mask)];
        assert(x9232 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":369:40)
        auto x9233 = x9232 - x101;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":369:5)
        {
          auto& reg = arg2[145 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x9233);
          reg = x9233;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":370:38))
        auto x9234 = arg2[148 * steps + ((cycle - 1) & mask)];
        assert(x9234 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":370:5)
        {
          auto& reg = arg2[148 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x9234);
          reg = x9234;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9235 = arg2[145 * steps + ((cycle - 0) & mask)];
      assert(x9235 != Fp::invalid());
      {
        // loc("zirgen/components/iszero.cpp":21:24)
        auto x9236 = (x9235 == 0) ? Fp(1) : Fp(0);
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[146 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x9236);
          reg = x9236;
        }
        // loc("zirgen/components/iszero.cpp":22:21)
        auto x9237 = inv(x9235);
        // loc("zirgen/components/iszero.cpp":22:5)
        {
          auto& reg = arg2[147 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x9237);
          reg = x9237;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/IsZero/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9238 = arg2[146 * steps + ((cycle - 0) & mask)];
      assert(x9238 != Fp::invalid());
      if (x9238 != 0) {
        // loc("zirgen/components/iszero.cpp":26:23)
        assert(x9235 == 0 && "eqz failed at: zirgen/components/iszero.cpp:26");
      }
      // loc("zirgen/components/iszero.cpp":28:19)
      auto x9239 = x101 - x9238;
      if (x9239 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/IsZero/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x9240 = arg2[147 * steps + ((cycle - 0) & mask)];
        assert(x9240 != Fp::invalid());
        // loc("zirgen/components/iszero.cpp":28:26)
        auto x9241 = x9235 * x9240;
        // loc("zirgen/components/iszero.cpp":28:26)
        auto x9242 = x9241 - x101;
        // loc("zirgen/components/iszero.cpp":28:26)
        assert(x9242 == 0 && "eqz failed at: zirgen/components/iszero.cpp:28");
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9243 = arg2[151 * steps + ((cycle - 0) & mask)];
      assert(x9243 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":374:15)
      auto x9244 = x101 - x9243;
      if (x9238 != 0) {
        if (x9244 != 0) {
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[152 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
        }
        if (x9243 != 0) {
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[152 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
        }
      }
      if (x9239 != 0) {
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[152 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":384:38))
      auto x9245 = arg2[142 * steps + ((cycle - 1) & mask)];
      assert(x9245 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":384:3)
      {
        auto& reg = arg2[142 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x9245);
        reg = x9245;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":385:40))
      auto x9246 = arg2[141 * steps + ((cycle - 1) & mask)];
      assert(x9246 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":385:3)
      {
        auto& reg = arg2[141 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x9246);
        reg = x9246;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9247 = arg2[153 * steps + ((cycle - 1) & mask)];
      assert(x9247 != Fp::invalid());
      // loc("./zirgen/components/bits.h":37:23)
      {
        auto& reg = arg2[153 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x9247);
        reg = x9247;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":387:36))
      auto x9248 = arg2[154 * steps + ((cycle - 1) & mask)];
      assert(x9248 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":387:3)
      {
        auto& reg = arg2[154 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x9248);
        reg = x9248;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9249 = arg2[148 * steps + ((cycle - 0) & mask)];
      assert(x9249 != Fp::invalid());
      {
        // loc("zirgen/components/iszero.cpp":21:24)
        auto x9250 = (x9249 == 0) ? Fp(1) : Fp(0);
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[149 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x9250);
          reg = x9250;
        }
        // loc("zirgen/components/iszero.cpp":22:21)
        auto x9251 = inv(x9249);
        // loc("zirgen/components/iszero.cpp":22:5)
        {
          auto& reg = arg2[150 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x9251);
          reg = x9251;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/IsZero/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9252 = arg2[149 * steps + ((cycle - 0) & mask)];
      assert(x9252 != Fp::invalid());
      if (x9252 != 0) {
        // loc("zirgen/components/iszero.cpp":26:23)
        assert(x9249 == 0 && "eqz failed at: zirgen/components/iszero.cpp:26");
      }
      // loc("zirgen/components/iszero.cpp":28:19)
      auto x9253 = x101 - x9252;
      if (x9253 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/IsZero/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x9254 = arg2[150 * steps + ((cycle - 0) & mask)];
        assert(x9254 != Fp::invalid());
        // loc("zirgen/components/iszero.cpp":28:26)
        auto x9255 = x9249 * x9254;
        // loc("zirgen/components/iszero.cpp":28:26)
        auto x9256 = x9255 - x101;
        // loc("zirgen/components/iszero.cpp":28:26)
        assert(x9256 == 0 && "eqz failed at: zirgen/components/iszero.cpp:28");
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":34:23)
      auto x9257 = x980 + x83;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x9258 = Fp(x9257.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[6 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x9258);
          reg = x9258;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x9259 = arg2[6 * steps + ((cycle - 0) & mask)];
      assert(x9259 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x9260 = x9257 - x9259;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x9261 = x9260 * x96;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x9262 = Fp(x9261.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[7 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x9262);
          reg = x9262;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x9263 = arg2[7 * steps + ((cycle - 0) & mask)];
      assert(x9263 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x9264 = x9261 - x9263;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x9265 = x9264 * x96;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x9266 = Fp(x9265.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[8 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x9266);
          reg = x9266;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x9267 = arg2[8 * steps + ((cycle - 0) & mask)];
      assert(x9267 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x9268 = x9265 - x9267;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x9269 = x9268 * x96;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":37:26)
        auto x9270 = Fp(x9269.asUInt32() & x81.asUInt32());
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[70 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x9270);
          reg = x9270;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[0](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9271 = arg2[70 * steps + ((cycle - 0) & mask)];
      assert(x9271 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:18)
      auto x9272 = x9269 - x9271;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:17)
      auto x9273 = x9272 * x80;
      // loc("./zirgen/components/bits.h":78:23)
      {
        auto& reg = arg2[71 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x9273);
        reg = x9273;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9274 = arg2[71 * steps + ((cycle - 0) & mask)];
      assert(x9274 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:23)
      auto x9275 = x101 - x9274;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:15)
      auto x9276 = x9274 * x9275;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:3)
      {
        auto& reg = arg2[98 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x9276);
        reg = x9276;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:17)
      auto x9277 = x98 - x9274;
      // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x9278 = arg2[98 * steps + ((cycle - 0) & mask)];
      assert(x9278 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
      auto x9279 = x9278 * x9277;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
      assert(x9279 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:43");
      extern_args[0] = x77;
      extern_args[1] = x9243;
      extern_args[2] = x9235;
      extern_args[3] = x9249;
      extern_log(ctx, cycle, "SHA_MAIN: major = %u, minor = %u, count = %u, repeat = %u", extern_args, extern_outs);
      if (x9244 != 0) {
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":397:24)
        auto x9280 = x6 - x9235;
        {
          extern_args[0] = x9280;
          extern_args[1] = x101;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x9281 = extern_outs[0];
          auto x9282 = extern_outs[1];
          auto x9283 = extern_outs[2];
          auto x9284 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[128 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x9281);
            reg = x9281;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[129 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x9282);
            reg = x9282;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[130 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x9283);
            reg = x9283;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[131 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x9284);
            reg = x9284;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x9285 = arg2[128 * steps + ((cycle - 0) & mask)];
        assert(x9285 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x9286 = arg2[129 * steps + ((cycle - 0) & mask)];
        assert(x9286 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x9287 = arg2[130 * steps + ((cycle - 0) & mask)];
        assert(x9287 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x9288 = arg2[131 * steps + ((cycle - 0) & mask)];
        assert(x9288 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[125 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x9280);
          reg = x9280;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[126 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x966);
          reg = x966;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[127 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[128 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x9285);
          reg = x9285;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[129 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x9286);
          reg = x9286;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[130 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x9287);
          reg = x9287;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[131 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x9288);
          reg = x9288;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9289 = arg2[79 * steps + ((cycle - 15) & mask)];
      assert(x9289 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9290 = arg2[80 * steps + ((cycle - 15) & mask)];
      assert(x9290 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9291 = arg2[81 * steps + ((cycle - 15) & mask)];
      assert(x9291 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9292 = arg2[12 * steps + ((cycle - 15) & mask)];
      assert(x9292 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9293 = arg2[13 * steps + ((cycle - 15) & mask)];
      assert(x9293 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9294 = arg2[14 * steps + ((cycle - 15) & mask)];
      assert(x9294 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9295 = arg2[15 * steps + ((cycle - 15) & mask)];
      assert(x9295 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9296 = arg2[16 * steps + ((cycle - 15) & mask)];
      assert(x9296 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9297 = arg2[20 * steps + ((cycle - 15) & mask)];
      assert(x9297 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9298 = arg2[21 * steps + ((cycle - 15) & mask)];
      assert(x9298 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9299 = arg2[22 * steps + ((cycle - 15) & mask)];
      assert(x9299 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9300 = arg2[23 * steps + ((cycle - 15) & mask)];
      assert(x9300 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9301 = arg2[24 * steps + ((cycle - 15) & mask)];
      assert(x9301 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9302 = arg2[25 * steps + ((cycle - 15) & mask)];
      assert(x9302 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9303 = arg2[26 * steps + ((cycle - 15) & mask)];
      assert(x9303 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9304 = arg2[27 * steps + ((cycle - 15) & mask)];
      assert(x9304 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9305 = arg2[28 * steps + ((cycle - 15) & mask)];
      assert(x9305 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9306 = arg2[29 * steps + ((cycle - 15) & mask)];
      assert(x9306 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9307 = arg2[30 * steps + ((cycle - 15) & mask)];
      assert(x9307 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9308 = arg2[31 * steps + ((cycle - 15) & mask)];
      assert(x9308 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9309 = arg2[32 * steps + ((cycle - 15) & mask)];
      assert(x9309 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9310 = arg2[33 * steps + ((cycle - 15) & mask)];
      assert(x9310 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9311 = arg2[82 * steps + ((cycle - 15) & mask)];
      assert(x9311 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9312 = arg2[83 * steps + ((cycle - 15) & mask)];
      assert(x9312 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9313 = arg2[84 * steps + ((cycle - 15) & mask)];
      assert(x9313 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9314 = arg2[85 * steps + ((cycle - 15) & mask)];
      assert(x9314 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9315 = arg2[86 * steps + ((cycle - 15) & mask)];
      assert(x9315 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9316 = arg2[87 * steps + ((cycle - 15) & mask)];
      assert(x9316 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9317 = arg2[88 * steps + ((cycle - 15) & mask)];
      assert(x9317 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9318 = arg2[17 * steps + ((cycle - 15) & mask)];
      assert(x9318 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9319 = arg2[18 * steps + ((cycle - 15) & mask)];
      assert(x9319 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9320 = arg2[19 * steps + ((cycle - 15) & mask)];
      assert(x9320 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9321 = arg2[12 * steps + ((cycle - 16) & mask)];
      assert(x9321 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9322 = arg2[13 * steps + ((cycle - 16) & mask)];
      assert(x9322 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9323 = arg2[14 * steps + ((cycle - 16) & mask)];
      assert(x9323 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9324 = arg2[15 * steps + ((cycle - 16) & mask)];
      assert(x9324 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9325 = arg2[16 * steps + ((cycle - 16) & mask)];
      assert(x9325 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9326 = arg2[17 * steps + ((cycle - 16) & mask)];
      assert(x9326 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9327 = arg2[18 * steps + ((cycle - 16) & mask)];
      assert(x9327 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9328 = arg2[19 * steps + ((cycle - 16) & mask)];
      assert(x9328 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9329 = arg2[20 * steps + ((cycle - 16) & mask)];
      assert(x9329 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9330 = arg2[21 * steps + ((cycle - 16) & mask)];
      assert(x9330 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9331 = arg2[22 * steps + ((cycle - 16) & mask)];
      assert(x9331 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9332 = arg2[23 * steps + ((cycle - 16) & mask)];
      assert(x9332 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9333 = arg2[24 * steps + ((cycle - 16) & mask)];
      assert(x9333 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9334 = arg2[25 * steps + ((cycle - 16) & mask)];
      assert(x9334 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9335 = arg2[26 * steps + ((cycle - 16) & mask)];
      assert(x9335 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9336 = arg2[27 * steps + ((cycle - 16) & mask)];
      assert(x9336 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9337 = arg2[28 * steps + ((cycle - 16) & mask)];
      assert(x9337 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9338 = arg2[29 * steps + ((cycle - 16) & mask)];
      assert(x9338 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9339 = arg2[30 * steps + ((cycle - 16) & mask)];
      assert(x9339 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9340 = arg2[31 * steps + ((cycle - 16) & mask)];
      assert(x9340 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9341 = arg2[32 * steps + ((cycle - 16) & mask)];
      assert(x9341 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9342 = arg2[33 * steps + ((cycle - 16) & mask)];
      assert(x9342 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9343 = arg2[79 * steps + ((cycle - 16) & mask)];
      assert(x9343 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9344 = arg2[80 * steps + ((cycle - 16) & mask)];
      assert(x9344 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9345 = arg2[81 * steps + ((cycle - 16) & mask)];
      assert(x9345 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9346 = arg2[82 * steps + ((cycle - 16) & mask)];
      assert(x9346 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9347 = arg2[83 * steps + ((cycle - 16) & mask)];
      assert(x9347 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9348 = arg2[84 * steps + ((cycle - 16) & mask)];
      assert(x9348 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9349 = arg2[85 * steps + ((cycle - 16) & mask)];
      assert(x9349 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9350 = arg2[86 * steps + ((cycle - 16) & mask)];
      assert(x9350 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9351 = arg2[87 * steps + ((cycle - 16) & mask)];
      assert(x9351 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9352 = arg2[88 * steps + ((cycle - 16) & mask)];
      assert(x9352 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9353 = arg2[79 * steps + ((cycle - 2) & mask)];
      assert(x9353 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9354 = arg2[80 * steps + ((cycle - 2) & mask)];
      assert(x9354 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9355 = arg2[81 * steps + ((cycle - 2) & mask)];
      assert(x9355 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9356 = arg2[82 * steps + ((cycle - 2) & mask)];
      assert(x9356 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9357 = arg2[83 * steps + ((cycle - 2) & mask)];
      assert(x9357 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9358 = arg2[84 * steps + ((cycle - 2) & mask)];
      assert(x9358 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9359 = arg2[85 * steps + ((cycle - 2) & mask)];
      assert(x9359 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9360 = arg2[86 * steps + ((cycle - 2) & mask)];
      assert(x9360 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9361 = arg2[87 * steps + ((cycle - 2) & mask)];
      assert(x9361 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9362 = arg2[21 * steps + ((cycle - 2) & mask)];
      assert(x9362 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9363 = arg2[22 * steps + ((cycle - 2) & mask)];
      assert(x9363 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9364 = arg2[23 * steps + ((cycle - 2) & mask)];
      assert(x9364 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9365 = arg2[24 * steps + ((cycle - 2) & mask)];
      assert(x9365 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9366 = arg2[25 * steps + ((cycle - 2) & mask)];
      assert(x9366 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9367 = arg2[26 * steps + ((cycle - 2) & mask)];
      assert(x9367 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9368 = arg2[27 * steps + ((cycle - 2) & mask)];
      assert(x9368 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9369 = arg2[28 * steps + ((cycle - 2) & mask)];
      assert(x9369 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9370 = arg2[29 * steps + ((cycle - 2) & mask)];
      assert(x9370 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9371 = arg2[30 * steps + ((cycle - 2) & mask)];
      assert(x9371 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9372 = arg2[31 * steps + ((cycle - 2) & mask)];
      assert(x9372 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9373 = arg2[32 * steps + ((cycle - 2) & mask)];
      assert(x9373 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9374 = arg2[33 * steps + ((cycle - 2) & mask)];
      assert(x9374 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9375 = arg2[88 * steps + ((cycle - 2) & mask)];
      assert(x9375 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9376 = arg2[12 * steps + ((cycle - 2) & mask)];
      assert(x9376 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9377 = arg2[13 * steps + ((cycle - 2) & mask)];
      assert(x9377 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9378 = arg2[14 * steps + ((cycle - 2) & mask)];
      assert(x9378 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9379 = arg2[15 * steps + ((cycle - 2) & mask)];
      assert(x9379 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9380 = arg2[16 * steps + ((cycle - 2) & mask)];
      assert(x9380 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9381 = arg2[17 * steps + ((cycle - 2) & mask)];
      assert(x9381 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9382 = arg2[18 * steps + ((cycle - 2) & mask)];
      assert(x9382 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9383 = arg2[19 * steps + ((cycle - 2) & mask)];
      assert(x9383 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9384 = arg2[20 * steps + ((cycle - 2) & mask)];
      assert(x9384 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9385 = arg2[12 * steps + ((cycle - 7) & mask)];
      assert(x9385 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9386 = arg2[13 * steps + ((cycle - 7) & mask)];
      assert(x9386 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9387 = arg2[14 * steps + ((cycle - 7) & mask)];
      assert(x9387 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9388 = arg2[15 * steps + ((cycle - 7) & mask)];
      assert(x9388 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9389 = arg2[16 * steps + ((cycle - 7) & mask)];
      assert(x9389 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9390 = arg2[17 * steps + ((cycle - 7) & mask)];
      assert(x9390 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9391 = arg2[18 * steps + ((cycle - 7) & mask)];
      assert(x9391 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9392 = arg2[19 * steps + ((cycle - 7) & mask)];
      assert(x9392 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9393 = arg2[20 * steps + ((cycle - 7) & mask)];
      assert(x9393 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9394 = arg2[21 * steps + ((cycle - 7) & mask)];
      assert(x9394 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9395 = arg2[22 * steps + ((cycle - 7) & mask)];
      assert(x9395 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9396 = arg2[23 * steps + ((cycle - 7) & mask)];
      assert(x9396 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9397 = arg2[24 * steps + ((cycle - 7) & mask)];
      assert(x9397 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9398 = arg2[25 * steps + ((cycle - 7) & mask)];
      assert(x9398 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9399 = arg2[26 * steps + ((cycle - 7) & mask)];
      assert(x9399 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9400 = arg2[27 * steps + ((cycle - 7) & mask)];
      assert(x9400 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9401 = arg2[28 * steps + ((cycle - 7) & mask)];
      assert(x9401 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9402 = arg2[29 * steps + ((cycle - 7) & mask)];
      assert(x9402 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9403 = arg2[30 * steps + ((cycle - 7) & mask)];
      assert(x9403 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9404 = arg2[31 * steps + ((cycle - 7) & mask)];
      assert(x9404 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9405 = arg2[32 * steps + ((cycle - 7) & mask)];
      assert(x9405 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9406 = arg2[33 * steps + ((cycle - 7) & mask)];
      assert(x9406 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9407 = arg2[79 * steps + ((cycle - 7) & mask)];
      assert(x9407 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9408 = arg2[80 * steps + ((cycle - 7) & mask)];
      assert(x9408 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9409 = arg2[81 * steps + ((cycle - 7) & mask)];
      assert(x9409 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9410 = arg2[82 * steps + ((cycle - 7) & mask)];
      assert(x9410 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9411 = arg2[83 * steps + ((cycle - 7) & mask)];
      assert(x9411 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9412 = arg2[84 * steps + ((cycle - 7) & mask)];
      assert(x9412 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9413 = arg2[85 * steps + ((cycle - 7) & mask)];
      assert(x9413 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9414 = arg2[86 * steps + ((cycle - 7) & mask)];
      assert(x9414 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9415 = arg2[87 * steps + ((cycle - 7) & mask)];
      assert(x9415 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x9416 = arg2[88 * steps + ((cycle - 7) & mask)];
      assert(x9416 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9417 = x9289 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9418 = x9290 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9419 = x9291 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9420 = x9292 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9421 = x9293 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9422 = x9294 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9423 = x9295 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9424 = x9296 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9425 = x9297 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9426 = x9298 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9427 = x9299 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9428 = x9300 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9429 = x9301 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9430 = x9302 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9431 = x9303 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9432 = x9304 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9433 = x9305 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9434 = x9306 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9435 = x9307 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9436 = x9308 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9437 = x9309 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9438 = x9310 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9439 = x9311 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9440 = x9312 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9441 = x9313 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9442 = x9314 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9443 = x9315 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9444 = x9316 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9445 = x9317 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9446 = x9318 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9447 = x9319 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9448 = x9320 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9449 = x9353 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9450 = x9354 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9451 = x9355 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9452 = x9356 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9453 = x9357 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9454 = x9358 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9455 = x9359 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9456 = x9360 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9457 = x9361 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9458 = x9362 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9459 = x9363 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9460 = x9364 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9461 = x9365 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9462 = x9366 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9463 = x9367 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9464 = x9368 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9465 = x9369 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9466 = x9370 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9467 = x9371 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9468 = x9372 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9469 = x9373 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9470 = x9374 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9471 = x9375 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9472 = x9376 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9473 = x9377 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9474 = x9378 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9475 = x9379 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9476 = x9380 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9477 = x9381 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9478 = x9382 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9479 = x9383 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9480 = x9384 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9481 = x9321 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9482 = x9322 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9483 = x9323 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9484 = x9324 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9485 = x9325 * x41;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9486 = x9326 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9487 = x9328 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9488 = x9329 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9489 = x9330 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9490 = x9331 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9491 = x9332 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9492 = x9333 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9493 = x9334 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9494 = x9335 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9495 = x9336 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9496 = x9337 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9497 = x9338 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9498 = x9339 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9499 = x9340 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9500 = x9341 * x41;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9501 = x9342 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9502 = x9344 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9503 = x9345 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9504 = x9346 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9505 = x9347 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9506 = x9348 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9507 = x9349 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9508 = x9350 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9509 = x9351 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9510 = x9352 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9511 = x9385 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9512 = x9386 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9513 = x9387 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9514 = x9388 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9515 = x9389 * x41;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9516 = x9390 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9517 = x9392 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9518 = x9393 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9519 = x9394 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9520 = x9395 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9521 = x9396 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9522 = x9397 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9523 = x9398 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9524 = x9399 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9525 = x9400 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9526 = x9401 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9527 = x9402 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9528 = x9403 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9529 = x9404 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9530 = x9405 * x41;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9531 = x9406 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9532 = x9408 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9533 = x9409 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9534 = x9410 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9535 = x9411 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9536 = x9412 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9537 = x9413 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9538 = x9414 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9539 = x9415 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9540 = x9416 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9541 = x9417 * x9320;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9542 = x9418 * x9297;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9543 = x9419 * x9298;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9544 = x9420 * x9306;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9545 = x9421 * x9307;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9546 = x9422 * x9308;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9547 = x9423 * x9309;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9548 = x9424 * x9310;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9549 = x9425 * x9311;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9550 = x9426 * x9312;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9551 = x9427 * x9313;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9552 = x9428 * x9314;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9553 = x9429 * x9315;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9554 = x9430 * x9316;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9555 = x9431 * x9317;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9556 = x9432 * x9292;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9557 = x9433 * x9293;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9558 = x9434 * x9294;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9559 = x9435 * x9295;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9560 = x9436 * x9296;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9561 = x9437 * x9318;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9562 = x9438 * x9319;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9563 = x9439 * x9299;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9564 = x9440 * x9300;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9565 = x9440 * x9318;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9566 = x9441 * x9301;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9567 = x9441 * x9319;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9568 = x9442 * x9302;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9569 = x9442 * x9320;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9570 = x9443 * x9303;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9571 = x9444 * x9304;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9572 = x9445 * x9305;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9573 = x9449 * x9366;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9574 = x9450 * x9367;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9575 = x9451 * x9368;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9576 = x9452 * x9369;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9577 = x9453 * x9370;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9578 = x9454 * x9371;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9579 = x9455 * x9372;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9580 = x9456 * x9373;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9581 = x9456 * x9375;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9582 = x9457 * x9374;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9583 = x9457 * x9376;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9584 = x9458 * x9376;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9585 = x9459 * x9377;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9586 = x9460 * x9378;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9587 = x9461 * x9379;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9588 = x9462 * x9380;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9589 = x9463 * x9381;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9590 = x9464 * x9382;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9591 = x9465 * x9383;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9592 = x9466 * x9384;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9593 = x9467 * x9362;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9594 = x9468 * x9363;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9595 = x9469 * x9364;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9596 = x9470 * x9365;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9597 = x9471 * x9377;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9598 = x9472 * x9378;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9599 = x9473 * x9379;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9600 = x9474 * x9380;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9601 = x9475 * x9381;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9602 = x9476 * x9382;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9603 = x9477 * x9383;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9604 = x9478 * x9384;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9605 = x9289 + x9320;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9606 = x9290 + x9297;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9607 = x9291 + x9298;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9608 = x9292 + x9306;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9609 = x9293 + x9307;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9610 = x9294 + x9308;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9611 = x9295 + x9309;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9612 = x9296 + x9310;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9613 = x9297 + x9311;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9614 = x9298 + x9312;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9615 = x9299 + x9313;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9616 = x9300 + x9314;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9617 = x9301 + x9315;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9618 = x9302 + x9316;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9619 = x9303 + x9317;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9620 = x9304 + x9292;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9621 = x9305 + x9293;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9622 = x9306 + x9294;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9623 = x9307 + x9295;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9624 = x9308 + x9296;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9625 = x9309 + x9318;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9626 = x9310 + x9319;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9627 = x9311 + x9299;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9628 = x9312 + x9300;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9629 = x9312 + x9318;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9630 = x9313 + x9301;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9631 = x9313 + x9319;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9632 = x9314 + x9302;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9633 = x9314 + x9320;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9634 = x9315 + x9303;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9635 = x9316 + x9304;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9636 = x9317 + x9305;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9637 = x9353 + x9366;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9638 = x9354 + x9367;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9639 = x9355 + x9368;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9640 = x9356 + x9369;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9641 = x9357 + x9370;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9642 = x9358 + x9371;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9643 = x9359 + x9372;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9644 = x9360 + x9373;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9645 = x9360 + x9375;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9646 = x9361 + x9374;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9647 = x9361 + x9376;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9648 = x9362 + x9376;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9649 = x9363 + x9377;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9650 = x9364 + x9378;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9651 = x9365 + x9379;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9652 = x9366 + x9380;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9653 = x9367 + x9381;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9654 = x9368 + x9382;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9655 = x9369 + x9383;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9656 = x9370 + x9384;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9657 = x9371 + x9362;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9658 = x9372 + x9363;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9659 = x9373 + x9364;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9660 = x9374 + x9365;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9661 = x9375 + x9377;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9662 = x9376 + x9378;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9663 = x9377 + x9379;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9664 = x9378 + x9380;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9665 = x9379 + x9381;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9666 = x9380 + x9382;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9667 = x9381 + x9383;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9668 = x9382 + x9384;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9669 = x9629 - x9565;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9670 = x9631 - x9567;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9671 = x9633 - x9569;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9672 = x9645 - x9581;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9673 = x9647 - x9583;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9674 = x9661 - x9597;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9675 = x9662 - x9598;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9676 = x9663 - x9599;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9677 = x9664 - x9600;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9678 = x9665 - x9601;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9679 = x9666 - x9602;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9680 = x9667 - x9603;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9681 = x9668 - x9604;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9682 = x9605 - x9541;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9683 = x9606 - x9542;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9684 = x9607 - x9543;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9685 = x9608 - x9544;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9686 = x9609 - x9545;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9687 = x9610 - x9546;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9688 = x9611 - x9547;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9689 = x9612 - x9548;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9690 = x9613 - x9549;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9691 = x9614 - x9550;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9692 = x9615 - x9551;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9693 = x9616 - x9552;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9694 = x9617 - x9553;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9695 = x9618 - x9554;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9696 = x9619 - x9555;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9697 = x9620 - x9556;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9698 = x9621 - x9557;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9699 = x9622 - x9558;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9700 = x9623 - x9559;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9701 = x9624 - x9560;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9702 = x9625 - x9561;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9703 = x9626 - x9562;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9704 = x9627 - x9563;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9705 = x9628 - x9564;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9706 = x9630 - x9566;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9707 = x9632 - x9568;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9708 = x9634 - x9570;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9709 = x9635 - x9571;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9710 = x9636 - x9572;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9711 = x9637 - x9573;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9712 = x9638 - x9574;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9713 = x9639 - x9575;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9714 = x9640 - x9576;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9715 = x9641 - x9577;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9716 = x9642 - x9578;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9717 = x9643 - x9579;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9718 = x9644 - x9580;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9719 = x9646 - x9582;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9720 = x9648 - x9584;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9721 = x9649 - x9585;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9722 = x9650 - x9586;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9723 = x9651 - x9587;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9724 = x9652 - x9588;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9725 = x9653 - x9589;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9726 = x9654 - x9590;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9727 = x9655 - x9591;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9728 = x9656 - x9592;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9729 = x9657 - x9593;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9730 = x9658 - x9594;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9731 = x9659 - x9595;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9732 = x9660 - x9596;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x9733 = x9327 + x9487;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x9734 = x9343 + x9502;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x9735 = x9391 + x9517;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x9736 = x9407 + x9532;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9737 = x9289 + x9686;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9738 = x9290 + x9687;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9739 = x9291 + x9688;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9740 = x9292 + x9693;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9741 = x9293 + x9694;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9742 = x9294 + x9695;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9743 = x9295 + x9696;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9744 = x9296 + x9697;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9745 = x9297 + x9701;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9746 = x9298 + x9702;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9747 = x9299 + x9703;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9748 = x9300 + x9682;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9749 = x9301 + x9683;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9750 = x9302 + x9684;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9751 = x9303 + x9704;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9752 = x9304 + x9705;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9753 = x9305 + x9706;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9754 = x9306 + x9707;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9755 = x9307 + x9708;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9756 = x9308 + x9709;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9757 = x9309 + x9710;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9758 = x9310 + x9685;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9759 = x9311 + x9689;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9760 = x9315 + x9690;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9761 = x9316 + x9691;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9762 = x9317 + x9692;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9763 = x9318 + x9698;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9764 = x9319 + x9699;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9765 = x9320 + x9700;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9766 = x9353 + x9713;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9767 = x9354 + x9714;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9768 = x9355 + x9715;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9769 = x9356 + x9716;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9770 = x9357 + x9717;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9771 = x9358 + x9718;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9772 = x9359 + x9719;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9773 = x9362 + x9722;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9774 = x9363 + x9723;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9775 = x9364 + x9724;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9776 = x9365 + x9725;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9777 = x9366 + x9726;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9778 = x9367 + x9727;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9779 = x9368 + x9728;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9780 = x9369 + x9729;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9781 = x9370 + x9730;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9782 = x9371 + x9731;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9783 = x9372 + x9732;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9784 = x9373 + x9711;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9785 = x9374 + x9712;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9786 = x9383 + x9720;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9787 = x9384 + x9721;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9788 = x9417 * x9686;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9789 = x9418 * x9687;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9790 = x9419 * x9688;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9791 = x9420 * x9693;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9792 = x9421 * x9694;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9793 = x9422 * x9695;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9794 = x9423 * x9696;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9795 = x9424 * x9697;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9796 = x9425 * x9701;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9797 = x9426 * x9702;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9798 = x9427 * x9703;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9799 = x9428 * x9682;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9800 = x9429 * x9683;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9801 = x9430 * x9684;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9802 = x9431 * x9704;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9803 = x9432 * x9705;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9804 = x9433 * x9706;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9805 = x9434 * x9707;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9806 = x9435 * x9708;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9807 = x9436 * x9709;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9808 = x9437 * x9710;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9809 = x9438 * x9685;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9810 = x9439 * x9689;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9811 = x9443 * x9690;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9812 = x9444 * x9691;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9813 = x9445 * x9692;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9814 = x9446 * x9698;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9815 = x9447 * x9699;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9816 = x9448 * x9700;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9817 = x9449 * x9713;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9818 = x9450 * x9714;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9819 = x9451 * x9715;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9820 = x9452 * x9716;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9821 = x9453 * x9717;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9822 = x9454 * x9718;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9823 = x9455 * x9719;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9824 = x9458 * x9722;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9825 = x9459 * x9723;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9826 = x9460 * x9724;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9827 = x9461 * x9725;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9828 = x9462 * x9726;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9829 = x9463 * x9727;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9830 = x9464 * x9728;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9831 = x9465 * x9729;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9832 = x9466 * x9730;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9833 = x9467 * x9731;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9834 = x9468 * x9732;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9835 = x9469 * x9711;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9836 = x9470 * x9712;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9837 = x9479 * x9720;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x9838 = x9480 * x9721;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9839 = x9669 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9840 = x9670 * x41;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9841 = x9671 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9842 = x9672 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9843 = x9673 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9844 = x9674 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9845 = x9675 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9846 = x9676 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9847 = x9677 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9848 = x9678 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9849 = x9679 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9850 = x9680 * x41;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9851 = x9681 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9852 = x9737 - x9788;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9853 = x9738 - x9789;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9854 = x9739 - x9790;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9855 = x9740 - x9791;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9856 = x9741 - x9792;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9857 = x9742 - x9793;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9858 = x9743 - x9794;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9859 = x9744 - x9795;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9860 = x9745 - x9796;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9861 = x9746 - x9797;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9862 = x9747 - x9798;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9863 = x9748 - x9799;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9864 = x9749 - x9800;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9865 = x9750 - x9801;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9866 = x9751 - x9802;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9867 = x9752 - x9803;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9868 = x9753 - x9804;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9869 = x9754 - x9805;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9870 = x9755 - x9806;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9871 = x9756 - x9807;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9872 = x9757 - x9808;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9873 = x9758 - x9809;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9874 = x9759 - x9810;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9875 = x9760 - x9811;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9876 = x9761 - x9812;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9877 = x9762 - x9813;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9878 = x9763 - x9814;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9879 = x9764 - x9815;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9880 = x9765 - x9816;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9881 = x9766 - x9817;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9882 = x9767 - x9818;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9883 = x9768 - x9819;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9884 = x9769 - x9820;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9885 = x9770 - x9821;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9886 = x9771 - x9822;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9887 = x9772 - x9823;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9888 = x9773 - x9824;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9889 = x9774 - x9825;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9890 = x9775 - x9826;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9891 = x9776 - x9827;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9892 = x9777 - x9828;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9893 = x9778 - x9829;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9894 = x9779 - x9830;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9895 = x9780 - x9831;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9896 = x9781 - x9832;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9897 = x9782 - x9833;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9898 = x9783 - x9834;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9899 = x9784 - x9835;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9900 = x9785 - x9836;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9901 = x9786 - x9837;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x9902 = x9787 - x9838;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x9903 = x9733 + x9488;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x9904 = x9734 + x9503;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x9905 = x9735 + x9518;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x9906 = x9736 + x9533;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9907 = x9852 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9908 = x9853 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9909 = x9854 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9910 = x9855 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9911 = x9856 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9912 = x9857 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9913 = x9858 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9914 = x9859 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9915 = x9860 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9916 = x9861 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9917 = x9862 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9918 = x9863 * x41;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9919 = x9864 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9920 = x9866 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9921 = x9867 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9922 = x9868 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9923 = x9869 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9924 = x9870 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9925 = x9871 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9926 = x9872 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9927 = x9873 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9928 = x9874 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9929 = x9876 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9930 = x9877 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9931 = x9878 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9932 = x9879 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9933 = x9880 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9934 = x9881 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9935 = x9883 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9936 = x9884 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9937 = x9885 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9938 = x9886 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9939 = x9887 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9940 = x9888 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9941 = x9889 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9942 = x9890 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9943 = x9891 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9944 = x9892 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9945 = x9893 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9946 = x9894 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9947 = x9895 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9948 = x9896 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9949 = x9897 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9950 = x9898 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9951 = x9899 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9952 = x9900 * x41;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x9953 = x9902 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x9954 = x9903 + x9489;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x9955 = x9904 + x9504;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x9956 = x9905 + x9519;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x9957 = x9906 + x9534;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x9958 = x9954 + x9490;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x9959 = x9955 + x9505;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x9960 = x9956 + x9520;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x9961 = x9957 + x9535;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x9962 = x9865 + x9920;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x9963 = x9875 + x9929;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x9964 = x9882 + x9935;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x9965 = x9901 + x9953;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x9966 = x9958 + x9491;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x9967 = x9959 + x9506;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x9968 = x9960 + x9521;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x9969 = x9961 + x9536;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x9970 = x9962 + x9921;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x9971 = x9963 + x9930;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x9972 = x9964 + x9936;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x9973 = x9965 + x9940;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x9974 = x9966 + x9492;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x9975 = x9967 + x9507;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x9976 = x9968 + x9522;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x9977 = x9969 + x9537;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x9978 = x9970 + x9922;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x9979 = x9971 + x9910;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x9980 = x9972 + x9937;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x9981 = x9973 + x9941;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x9982 = x9974 + x9493;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x9983 = x9975 + x9508;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x9984 = x9976 + x9523;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x9985 = x9977 + x9538;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x9986 = x9978 + x9923;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x9987 = x9979 + x9911;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x9988 = x9980 + x9938;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x9989 = x9981 + x9942;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x9990 = x9982 + x9494;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x9991 = x9983 + x9509;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x9992 = x9984 + x9524;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x9993 = x9985 + x9539;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x9994 = x9986 + x9924;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x9995 = x9987 + x9912;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x9996 = x9988 + x9939;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x9997 = x9989 + x9943;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x9998 = x9990 + x9495;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x9999 = x9991 + x9510;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10000 = x9992 + x9525;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10001 = x9993 + x9540;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10002 = x9994 + x9925;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10003 = x9995 + x9913;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10004 = x9996 + x9842;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10005 = x9997 + x9944;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10006 = x9998 + x9496;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10007 = x9999 + x9481;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10008 = x10000 + x9526;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10009 = x10001 + x9511;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10010 = x10002 + x9926;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10011 = x10003 + x9914;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10012 = x10004 + x9843;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10013 = x10005 + x9945;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10014 = x10006 + x9497;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10015 = x10007 + x9482;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10016 = x10008 + x9527;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10017 = x10009 + x9512;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10018 = x10010 + x9927;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10019 = x10011 + x9931;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10020 = x10012 + x9844;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10021 = x10013 + x9946;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10022 = x10014 + x9498;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10023 = x10015 + x9483;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10024 = x10016 + x9528;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10025 = x10017 + x9513;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10026 = x10018 + x9907;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10027 = x10019 + x9932;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10028 = x10020 + x9845;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10029 = x10021 + x9947;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10030 = x10022 + x9499;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10031 = x10023 + x9484;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10032 = x10024 + x9529;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10033 = x10025 + x9514;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10034 = x10026 + x9908;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10035 = x10027 + x9933;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10036 = x10028 + x9846;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10037 = x10029 + x9948;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10038 = x10030 + x9500;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10039 = x10031 + x9485;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10040 = x10032 + x9530;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10041 = x10033 + x9515;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10042 = x10034 + x9909;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10043 = x10035 + x9915;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10044 = x10036 + x9847;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10045 = x10037 + x9949;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10046 = x10038 + x9501;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10047 = x10039 + x9486;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10048 = x10040 + x9531;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10049 = x10041 + x9516;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10050 = x10042 + x9928;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10051 = x10043 + x9916;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10052 = x10044 + x9848;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10053 = x10045 + x9950;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10054 = x10050 + x9839;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10055 = x10051 + x9917;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10056 = x10052 + x9849;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10057 = x10053 + x9951;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10058 = x10054 + x9840;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10059 = x10055 + x9918;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10060 = x10056 + x9850;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10061 = x10057 + x9952;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10062 = x10060 + x9851;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10063 = x10061 + x9934;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10064 = x10058 + x9841;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x10065 = x10059 + x9919;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":93:14)
      auto x10066 = x10048 + x10062;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":93:14)
      auto x10067 = x10049 + x10063;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":93:14)
      auto x10068 = x10064 + x10066;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":93:14)
      auto x10069 = x10065 + x10067;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":93:14)
      auto x10070 = x10046 + x10068;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":93:14)
      auto x10071 = x10047 + x10069;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":473:5)
      {
        auto& reg = arg2[159 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x10071);
        reg = x10071;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":473:5)
      {
        auto& reg = arg2[160 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x10070);
        reg = x10070;
      }
      if (x9243 != 0) {
        {
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[79 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[80 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[81 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[82 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[83 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[84 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[85 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[86 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[87 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[88 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[12 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[13 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[14 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[15 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[16 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[17 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10072 = arg2[12 * steps + ((cycle - 0) & mask)];
        assert(x10072 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10073 = arg2[13 * steps + ((cycle - 0) & mask)];
        assert(x10073 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10074 = arg2[14 * steps + ((cycle - 0) & mask)];
        assert(x10074 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10075 = arg2[15 * steps + ((cycle - 0) & mask)];
        assert(x10075 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10076 = arg2[16 * steps + ((cycle - 0) & mask)];
        assert(x10076 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10077 = arg2[17 * steps + ((cycle - 0) & mask)];
        assert(x10077 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10078 = arg2[79 * steps + ((cycle - 0) & mask)];
        assert(x10078 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10079 = arg2[80 * steps + ((cycle - 0) & mask)];
        assert(x10079 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10080 = arg2[81 * steps + ((cycle - 0) & mask)];
        assert(x10080 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10081 = arg2[82 * steps + ((cycle - 0) & mask)];
        assert(x10081 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10082 = arg2[83 * steps + ((cycle - 0) & mask)];
        assert(x10082 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10083 = arg2[84 * steps + ((cycle - 0) & mask)];
        assert(x10083 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10084 = arg2[85 * steps + ((cycle - 0) & mask)];
        assert(x10084 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10085 = arg2[86 * steps + ((cycle - 0) & mask)];
        assert(x10085 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10086 = arg2[87 * steps + ((cycle - 0) & mask)];
        assert(x10086 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10087 = arg2[88 * steps + ((cycle - 0) & mask)];
        assert(x10087 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10088 = x10072 * x23;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10089 = x10073 * x18;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10090 = x10074 * x16;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10091 = x10075 * x14;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10092 = x10076 * x41;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10093 = x10077 * x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10094 = x10079 * x98;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10095 = x10080 * x83;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10096 = x10081 * x68;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10097 = x10082 * x72;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10098 = x10083 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10099 = x10084 * x56;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10100 = x10085 * x65;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10101 = x10086 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10102 = x10087 * x21;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10103 = x10078 + x10094;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10104 = x10103 + x10095;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10105 = x10104 + x10096;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10106 = x10105 + x10097;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10107 = x10106 + x10098;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10108 = x10107 + x10099;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10109 = x10108 + x10100;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10110 = x10109 + x10101;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10111 = x10110 + x10102;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10112 = x10111 + x10088;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10113 = x10112 + x10089;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10114 = x10113 + x10090;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10115 = x10114 + x10091;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10116 = x10115 + x10092;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10117 = x10116 + x10093;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":121:16)
        auto x10118 = x100 - x10117;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":121:15)
        auto x10119 = x10118 * x10;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[77 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10119);
          reg = x10119;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10120 = arg2[77 * steps + ((cycle - 0) & mask)];
        assert(x10120 != Fp::invalid());
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10121 = Fp(x10120.asUInt32() & x101.asUInt32());
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[18 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10121);
            reg = x10121;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10122 = Fp(x10120.asUInt32() & x98.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10123 = x10122 * x58;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[19 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10123);
            reg = x10123;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10124 = Fp(x10120.asUInt32() & x83.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10125 = x10124 * x80;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[20 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10125);
            reg = x10125;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10126 = Fp(x10120.asUInt32() & x68.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10127 = x10126 * x59;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[21 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10127);
            reg = x10127;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10128 = Fp(x10120.asUInt32() & x72.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10129 = x10128 * x60;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[22 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10129);
            reg = x10129;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10130 = Fp(x10120.asUInt32() & x62.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10131 = x10130 * x63;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[23 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10131);
            reg = x10131;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10132 = Fp(x10120.asUInt32() & x56.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10133 = x10132 * x57;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[24 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10133);
            reg = x10133;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10134 = Fp(x10120.asUInt32() & x65.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10135 = x10134 * x64;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[25 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10135);
            reg = x10135;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10136 = Fp(x10120.asUInt32() & x95.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10137 = x10136 * x96;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[26 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10137);
            reg = x10137;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10138 = Fp(x10120.asUInt32() & x21.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10139 = x10138 * x22;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[27 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10139);
            reg = x10139;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10140 = Fp(x10120.asUInt32() & x23.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10141 = x10140 * x20;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[28 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10141);
            reg = x10141;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10142 = Fp(x10120.asUInt32() & x18.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10143 = x10142 * x19;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[29 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10143);
            reg = x10143;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10144 = Fp(x10120.asUInt32() & x16.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10145 = x10144 * x17;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[30 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10145);
            reg = x10145;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10146 = Fp(x10120.asUInt32() & x14.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10147 = x10146 * x15;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[31 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10147);
            reg = x10147;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10148 = Fp(x10120.asUInt32() & x41.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10149 = x10148 * x13;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[32 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10149);
            reg = x10149;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10150 = Fp(x10120.asUInt32() & x11.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10151 = x10150 * x12;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[33 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10151);
            reg = x10151;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10152 = arg2[18 * steps + ((cycle - 0) & mask)];
        assert(x10152 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10153 = arg2[19 * steps + ((cycle - 0) & mask)];
        assert(x10153 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10154 = arg2[20 * steps + ((cycle - 0) & mask)];
        assert(x10154 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10155 = arg2[21 * steps + ((cycle - 0) & mask)];
        assert(x10155 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10156 = arg2[22 * steps + ((cycle - 0) & mask)];
        assert(x10156 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10157 = arg2[23 * steps + ((cycle - 0) & mask)];
        assert(x10157 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10158 = arg2[24 * steps + ((cycle - 0) & mask)];
        assert(x10158 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10159 = arg2[25 * steps + ((cycle - 0) & mask)];
        assert(x10159 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10160 = arg2[26 * steps + ((cycle - 0) & mask)];
        assert(x10160 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10161 = arg2[27 * steps + ((cycle - 0) & mask)];
        assert(x10161 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10162 = arg2[28 * steps + ((cycle - 0) & mask)];
        assert(x10162 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10163 = arg2[29 * steps + ((cycle - 0) & mask)];
        assert(x10163 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10164 = arg2[30 * steps + ((cycle - 0) & mask)];
        assert(x10164 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10165 = arg2[31 * steps + ((cycle - 0) & mask)];
        assert(x10165 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10166 = arg2[32 * steps + ((cycle - 0) & mask)];
        assert(x10166 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10167 = arg2[33 * steps + ((cycle - 0) & mask)];
        assert(x10167 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10168 = x10153 * x98;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10169 = x10154 * x83;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10170 = x10155 * x68;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10171 = x10156 * x72;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10172 = x10157 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10173 = x10158 * x56;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10174 = x10159 * x65;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10175 = x10160 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10176 = x10161 * x21;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10177 = x10162 * x23;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10178 = x10163 * x18;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10179 = x10164 * x16;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10180 = x10165 * x14;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10181 = x10166 * x41;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10182 = x10167 * x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10183 = x10152 + x10168;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10184 = x10183 + x10169;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10185 = x10184 + x10170;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10186 = x10185 + x10171;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10187 = x10186 + x10172;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10188 = x10187 + x10173;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10189 = x10188 + x10174;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10190 = x10189 + x10175;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10191 = x10190 + x10176;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10192 = x10191 + x10177;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10193 = x10192 + x10178;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10194 = x10193 + x10179;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10195 = x10194 + x10180;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10196 = x10195 + x10181;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10197 = x10196 + x10182;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":121:16)
        auto x10198 = x10120 - x10197;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":121:15)
        auto x10199 = x10198 * x10;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[78 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10199);
          reg = x10199;
        }
      }
      if (x9244 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":150:11))
        auto x10200 = arg2[159 * steps + ((cycle - 0) & mask)];
        assert(x10200 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":150:26))
        auto x10201 = arg2[160 * steps + ((cycle - 0) & mask)];
        assert(x10201 != Fp::invalid());
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10202 = Fp(x10200.asUInt32() & x101.asUInt32());
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[79 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10202);
            reg = x10202;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10203 = Fp(x10200.asUInt32() & x98.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10204 = x10203 * x58;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[80 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10204);
            reg = x10204;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10205 = Fp(x10200.asUInt32() & x83.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10206 = x10205 * x80;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[81 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10206);
            reg = x10206;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10207 = Fp(x10200.asUInt32() & x68.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10208 = x10207 * x59;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[82 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10208);
            reg = x10208;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10209 = Fp(x10200.asUInt32() & x72.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10210 = x10209 * x60;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[83 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10210);
            reg = x10210;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10211 = Fp(x10200.asUInt32() & x62.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10212 = x10211 * x63;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[84 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10212);
            reg = x10212;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10213 = Fp(x10200.asUInt32() & x56.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10214 = x10213 * x57;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[85 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10214);
            reg = x10214;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10215 = Fp(x10200.asUInt32() & x65.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10216 = x10215 * x64;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[86 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10216);
            reg = x10216;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10217 = Fp(x10200.asUInt32() & x95.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10218 = x10217 * x96;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[87 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10218);
            reg = x10218;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10219 = Fp(x10200.asUInt32() & x21.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10220 = x10219 * x22;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[88 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10220);
            reg = x10220;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10221 = Fp(x10200.asUInt32() & x23.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10222 = x10221 * x20;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[12 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10222);
            reg = x10222;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10223 = Fp(x10200.asUInt32() & x18.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10224 = x10223 * x19;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[13 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10224);
            reg = x10224;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10225 = Fp(x10200.asUInt32() & x16.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10226 = x10225 * x17;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[14 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10226);
            reg = x10226;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10227 = Fp(x10200.asUInt32() & x14.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10228 = x10227 * x15;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[15 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10228);
            reg = x10228;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10229 = Fp(x10200.asUInt32() & x41.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10230 = x10229 * x13;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[16 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10230);
            reg = x10230;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10231 = Fp(x10200.asUInt32() & x11.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10232 = x10231 * x12;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[17 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10232);
            reg = x10232;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10233 = arg2[12 * steps + ((cycle - 0) & mask)];
        assert(x10233 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10234 = arg2[13 * steps + ((cycle - 0) & mask)];
        assert(x10234 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10235 = arg2[14 * steps + ((cycle - 0) & mask)];
        assert(x10235 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10236 = arg2[15 * steps + ((cycle - 0) & mask)];
        assert(x10236 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10237 = arg2[16 * steps + ((cycle - 0) & mask)];
        assert(x10237 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10238 = arg2[17 * steps + ((cycle - 0) & mask)];
        assert(x10238 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10239 = arg2[79 * steps + ((cycle - 0) & mask)];
        assert(x10239 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10240 = arg2[80 * steps + ((cycle - 0) & mask)];
        assert(x10240 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10241 = arg2[81 * steps + ((cycle - 0) & mask)];
        assert(x10241 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10242 = arg2[82 * steps + ((cycle - 0) & mask)];
        assert(x10242 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10243 = arg2[83 * steps + ((cycle - 0) & mask)];
        assert(x10243 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10244 = arg2[84 * steps + ((cycle - 0) & mask)];
        assert(x10244 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10245 = arg2[85 * steps + ((cycle - 0) & mask)];
        assert(x10245 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10246 = arg2[86 * steps + ((cycle - 0) & mask)];
        assert(x10246 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10247 = arg2[87 * steps + ((cycle - 0) & mask)];
        assert(x10247 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10248 = arg2[88 * steps + ((cycle - 0) & mask)];
        assert(x10248 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10249 = x10233 * x23;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10250 = x10234 * x18;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10251 = x10235 * x16;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10252 = x10236 * x14;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10253 = x10237 * x41;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10254 = x10238 * x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10255 = x10240 * x98;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10256 = x10241 * x83;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10257 = x10242 * x68;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10258 = x10243 * x72;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10259 = x10244 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10260 = x10245 * x56;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10261 = x10246 * x65;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10262 = x10247 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10263 = x10248 * x21;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10264 = x10239 + x10255;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10265 = x10264 + x10256;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10266 = x10265 + x10257;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10267 = x10266 + x10258;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10268 = x10267 + x10259;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10269 = x10268 + x10260;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10270 = x10269 + x10261;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10271 = x10270 + x10262;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10272 = x10271 + x10263;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10273 = x10272 + x10249;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10274 = x10273 + x10250;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10275 = x10274 + x10251;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10276 = x10275 + x10252;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10277 = x10276 + x10253;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10278 = x10277 + x10254;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":121:16)
        auto x10279 = x10200 - x10278;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":121:15)
        auto x10280 = x10279 * x10;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[77 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10280);
          reg = x10280;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10281 = arg2[77 * steps + ((cycle - 0) & mask)];
        assert(x10281 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":127:30)
        auto x10282 = x10201 + x10281;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10283 = Fp(x10282.asUInt32() & x101.asUInt32());
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[18 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10283);
            reg = x10283;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10284 = Fp(x10282.asUInt32() & x98.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10285 = x10284 * x58;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[19 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10285);
            reg = x10285;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10286 = Fp(x10282.asUInt32() & x83.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10287 = x10286 * x80;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[20 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10287);
            reg = x10287;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10288 = Fp(x10282.asUInt32() & x68.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10289 = x10288 * x59;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[21 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10289);
            reg = x10289;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10290 = Fp(x10282.asUInt32() & x72.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10291 = x10290 * x60;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[22 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10291);
            reg = x10291;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10292 = Fp(x10282.asUInt32() & x62.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10293 = x10292 * x63;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[23 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10293);
            reg = x10293;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10294 = Fp(x10282.asUInt32() & x56.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10295 = x10294 * x57;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[24 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10295);
            reg = x10295;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10296 = Fp(x10282.asUInt32() & x65.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10297 = x10296 * x64;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[25 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10297);
            reg = x10297;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10298 = Fp(x10282.asUInt32() & x95.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10299 = x10298 * x96;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[26 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10299);
            reg = x10299;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10300 = Fp(x10282.asUInt32() & x21.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10301 = x10300 * x22;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[27 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10301);
            reg = x10301;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10302 = Fp(x10282.asUInt32() & x23.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10303 = x10302 * x20;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[28 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10303);
            reg = x10303;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10304 = Fp(x10282.asUInt32() & x18.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10305 = x10304 * x19;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[29 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10305);
            reg = x10305;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10306 = Fp(x10282.asUInt32() & x16.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10307 = x10306 * x17;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[30 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10307);
            reg = x10307;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10308 = Fp(x10282.asUInt32() & x14.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10309 = x10308 * x15;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[31 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10309);
            reg = x10309;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10310 = Fp(x10282.asUInt32() & x41.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10311 = x10310 * x13;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[32 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10311);
            reg = x10311;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10312 = Fp(x10282.asUInt32() & x11.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10313 = x10312 * x12;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[33 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10313);
            reg = x10313;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10314 = arg2[18 * steps + ((cycle - 0) & mask)];
        assert(x10314 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10315 = arg2[19 * steps + ((cycle - 0) & mask)];
        assert(x10315 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10316 = arg2[20 * steps + ((cycle - 0) & mask)];
        assert(x10316 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10317 = arg2[21 * steps + ((cycle - 0) & mask)];
        assert(x10317 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10318 = arg2[22 * steps + ((cycle - 0) & mask)];
        assert(x10318 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10319 = arg2[23 * steps + ((cycle - 0) & mask)];
        assert(x10319 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10320 = arg2[24 * steps + ((cycle - 0) & mask)];
        assert(x10320 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10321 = arg2[25 * steps + ((cycle - 0) & mask)];
        assert(x10321 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10322 = arg2[26 * steps + ((cycle - 0) & mask)];
        assert(x10322 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10323 = arg2[27 * steps + ((cycle - 0) & mask)];
        assert(x10323 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10324 = arg2[28 * steps + ((cycle - 0) & mask)];
        assert(x10324 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10325 = arg2[29 * steps + ((cycle - 0) & mask)];
        assert(x10325 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10326 = arg2[30 * steps + ((cycle - 0) & mask)];
        assert(x10326 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10327 = arg2[31 * steps + ((cycle - 0) & mask)];
        assert(x10327 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10328 = arg2[32 * steps + ((cycle - 0) & mask)];
        assert(x10328 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10329 = arg2[33 * steps + ((cycle - 0) & mask)];
        assert(x10329 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10330 = x10315 * x98;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10331 = x10316 * x83;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10332 = x10317 * x68;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10333 = x10318 * x72;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10334 = x10319 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10335 = x10320 * x56;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10336 = x10321 * x65;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10337 = x10322 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10338 = x10323 * x21;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10339 = x10324 * x23;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10340 = x10325 * x18;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10341 = x10326 * x16;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10342 = x10327 * x14;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10343 = x10328 * x41;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10344 = x10329 * x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10345 = x10314 + x10330;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10346 = x10345 + x10331;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10347 = x10346 + x10332;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10348 = x10347 + x10333;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10349 = x10348 + x10334;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10350 = x10349 + x10335;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10351 = x10350 + x10336;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10352 = x10351 + x10337;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10353 = x10352 + x10338;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10354 = x10353 + x10339;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10355 = x10354 + x10340;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10356 = x10355 + x10341;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10357 = x10356 + x10342;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10358 = x10357 + x10343;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10359 = x10358 + x10344;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":121:16)
        auto x10360 = x10282 - x10359;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":121:15)
        auto x10361 = x10360 * x10;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[78 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10361);
          reg = x10361;
        }
      }
      if (x9243 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10362 = arg2[161 * steps + ((cycle - 4) & mask)];
        assert(x10362 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10363 = arg2[162 * steps + ((cycle - 4) & mask)];
        assert(x10363 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10364 = arg2[163 * steps + ((cycle - 4) & mask)];
        assert(x10364 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10365 = arg2[164 * steps + ((cycle - 4) & mask)];
        assert(x10365 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10366 = arg2[165 * steps + ((cycle - 4) & mask)];
        assert(x10366 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10367 = arg2[166 * steps + ((cycle - 4) & mask)];
        assert(x10367 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10368 = arg2[167 * steps + ((cycle - 4) & mask)];
        assert(x10368 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10369 = arg2[168 * steps + ((cycle - 4) & mask)];
        assert(x10369 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10370 = arg2[169 * steps + ((cycle - 4) & mask)];
        assert(x10370 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10371 = arg2[170 * steps + ((cycle - 4) & mask)];
        assert(x10371 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10372 = arg2[171 * steps + ((cycle - 4) & mask)];
        assert(x10372 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10373 = arg2[172 * steps + ((cycle - 4) & mask)];
        assert(x10373 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10374 = arg2[173 * steps + ((cycle - 4) & mask)];
        assert(x10374 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10375 = arg2[174 * steps + ((cycle - 4) & mask)];
        assert(x10375 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10376 = arg2[175 * steps + ((cycle - 4) & mask)];
        assert(x10376 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10377 = arg2[176 * steps + ((cycle - 4) & mask)];
        assert(x10377 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10378 = arg2[177 * steps + ((cycle - 4) & mask)];
        assert(x10378 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10379 = arg2[178 * steps + ((cycle - 4) & mask)];
        assert(x10379 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10380 = arg2[179 * steps + ((cycle - 4) & mask)];
        assert(x10380 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10381 = arg2[180 * steps + ((cycle - 4) & mask)];
        assert(x10381 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10382 = arg2[181 * steps + ((cycle - 4) & mask)];
        assert(x10382 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10383 = arg2[182 * steps + ((cycle - 4) & mask)];
        assert(x10383 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10384 = arg2[183 * steps + ((cycle - 4) & mask)];
        assert(x10384 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10385 = arg2[184 * steps + ((cycle - 4) & mask)];
        assert(x10385 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10386 = arg2[185 * steps + ((cycle - 4) & mask)];
        assert(x10386 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10387 = arg2[186 * steps + ((cycle - 4) & mask)];
        assert(x10387 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10388 = arg2[187 * steps + ((cycle - 4) & mask)];
        assert(x10388 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10389 = arg2[188 * steps + ((cycle - 4) & mask)];
        assert(x10389 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10390 = arg2[189 * steps + ((cycle - 4) & mask)];
        assert(x10390 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10391 = arg2[190 * steps + ((cycle - 4) & mask)];
        assert(x10391 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10392 = arg2[191 * steps + ((cycle - 4) & mask)];
        assert(x10392 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10393 = arg2[192 * steps + ((cycle - 4) & mask)];
        assert(x10393 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10394 = arg2[161 * steps + ((cycle - 68) & mask)];
        assert(x10394 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10395 = arg2[162 * steps + ((cycle - 68) & mask)];
        assert(x10395 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10396 = arg2[163 * steps + ((cycle - 68) & mask)];
        assert(x10396 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10397 = arg2[164 * steps + ((cycle - 68) & mask)];
        assert(x10397 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10398 = arg2[165 * steps + ((cycle - 68) & mask)];
        assert(x10398 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10399 = arg2[166 * steps + ((cycle - 68) & mask)];
        assert(x10399 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10400 = arg2[167 * steps + ((cycle - 68) & mask)];
        assert(x10400 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10401 = arg2[168 * steps + ((cycle - 68) & mask)];
        assert(x10401 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10402 = arg2[169 * steps + ((cycle - 68) & mask)];
        assert(x10402 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10403 = arg2[170 * steps + ((cycle - 68) & mask)];
        assert(x10403 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10404 = arg2[171 * steps + ((cycle - 68) & mask)];
        assert(x10404 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10405 = arg2[172 * steps + ((cycle - 68) & mask)];
        assert(x10405 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10406 = arg2[173 * steps + ((cycle - 68) & mask)];
        assert(x10406 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10407 = arg2[174 * steps + ((cycle - 68) & mask)];
        assert(x10407 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10408 = arg2[175 * steps + ((cycle - 68) & mask)];
        assert(x10408 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10409 = arg2[176 * steps + ((cycle - 68) & mask)];
        assert(x10409 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10410 = arg2[177 * steps + ((cycle - 68) & mask)];
        assert(x10410 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10411 = arg2[178 * steps + ((cycle - 68) & mask)];
        assert(x10411 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10412 = arg2[179 * steps + ((cycle - 68) & mask)];
        assert(x10412 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10413 = arg2[180 * steps + ((cycle - 68) & mask)];
        assert(x10413 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10414 = arg2[181 * steps + ((cycle - 68) & mask)];
        assert(x10414 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10415 = arg2[182 * steps + ((cycle - 68) & mask)];
        assert(x10415 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10416 = arg2[183 * steps + ((cycle - 68) & mask)];
        assert(x10416 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10417 = arg2[184 * steps + ((cycle - 68) & mask)];
        assert(x10417 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10418 = arg2[185 * steps + ((cycle - 68) & mask)];
        assert(x10418 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10419 = arg2[186 * steps + ((cycle - 68) & mask)];
        assert(x10419 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10420 = arg2[187 * steps + ((cycle - 68) & mask)];
        assert(x10420 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10421 = arg2[188 * steps + ((cycle - 68) & mask)];
        assert(x10421 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10422 = arg2[189 * steps + ((cycle - 68) & mask)];
        assert(x10422 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10423 = arg2[190 * steps + ((cycle - 68) & mask)];
        assert(x10423 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10424 = arg2[191 * steps + ((cycle - 68) & mask)];
        assert(x10424 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10425 = arg2[192 * steps + ((cycle - 68) & mask)];
        assert(x10425 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10426 = x10363 * x98;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10427 = x10364 * x83;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10428 = x10365 * x68;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10429 = x10366 * x72;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10430 = x10367 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10431 = x10368 * x56;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10432 = x10369 * x65;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10433 = x10370 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10434 = x10371 * x21;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10435 = x10372 * x23;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10436 = x10373 * x18;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10437 = x10374 * x16;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10438 = x10375 * x14;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10439 = x10376 * x41;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10440 = x10377 * x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10441 = x10379 * x98;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10442 = x10380 * x83;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10443 = x10381 * x68;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10444 = x10382 * x72;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10445 = x10383 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10446 = x10384 * x56;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10447 = x10385 * x65;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10448 = x10386 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10449 = x10387 * x21;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10450 = x10388 * x23;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10451 = x10389 * x18;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10452 = x10390 * x16;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10453 = x10391 * x14;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10454 = x10392 * x41;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10455 = x10393 * x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10456 = x10395 * x98;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10457 = x10396 * x83;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10458 = x10397 * x68;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10459 = x10398 * x72;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10460 = x10399 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10461 = x10400 * x56;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10462 = x10401 * x65;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10463 = x10402 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10464 = x10403 * x21;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10465 = x10404 * x23;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10466 = x10405 * x18;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10467 = x10406 * x16;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10468 = x10407 * x14;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10469 = x10408 * x41;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10470 = x10409 * x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10471 = x10411 * x98;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10472 = x10412 * x83;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10473 = x10413 * x68;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10474 = x10414 * x72;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10475 = x10415 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10476 = x10416 * x56;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10477 = x10417 * x65;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10478 = x10418 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10479 = x10419 * x21;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10480 = x10420 * x23;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10481 = x10421 * x18;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10482 = x10422 * x16;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10483 = x10423 * x14;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10484 = x10424 * x41;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10485 = x10425 * x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10486 = x10362 + x10426;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10487 = x10378 + x10441;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10488 = x10394 + x10456;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10489 = x10410 + x10471;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10490 = x10486 + x10427;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10491 = x10487 + x10442;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10492 = x10488 + x10457;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10493 = x10489 + x10472;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10494 = x10490 + x10428;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10495 = x10491 + x10443;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10496 = x10492 + x10458;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10497 = x10493 + x10473;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10498 = x10494 + x10429;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10499 = x10495 + x10444;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10500 = x10496 + x10459;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10501 = x10497 + x10474;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10502 = x10498 + x10430;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10503 = x10499 + x10445;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10504 = x10500 + x10460;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10505 = x10501 + x10475;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10506 = x10502 + x10431;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10507 = x10503 + x10446;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10508 = x10504 + x10461;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10509 = x10505 + x10476;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10510 = x10506 + x10432;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10511 = x10507 + x10447;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10512 = x10508 + x10462;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10513 = x10509 + x10477;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10514 = x10510 + x10433;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10515 = x10511 + x10448;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10516 = x10512 + x10463;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10517 = x10513 + x10478;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10518 = x10514 + x10434;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10519 = x10515 + x10449;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10520 = x10516 + x10464;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10521 = x10517 + x10479;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10522 = x10518 + x10435;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10523 = x10519 + x10450;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10524 = x10520 + x10465;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10525 = x10521 + x10480;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10526 = x10522 + x10436;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10527 = x10523 + x10451;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10528 = x10524 + x10466;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10529 = x10525 + x10481;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10530 = x10526 + x10437;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10531 = x10527 + x10452;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10532 = x10528 + x10467;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10533 = x10529 + x10482;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10534 = x10530 + x10438;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10535 = x10531 + x10453;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10536 = x10532 + x10468;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10537 = x10533 + x10483;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10538 = x10534 + x10439;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10539 = x10535 + x10454;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10540 = x10536 + x10469;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10541 = x10537 + x10484;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10542 = x10540 + x10470;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10543 = x10541 + x10485;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10544 = x10538 + x10440;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10545 = x10539 + x10455;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":93:14)
        auto x10546 = x10544 + x10542;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":93:14)
        auto x10547 = x10545 + x10543;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10548 = Fp(x10546.asUInt32() & x101.asUInt32());
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[161 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10548);
            reg = x10548;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10549 = Fp(x10546.asUInt32() & x98.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10550 = x10549 * x58;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[162 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10550);
            reg = x10550;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10551 = Fp(x10546.asUInt32() & x83.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10552 = x10551 * x80;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[163 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10552);
            reg = x10552;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10553 = Fp(x10546.asUInt32() & x68.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10554 = x10553 * x59;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[164 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10554);
            reg = x10554;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10555 = Fp(x10546.asUInt32() & x72.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10556 = x10555 * x60;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[165 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10556);
            reg = x10556;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10557 = Fp(x10546.asUInt32() & x62.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10558 = x10557 * x63;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[166 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10558);
            reg = x10558;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10559 = Fp(x10546.asUInt32() & x56.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10560 = x10559 * x57;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[167 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10560);
            reg = x10560;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10561 = Fp(x10546.asUInt32() & x65.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10562 = x10561 * x64;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[168 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10562);
            reg = x10562;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10563 = Fp(x10546.asUInt32() & x95.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10564 = x10563 * x96;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[169 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10564);
            reg = x10564;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10565 = Fp(x10546.asUInt32() & x21.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10566 = x10565 * x22;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[170 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10566);
            reg = x10566;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10567 = Fp(x10546.asUInt32() & x23.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10568 = x10567 * x20;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[171 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10568);
            reg = x10568;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10569 = Fp(x10546.asUInt32() & x18.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10570 = x10569 * x19;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[172 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10570);
            reg = x10570;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10571 = Fp(x10546.asUInt32() & x16.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10572 = x10571 * x17;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[173 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10572);
            reg = x10572;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10573 = Fp(x10546.asUInt32() & x14.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10574 = x10573 * x15;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[174 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10574);
            reg = x10574;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10575 = Fp(x10546.asUInt32() & x41.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10576 = x10575 * x13;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[175 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10576);
            reg = x10576;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10577 = Fp(x10546.asUInt32() & x11.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10578 = x10577 * x12;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[176 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10578);
            reg = x10578;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10579 = arg2[161 * steps + ((cycle - 0) & mask)];
        assert(x10579 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10580 = arg2[162 * steps + ((cycle - 0) & mask)];
        assert(x10580 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10581 = arg2[163 * steps + ((cycle - 0) & mask)];
        assert(x10581 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10582 = arg2[164 * steps + ((cycle - 0) & mask)];
        assert(x10582 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10583 = arg2[165 * steps + ((cycle - 0) & mask)];
        assert(x10583 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10584 = arg2[166 * steps + ((cycle - 0) & mask)];
        assert(x10584 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10585 = arg2[167 * steps + ((cycle - 0) & mask)];
        assert(x10585 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10586 = arg2[168 * steps + ((cycle - 0) & mask)];
        assert(x10586 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10587 = arg2[169 * steps + ((cycle - 0) & mask)];
        assert(x10587 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10588 = arg2[170 * steps + ((cycle - 0) & mask)];
        assert(x10588 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10589 = arg2[171 * steps + ((cycle - 0) & mask)];
        assert(x10589 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10590 = arg2[172 * steps + ((cycle - 0) & mask)];
        assert(x10590 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10591 = arg2[173 * steps + ((cycle - 0) & mask)];
        assert(x10591 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10592 = arg2[174 * steps + ((cycle - 0) & mask)];
        assert(x10592 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10593 = arg2[175 * steps + ((cycle - 0) & mask)];
        assert(x10593 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10594 = arg2[176 * steps + ((cycle - 0) & mask)];
        assert(x10594 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10595 = x10580 * x98;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10596 = x10581 * x83;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10597 = x10582 * x68;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10598 = x10583 * x72;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10599 = x10584 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10600 = x10585 * x56;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10601 = x10586 * x65;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10602 = x10587 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10603 = x10588 * x21;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10604 = x10589 * x23;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10605 = x10590 * x18;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10606 = x10591 * x16;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10607 = x10592 * x14;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10608 = x10593 * x41;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10609 = x10594 * x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10610 = x10579 + x10595;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10611 = x10610 + x10596;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10612 = x10611 + x10597;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10613 = x10612 + x10598;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10614 = x10613 + x10599;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10615 = x10614 + x10600;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10616 = x10615 + x10601;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10617 = x10616 + x10602;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10618 = x10617 + x10603;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10619 = x10618 + x10604;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10620 = x10619 + x10605;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10621 = x10620 + x10606;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10622 = x10621 + x10607;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10623 = x10622 + x10608;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10624 = x10623 + x10609;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":121:16)
        auto x10625 = x10546 - x10624;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":121:15)
        auto x10626 = x10625 * x10;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":132:26)
          auto x10627 = Fp(x10626.asUInt32() & x81.asUInt32());
          // loc("./zirgen/components/bits.h":78:23)
          {
            auto& reg = arg2[73 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10627);
            reg = x10627;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10628 = arg2[73 * steps + ((cycle - 0) & mask)];
        assert(x10628 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":133:20)
        auto x10629 = x10626 - x10628;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":133:19)
        auto x10630 = x10629 * x80;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":134:20)
        auto x10631 = x101 - x10630;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":134:7)
        auto x10632 = x10630 * x10631;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":134:7)
        assert(x10632 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/sha.cpp:134");
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":135:32)
        auto x10633 = x10547 + x10626;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10634 = Fp(x10633.asUInt32() & x101.asUInt32());
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[177 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10634);
            reg = x10634;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10635 = Fp(x10633.asUInt32() & x98.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10636 = x10635 * x58;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[178 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10636);
            reg = x10636;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10637 = Fp(x10633.asUInt32() & x83.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10638 = x10637 * x80;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[179 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10638);
            reg = x10638;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10639 = Fp(x10633.asUInt32() & x68.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10640 = x10639 * x59;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[180 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10640);
            reg = x10640;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10641 = Fp(x10633.asUInt32() & x72.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10642 = x10641 * x60;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[181 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10642);
            reg = x10642;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10643 = Fp(x10633.asUInt32() & x62.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10644 = x10643 * x63;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[182 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10644);
            reg = x10644;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10645 = Fp(x10633.asUInt32() & x56.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10646 = x10645 * x57;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[183 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10646);
            reg = x10646;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10647 = Fp(x10633.asUInt32() & x65.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10648 = x10647 * x64;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[184 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10648);
            reg = x10648;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10649 = Fp(x10633.asUInt32() & x95.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10650 = x10649 * x96;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[185 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10650);
            reg = x10650;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10651 = Fp(x10633.asUInt32() & x21.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10652 = x10651 * x22;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[186 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10652);
            reg = x10652;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10653 = Fp(x10633.asUInt32() & x23.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10654 = x10653 * x20;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[187 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10654);
            reg = x10654;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10655 = Fp(x10633.asUInt32() & x18.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10656 = x10655 * x19;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[188 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10656);
            reg = x10656;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10657 = Fp(x10633.asUInt32() & x16.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10658 = x10657 * x17;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[189 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10658);
            reg = x10658;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10659 = Fp(x10633.asUInt32() & x14.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10660 = x10659 * x15;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[190 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10660);
            reg = x10660;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10661 = Fp(x10633.asUInt32() & x41.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10662 = x10661 * x13;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[191 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10662);
            reg = x10662;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10663 = Fp(x10633.asUInt32() & x11.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10664 = x10663 * x12;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[192 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10664);
            reg = x10664;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10665 = arg2[177 * steps + ((cycle - 0) & mask)];
        assert(x10665 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10666 = arg2[178 * steps + ((cycle - 0) & mask)];
        assert(x10666 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10667 = arg2[179 * steps + ((cycle - 0) & mask)];
        assert(x10667 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10668 = arg2[180 * steps + ((cycle - 0) & mask)];
        assert(x10668 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10669 = arg2[181 * steps + ((cycle - 0) & mask)];
        assert(x10669 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10670 = arg2[182 * steps + ((cycle - 0) & mask)];
        assert(x10670 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10671 = arg2[183 * steps + ((cycle - 0) & mask)];
        assert(x10671 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10672 = arg2[184 * steps + ((cycle - 0) & mask)];
        assert(x10672 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10673 = arg2[185 * steps + ((cycle - 0) & mask)];
        assert(x10673 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10674 = arg2[186 * steps + ((cycle - 0) & mask)];
        assert(x10674 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10675 = arg2[187 * steps + ((cycle - 0) & mask)];
        assert(x10675 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10676 = arg2[188 * steps + ((cycle - 0) & mask)];
        assert(x10676 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10677 = arg2[189 * steps + ((cycle - 0) & mask)];
        assert(x10677 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10678 = arg2[190 * steps + ((cycle - 0) & mask)];
        assert(x10678 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10679 = arg2[191 * steps + ((cycle - 0) & mask)];
        assert(x10679 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10680 = arg2[192 * steps + ((cycle - 0) & mask)];
        assert(x10680 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10681 = x10666 * x98;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10682 = x10667 * x83;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10683 = x10668 * x68;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10684 = x10669 * x72;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10685 = x10670 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10686 = x10671 * x56;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10687 = x10672 * x65;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10688 = x10673 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10689 = x10674 * x21;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10690 = x10675 * x23;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10691 = x10676 * x18;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10692 = x10677 * x16;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10693 = x10678 * x14;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10694 = x10679 * x41;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10695 = x10680 * x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10696 = x10665 + x10681;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10697 = x10696 + x10682;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10698 = x10697 + x10683;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10699 = x10698 + x10684;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10700 = x10699 + x10685;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10701 = x10700 + x10686;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10702 = x10701 + x10687;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10703 = x10702 + x10688;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10704 = x10703 + x10689;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10705 = x10704 + x10690;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10706 = x10705 + x10691;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10707 = x10706 + x10692;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10708 = x10707 + x10693;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10709 = x10708 + x10694;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10710 = x10709 + x10695;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":121:16)
        auto x10711 = x10633 - x10710;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":121:15)
        auto x10712 = x10711 * x10;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":136:27)
          auto x10713 = Fp(x10712.asUInt32() & x81.asUInt32());
          // loc("./zirgen/components/bits.h":78:23)
          {
            auto& reg = arg2[74 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10713);
            reg = x10713;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10714 = arg2[74 * steps + ((cycle - 0) & mask)];
        assert(x10714 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":137:21)
        auto x10715 = x10712 - x10714;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":137:20)
        auto x10716 = x10715 * x80;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":138:21)
        auto x10717 = x101 - x10716;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":138:7)
        auto x10718 = x10716 * x10717;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":138:7)
        assert(x10718 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/sha.cpp:138");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10719 = arg2[193 * steps + ((cycle - 4) & mask)];
        assert(x10719 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10720 = arg2[194 * steps + ((cycle - 4) & mask)];
        assert(x10720 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10721 = arg2[195 * steps + ((cycle - 4) & mask)];
        assert(x10721 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10722 = arg2[196 * steps + ((cycle - 4) & mask)];
        assert(x10722 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10723 = arg2[197 * steps + ((cycle - 4) & mask)];
        assert(x10723 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10724 = arg2[198 * steps + ((cycle - 4) & mask)];
        assert(x10724 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10725 = arg2[199 * steps + ((cycle - 4) & mask)];
        assert(x10725 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10726 = arg2[200 * steps + ((cycle - 4) & mask)];
        assert(x10726 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10727 = arg2[201 * steps + ((cycle - 4) & mask)];
        assert(x10727 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10728 = arg2[202 * steps + ((cycle - 4) & mask)];
        assert(x10728 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10729 = arg2[203 * steps + ((cycle - 4) & mask)];
        assert(x10729 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10730 = arg2[204 * steps + ((cycle - 4) & mask)];
        assert(x10730 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10731 = arg2[205 * steps + ((cycle - 4) & mask)];
        assert(x10731 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10732 = arg2[206 * steps + ((cycle - 4) & mask)];
        assert(x10732 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10733 = arg2[207 * steps + ((cycle - 4) & mask)];
        assert(x10733 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10734 = arg2[208 * steps + ((cycle - 4) & mask)];
        assert(x10734 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10735 = arg2[209 * steps + ((cycle - 4) & mask)];
        assert(x10735 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10736 = arg2[210 * steps + ((cycle - 4) & mask)];
        assert(x10736 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10737 = arg2[211 * steps + ((cycle - 4) & mask)];
        assert(x10737 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10738 = arg2[212 * steps + ((cycle - 4) & mask)];
        assert(x10738 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10739 = arg2[213 * steps + ((cycle - 4) & mask)];
        assert(x10739 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10740 = arg2[214 * steps + ((cycle - 4) & mask)];
        assert(x10740 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10741 = arg2[215 * steps + ((cycle - 4) & mask)];
        assert(x10741 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10742 = arg2[216 * steps + ((cycle - 4) & mask)];
        assert(x10742 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10743 = arg2[217 * steps + ((cycle - 4) & mask)];
        assert(x10743 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10744 = arg2[218 * steps + ((cycle - 4) & mask)];
        assert(x10744 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10745 = arg2[219 * steps + ((cycle - 4) & mask)];
        assert(x10745 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10746 = arg2[220 * steps + ((cycle - 4) & mask)];
        assert(x10746 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10747 = arg2[221 * steps + ((cycle - 4) & mask)];
        assert(x10747 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10748 = arg2[222 * steps + ((cycle - 4) & mask)];
        assert(x10748 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10749 = arg2[223 * steps + ((cycle - 4) & mask)];
        assert(x10749 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10750 = arg2[224 * steps + ((cycle - 4) & mask)];
        assert(x10750 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10751 = arg2[193 * steps + ((cycle - 68) & mask)];
        assert(x10751 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10752 = arg2[194 * steps + ((cycle - 68) & mask)];
        assert(x10752 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10753 = arg2[195 * steps + ((cycle - 68) & mask)];
        assert(x10753 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10754 = arg2[196 * steps + ((cycle - 68) & mask)];
        assert(x10754 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10755 = arg2[197 * steps + ((cycle - 68) & mask)];
        assert(x10755 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10756 = arg2[198 * steps + ((cycle - 68) & mask)];
        assert(x10756 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10757 = arg2[199 * steps + ((cycle - 68) & mask)];
        assert(x10757 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10758 = arg2[200 * steps + ((cycle - 68) & mask)];
        assert(x10758 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10759 = arg2[201 * steps + ((cycle - 68) & mask)];
        assert(x10759 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10760 = arg2[202 * steps + ((cycle - 68) & mask)];
        assert(x10760 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10761 = arg2[203 * steps + ((cycle - 68) & mask)];
        assert(x10761 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10762 = arg2[204 * steps + ((cycle - 68) & mask)];
        assert(x10762 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10763 = arg2[205 * steps + ((cycle - 68) & mask)];
        assert(x10763 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10764 = arg2[206 * steps + ((cycle - 68) & mask)];
        assert(x10764 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10765 = arg2[207 * steps + ((cycle - 68) & mask)];
        assert(x10765 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10766 = arg2[208 * steps + ((cycle - 68) & mask)];
        assert(x10766 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10767 = arg2[209 * steps + ((cycle - 68) & mask)];
        assert(x10767 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10768 = arg2[210 * steps + ((cycle - 68) & mask)];
        assert(x10768 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10769 = arg2[211 * steps + ((cycle - 68) & mask)];
        assert(x10769 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10770 = arg2[212 * steps + ((cycle - 68) & mask)];
        assert(x10770 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10771 = arg2[213 * steps + ((cycle - 68) & mask)];
        assert(x10771 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10772 = arg2[214 * steps + ((cycle - 68) & mask)];
        assert(x10772 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10773 = arg2[215 * steps + ((cycle - 68) & mask)];
        assert(x10773 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10774 = arg2[216 * steps + ((cycle - 68) & mask)];
        assert(x10774 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10775 = arg2[217 * steps + ((cycle - 68) & mask)];
        assert(x10775 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10776 = arg2[218 * steps + ((cycle - 68) & mask)];
        assert(x10776 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10777 = arg2[219 * steps + ((cycle - 68) & mask)];
        assert(x10777 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10778 = arg2[220 * steps + ((cycle - 68) & mask)];
        assert(x10778 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10779 = arg2[221 * steps + ((cycle - 68) & mask)];
        assert(x10779 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10780 = arg2[222 * steps + ((cycle - 68) & mask)];
        assert(x10780 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10781 = arg2[223 * steps + ((cycle - 68) & mask)];
        assert(x10781 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10782 = arg2[224 * steps + ((cycle - 68) & mask)];
        assert(x10782 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10783 = x10720 * x98;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10784 = x10721 * x83;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10785 = x10722 * x68;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10786 = x10723 * x72;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10787 = x10724 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10788 = x10725 * x56;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10789 = x10726 * x65;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10790 = x10727 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10791 = x10728 * x21;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10792 = x10729 * x23;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10793 = x10730 * x18;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10794 = x10731 * x16;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10795 = x10732 * x14;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10796 = x10733 * x41;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10797 = x10734 * x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10798 = x10736 * x98;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10799 = x10737 * x83;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10800 = x10738 * x68;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10801 = x10739 * x72;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10802 = x10740 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10803 = x10741 * x56;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10804 = x10742 * x65;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10805 = x10743 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10806 = x10744 * x21;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10807 = x10745 * x23;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10808 = x10746 * x18;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10809 = x10747 * x16;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10810 = x10748 * x14;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10811 = x10749 * x41;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10812 = x10750 * x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10813 = x10752 * x98;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10814 = x10753 * x83;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10815 = x10754 * x68;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10816 = x10755 * x72;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10817 = x10756 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10818 = x10757 * x56;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10819 = x10758 * x65;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10820 = x10759 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10821 = x10760 * x21;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10822 = x10761 * x23;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10823 = x10762 * x18;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10824 = x10763 * x16;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10825 = x10764 * x14;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10826 = x10765 * x41;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10827 = x10766 * x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10828 = x10768 * x98;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10829 = x10769 * x83;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10830 = x10770 * x68;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10831 = x10771 * x72;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10832 = x10772 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10833 = x10773 * x56;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10834 = x10774 * x65;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10835 = x10775 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10836 = x10776 * x21;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10837 = x10777 * x23;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10838 = x10778 * x18;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10839 = x10779 * x16;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10840 = x10780 * x14;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10841 = x10781 * x41;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
        auto x10842 = x10782 * x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10843 = x10719 + x10783;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10844 = x10735 + x10798;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10845 = x10751 + x10813;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10846 = x10767 + x10828;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10847 = x10843 + x10784;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10848 = x10844 + x10799;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10849 = x10845 + x10814;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10850 = x10846 + x10829;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10851 = x10847 + x10785;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10852 = x10848 + x10800;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10853 = x10849 + x10815;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10854 = x10850 + x10830;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10855 = x10851 + x10786;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10856 = x10852 + x10801;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10857 = x10853 + x10816;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10858 = x10854 + x10831;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10859 = x10855 + x10787;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10860 = x10856 + x10802;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10861 = x10857 + x10817;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10862 = x10858 + x10832;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10863 = x10859 + x10788;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10864 = x10860 + x10803;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10865 = x10861 + x10818;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10866 = x10862 + x10833;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10867 = x10863 + x10789;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10868 = x10864 + x10804;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10869 = x10865 + x10819;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10870 = x10866 + x10834;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10871 = x10867 + x10790;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10872 = x10868 + x10805;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10873 = x10869 + x10820;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10874 = x10870 + x10835;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10875 = x10871 + x10791;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10876 = x10872 + x10806;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10877 = x10873 + x10821;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10878 = x10874 + x10836;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10879 = x10875 + x10792;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10880 = x10876 + x10807;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10881 = x10877 + x10822;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10882 = x10878 + x10837;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10883 = x10879 + x10793;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10884 = x10880 + x10808;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10885 = x10881 + x10823;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10886 = x10882 + x10838;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10887 = x10883 + x10794;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10888 = x10884 + x10809;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10889 = x10885 + x10824;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10890 = x10886 + x10839;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10891 = x10887 + x10795;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10892 = x10888 + x10810;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10893 = x10889 + x10825;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10894 = x10890 + x10840;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10895 = x10891 + x10796;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10896 = x10892 + x10811;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10897 = x10893 + x10826;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10898 = x10894 + x10841;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10899 = x10897 + x10827;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10900 = x10898 + x10842;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10901 = x10895 + x10797;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
        auto x10902 = x10896 + x10812;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":93:14)
        auto x10903 = x10901 + x10899;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":93:14)
        auto x10904 = x10902 + x10900;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10905 = Fp(x10903.asUInt32() & x101.asUInt32());
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[193 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10905);
            reg = x10905;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10906 = Fp(x10903.asUInt32() & x98.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10907 = x10906 * x58;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[194 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10907);
            reg = x10907;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10908 = Fp(x10903.asUInt32() & x83.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10909 = x10908 * x80;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[195 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10909);
            reg = x10909;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10910 = Fp(x10903.asUInt32() & x68.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10911 = x10910 * x59;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[196 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10911);
            reg = x10911;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10912 = Fp(x10903.asUInt32() & x72.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10913 = x10912 * x60;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10913);
            reg = x10913;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10914 = Fp(x10903.asUInt32() & x62.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10915 = x10914 * x63;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10915);
            reg = x10915;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10916 = Fp(x10903.asUInt32() & x56.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10917 = x10916 * x57;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[199 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10917);
            reg = x10917;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10918 = Fp(x10903.asUInt32() & x65.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10919 = x10918 * x64;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[200 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10919);
            reg = x10919;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10920 = Fp(x10903.asUInt32() & x95.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10921 = x10920 * x96;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[201 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10921);
            reg = x10921;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10922 = Fp(x10903.asUInt32() & x21.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10923 = x10922 * x22;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[202 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10923);
            reg = x10923;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10924 = Fp(x10903.asUInt32() & x23.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10925 = x10924 * x20;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[203 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10925);
            reg = x10925;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10926 = Fp(x10903.asUInt32() & x18.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10927 = x10926 * x19;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[204 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10927);
            reg = x10927;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10928 = Fp(x10903.asUInt32() & x16.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10929 = x10928 * x17;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[205 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10929);
            reg = x10929;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10930 = Fp(x10903.asUInt32() & x14.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10931 = x10930 * x15;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[206 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10931);
            reg = x10931;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10932 = Fp(x10903.asUInt32() & x41.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10933 = x10932 * x13;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[207 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10933);
            reg = x10933;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10934 = Fp(x10903.asUInt32() & x11.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10935 = x10934 * x12;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[208 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10935);
            reg = x10935;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10936 = arg2[193 * steps + ((cycle - 0) & mask)];
        assert(x10936 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10937 = arg2[194 * steps + ((cycle - 0) & mask)];
        assert(x10937 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10938 = arg2[195 * steps + ((cycle - 0) & mask)];
        assert(x10938 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10939 = arg2[196 * steps + ((cycle - 0) & mask)];
        assert(x10939 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10940 = arg2[197 * steps + ((cycle - 0) & mask)];
        assert(x10940 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10941 = arg2[198 * steps + ((cycle - 0) & mask)];
        assert(x10941 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10942 = arg2[199 * steps + ((cycle - 0) & mask)];
        assert(x10942 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10943 = arg2[200 * steps + ((cycle - 0) & mask)];
        assert(x10943 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10944 = arg2[201 * steps + ((cycle - 0) & mask)];
        assert(x10944 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10945 = arg2[202 * steps + ((cycle - 0) & mask)];
        assert(x10945 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10946 = arg2[203 * steps + ((cycle - 0) & mask)];
        assert(x10946 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10947 = arg2[204 * steps + ((cycle - 0) & mask)];
        assert(x10947 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10948 = arg2[205 * steps + ((cycle - 0) & mask)];
        assert(x10948 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10949 = arg2[206 * steps + ((cycle - 0) & mask)];
        assert(x10949 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10950 = arg2[207 * steps + ((cycle - 0) & mask)];
        assert(x10950 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10951 = arg2[208 * steps + ((cycle - 0) & mask)];
        assert(x10951 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10952 = x10937 * x98;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10953 = x10938 * x83;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10954 = x10939 * x68;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10955 = x10940 * x72;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10956 = x10941 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10957 = x10942 * x56;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10958 = x10943 * x65;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10959 = x10944 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10960 = x10945 * x21;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10961 = x10946 * x23;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10962 = x10947 * x18;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10963 = x10948 * x16;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10964 = x10949 * x14;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10965 = x10950 * x41;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x10966 = x10951 * x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10967 = x10936 + x10952;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10968 = x10967 + x10953;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10969 = x10968 + x10954;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10970 = x10969 + x10955;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10971 = x10970 + x10956;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10972 = x10971 + x10957;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10973 = x10972 + x10958;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10974 = x10973 + x10959;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10975 = x10974 + x10960;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10976 = x10975 + x10961;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10977 = x10976 + x10962;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10978 = x10977 + x10963;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10979 = x10978 + x10964;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10980 = x10979 + x10965;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x10981 = x10980 + x10966;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":121:16)
        auto x10982 = x10903 - x10981;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":121:15)
        auto x10983 = x10982 * x10;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":132:26)
          auto x10984 = Fp(x10983.asUInt32() & x81.asUInt32());
          // loc("./zirgen/components/bits.h":78:23)
          {
            auto& reg = arg2[75 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10984);
            reg = x10984;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x10985 = arg2[75 * steps + ((cycle - 0) & mask)];
        assert(x10985 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":133:20)
        auto x10986 = x10983 - x10985;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":133:19)
        auto x10987 = x10986 * x80;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":134:20)
        auto x10988 = x101 - x10987;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":134:7)
        auto x10989 = x10987 * x10988;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":134:7)
        assert(x10989 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/sha.cpp:134");
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":135:32)
        auto x10990 = x10904 + x10983;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10991 = Fp(x10990.asUInt32() & x101.asUInt32());
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[209 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10991);
            reg = x10991;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10992 = Fp(x10990.asUInt32() & x98.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10993 = x10992 * x58;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[210 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10993);
            reg = x10993;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10994 = Fp(x10990.asUInt32() & x83.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10995 = x10994 * x80;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[211 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10995);
            reg = x10995;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10996 = Fp(x10990.asUInt32() & x68.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10997 = x10996 * x59;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[212 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10997);
            reg = x10997;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x10998 = Fp(x10990.asUInt32() & x72.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x10999 = x10998 * x60;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[213 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10999);
            reg = x10999;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x11000 = Fp(x10990.asUInt32() & x62.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x11001 = x11000 * x63;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[214 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x11001);
            reg = x11001;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x11002 = Fp(x10990.asUInt32() & x56.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x11003 = x11002 * x57;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[215 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x11003);
            reg = x11003;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x11004 = Fp(x10990.asUInt32() & x65.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x11005 = x11004 * x64;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[216 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x11005);
            reg = x11005;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x11006 = Fp(x10990.asUInt32() & x95.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x11007 = x11006 * x96;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[217 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x11007);
            reg = x11007;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x11008 = Fp(x10990.asUInt32() & x21.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x11009 = x11008 * x22;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[218 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x11009);
            reg = x11009;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x11010 = Fp(x10990.asUInt32() & x23.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x11011 = x11010 * x20;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[219 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x11011);
            reg = x11011;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x11012 = Fp(x10990.asUInt32() & x18.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x11013 = x11012 * x19;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[220 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x11013);
            reg = x11013;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x11014 = Fp(x10990.asUInt32() & x16.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x11015 = x11014 * x17;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[221 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x11015);
            reg = x11015;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x11016 = Fp(x10990.asUInt32() & x14.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x11017 = x11016 * x15;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[222 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x11017);
            reg = x11017;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x11018 = Fp(x10990.asUInt32() & x41.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x11019 = x11018 * x13;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[223 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x11019);
            reg = x11019;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x11020 = Fp(x10990.asUInt32() & x11.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x11021 = x11020 * x12;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[224 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x11021);
            reg = x11021;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x11022 = arg2[209 * steps + ((cycle - 0) & mask)];
        assert(x11022 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x11023 = arg2[210 * steps + ((cycle - 0) & mask)];
        assert(x11023 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x11024 = arg2[211 * steps + ((cycle - 0) & mask)];
        assert(x11024 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x11025 = arg2[212 * steps + ((cycle - 0) & mask)];
        assert(x11025 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x11026 = arg2[213 * steps + ((cycle - 0) & mask)];
        assert(x11026 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x11027 = arg2[214 * steps + ((cycle - 0) & mask)];
        assert(x11027 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x11028 = arg2[215 * steps + ((cycle - 0) & mask)];
        assert(x11028 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x11029 = arg2[216 * steps + ((cycle - 0) & mask)];
        assert(x11029 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x11030 = arg2[217 * steps + ((cycle - 0) & mask)];
        assert(x11030 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x11031 = arg2[218 * steps + ((cycle - 0) & mask)];
        assert(x11031 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x11032 = arg2[219 * steps + ((cycle - 0) & mask)];
        assert(x11032 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x11033 = arg2[220 * steps + ((cycle - 0) & mask)];
        assert(x11033 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x11034 = arg2[221 * steps + ((cycle - 0) & mask)];
        assert(x11034 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x11035 = arg2[222 * steps + ((cycle - 0) & mask)];
        assert(x11035 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x11036 = arg2[223 * steps + ((cycle - 0) & mask)];
        assert(x11036 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x11037 = arg2[224 * steps + ((cycle - 0) & mask)];
        assert(x11037 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x11038 = x11023 * x98;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x11039 = x11024 * x83;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x11040 = x11025 * x68;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x11041 = x11026 * x72;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x11042 = x11027 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x11043 = x11028 * x56;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x11044 = x11029 * x65;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x11045 = x11030 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x11046 = x11031 * x21;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x11047 = x11032 * x23;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x11048 = x11033 * x18;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x11049 = x11034 * x16;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x11050 = x11035 * x14;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x11051 = x11036 * x41;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x11052 = x11037 * x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x11053 = x11022 + x11038;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x11054 = x11053 + x11039;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x11055 = x11054 + x11040;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x11056 = x11055 + x11041;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x11057 = x11056 + x11042;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x11058 = x11057 + x11043;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x11059 = x11058 + x11044;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x11060 = x11059 + x11045;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x11061 = x11060 + x11046;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x11062 = x11061 + x11047;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x11063 = x11062 + x11048;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x11064 = x11063 + x11049;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x11065 = x11064 + x11050;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x11066 = x11065 + x11051;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x11067 = x11066 + x11052;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":121:16)
        auto x11068 = x10990 - x11067;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":121:15)
        auto x11069 = x11068 * x10;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":136:27)
          auto x11070 = Fp(x11069.asUInt32() & x81.asUInt32());
          // loc("./zirgen/components/bits.h":78:23)
          {
            auto& reg = arg2[76 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x11070);
            reg = x11070;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x11071 = arg2[76 * steps + ((cycle - 0) & mask)];
        assert(x11071 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":137:21)
        auto x11072 = x11069 - x11071;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":137:20)
        auto x11073 = x11072 * x80;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":138:21)
        auto x11074 = x101 - x11073;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":138:7)
        auto x11075 = x11073 * x11074;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":138:7)
        assert(x11075 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/sha.cpp:138");
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11076 = arg2[153 * steps + ((cycle - 0) & mask)];
      assert(x11076 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":415:17)
      auto x11077 = x101 - x11076;
      if (x9252 != 0) {
        if (x11076 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
          auto x11078 = arg2[141 * steps + ((cycle - 0) & mask)];
          assert(x11078 != Fp::invalid());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":419:26)
          auto x11079 = x11078 + x9235;
          {
            extern_args[0] = x11079;
            extern_args[1] = x101;
            extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
            auto x11080 = extern_outs[0];
            auto x11081 = extern_outs[1];
            auto x11082 = extern_outs[2];
            auto x11083 = extern_outs[3];
            // loc("zirgen/components/u32.cpp":98:5)
            {
              auto& reg = arg2[121 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x11080);
              reg = x11080;
            }
            // loc("zirgen/components/u32.cpp":98:5)
            {
              auto& reg = arg2[122 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x11081);
              reg = x11081;
            }
            // loc("zirgen/components/u32.cpp":98:5)
            {
              auto& reg = arg2[123 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x11082);
              reg = x11082;
            }
            // loc("zirgen/components/u32.cpp":98:5)
            {
              auto& reg = arg2[124 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x11083);
              reg = x11083;
            }
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11084 = arg2[121 * steps + ((cycle - 0) & mask)];
          assert(x11084 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11085 = arg2[122 * steps + ((cycle - 0) & mask)];
          assert(x11085 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11086 = arg2[123 * steps + ((cycle - 0) & mask)];
          assert(x11086 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11087 = arg2[124 * steps + ((cycle - 0) & mask)];
          assert(x11087 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":178:3)
          {
            auto& reg = arg2[118 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x11079);
            reg = x11079;
          }
          // loc("zirgen/components/ram.cpp":179:3)
          {
            auto& reg = arg2[119 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x966);
            reg = x966;
          }
          // loc("zirgen/components/ram.cpp":180:3)
          {
            auto& reg = arg2[120 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[121 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x11084);
            reg = x11084;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[122 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x11085);
            reg = x11085;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[123 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x11086);
            reg = x11086;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[124 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x11087);
            reg = x11087;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":420:26)
          auto x11088 = x11078 + x83;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":420:26)
          auto x11089 = x11088 + x9235;
          {
            extern_args[0] = x11089;
            extern_args[1] = x101;
            extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
            auto x11090 = extern_outs[0];
            auto x11091 = extern_outs[1];
            auto x11092 = extern_outs[2];
            auto x11093 = extern_outs[3];
            // loc("zirgen/components/u32.cpp":98:5)
            {
              auto& reg = arg2[128 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x11090);
              reg = x11090;
            }
            // loc("zirgen/components/u32.cpp":98:5)
            {
              auto& reg = arg2[129 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x11091);
              reg = x11091;
            }
            // loc("zirgen/components/u32.cpp":98:5)
            {
              auto& reg = arg2[130 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x11092);
              reg = x11092;
            }
            // loc("zirgen/components/u32.cpp":98:5)
            {
              auto& reg = arg2[131 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x11093);
              reg = x11093;
            }
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11094 = arg2[128 * steps + ((cycle - 0) & mask)];
          assert(x11094 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11095 = arg2[129 * steps + ((cycle - 0) & mask)];
          assert(x11095 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11096 = arg2[130 * steps + ((cycle - 0) & mask)];
          assert(x11096 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11097 = arg2[131 * steps + ((cycle - 0) & mask)];
          assert(x11097 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":178:3)
          {
            auto& reg = arg2[125 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x11089);
            reg = x11089;
          }
          // loc("zirgen/components/ram.cpp":179:3)
          {
            auto& reg = arg2[126 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x966);
            reg = x966;
          }
          // loc("zirgen/components/ram.cpp":180:3)
          {
            auto& reg = arg2[127 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[128 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x11094);
            reg = x11094;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[129 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x11095);
            reg = x11095;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[130 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x11096);
            reg = x11096;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[131 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x11097);
            reg = x11097;
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("zirgen/components/ram.cpp":185:10))
          auto x11098 = arg2[118 * steps + ((cycle - 0) & mask)];
          assert(x11098 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11099 = arg2[161 * steps + ((cycle - 0) & mask)];
          assert(x11099 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11100 = arg2[162 * steps + ((cycle - 0) & mask)];
          assert(x11100 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11101 = arg2[163 * steps + ((cycle - 0) & mask)];
          assert(x11101 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11102 = arg2[164 * steps + ((cycle - 0) & mask)];
          assert(x11102 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11103 = arg2[165 * steps + ((cycle - 0) & mask)];
          assert(x11103 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11104 = arg2[166 * steps + ((cycle - 0) & mask)];
          assert(x11104 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11105 = arg2[167 * steps + ((cycle - 0) & mask)];
          assert(x11105 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11106 = arg2[168 * steps + ((cycle - 0) & mask)];
          assert(x11106 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11107 = arg2[169 * steps + ((cycle - 0) & mask)];
          assert(x11107 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11108 = arg2[170 * steps + ((cycle - 0) & mask)];
          assert(x11108 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11109 = arg2[171 * steps + ((cycle - 0) & mask)];
          assert(x11109 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11110 = arg2[172 * steps + ((cycle - 0) & mask)];
          assert(x11110 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11111 = arg2[173 * steps + ((cycle - 0) & mask)];
          assert(x11111 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11112 = arg2[174 * steps + ((cycle - 0) & mask)];
          assert(x11112 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11113 = arg2[175 * steps + ((cycle - 0) & mask)];
          assert(x11113 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11114 = arg2[176 * steps + ((cycle - 0) & mask)];
          assert(x11114 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11115 = arg2[177 * steps + ((cycle - 0) & mask)];
          assert(x11115 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11116 = arg2[178 * steps + ((cycle - 0) & mask)];
          assert(x11116 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11117 = arg2[179 * steps + ((cycle - 0) & mask)];
          assert(x11117 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11118 = arg2[180 * steps + ((cycle - 0) & mask)];
          assert(x11118 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11119 = arg2[181 * steps + ((cycle - 0) & mask)];
          assert(x11119 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11120 = arg2[182 * steps + ((cycle - 0) & mask)];
          assert(x11120 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11121 = arg2[183 * steps + ((cycle - 0) & mask)];
          assert(x11121 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11122 = arg2[184 * steps + ((cycle - 0) & mask)];
          assert(x11122 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11123 = arg2[185 * steps + ((cycle - 0) & mask)];
          assert(x11123 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11124 = arg2[186 * steps + ((cycle - 0) & mask)];
          assert(x11124 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11125 = arg2[187 * steps + ((cycle - 0) & mask)];
          assert(x11125 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11126 = arg2[188 * steps + ((cycle - 0) & mask)];
          assert(x11126 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11127 = arg2[189 * steps + ((cycle - 0) & mask)];
          assert(x11127 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11128 = arg2[190 * steps + ((cycle - 0) & mask)];
          assert(x11128 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11129 = arg2[191 * steps + ((cycle - 0) & mask)];
          assert(x11129 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11130 = arg2[192 * steps + ((cycle - 0) & mask)];
          assert(x11130 != Fp::invalid());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":421:39)
          auto x11131 = x11098 * x83;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11132 = x11100 * x98;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11133 = x11101 * x83;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11134 = x11102 * x68;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11135 = x11103 * x72;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11136 = x11104 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11137 = x11105 * x56;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11138 = x11106 * x65;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11139 = x11108 * x98;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11140 = x11109 * x83;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11141 = x11110 * x68;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11142 = x11111 * x72;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11143 = x11112 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11144 = x11113 * x56;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11145 = x11114 * x65;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11146 = x11116 * x98;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11147 = x11117 * x83;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11148 = x11118 * x68;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11149 = x11119 * x72;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11150 = x11120 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11151 = x11121 * x56;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11152 = x11122 * x65;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11153 = x11124 * x98;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11154 = x11125 * x83;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11155 = x11126 * x68;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11156 = x11127 * x72;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11157 = x11128 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11158 = x11129 * x56;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11159 = x11130 * x65;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11160 = x11099 + x11132;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11161 = x11107 + x11139;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11162 = x11115 + x11146;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11163 = x11123 + x11153;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11164 = x11160 + x11133;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11165 = x11161 + x11140;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11166 = x11162 + x11147;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11167 = x11163 + x11154;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11168 = x11164 + x11134;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11169 = x11165 + x11141;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11170 = x11166 + x11148;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11171 = x11167 + x11155;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11172 = x11168 + x11135;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11173 = x11169 + x11142;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11174 = x11170 + x11149;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11175 = x11171 + x11156;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11176 = x11172 + x11136;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11177 = x11173 + x11143;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11178 = x11174 + x11150;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11179 = x11175 + x11157;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11180 = x11176 + x11137;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11181 = x11177 + x11144;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11182 = x11178 + x11151;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11183 = x11179 + x11158;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11184 = x11183 + x11159;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11185 = x11182 + x11152;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11186 = x11181 + x11145;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11187 = x11180 + x11138;
          extern_args[0] = x11131;
          extern_args[1] = x11084;
          extern_args[2] = x11085;
          extern_args[3] = x11086;
          extern_args[4] = x11087;
          extern_args[5] = x11184;
          extern_args[6] = x11185;
          extern_args[7] = x11186;
          extern_args[8] = x11187;
          extern_log(ctx, cycle, "  io0: [%10x] %w, a: %w", extern_args, extern_outs);
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("zirgen/components/ram.cpp":185:10))
          auto x11188 = arg2[125 * steps + ((cycle - 0) & mask)];
          assert(x11188 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11189 = arg2[193 * steps + ((cycle - 0) & mask)];
          assert(x11189 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11190 = arg2[194 * steps + ((cycle - 0) & mask)];
          assert(x11190 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11191 = arg2[195 * steps + ((cycle - 0) & mask)];
          assert(x11191 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11192 = arg2[196 * steps + ((cycle - 0) & mask)];
          assert(x11192 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11193 = arg2[197 * steps + ((cycle - 0) & mask)];
          assert(x11193 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11194 = arg2[198 * steps + ((cycle - 0) & mask)];
          assert(x11194 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11195 = arg2[199 * steps + ((cycle - 0) & mask)];
          assert(x11195 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11196 = arg2[200 * steps + ((cycle - 0) & mask)];
          assert(x11196 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11197 = arg2[201 * steps + ((cycle - 0) & mask)];
          assert(x11197 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11198 = arg2[202 * steps + ((cycle - 0) & mask)];
          assert(x11198 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11199 = arg2[203 * steps + ((cycle - 0) & mask)];
          assert(x11199 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11200 = arg2[204 * steps + ((cycle - 0) & mask)];
          assert(x11200 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11201 = arg2[205 * steps + ((cycle - 0) & mask)];
          assert(x11201 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11202 = arg2[206 * steps + ((cycle - 0) & mask)];
          assert(x11202 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11203 = arg2[207 * steps + ((cycle - 0) & mask)];
          assert(x11203 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11204 = arg2[208 * steps + ((cycle - 0) & mask)];
          assert(x11204 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11205 = arg2[209 * steps + ((cycle - 0) & mask)];
          assert(x11205 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11206 = arg2[210 * steps + ((cycle - 0) & mask)];
          assert(x11206 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11207 = arg2[211 * steps + ((cycle - 0) & mask)];
          assert(x11207 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11208 = arg2[212 * steps + ((cycle - 0) & mask)];
          assert(x11208 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11209 = arg2[213 * steps + ((cycle - 0) & mask)];
          assert(x11209 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11210 = arg2[214 * steps + ((cycle - 0) & mask)];
          assert(x11210 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11211 = arg2[215 * steps + ((cycle - 0) & mask)];
          assert(x11211 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11212 = arg2[216 * steps + ((cycle - 0) & mask)];
          assert(x11212 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11213 = arg2[217 * steps + ((cycle - 0) & mask)];
          assert(x11213 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11214 = arg2[218 * steps + ((cycle - 0) & mask)];
          assert(x11214 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11215 = arg2[219 * steps + ((cycle - 0) & mask)];
          assert(x11215 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11216 = arg2[220 * steps + ((cycle - 0) & mask)];
          assert(x11216 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11217 = arg2[221 * steps + ((cycle - 0) & mask)];
          assert(x11217 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11218 = arg2[222 * steps + ((cycle - 0) & mask)];
          assert(x11218 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11219 = arg2[223 * steps + ((cycle - 0) & mask)];
          assert(x11219 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11220 = arg2[224 * steps + ((cycle - 0) & mask)];
          assert(x11220 != Fp::invalid());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":422:39)
          auto x11221 = x11188 * x83;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11222 = x11190 * x98;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11223 = x11191 * x83;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11224 = x11192 * x68;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11225 = x11193 * x72;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11226 = x11194 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11227 = x11195 * x56;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11228 = x11196 * x65;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11229 = x11198 * x98;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11230 = x11199 * x83;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11231 = x11200 * x68;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11232 = x11201 * x72;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11233 = x11202 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11234 = x11203 * x56;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11235 = x11204 * x65;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11236 = x11206 * x98;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11237 = x11207 * x83;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11238 = x11208 * x68;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11239 = x11209 * x72;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11240 = x11210 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11241 = x11211 * x56;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11242 = x11212 * x65;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11243 = x11214 * x98;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11244 = x11215 * x83;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11245 = x11216 * x68;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11246 = x11217 * x72;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11247 = x11218 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11248 = x11219 * x56;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11249 = x11220 * x65;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11250 = x11189 + x11222;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11251 = x11197 + x11229;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11252 = x11205 + x11236;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11253 = x11213 + x11243;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11254 = x11250 + x11223;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11255 = x11251 + x11230;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11256 = x11252 + x11237;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11257 = x11253 + x11244;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11258 = x11254 + x11224;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11259 = x11255 + x11231;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11260 = x11256 + x11238;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11261 = x11257 + x11245;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11262 = x11258 + x11225;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11263 = x11259 + x11232;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11264 = x11260 + x11239;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11265 = x11261 + x11246;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11266 = x11262 + x11226;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11267 = x11263 + x11233;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11268 = x11264 + x11240;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11269 = x11265 + x11247;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11270 = x11266 + x11227;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11271 = x11267 + x11234;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11272 = x11268 + x11241;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11273 = x11269 + x11248;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11274 = x11273 + x11249;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11275 = x11272 + x11242;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11276 = x11271 + x11235;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11277 = x11270 + x11228;
          extern_args[0] = x11221;
          extern_args[1] = x11094;
          extern_args[2] = x11095;
          extern_args[3] = x11096;
          extern_args[4] = x11097;
          extern_args[5] = x11274;
          extern_args[6] = x11275;
          extern_args[7] = x11276;
          extern_args[8] = x11277;
          extern_log(ctx, cycle, "  io1: [%10x] %w, e: %w", extern_args, extern_outs);
          // loc("./zirgen/components/u32.h":35:12)
          auto x11278 = x11085 * x95;
          // loc("./zirgen/components/u32.h":36:12)
          auto x11279 = x11086 * x82;
          // loc("./zirgen/components/u32.h":37:12)
          auto x11280 = x11087 * x84;
          // loc("./zirgen/components/u32.h":34:12)
          auto x11281 = x11084 + x11278;
          // loc("./zirgen/components/u32.h":34:12)
          auto x11282 = x11281 + x11279;
          // loc("./zirgen/components/u32.h":34:12)
          auto x11283 = x11282 + x11280;
          // loc("./zirgen/components/u32.h":37:12)
          auto x11284 = x11187 * x84;
          // loc("./zirgen/components/u32.h":36:12)
          auto x11285 = x11186 * x82;
          // loc("./zirgen/components/u32.h":35:12)
          auto x11286 = x11185 * x95;
          // loc("./zirgen/components/u32.h":34:12)
          auto x11287 = x11184 + x11286;
          // loc("./zirgen/components/u32.h":34:12)
          auto x11288 = x11287 + x11285;
          // loc("./zirgen/components/u32.h":34:12)
          auto x11289 = x11288 + x11284;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":423:10)
          auto x11290 = x11283 - x11289;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":423:10)
          assert(x11290 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/sha.cpp:423");
          // loc("./zirgen/components/u32.h":35:12)
          auto x11291 = x11095 * x95;
          // loc("./zirgen/components/u32.h":36:12)
          auto x11292 = x11096 * x82;
          // loc("./zirgen/components/u32.h":37:12)
          auto x11293 = x11097 * x84;
          // loc("./zirgen/components/u32.h":34:12)
          auto x11294 = x11094 + x11291;
          // loc("./zirgen/components/u32.h":34:12)
          auto x11295 = x11294 + x11292;
          // loc("./zirgen/components/u32.h":34:12)
          auto x11296 = x11295 + x11293;
          // loc("./zirgen/components/u32.h":37:12)
          auto x11297 = x11277 * x84;
          // loc("./zirgen/components/u32.h":36:12)
          auto x11298 = x11276 * x82;
          // loc("./zirgen/components/u32.h":35:12)
          auto x11299 = x11275 * x95;
          // loc("./zirgen/components/u32.h":34:12)
          auto x11300 = x11274 + x11299;
          // loc("./zirgen/components/u32.h":34:12)
          auto x11301 = x11300 + x11298;
          // loc("./zirgen/components/u32.h":34:12)
          auto x11302 = x11301 + x11297;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":424:10)
          auto x11303 = x11296 - x11302;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":424:10)
          assert(x11303 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/sha.cpp:424");
        }
        if (x11077 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
          auto x11304 = arg2[141 * steps + ((cycle - 0) & mask)];
          assert(x11304 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11305 = arg2[161 * steps + ((cycle - 0) & mask)];
          assert(x11305 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11306 = arg2[162 * steps + ((cycle - 0) & mask)];
          assert(x11306 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11307 = arg2[163 * steps + ((cycle - 0) & mask)];
          assert(x11307 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11308 = arg2[164 * steps + ((cycle - 0) & mask)];
          assert(x11308 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11309 = arg2[165 * steps + ((cycle - 0) & mask)];
          assert(x11309 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11310 = arg2[166 * steps + ((cycle - 0) & mask)];
          assert(x11310 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11311 = arg2[167 * steps + ((cycle - 0) & mask)];
          assert(x11311 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11312 = arg2[168 * steps + ((cycle - 0) & mask)];
          assert(x11312 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11313 = arg2[169 * steps + ((cycle - 0) & mask)];
          assert(x11313 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11314 = arg2[170 * steps + ((cycle - 0) & mask)];
          assert(x11314 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11315 = arg2[171 * steps + ((cycle - 0) & mask)];
          assert(x11315 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11316 = arg2[172 * steps + ((cycle - 0) & mask)];
          assert(x11316 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11317 = arg2[173 * steps + ((cycle - 0) & mask)];
          assert(x11317 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11318 = arg2[174 * steps + ((cycle - 0) & mask)];
          assert(x11318 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11319 = arg2[175 * steps + ((cycle - 0) & mask)];
          assert(x11319 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11320 = arg2[176 * steps + ((cycle - 0) & mask)];
          assert(x11320 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11321 = arg2[177 * steps + ((cycle - 0) & mask)];
          assert(x11321 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11322 = arg2[178 * steps + ((cycle - 0) & mask)];
          assert(x11322 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11323 = arg2[179 * steps + ((cycle - 0) & mask)];
          assert(x11323 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11324 = arg2[180 * steps + ((cycle - 0) & mask)];
          assert(x11324 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11325 = arg2[181 * steps + ((cycle - 0) & mask)];
          assert(x11325 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11326 = arg2[182 * steps + ((cycle - 0) & mask)];
          assert(x11326 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11327 = arg2[183 * steps + ((cycle - 0) & mask)];
          assert(x11327 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11328 = arg2[184 * steps + ((cycle - 0) & mask)];
          assert(x11328 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11329 = arg2[185 * steps + ((cycle - 0) & mask)];
          assert(x11329 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11330 = arg2[186 * steps + ((cycle - 0) & mask)];
          assert(x11330 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11331 = arg2[187 * steps + ((cycle - 0) & mask)];
          assert(x11331 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11332 = arg2[188 * steps + ((cycle - 0) & mask)];
          assert(x11332 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11333 = arg2[189 * steps + ((cycle - 0) & mask)];
          assert(x11333 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11334 = arg2[190 * steps + ((cycle - 0) & mask)];
          assert(x11334 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11335 = arg2[191 * steps + ((cycle - 0) & mask)];
          assert(x11335 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11336 = arg2[192 * steps + ((cycle - 0) & mask)];
          assert(x11336 != Fp::invalid());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11337 = x11306 * x98;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11338 = x11307 * x83;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11339 = x11308 * x68;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11340 = x11309 * x72;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11341 = x11310 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11342 = x11311 * x56;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11343 = x11312 * x65;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11344 = x11314 * x98;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11345 = x11315 * x83;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11346 = x11316 * x68;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11347 = x11317 * x72;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11348 = x11318 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11349 = x11319 * x56;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11350 = x11320 * x65;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11351 = x11322 * x98;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11352 = x11323 * x83;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11353 = x11324 * x68;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11354 = x11325 * x72;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11355 = x11326 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11356 = x11327 * x56;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11357 = x11328 * x65;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11358 = x11330 * x98;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11359 = x11331 * x83;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11360 = x11332 * x68;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11361 = x11333 * x72;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11362 = x11334 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11363 = x11335 * x56;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11364 = x11336 * x65;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":427:27)
          auto x11365 = x11304 + x9235;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11366 = x11305 + x11337;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11367 = x11313 + x11344;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11368 = x11321 + x11351;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11369 = x11329 + x11358;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11370 = x11366 + x11338;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11371 = x11367 + x11345;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11372 = x11368 + x11352;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11373 = x11369 + x11359;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11374 = x11370 + x11339;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11375 = x11371 + x11346;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11376 = x11372 + x11353;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11377 = x11373 + x11360;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11378 = x11374 + x11340;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11379 = x11375 + x11347;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11380 = x11376 + x11354;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11381 = x11377 + x11361;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11382 = x11378 + x11341;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11383 = x11379 + x11348;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11384 = x11380 + x11355;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11385 = x11381 + x11362;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11386 = x11382 + x11342;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11387 = x11383 + x11349;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11388 = x11384 + x11356;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11389 = x11385 + x11363;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11390 = x11389 + x11364;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11391 = x11388 + x11357;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11392 = x11387 + x11350;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11393 = x11386 + x11343;
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[121 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x11390);
            reg = x11390;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[122 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x11391);
            reg = x11391;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[123 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x11392);
            reg = x11392;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[124 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x11393);
            reg = x11393;
          }
          {
            extern_args[0] = x11365;
            extern_args[1] = x11390;
            extern_args[2] = x11391;
            extern_args[3] = x11392;
            extern_args[4] = x11393;
            extern_args[5] = x98;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11394 = arg2[121 * steps + ((cycle - 0) & mask)];
          assert(x11394 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11395 = arg2[122 * steps + ((cycle - 0) & mask)];
          assert(x11395 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11396 = arg2[123 * steps + ((cycle - 0) & mask)];
          assert(x11396 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11397 = arg2[124 * steps + ((cycle - 0) & mask)];
          assert(x11397 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":178:3)
          {
            auto& reg = arg2[118 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x11365);
            reg = x11365;
          }
          // loc("zirgen/components/ram.cpp":179:3)
          {
            auto& reg = arg2[119 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x966);
            reg = x966;
          }
          // loc("zirgen/components/ram.cpp":180:3)
          {
            auto& reg = arg2[120 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x98);
            reg = x98;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[121 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x11394);
            reg = x11394;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[122 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x11395);
            reg = x11395;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[123 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x11396);
            reg = x11396;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[124 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x11397);
            reg = x11397;
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11398 = arg2[193 * steps + ((cycle - 0) & mask)];
          assert(x11398 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11399 = arg2[194 * steps + ((cycle - 0) & mask)];
          assert(x11399 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11400 = arg2[195 * steps + ((cycle - 0) & mask)];
          assert(x11400 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11401 = arg2[196 * steps + ((cycle - 0) & mask)];
          assert(x11401 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11402 = arg2[197 * steps + ((cycle - 0) & mask)];
          assert(x11402 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11403 = arg2[198 * steps + ((cycle - 0) & mask)];
          assert(x11403 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11404 = arg2[199 * steps + ((cycle - 0) & mask)];
          assert(x11404 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11405 = arg2[200 * steps + ((cycle - 0) & mask)];
          assert(x11405 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11406 = arg2[201 * steps + ((cycle - 0) & mask)];
          assert(x11406 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11407 = arg2[202 * steps + ((cycle - 0) & mask)];
          assert(x11407 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11408 = arg2[203 * steps + ((cycle - 0) & mask)];
          assert(x11408 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11409 = arg2[204 * steps + ((cycle - 0) & mask)];
          assert(x11409 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11410 = arg2[205 * steps + ((cycle - 0) & mask)];
          assert(x11410 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11411 = arg2[206 * steps + ((cycle - 0) & mask)];
          assert(x11411 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11412 = arg2[207 * steps + ((cycle - 0) & mask)];
          assert(x11412 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11413 = arg2[208 * steps + ((cycle - 0) & mask)];
          assert(x11413 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11414 = arg2[209 * steps + ((cycle - 0) & mask)];
          assert(x11414 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11415 = arg2[210 * steps + ((cycle - 0) & mask)];
          assert(x11415 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11416 = arg2[211 * steps + ((cycle - 0) & mask)];
          assert(x11416 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11417 = arg2[212 * steps + ((cycle - 0) & mask)];
          assert(x11417 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11418 = arg2[213 * steps + ((cycle - 0) & mask)];
          assert(x11418 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11419 = arg2[214 * steps + ((cycle - 0) & mask)];
          assert(x11419 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11420 = arg2[215 * steps + ((cycle - 0) & mask)];
          assert(x11420 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11421 = arg2[216 * steps + ((cycle - 0) & mask)];
          assert(x11421 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11422 = arg2[217 * steps + ((cycle - 0) & mask)];
          assert(x11422 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11423 = arg2[218 * steps + ((cycle - 0) & mask)];
          assert(x11423 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11424 = arg2[219 * steps + ((cycle - 0) & mask)];
          assert(x11424 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11425 = arg2[220 * steps + ((cycle - 0) & mask)];
          assert(x11425 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11426 = arg2[221 * steps + ((cycle - 0) & mask)];
          assert(x11426 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11427 = arg2[222 * steps + ((cycle - 0) & mask)];
          assert(x11427 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11428 = arg2[223 * steps + ((cycle - 0) & mask)];
          assert(x11428 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11429 = arg2[224 * steps + ((cycle - 0) & mask)];
          assert(x11429 != Fp::invalid());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11430 = x11399 * x98;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11431 = x11400 * x83;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11432 = x11401 * x68;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11433 = x11402 * x72;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11434 = x11403 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11435 = x11404 * x56;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11436 = x11405 * x65;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11437 = x11407 * x98;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11438 = x11408 * x83;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11439 = x11409 * x68;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11440 = x11410 * x72;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11441 = x11411 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11442 = x11412 * x56;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11443 = x11413 * x65;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11444 = x11415 * x98;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11445 = x11416 * x83;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11446 = x11417 * x68;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11447 = x11418 * x72;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11448 = x11419 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11449 = x11420 * x56;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11450 = x11421 * x65;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11451 = x11423 * x98;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11452 = x11424 * x83;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11453 = x11425 * x68;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11454 = x11426 * x72;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11455 = x11427 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11456 = x11428 * x56;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:53)
          auto x11457 = x11429 * x65;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":428:27)
          auto x11458 = x11304 + x83;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":428:27)
          auto x11459 = x11458 + x9235;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11460 = x11398 + x11430;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11461 = x11406 + x11437;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11462 = x11414 + x11444;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11463 = x11422 + x11451;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11464 = x11460 + x11431;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11465 = x11461 + x11438;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11466 = x11462 + x11445;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11467 = x11463 + x11452;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11468 = x11464 + x11432;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11469 = x11465 + x11439;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11470 = x11466 + x11446;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11471 = x11467 + x11453;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11472 = x11468 + x11433;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11473 = x11469 + x11440;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11474 = x11470 + x11447;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11475 = x11471 + x11454;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11476 = x11472 + x11434;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11477 = x11473 + x11441;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11478 = x11474 + x11448;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11479 = x11475 + x11455;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11480 = x11476 + x11435;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11481 = x11477 + x11442;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11482 = x11478 + x11449;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11483 = x11479 + x11456;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11484 = x11483 + x11457;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11485 = x11482 + x11450;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11486 = x11481 + x11443;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":157:30)
          auto x11487 = x11480 + x11436;
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[128 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x11484);
            reg = x11484;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[129 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x11485);
            reg = x11485;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[130 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x11486);
            reg = x11486;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[131 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x11487);
            reg = x11487;
          }
          {
            extern_args[0] = x11459;
            extern_args[1] = x11484;
            extern_args[2] = x11485;
            extern_args[3] = x11486;
            extern_args[4] = x11487;
            extern_args[5] = x98;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11488 = arg2[128 * steps + ((cycle - 0) & mask)];
          assert(x11488 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11489 = arg2[129 * steps + ((cycle - 0) & mask)];
          assert(x11489 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11490 = arg2[130 * steps + ((cycle - 0) & mask)];
          assert(x11490 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x11491 = arg2[131 * steps + ((cycle - 0) & mask)];
          assert(x11491 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":178:3)
          {
            auto& reg = arg2[125 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x11459);
            reg = x11459;
          }
          // loc("zirgen/components/ram.cpp":179:3)
          {
            auto& reg = arg2[126 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x966);
            reg = x966;
          }
          // loc("zirgen/components/ram.cpp":180:3)
          {
            auto& reg = arg2[127 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x98);
            reg = x98;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[128 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x11488);
            reg = x11488;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[129 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x11489);
            reg = x11489;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[130 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x11490);
            reg = x11490;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[131 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x11491);
            reg = x11491;
          }
        }
      }
      if (x9253 != 0) {
        // loc("zirgen/components/ram.cpp":53:3)
        {
          auto& reg = arg2[118 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/ram.cpp":54:3)
        {
          auto& reg = arg2[119 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/ram.cpp":55:3)
        {
          auto& reg = arg2[120 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[123 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[124 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        if (x9243 != 0) {
          // loc("zirgen/components/ram.cpp":53:3)
          {
            auto& reg = arg2[125 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":54:3)
          {
            auto& reg = arg2[126 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":55:3)
          {
            auto& reg = arg2[127 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[128 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[129 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[130 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[131 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11492 = arg2[12 * steps + ((cycle - 0) & mask)];
      assert(x11492 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11493 = arg2[128 * steps + ((cycle - 0) & mask)];
      assert(x11493 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11494 = arg2[129 * steps + ((cycle - 0) & mask)];
      assert(x11494 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11495 = arg2[13 * steps + ((cycle - 0) & mask)];
      assert(x11495 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11496 = arg2[130 * steps + ((cycle - 0) & mask)];
      assert(x11496 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11497 = arg2[131 * steps + ((cycle - 0) & mask)];
      assert(x11497 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11498 = arg2[14 * steps + ((cycle - 0) & mask)];
      assert(x11498 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11499 = arg2[15 * steps + ((cycle - 0) & mask)];
      assert(x11499 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11500 = arg2[16 * steps + ((cycle - 0) & mask)];
      assert(x11500 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11501 = arg2[17 * steps + ((cycle - 0) & mask)];
      assert(x11501 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11502 = arg2[18 * steps + ((cycle - 0) & mask)];
      assert(x11502 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11503 = arg2[19 * steps + ((cycle - 0) & mask)];
      assert(x11503 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11504 = arg2[20 * steps + ((cycle - 0) & mask)];
      assert(x11504 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11505 = arg2[21 * steps + ((cycle - 0) & mask)];
      assert(x11505 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11506 = arg2[22 * steps + ((cycle - 0) & mask)];
      assert(x11506 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11507 = arg2[23 * steps + ((cycle - 0) & mask)];
      assert(x11507 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11508 = arg2[24 * steps + ((cycle - 0) & mask)];
      assert(x11508 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11509 = arg2[25 * steps + ((cycle - 0) & mask)];
      assert(x11509 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11510 = arg2[26 * steps + ((cycle - 0) & mask)];
      assert(x11510 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11511 = arg2[27 * steps + ((cycle - 0) & mask)];
      assert(x11511 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11512 = arg2[28 * steps + ((cycle - 0) & mask)];
      assert(x11512 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11513 = arg2[29 * steps + ((cycle - 0) & mask)];
      assert(x11513 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11514 = arg2[30 * steps + ((cycle - 0) & mask)];
      assert(x11514 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11515 = arg2[31 * steps + ((cycle - 0) & mask)];
      assert(x11515 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11516 = arg2[32 * steps + ((cycle - 0) & mask)];
      assert(x11516 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11517 = arg2[33 * steps + ((cycle - 0) & mask)];
      assert(x11517 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11518 = arg2[79 * steps + ((cycle - 0) & mask)];
      assert(x11518 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11519 = arg2[80 * steps + ((cycle - 0) & mask)];
      assert(x11519 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11520 = arg2[81 * steps + ((cycle - 0) & mask)];
      assert(x11520 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11521 = arg2[82 * steps + ((cycle - 0) & mask)];
      assert(x11521 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11522 = arg2[83 * steps + ((cycle - 0) & mask)];
      assert(x11522 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11523 = arg2[84 * steps + ((cycle - 0) & mask)];
      assert(x11523 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11524 = arg2[85 * steps + ((cycle - 0) & mask)];
      assert(x11524 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11525 = arg2[86 * steps + ((cycle - 0) & mask)];
      assert(x11525 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11526 = arg2[87 * steps + ((cycle - 0) & mask)];
      assert(x11526 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11527 = arg2[88 * steps + ((cycle - 0) & mask)];
      assert(x11527 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11528 = arg2[161 * steps + ((cycle - 1) & mask)];
      assert(x11528 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11529 = arg2[162 * steps + ((cycle - 1) & mask)];
      assert(x11529 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11530 = arg2[163 * steps + ((cycle - 1) & mask)];
      assert(x11530 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11531 = arg2[164 * steps + ((cycle - 1) & mask)];
      assert(x11531 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11532 = arg2[165 * steps + ((cycle - 1) & mask)];
      assert(x11532 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11533 = arg2[166 * steps + ((cycle - 1) & mask)];
      assert(x11533 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11534 = arg2[167 * steps + ((cycle - 1) & mask)];
      assert(x11534 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11535 = arg2[168 * steps + ((cycle - 1) & mask)];
      assert(x11535 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11536 = arg2[169 * steps + ((cycle - 1) & mask)];
      assert(x11536 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11537 = arg2[170 * steps + ((cycle - 1) & mask)];
      assert(x11537 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11538 = arg2[171 * steps + ((cycle - 1) & mask)];
      assert(x11538 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11539 = arg2[172 * steps + ((cycle - 1) & mask)];
      assert(x11539 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11540 = arg2[173 * steps + ((cycle - 1) & mask)];
      assert(x11540 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11541 = arg2[174 * steps + ((cycle - 1) & mask)];
      assert(x11541 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11542 = arg2[175 * steps + ((cycle - 1) & mask)];
      assert(x11542 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11543 = arg2[176 * steps + ((cycle - 1) & mask)];
      assert(x11543 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11544 = arg2[177 * steps + ((cycle - 1) & mask)];
      assert(x11544 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11545 = arg2[178 * steps + ((cycle - 1) & mask)];
      assert(x11545 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11546 = arg2[179 * steps + ((cycle - 1) & mask)];
      assert(x11546 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11547 = arg2[180 * steps + ((cycle - 1) & mask)];
      assert(x11547 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11548 = arg2[181 * steps + ((cycle - 1) & mask)];
      assert(x11548 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11549 = arg2[182 * steps + ((cycle - 1) & mask)];
      assert(x11549 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11550 = arg2[183 * steps + ((cycle - 1) & mask)];
      assert(x11550 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11551 = arg2[184 * steps + ((cycle - 1) & mask)];
      assert(x11551 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11552 = arg2[185 * steps + ((cycle - 1) & mask)];
      assert(x11552 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11553 = arg2[186 * steps + ((cycle - 1) & mask)];
      assert(x11553 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11554 = arg2[187 * steps + ((cycle - 1) & mask)];
      assert(x11554 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11555 = arg2[188 * steps + ((cycle - 1) & mask)];
      assert(x11555 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11556 = arg2[189 * steps + ((cycle - 1) & mask)];
      assert(x11556 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11557 = arg2[190 * steps + ((cycle - 1) & mask)];
      assert(x11557 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11558 = arg2[191 * steps + ((cycle - 1) & mask)];
      assert(x11558 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11559 = arg2[192 * steps + ((cycle - 1) & mask)];
      assert(x11559 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11560 = arg2[193 * steps + ((cycle - 1) & mask)];
      assert(x11560 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11561 = arg2[194 * steps + ((cycle - 1) & mask)];
      assert(x11561 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11562 = arg2[195 * steps + ((cycle - 1) & mask)];
      assert(x11562 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11563 = arg2[196 * steps + ((cycle - 1) & mask)];
      assert(x11563 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11564 = arg2[197 * steps + ((cycle - 1) & mask)];
      assert(x11564 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11565 = arg2[198 * steps + ((cycle - 1) & mask)];
      assert(x11565 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11566 = arg2[199 * steps + ((cycle - 1) & mask)];
      assert(x11566 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11567 = arg2[200 * steps + ((cycle - 1) & mask)];
      assert(x11567 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11568 = arg2[201 * steps + ((cycle - 1) & mask)];
      assert(x11568 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11569 = arg2[202 * steps + ((cycle - 1) & mask)];
      assert(x11569 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11570 = arg2[203 * steps + ((cycle - 1) & mask)];
      assert(x11570 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11571 = arg2[204 * steps + ((cycle - 1) & mask)];
      assert(x11571 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11572 = arg2[205 * steps + ((cycle - 1) & mask)];
      assert(x11572 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11573 = arg2[206 * steps + ((cycle - 1) & mask)];
      assert(x11573 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11574 = arg2[207 * steps + ((cycle - 1) & mask)];
      assert(x11574 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11575 = arg2[208 * steps + ((cycle - 1) & mask)];
      assert(x11575 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11576 = arg2[209 * steps + ((cycle - 1) & mask)];
      assert(x11576 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11577 = arg2[210 * steps + ((cycle - 1) & mask)];
      assert(x11577 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11578 = arg2[211 * steps + ((cycle - 1) & mask)];
      assert(x11578 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11579 = arg2[212 * steps + ((cycle - 1) & mask)];
      assert(x11579 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11580 = arg2[213 * steps + ((cycle - 1) & mask)];
      assert(x11580 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11581 = arg2[214 * steps + ((cycle - 1) & mask)];
      assert(x11581 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11582 = arg2[215 * steps + ((cycle - 1) & mask)];
      assert(x11582 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11583 = arg2[216 * steps + ((cycle - 1) & mask)];
      assert(x11583 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11584 = arg2[217 * steps + ((cycle - 1) & mask)];
      assert(x11584 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11585 = arg2[218 * steps + ((cycle - 1) & mask)];
      assert(x11585 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11586 = arg2[219 * steps + ((cycle - 1) & mask)];
      assert(x11586 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11587 = arg2[220 * steps + ((cycle - 1) & mask)];
      assert(x11587 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11588 = arg2[221 * steps + ((cycle - 1) & mask)];
      assert(x11588 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11589 = arg2[222 * steps + ((cycle - 1) & mask)];
      assert(x11589 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11590 = arg2[223 * steps + ((cycle - 1) & mask)];
      assert(x11590 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11591 = arg2[224 * steps + ((cycle - 1) & mask)];
      assert(x11591 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11592 = arg2[193 * steps + ((cycle - 2) & mask)];
      assert(x11592 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11593 = arg2[194 * steps + ((cycle - 2) & mask)];
      assert(x11593 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11594 = arg2[195 * steps + ((cycle - 2) & mask)];
      assert(x11594 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11595 = arg2[196 * steps + ((cycle - 2) & mask)];
      assert(x11595 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11596 = arg2[197 * steps + ((cycle - 2) & mask)];
      assert(x11596 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11597 = arg2[198 * steps + ((cycle - 2) & mask)];
      assert(x11597 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11598 = arg2[199 * steps + ((cycle - 2) & mask)];
      assert(x11598 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11599 = arg2[200 * steps + ((cycle - 2) & mask)];
      assert(x11599 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11600 = arg2[201 * steps + ((cycle - 2) & mask)];
      assert(x11600 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11601 = arg2[202 * steps + ((cycle - 2) & mask)];
      assert(x11601 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11602 = arg2[203 * steps + ((cycle - 2) & mask)];
      assert(x11602 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11603 = arg2[204 * steps + ((cycle - 2) & mask)];
      assert(x11603 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11604 = arg2[205 * steps + ((cycle - 2) & mask)];
      assert(x11604 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11605 = arg2[206 * steps + ((cycle - 2) & mask)];
      assert(x11605 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11606 = arg2[207 * steps + ((cycle - 2) & mask)];
      assert(x11606 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11607 = arg2[208 * steps + ((cycle - 2) & mask)];
      assert(x11607 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11608 = arg2[209 * steps + ((cycle - 2) & mask)];
      assert(x11608 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11609 = arg2[210 * steps + ((cycle - 2) & mask)];
      assert(x11609 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11610 = arg2[211 * steps + ((cycle - 2) & mask)];
      assert(x11610 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11611 = arg2[212 * steps + ((cycle - 2) & mask)];
      assert(x11611 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11612 = arg2[213 * steps + ((cycle - 2) & mask)];
      assert(x11612 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11613 = arg2[214 * steps + ((cycle - 2) & mask)];
      assert(x11613 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11614 = arg2[215 * steps + ((cycle - 2) & mask)];
      assert(x11614 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11615 = arg2[216 * steps + ((cycle - 2) & mask)];
      assert(x11615 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11616 = arg2[217 * steps + ((cycle - 2) & mask)];
      assert(x11616 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11617 = arg2[218 * steps + ((cycle - 2) & mask)];
      assert(x11617 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11618 = arg2[219 * steps + ((cycle - 2) & mask)];
      assert(x11618 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11619 = arg2[220 * steps + ((cycle - 2) & mask)];
      assert(x11619 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11620 = arg2[221 * steps + ((cycle - 2) & mask)];
      assert(x11620 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11621 = arg2[222 * steps + ((cycle - 2) & mask)];
      assert(x11621 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11622 = arg2[223 * steps + ((cycle - 2) & mask)];
      assert(x11622 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11623 = arg2[224 * steps + ((cycle - 2) & mask)];
      assert(x11623 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11624 = arg2[161 * steps + ((cycle - 2) & mask)];
      assert(x11624 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11625 = arg2[162 * steps + ((cycle - 2) & mask)];
      assert(x11625 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11626 = arg2[163 * steps + ((cycle - 2) & mask)];
      assert(x11626 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11627 = arg2[164 * steps + ((cycle - 2) & mask)];
      assert(x11627 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11628 = arg2[165 * steps + ((cycle - 2) & mask)];
      assert(x11628 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11629 = arg2[166 * steps + ((cycle - 2) & mask)];
      assert(x11629 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11630 = arg2[167 * steps + ((cycle - 2) & mask)];
      assert(x11630 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11631 = arg2[168 * steps + ((cycle - 2) & mask)];
      assert(x11631 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11632 = arg2[169 * steps + ((cycle - 2) & mask)];
      assert(x11632 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11633 = arg2[170 * steps + ((cycle - 2) & mask)];
      assert(x11633 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11634 = arg2[171 * steps + ((cycle - 2) & mask)];
      assert(x11634 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11635 = arg2[172 * steps + ((cycle - 2) & mask)];
      assert(x11635 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11636 = arg2[173 * steps + ((cycle - 2) & mask)];
      assert(x11636 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11637 = arg2[174 * steps + ((cycle - 2) & mask)];
      assert(x11637 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11638 = arg2[175 * steps + ((cycle - 2) & mask)];
      assert(x11638 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11639 = arg2[176 * steps + ((cycle - 2) & mask)];
      assert(x11639 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11640 = arg2[177 * steps + ((cycle - 2) & mask)];
      assert(x11640 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11641 = arg2[178 * steps + ((cycle - 2) & mask)];
      assert(x11641 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11642 = arg2[179 * steps + ((cycle - 2) & mask)];
      assert(x11642 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11643 = arg2[180 * steps + ((cycle - 2) & mask)];
      assert(x11643 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11644 = arg2[181 * steps + ((cycle - 2) & mask)];
      assert(x11644 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11645 = arg2[182 * steps + ((cycle - 2) & mask)];
      assert(x11645 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11646 = arg2[183 * steps + ((cycle - 2) & mask)];
      assert(x11646 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11647 = arg2[184 * steps + ((cycle - 2) & mask)];
      assert(x11647 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11648 = arg2[185 * steps + ((cycle - 2) & mask)];
      assert(x11648 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11649 = arg2[186 * steps + ((cycle - 2) & mask)];
      assert(x11649 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11650 = arg2[187 * steps + ((cycle - 2) & mask)];
      assert(x11650 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11651 = arg2[188 * steps + ((cycle - 2) & mask)];
      assert(x11651 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11652 = arg2[189 * steps + ((cycle - 2) & mask)];
      assert(x11652 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11653 = arg2[190 * steps + ((cycle - 2) & mask)];
      assert(x11653 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11654 = arg2[191 * steps + ((cycle - 2) & mask)];
      assert(x11654 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11655 = arg2[192 * steps + ((cycle - 2) & mask)];
      assert(x11655 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11656 = arg2[193 * steps + ((cycle - 3) & mask)];
      assert(x11656 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11657 = arg2[194 * steps + ((cycle - 3) & mask)];
      assert(x11657 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11658 = arg2[195 * steps + ((cycle - 3) & mask)];
      assert(x11658 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11659 = arg2[196 * steps + ((cycle - 3) & mask)];
      assert(x11659 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11660 = arg2[197 * steps + ((cycle - 3) & mask)];
      assert(x11660 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11661 = arg2[198 * steps + ((cycle - 3) & mask)];
      assert(x11661 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11662 = arg2[199 * steps + ((cycle - 3) & mask)];
      assert(x11662 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11663 = arg2[200 * steps + ((cycle - 3) & mask)];
      assert(x11663 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11664 = arg2[201 * steps + ((cycle - 3) & mask)];
      assert(x11664 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11665 = arg2[202 * steps + ((cycle - 3) & mask)];
      assert(x11665 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11666 = arg2[203 * steps + ((cycle - 3) & mask)];
      assert(x11666 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11667 = arg2[204 * steps + ((cycle - 3) & mask)];
      assert(x11667 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11668 = arg2[205 * steps + ((cycle - 3) & mask)];
      assert(x11668 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11669 = arg2[206 * steps + ((cycle - 3) & mask)];
      assert(x11669 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11670 = arg2[207 * steps + ((cycle - 3) & mask)];
      assert(x11670 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11671 = arg2[208 * steps + ((cycle - 3) & mask)];
      assert(x11671 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11672 = arg2[209 * steps + ((cycle - 3) & mask)];
      assert(x11672 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11673 = arg2[210 * steps + ((cycle - 3) & mask)];
      assert(x11673 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11674 = arg2[211 * steps + ((cycle - 3) & mask)];
      assert(x11674 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11675 = arg2[212 * steps + ((cycle - 3) & mask)];
      assert(x11675 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11676 = arg2[213 * steps + ((cycle - 3) & mask)];
      assert(x11676 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11677 = arg2[214 * steps + ((cycle - 3) & mask)];
      assert(x11677 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11678 = arg2[215 * steps + ((cycle - 3) & mask)];
      assert(x11678 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11679 = arg2[216 * steps + ((cycle - 3) & mask)];
      assert(x11679 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11680 = arg2[217 * steps + ((cycle - 3) & mask)];
      assert(x11680 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11681 = arg2[218 * steps + ((cycle - 3) & mask)];
      assert(x11681 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11682 = arg2[219 * steps + ((cycle - 3) & mask)];
      assert(x11682 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11683 = arg2[220 * steps + ((cycle - 3) & mask)];
      assert(x11683 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11684 = arg2[221 * steps + ((cycle - 3) & mask)];
      assert(x11684 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11685 = arg2[222 * steps + ((cycle - 3) & mask)];
      assert(x11685 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11686 = arg2[223 * steps + ((cycle - 3) & mask)];
      assert(x11686 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11687 = arg2[224 * steps + ((cycle - 3) & mask)];
      assert(x11687 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11688 = arg2[161 * steps + ((cycle - 3) & mask)];
      assert(x11688 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11689 = arg2[162 * steps + ((cycle - 3) & mask)];
      assert(x11689 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11690 = arg2[163 * steps + ((cycle - 3) & mask)];
      assert(x11690 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11691 = arg2[164 * steps + ((cycle - 3) & mask)];
      assert(x11691 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11692 = arg2[165 * steps + ((cycle - 3) & mask)];
      assert(x11692 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11693 = arg2[166 * steps + ((cycle - 3) & mask)];
      assert(x11693 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11694 = arg2[167 * steps + ((cycle - 3) & mask)];
      assert(x11694 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11695 = arg2[168 * steps + ((cycle - 3) & mask)];
      assert(x11695 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11696 = arg2[169 * steps + ((cycle - 3) & mask)];
      assert(x11696 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11697 = arg2[170 * steps + ((cycle - 3) & mask)];
      assert(x11697 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11698 = arg2[171 * steps + ((cycle - 3) & mask)];
      assert(x11698 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11699 = arg2[172 * steps + ((cycle - 3) & mask)];
      assert(x11699 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11700 = arg2[173 * steps + ((cycle - 3) & mask)];
      assert(x11700 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11701 = arg2[174 * steps + ((cycle - 3) & mask)];
      assert(x11701 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11702 = arg2[175 * steps + ((cycle - 3) & mask)];
      assert(x11702 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11703 = arg2[176 * steps + ((cycle - 3) & mask)];
      assert(x11703 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11704 = arg2[177 * steps + ((cycle - 3) & mask)];
      assert(x11704 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11705 = arg2[178 * steps + ((cycle - 3) & mask)];
      assert(x11705 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11706 = arg2[179 * steps + ((cycle - 3) & mask)];
      assert(x11706 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11707 = arg2[180 * steps + ((cycle - 3) & mask)];
      assert(x11707 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11708 = arg2[181 * steps + ((cycle - 3) & mask)];
      assert(x11708 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11709 = arg2[182 * steps + ((cycle - 3) & mask)];
      assert(x11709 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11710 = arg2[183 * steps + ((cycle - 3) & mask)];
      assert(x11710 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11711 = arg2[184 * steps + ((cycle - 3) & mask)];
      assert(x11711 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11712 = arg2[185 * steps + ((cycle - 3) & mask)];
      assert(x11712 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11713 = arg2[186 * steps + ((cycle - 3) & mask)];
      assert(x11713 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11714 = arg2[187 * steps + ((cycle - 3) & mask)];
      assert(x11714 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11715 = arg2[188 * steps + ((cycle - 3) & mask)];
      assert(x11715 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11716 = arg2[189 * steps + ((cycle - 3) & mask)];
      assert(x11716 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11717 = arg2[190 * steps + ((cycle - 3) & mask)];
      assert(x11717 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11718 = arg2[191 * steps + ((cycle - 3) & mask)];
      assert(x11718 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11719 = arg2[192 * steps + ((cycle - 3) & mask)];
      assert(x11719 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11720 = arg2[161 * steps + ((cycle - 4) & mask)];
      assert(x11720 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11721 = arg2[162 * steps + ((cycle - 4) & mask)];
      assert(x11721 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11722 = arg2[163 * steps + ((cycle - 4) & mask)];
      assert(x11722 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11723 = arg2[164 * steps + ((cycle - 4) & mask)];
      assert(x11723 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11724 = arg2[165 * steps + ((cycle - 4) & mask)];
      assert(x11724 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11725 = arg2[166 * steps + ((cycle - 4) & mask)];
      assert(x11725 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11726 = arg2[167 * steps + ((cycle - 4) & mask)];
      assert(x11726 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11727 = arg2[168 * steps + ((cycle - 4) & mask)];
      assert(x11727 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11728 = arg2[169 * steps + ((cycle - 4) & mask)];
      assert(x11728 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11729 = arg2[170 * steps + ((cycle - 4) & mask)];
      assert(x11729 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11730 = arg2[171 * steps + ((cycle - 4) & mask)];
      assert(x11730 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11731 = arg2[172 * steps + ((cycle - 4) & mask)];
      assert(x11731 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11732 = arg2[173 * steps + ((cycle - 4) & mask)];
      assert(x11732 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11733 = arg2[174 * steps + ((cycle - 4) & mask)];
      assert(x11733 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11734 = arg2[175 * steps + ((cycle - 4) & mask)];
      assert(x11734 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11735 = arg2[176 * steps + ((cycle - 4) & mask)];
      assert(x11735 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11736 = arg2[177 * steps + ((cycle - 4) & mask)];
      assert(x11736 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11737 = arg2[178 * steps + ((cycle - 4) & mask)];
      assert(x11737 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11738 = arg2[179 * steps + ((cycle - 4) & mask)];
      assert(x11738 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11739 = arg2[180 * steps + ((cycle - 4) & mask)];
      assert(x11739 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11740 = arg2[181 * steps + ((cycle - 4) & mask)];
      assert(x11740 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11741 = arg2[182 * steps + ((cycle - 4) & mask)];
      assert(x11741 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11742 = arg2[183 * steps + ((cycle - 4) & mask)];
      assert(x11742 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11743 = arg2[184 * steps + ((cycle - 4) & mask)];
      assert(x11743 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11744 = arg2[185 * steps + ((cycle - 4) & mask)];
      assert(x11744 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11745 = arg2[186 * steps + ((cycle - 4) & mask)];
      assert(x11745 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11746 = arg2[187 * steps + ((cycle - 4) & mask)];
      assert(x11746 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11747 = arg2[188 * steps + ((cycle - 4) & mask)];
      assert(x11747 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11748 = arg2[189 * steps + ((cycle - 4) & mask)];
      assert(x11748 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11749 = arg2[190 * steps + ((cycle - 4) & mask)];
      assert(x11749 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11750 = arg2[191 * steps + ((cycle - 4) & mask)];
      assert(x11750 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11751 = arg2[192 * steps + ((cycle - 4) & mask)];
      assert(x11751 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11752 = arg2[193 * steps + ((cycle - 4) & mask)];
      assert(x11752 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11753 = arg2[194 * steps + ((cycle - 4) & mask)];
      assert(x11753 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11754 = arg2[195 * steps + ((cycle - 4) & mask)];
      assert(x11754 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11755 = arg2[196 * steps + ((cycle - 4) & mask)];
      assert(x11755 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11756 = arg2[197 * steps + ((cycle - 4) & mask)];
      assert(x11756 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11757 = arg2[198 * steps + ((cycle - 4) & mask)];
      assert(x11757 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11758 = arg2[199 * steps + ((cycle - 4) & mask)];
      assert(x11758 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11759 = arg2[200 * steps + ((cycle - 4) & mask)];
      assert(x11759 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11760 = arg2[201 * steps + ((cycle - 4) & mask)];
      assert(x11760 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11761 = arg2[202 * steps + ((cycle - 4) & mask)];
      assert(x11761 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11762 = arg2[203 * steps + ((cycle - 4) & mask)];
      assert(x11762 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11763 = arg2[204 * steps + ((cycle - 4) & mask)];
      assert(x11763 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11764 = arg2[205 * steps + ((cycle - 4) & mask)];
      assert(x11764 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11765 = arg2[206 * steps + ((cycle - 4) & mask)];
      assert(x11765 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11766 = arg2[207 * steps + ((cycle - 4) & mask)];
      assert(x11766 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11767 = arg2[208 * steps + ((cycle - 4) & mask)];
      assert(x11767 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11768 = arg2[209 * steps + ((cycle - 4) & mask)];
      assert(x11768 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11769 = arg2[210 * steps + ((cycle - 4) & mask)];
      assert(x11769 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11770 = arg2[211 * steps + ((cycle - 4) & mask)];
      assert(x11770 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11771 = arg2[212 * steps + ((cycle - 4) & mask)];
      assert(x11771 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11772 = arg2[213 * steps + ((cycle - 4) & mask)];
      assert(x11772 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11773 = arg2[214 * steps + ((cycle - 4) & mask)];
      assert(x11773 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11774 = arg2[215 * steps + ((cycle - 4) & mask)];
      assert(x11774 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11775 = arg2[216 * steps + ((cycle - 4) & mask)];
      assert(x11775 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11776 = arg2[217 * steps + ((cycle - 4) & mask)];
      assert(x11776 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11777 = arg2[218 * steps + ((cycle - 4) & mask)];
      assert(x11777 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11778 = arg2[219 * steps + ((cycle - 4) & mask)];
      assert(x11778 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11779 = arg2[220 * steps + ((cycle - 4) & mask)];
      assert(x11779 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11780 = arg2[221 * steps + ((cycle - 4) & mask)];
      assert(x11780 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11781 = arg2[222 * steps + ((cycle - 4) & mask)];
      assert(x11781 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11782 = arg2[223 * steps + ((cycle - 4) & mask)];
      assert(x11782 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x11783 = arg2[224 * steps + ((cycle - 4) & mask)];
      assert(x11783 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11784 = x11528 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x11785 = x11528 * x11624;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11786 = x11529 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x11787 = x11529 * x11625;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11788 = x11530 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x11789 = x11530 * x11626;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11790 = x11531 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x11791 = x11531 * x11627;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11792 = x11532 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x11793 = x11532 * x11628;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11794 = x11533 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x11795 = x11533 * x11629;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11796 = x11534 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x11797 = x11534 * x11630;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11798 = x11535 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x11799 = x11535 * x11631;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11800 = x11536 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x11801 = x11536 * x11632;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11802 = x11537 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x11803 = x11537 * x11633;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11804 = x11538 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x11805 = x11538 * x11634;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11806 = x11539 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x11807 = x11539 * x11635;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11808 = x11540 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x11809 = x11540 * x11636;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11810 = x11541 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x11811 = x11541 * x11637;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11812 = x11542 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x11813 = x11542 * x11638;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11814 = x11543 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x11815 = x11543 * x11639;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11816 = x11544 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x11817 = x11544 * x11640;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11818 = x11545 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x11819 = x11545 * x11641;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11820 = x11546 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x11821 = x11546 * x11642;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11822 = x11547 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x11823 = x11547 * x11643;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11824 = x11548 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x11825 = x11548 * x11644;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11826 = x11549 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x11827 = x11549 * x11645;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11828 = x11550 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x11829 = x11550 * x11646;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11830 = x11551 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x11831 = x11551 * x11647;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11832 = x11552 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x11833 = x11552 * x11648;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11834 = x11553 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x11835 = x11553 * x11649;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11836 = x11554 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x11837 = x11554 * x11650;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11838 = x11555 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x11839 = x11555 * x11651;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11840 = x11556 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x11841 = x11556 * x11652;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11842 = x11557 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x11843 = x11557 * x11653;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11844 = x11558 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x11845 = x11558 * x11654;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11846 = x11559 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x11847 = x11559 * x11655;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11848 = x11560 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x11849 = x11560 * x11592;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11850 = x11561 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x11851 = x11561 * x11593;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11852 = x11562 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x11853 = x11562 * x11594;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11854 = x11563 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x11855 = x11563 * x11595;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11856 = x11564 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x11857 = x11564 * x11596;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11858 = x11565 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x11859 = x11565 * x11597;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11860 = x11566 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x11861 = x11566 * x11598;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11862 = x11567 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x11863 = x11567 * x11599;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11864 = x11568 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x11865 = x11568 * x11600;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11866 = x11569 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x11867 = x11569 * x11601;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11868 = x11570 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x11869 = x11570 * x11602;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11870 = x11571 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x11871 = x11571 * x11603;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11872 = x11572 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x11873 = x11572 * x11604;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11874 = x11573 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x11875 = x11573 * x11605;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11876 = x11574 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x11877 = x11574 * x11606;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11878 = x11575 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x11879 = x11575 * x11607;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11880 = x11576 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x11881 = x11576 * x11608;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11882 = x11577 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x11883 = x11577 * x11609;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11884 = x11578 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x11885 = x11578 * x11610;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11886 = x11579 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x11887 = x11579 * x11611;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11888 = x11580 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x11889 = x11580 * x11612;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11890 = x11581 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x11891 = x11581 * x11613;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11892 = x11582 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x11893 = x11582 * x11614;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11894 = x11583 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x11895 = x11583 * x11615;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11896 = x11584 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x11897 = x11584 * x11616;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11898 = x11585 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x11899 = x11585 * x11617;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11900 = x11586 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x11901 = x11586 * x11618;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11902 = x11587 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x11903 = x11587 * x11619;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11904 = x11588 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x11905 = x11588 * x11620;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11906 = x11589 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x11907 = x11589 * x11621;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11908 = x11590 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x11909 = x11590 * x11622;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x11910 = x11591 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x11911 = x11591 * x11623;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11912 = x11492 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":142:26)
      auto x11913 = x11494 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11914 = x11495 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":142:61)
      auto x11915 = x11497 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11916 = x11498 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11917 = x11499 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11918 = x11500 * x41;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11919 = x11501 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11920 = x11503 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11921 = x11504 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11922 = x11505 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11923 = x11506 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11924 = x11507 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11925 = x11508 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11926 = x11509 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11927 = x11510 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11928 = x11511 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11929 = x11512 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11930 = x11513 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11931 = x11514 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11932 = x11515 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11933 = x11516 * x41;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11934 = x11517 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11935 = x11519 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11936 = x11520 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11937 = x11521 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11938 = x11522 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11939 = x11523 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11940 = x11524 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11941 = x11525 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11942 = x11526 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11943 = x11527 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11944 = x11721 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11945 = x11722 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11946 = x11723 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11947 = x11724 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11948 = x11725 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11949 = x11726 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11950 = x11727 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11951 = x11728 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11952 = x11729 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11953 = x11730 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11954 = x11731 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11955 = x11732 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11956 = x11733 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11957 = x11734 * x41;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11958 = x11735 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11959 = x11737 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11960 = x11738 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11961 = x11739 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11962 = x11740 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11963 = x11741 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11964 = x11742 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11965 = x11743 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11966 = x11744 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11967 = x11745 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11968 = x11746 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11969 = x11747 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11970 = x11748 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11971 = x11749 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11972 = x11750 * x41;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11973 = x11751 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11974 = x11753 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11975 = x11754 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11976 = x11755 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11977 = x11756 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11978 = x11757 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11979 = x11758 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11980 = x11759 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11981 = x11760 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11982 = x11761 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11983 = x11762 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11984 = x11763 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11985 = x11764 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11986 = x11765 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11987 = x11766 * x41;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11988 = x11767 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11989 = x11769 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11990 = x11770 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11991 = x11771 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11992 = x11772 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11993 = x11773 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11994 = x11774 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11995 = x11775 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11996 = x11776 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11997 = x11777 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11998 = x11778 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x11999 = x11779 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12000 = x11780 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12001 = x11781 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12002 = x11782 * x41;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12003 = x11783 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12004 = x11784 * x11537;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x12005 = x11785 * x11688;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12006 = x11786 * x11538;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x12007 = x11787 * x11689;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12008 = x11788 * x11539;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x12009 = x11789 * x11690;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12010 = x11790 * x11540;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x12011 = x11791 * x11691;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12012 = x11792 * x11541;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x12013 = x11793 * x11692;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12014 = x11794 * x11542;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x12015 = x11795 * x11693;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12016 = x11796 * x11543;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x12017 = x11797 * x11694;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12018 = x11798 * x11544;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x12019 = x11799 * x11695;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12020 = x11800 * x11545;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x12021 = x11801 * x11696;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12022 = x11802 * x11546;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x12023 = x11803 * x11697;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12024 = x11804 * x11547;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x12025 = x11805 * x11698;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12026 = x11806 * x11548;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x12027 = x11807 * x11699;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12028 = x11808 * x11549;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x12029 = x11809 * x11700;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12030 = x11810 * x11550;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x12031 = x11811 * x11701;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12032 = x11812 * x11551;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x12033 = x11813 * x11702;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12034 = x11814 * x11552;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x12035 = x11815 * x11703;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12036 = x11816 * x11553;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x12037 = x11817 * x11704;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12038 = x11818 * x11554;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x12039 = x11819 * x11705;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12040 = x11820 * x11555;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x12041 = x11821 * x11706;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12042 = x11822 * x11556;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x12043 = x11823 * x11707;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12044 = x11824 * x11557;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x12045 = x11825 * x11708;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12046 = x11826 * x11558;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x12047 = x11827 * x11709;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12048 = x11828 * x11559;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x12049 = x11829 * x11710;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12050 = x11830 * x11528;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x12051 = x11831 * x11711;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12052 = x11832 * x11529;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x12053 = x11833 * x11712;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12054 = x11834 * x11530;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x12055 = x11835 * x11713;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12056 = x11836 * x11531;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x12057 = x11837 * x11714;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12058 = x11838 * x11532;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x12059 = x11839 * x11715;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12060 = x11840 * x11533;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x12061 = x11841 * x11716;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12062 = x11842 * x11534;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x12063 = x11843 * x11717;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12064 = x11844 * x11535;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x12065 = x11845 * x11718;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12066 = x11846 * x11536;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":66:14)
      auto x12067 = x11847 * x11719;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12068 = x11848 * x11574;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12069 = x11850 * x11575;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12070 = x11852 * x11576;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12071 = x11854 * x11577;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12072 = x11856 * x11578;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12073 = x11858 * x11579;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12074 = x11860 * x11580;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12075 = x11862 * x11581;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12076 = x11864 * x11582;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12077 = x11866 * x11583;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12078 = x11868 * x11584;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12079 = x11870 * x11585;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12080 = x11872 * x11586;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12081 = x11874 * x11587;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12082 = x11876 * x11588;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12083 = x11878 * x11589;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12084 = x11880 * x11590;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12085 = x11882 * x11591;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12086 = x11884 * x11560;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12087 = x11886 * x11561;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12088 = x11888 * x11562;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12089 = x11890 * x11563;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12090 = x11892 * x11564;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12091 = x11894 * x11565;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12092 = x11896 * x11566;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12093 = x11898 * x11567;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12094 = x11900 * x11568;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12095 = x11902 * x11569;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12096 = x11904 * x11570;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12097 = x11906 * x11571;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12098 = x11908 * x11572;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12099 = x11910 * x11573;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x12100 = x101 - x11528;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x12101 = x101 - x11529;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x12102 = x101 - x11530;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x12103 = x101 - x11531;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x12104 = x101 - x11532;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x12105 = x101 - x11533;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x12106 = x101 - x11534;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x12107 = x101 - x11535;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x12108 = x101 - x11536;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x12109 = x101 - x11537;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x12110 = x101 - x11538;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x12111 = x101 - x11539;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x12112 = x101 - x11540;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x12113 = x101 - x11541;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x12114 = x101 - x11542;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x12115 = x101 - x11543;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x12116 = x101 - x11544;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x12117 = x101 - x11545;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x12118 = x101 - x11546;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x12119 = x101 - x11547;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x12120 = x101 - x11548;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x12121 = x101 - x11549;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x12122 = x101 - x11550;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x12123 = x101 - x11551;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x12124 = x101 - x11552;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x12125 = x101 - x11553;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x12126 = x101 - x11554;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x12127 = x101 - x11555;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x12128 = x101 - x11556;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x12129 = x101 - x11557;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x12130 = x101 - x11558;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:69)
      auto x12131 = x101 - x11559;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x12132 = x101 - x11560;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x12133 = x101 - x11561;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x12134 = x101 - x11562;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x12135 = x101 - x11563;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x12136 = x101 - x11564;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x12137 = x101 - x11565;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x12138 = x101 - x11566;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x12139 = x101 - x11567;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x12140 = x101 - x11568;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x12141 = x101 - x11569;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x12142 = x101 - x11570;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x12143 = x101 - x11571;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x12144 = x101 - x11572;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x12145 = x101 - x11573;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x12146 = x101 - x11574;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x12147 = x101 - x11575;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x12148 = x101 - x11576;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x12149 = x101 - x11577;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x12150 = x101 - x11578;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x12151 = x101 - x11579;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x12152 = x101 - x11580;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x12153 = x101 - x11581;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x12154 = x101 - x11582;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x12155 = x101 - x11583;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x12156 = x101 - x11584;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x12157 = x101 - x11585;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x12158 = x101 - x11586;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x12159 = x101 - x11587;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x12160 = x101 - x11588;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x12161 = x101 - x11589;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x12162 = x101 - x11590;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:29)
      auto x12163 = x101 - x11591;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x12164 = x101 - x11624;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x12165 = x101 - x11625;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x12166 = x101 - x11626;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x12167 = x101 - x11627;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x12168 = x101 - x11628;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x12169 = x101 - x11629;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x12170 = x101 - x11630;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x12171 = x101 - x11631;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x12172 = x101 - x11632;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x12173 = x101 - x11633;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x12174 = x101 - x11634;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x12175 = x101 - x11635;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x12176 = x101 - x11636;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x12177 = x101 - x11637;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x12178 = x101 - x11638;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x12179 = x101 - x11639;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x12180 = x101 - x11640;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x12181 = x101 - x11641;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x12182 = x101 - x11642;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x12183 = x101 - x11643;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x12184 = x101 - x11644;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x12185 = x101 - x11645;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x12186 = x101 - x11646;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x12187 = x101 - x11647;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x12188 = x101 - x11648;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x12189 = x101 - x11649;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x12190 = x101 - x11650;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x12191 = x101 - x11651;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x12192 = x101 - x11652;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x12193 = x101 - x11653;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x12194 = x101 - x11654;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:49)
      auto x12195 = x101 - x11655;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x12196 = x101 - x11688;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x12197 = x101 - x11689;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x12198 = x101 - x11690;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x12199 = x101 - x11691;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x12200 = x101 - x11692;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x12201 = x101 - x11693;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x12202 = x101 - x11694;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x12203 = x101 - x11695;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x12204 = x101 - x11696;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x12205 = x101 - x11697;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x12206 = x101 - x11698;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x12207 = x101 - x11699;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x12208 = x101 - x11700;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x12209 = x101 - x11701;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x12210 = x101 - x11702;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x12211 = x101 - x11703;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x12212 = x101 - x11704;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x12213 = x101 - x11705;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x12214 = x101 - x11706;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x12215 = x101 - x11707;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x12216 = x101 - x11708;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x12217 = x101 - x11709;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x12218 = x101 - x11710;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x12219 = x101 - x11711;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x12220 = x101 - x11712;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x12221 = x101 - x11713;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x12222 = x101 - x11714;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x12223 = x101 - x11715;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x12224 = x101 - x11716;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x12225 = x101 - x11717;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x12226 = x101 - x11718;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:29)
      auto x12227 = x101 - x11719;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":142:11)
      auto x12228 = x11493 + x11913;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":142:46)
      auto x12229 = x11496 + x11915;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12230 = x11528 + x11537;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12231 = x11529 + x11538;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12232 = x11530 + x11539;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12233 = x11531 + x11540;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12234 = x11532 + x11541;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12235 = x11533 + x11542;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12236 = x11534 + x11543;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12237 = x11535 + x11544;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12238 = x11536 + x11545;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12239 = x11537 + x11546;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12240 = x11538 + x11547;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12241 = x11539 + x11548;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12242 = x11540 + x11549;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12243 = x11541 + x11550;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12244 = x11542 + x11551;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12245 = x11543 + x11552;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12246 = x11544 + x11553;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12247 = x11545 + x11554;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12248 = x11546 + x11555;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12249 = x11547 + x11556;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12250 = x11548 + x11557;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12251 = x11549 + x11558;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12252 = x11550 + x11559;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12253 = x11551 + x11528;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12254 = x11552 + x11529;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12255 = x11553 + x11530;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12256 = x11554 + x11531;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12257 = x11555 + x11532;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12258 = x11556 + x11533;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12259 = x11557 + x11534;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12260 = x11558 + x11535;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12261 = x11559 + x11536;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12262 = x11560 + x11574;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12263 = x11561 + x11575;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12264 = x11562 + x11576;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12265 = x11563 + x11577;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12266 = x11564 + x11578;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12267 = x11565 + x11579;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12268 = x11566 + x11580;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12269 = x11567 + x11581;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12270 = x11568 + x11582;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12271 = x11569 + x11583;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12272 = x11570 + x11584;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12273 = x11571 + x11585;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12274 = x11572 + x11586;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12275 = x11573 + x11587;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12276 = x11574 + x11588;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12277 = x11575 + x11589;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12278 = x11576 + x11590;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12279 = x11577 + x11591;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12280 = x11578 + x11560;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12281 = x11579 + x11561;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12282 = x11580 + x11562;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12283 = x11581 + x11563;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12284 = x11582 + x11564;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12285 = x11583 + x11565;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12286 = x11584 + x11566;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12287 = x11585 + x11567;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12288 = x11586 + x11568;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12289 = x11587 + x11569;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12290 = x11588 + x11570;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12291 = x11589 + x11571;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12292 = x11590 + x11572;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12293 = x11591 + x11573;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12294 = x11528 * x12164;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12295 = x11529 * x12165;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12296 = x11530 * x12166;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12297 = x11531 * x12167;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12298 = x11532 * x12168;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12299 = x11533 * x12169;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12300 = x11534 * x12170;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12301 = x11535 * x12171;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12302 = x11536 * x12172;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12303 = x11537 * x12173;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12304 = x11538 * x12174;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12305 = x11539 * x12175;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12306 = x11540 * x12176;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12307 = x11541 * x12177;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12308 = x11542 * x12178;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12309 = x11543 * x12179;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12310 = x11544 * x12180;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12311 = x11545 * x12181;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12312 = x11546 * x12182;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12313 = x11547 * x12183;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12314 = x11548 * x12184;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12315 = x11549 * x12185;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12316 = x11550 * x12186;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12317 = x11551 * x12187;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12318 = x11552 * x12188;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12319 = x11553 * x12189;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12320 = x11554 * x12190;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12321 = x11555 * x12191;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12322 = x11556 * x12192;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12323 = x11557 * x12193;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12324 = x11558 * x12194;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12325 = x11559 * x12195;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12326 = x11785 * x12196;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12327 = x11787 * x12197;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12328 = x11789 * x12198;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12329 = x11791 * x12199;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12330 = x11793 * x12200;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12331 = x11795 * x12201;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12332 = x11797 * x12202;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12333 = x11799 * x12203;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12334 = x11801 * x12204;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12335 = x11803 * x12205;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12336 = x11805 * x12206;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12337 = x11807 * x12207;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12338 = x11809 * x12208;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12339 = x11811 * x12209;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12340 = x11813 * x12210;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12341 = x11815 * x12211;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12342 = x11817 * x12212;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12343 = x11819 * x12213;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12344 = x11821 * x12214;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12345 = x11823 * x12215;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12346 = x11825 * x12216;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12347 = x11827 * x12217;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12348 = x11829 * x12218;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12349 = x11831 * x12219;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12350 = x11833 * x12220;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12351 = x11835 * x12221;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12352 = x11837 * x12222;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12353 = x11839 * x12223;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12354 = x11841 * x12224;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12355 = x11843 * x12225;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12356 = x11845 * x12226;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12357 = x11847 * x12227;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12358 = x12100 * x11624;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12359 = x12101 * x11625;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12360 = x12102 * x11626;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12361 = x12103 * x11627;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12362 = x12104 * x11628;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12363 = x12105 * x11629;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12364 = x12106 * x11630;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12365 = x12107 * x11631;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12366 = x12108 * x11632;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12367 = x12109 * x11633;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12368 = x12110 * x11634;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12369 = x12111 * x11635;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12370 = x12112 * x11636;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12371 = x12113 * x11637;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12372 = x12114 * x11638;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12373 = x12115 * x11639;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12374 = x12116 * x11640;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12375 = x12117 * x11641;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12376 = x12118 * x11642;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12377 = x12119 * x11643;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12378 = x12120 * x11644;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12379 = x12121 * x11645;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12380 = x12122 * x11646;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12381 = x12123 * x11647;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12382 = x12124 * x11648;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12383 = x12125 * x11649;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12384 = x12126 * x11650;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12385 = x12127 * x11651;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12386 = x12128 * x11652;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12387 = x12129 * x11653;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12388 = x12130 * x11654;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12389 = x12131 * x11655;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12390 = x12294 * x11688;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12391 = x12295 * x11689;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12392 = x12296 * x11690;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12393 = x12297 * x11691;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12394 = x12298 * x11692;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12395 = x12299 * x11693;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12396 = x12300 * x11694;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12397 = x12301 * x11695;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12398 = x12302 * x11696;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12399 = x12303 * x11697;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12400 = x12304 * x11698;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12401 = x12305 * x11699;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12402 = x12306 * x11700;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12403 = x12307 * x11701;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12404 = x12308 * x11702;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12405 = x12309 * x11703;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12406 = x12310 * x11704;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12407 = x12311 * x11705;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12408 = x12312 * x11706;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12409 = x12313 * x11707;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12410 = x12314 * x11708;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12411 = x12315 * x11709;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12412 = x12316 * x11710;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12413 = x12317 * x11711;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12414 = x12318 * x11712;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12415 = x12319 * x11713;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12416 = x12320 * x11714;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12417 = x12321 * x11715;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12418 = x12322 * x11716;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12419 = x12323 * x11717;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12420 = x12324 * x11718;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:41)
      auto x12421 = x12325 * x11719;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12422 = x12358 * x11688;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12423 = x12359 * x11689;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12424 = x12360 * x11690;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12425 = x12361 * x11691;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12426 = x12362 * x11692;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12427 = x12363 * x11693;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12428 = x12364 * x11694;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12429 = x12365 * x11695;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12430 = x12366 * x11696;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12431 = x12367 * x11697;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12432 = x12368 * x11698;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12433 = x12369 * x11699;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12434 = x12370 * x11700;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12435 = x12371 * x11701;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12436 = x12372 * x11702;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12437 = x12373 * x11703;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12438 = x12374 * x11704;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12439 = x12375 * x11705;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12440 = x12376 * x11706;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12441 = x12377 * x11707;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12442 = x12378 * x11708;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12443 = x12379 * x11709;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12444 = x12380 * x11710;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12445 = x12381 * x11711;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12446 = x12382 * x11712;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12447 = x12383 * x11713;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12448 = x12384 * x11714;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12449 = x12385 * x11715;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12450 = x12386 * x11716;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12451 = x12387 * x11717;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12452 = x12388 * x11718;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:68)
      auto x12453 = x12389 * x11719;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x12454 = x12132 * x11656;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x12455 = x12133 * x11657;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x12456 = x12134 * x11658;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x12457 = x12135 * x11659;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x12458 = x12136 * x11660;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x12459 = x12137 * x11661;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x12460 = x12138 * x11662;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x12461 = x12139 * x11663;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x12462 = x12140 * x11664;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x12463 = x12141 * x11665;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x12464 = x12142 * x11666;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x12465 = x12143 * x11667;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x12466 = x12144 * x11668;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x12467 = x12145 * x11669;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x12468 = x12146 * x11670;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x12469 = x12147 * x11671;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x12470 = x12148 * x11672;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x12471 = x12149 * x11673;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x12472 = x12150 * x11674;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x12473 = x12151 * x11675;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x12474 = x12152 * x11676;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x12475 = x12153 * x11677;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x12476 = x12154 * x11678;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x12477 = x12155 * x11679;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x12478 = x12156 * x11680;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x12479 = x12157 * x11681;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x12480 = x12158 * x11682;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x12481 = x12159 * x11683;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x12482 = x12160 * x11684;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x12483 = x12161 * x11685;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x12484 = x12162 * x11686;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:28)
      auto x12485 = x12163 * x11687;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12486 = x12230 - x12004;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12487 = x12231 - x12006;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12488 = x12232 - x12008;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12489 = x12233 - x12010;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12490 = x12234 - x12012;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12491 = x12235 - x12014;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12492 = x12236 - x12016;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12493 = x12237 - x12018;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12494 = x12238 - x12020;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12495 = x12239 - x12022;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12496 = x12240 - x12024;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12497 = x12241 - x12026;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12498 = x12242 - x12028;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12499 = x12243 - x12030;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12500 = x12244 - x12032;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12501 = x12245 - x12034;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12502 = x12246 - x12036;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12503 = x12247 - x12038;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12504 = x12248 - x12040;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12505 = x12249 - x12042;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12506 = x12250 - x12044;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12507 = x12251 - x12046;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12508 = x12252 - x12048;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12509 = x12253 - x12050;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12510 = x12254 - x12052;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12511 = x12255 - x12054;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12512 = x12256 - x12056;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12513 = x12257 - x12058;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12514 = x12258 - x12060;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12515 = x12259 - x12062;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12516 = x12260 - x12064;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12517 = x12261 - x12066;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12518 = x12262 - x12068;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12519 = x12263 - x12069;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12520 = x12264 - x12070;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12521 = x12265 - x12071;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12522 = x12266 - x12072;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12523 = x12267 - x12073;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12524 = x12268 - x12074;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12525 = x12269 - x12075;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12526 = x12270 - x12076;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12527 = x12271 - x12077;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12528 = x12272 - x12078;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12529 = x12273 - x12079;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12530 = x12274 - x12080;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12531 = x12275 - x12081;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12532 = x12276 - x12082;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12533 = x12277 - x12083;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12534 = x12278 - x12084;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12535 = x12279 - x12085;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12536 = x12280 - x12086;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12537 = x12281 - x12087;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12538 = x12282 - x12088;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12539 = x12283 - x12089;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12540 = x12284 - x12090;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12541 = x12285 - x12091;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12542 = x12286 - x12092;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12543 = x12287 - x12093;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12544 = x12288 - x12094;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12545 = x12289 - x12095;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12546 = x12290 - x12096;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12547 = x12291 - x12097;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12548 = x12292 - x12098;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12549 = x12293 - x12099;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x12550 = x11502 + x11920;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x12551 = x11518 + x11935;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x12552 = x11720 + x11944;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x12553 = x11736 + x11959;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x12554 = x11752 + x11974;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x12555 = x11768 + x11989;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12556 = x11528 + x12497;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12557 = x11529 + x12498;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12558 = x11530 + x12499;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12559 = x11531 + x12500;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12560 = x11532 + x12501;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12561 = x11533 + x12502;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12562 = x11534 + x12503;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12563 = x11535 + x12504;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12564 = x11536 + x12505;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12565 = x11537 + x12506;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12566 = x11538 + x12507;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12567 = x11539 + x12508;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12568 = x11540 + x12509;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12569 = x11541 + x12510;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12570 = x11542 + x12511;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12571 = x11543 + x12512;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12572 = x11544 + x12513;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12573 = x11545 + x12514;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12574 = x11546 + x12515;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12575 = x11547 + x12516;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12576 = x11548 + x12517;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12577 = x11549 + x12486;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12578 = x11550 + x12487;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12579 = x11551 + x12488;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12580 = x11552 + x12489;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12581 = x11553 + x12490;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12582 = x11554 + x12491;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12583 = x11555 + x12492;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12584 = x11556 + x12493;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12585 = x11557 + x12494;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12586 = x11558 + x12495;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12587 = x11559 + x12496;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12588 = x11560 + x12523;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12589 = x11561 + x12524;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12590 = x11562 + x12525;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12591 = x11563 + x12526;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12592 = x11564 + x12527;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12593 = x11565 + x12528;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12594 = x11566 + x12529;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12595 = x11567 + x12530;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12596 = x11568 + x12531;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12597 = x11569 + x12532;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12598 = x11570 + x12533;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12599 = x11571 + x12534;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12600 = x11572 + x12535;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12601 = x11573 + x12536;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12602 = x11574 + x12537;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12603 = x11575 + x12538;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12604 = x11576 + x12539;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12605 = x11577 + x12540;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12606 = x11578 + x12541;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12607 = x11579 + x12542;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12608 = x11580 + x12543;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12609 = x11581 + x12544;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12610 = x11582 + x12545;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12611 = x11583 + x12546;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12612 = x11584 + x12547;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12613 = x11585 + x12548;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12614 = x11586 + x12549;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12615 = x11587 + x12518;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12616 = x11588 + x12519;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12617 = x11589 + x12520;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12618 = x11590 + x12521;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12619 = x11591 + x12522;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x12620 = x11849 + x12454;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x12621 = x11851 + x12455;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x12622 = x11853 + x12456;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x12623 = x11855 + x12457;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x12624 = x11857 + x12458;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x12625 = x11859 + x12459;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x12626 = x11861 + x12460;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x12627 = x11863 + x12461;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x12628 = x11865 + x12462;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x12629 = x11867 + x12463;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x12630 = x11869 + x12464;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x12631 = x11871 + x12465;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x12632 = x11873 + x12466;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x12633 = x11875 + x12467;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x12634 = x11877 + x12468;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x12635 = x11879 + x12469;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x12636 = x11881 + x12470;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x12637 = x11883 + x12471;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x12638 = x11885 + x12472;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x12639 = x11887 + x12473;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x12640 = x11889 + x12474;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x12641 = x11891 + x12475;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x12642 = x11893 + x12476;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x12643 = x11895 + x12477;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x12644 = x11897 + x12478;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x12645 = x11899 + x12479;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x12646 = x11901 + x12480;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x12647 = x11903 + x12481;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x12648 = x11905 + x12482;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x12649 = x11907 + x12483;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x12650 = x11909 + x12484;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:14)
      auto x12651 = x11911 + x12485;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12652 = x12326 + x12390;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12653 = x12327 + x12391;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12654 = x12328 + x12392;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12655 = x12329 + x12393;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12656 = x12330 + x12394;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12657 = x12331 + x12395;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12658 = x12332 + x12396;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12659 = x12333 + x12397;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12660 = x12334 + x12398;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12661 = x12335 + x12399;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12662 = x12336 + x12400;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12663 = x12337 + x12401;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12664 = x12338 + x12402;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12665 = x12339 + x12403;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12666 = x12340 + x12404;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12667 = x12341 + x12405;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12668 = x12342 + x12406;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12669 = x12343 + x12407;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12670 = x12344 + x12408;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12671 = x12345 + x12409;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12672 = x12346 + x12410;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12673 = x12347 + x12411;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12674 = x12348 + x12412;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12675 = x12349 + x12413;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12676 = x12350 + x12414;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12677 = x12351 + x12415;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12678 = x12352 + x12416;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12679 = x12353 + x12417;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12680 = x12354 + x12418;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12681 = x12355 + x12419;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12682 = x12356 + x12420;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12683 = x12357 + x12421;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12684 = x12621 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12685 = x12622 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12686 = x12623 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12687 = x12624 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12688 = x12625 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12689 = x12626 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12690 = x12627 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12691 = x12628 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12692 = x12629 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12693 = x12630 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12694 = x12631 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12695 = x12632 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12696 = x12633 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12697 = x12634 * x41;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12698 = x12635 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12699 = x12637 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12700 = x12638 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12701 = x12639 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12702 = x12640 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12703 = x12641 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12704 = x12642 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12705 = x12643 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12706 = x12644 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12707 = x12645 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12708 = x12646 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12709 = x12647 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12710 = x12648 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12711 = x12649 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12712 = x12650 * x41;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12713 = x12651 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12714 = x11784 * x12497;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12715 = x11786 * x12498;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12716 = x11788 * x12499;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12717 = x11790 * x12500;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12718 = x11792 * x12501;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12719 = x11794 * x12502;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12720 = x11796 * x12503;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12721 = x11798 * x12504;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12722 = x11800 * x12505;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12723 = x11802 * x12506;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12724 = x11804 * x12507;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12725 = x11806 * x12508;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12726 = x11808 * x12509;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12727 = x11810 * x12510;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12728 = x11812 * x12511;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12729 = x11814 * x12512;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12730 = x11816 * x12513;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12731 = x11818 * x12514;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12732 = x11820 * x12515;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12733 = x11822 * x12516;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12734 = x11824 * x12517;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12735 = x11826 * x12486;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12736 = x11828 * x12487;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12737 = x11830 * x12488;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12738 = x11832 * x12489;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12739 = x11834 * x12490;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12740 = x11836 * x12491;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12741 = x11838 * x12492;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12742 = x11840 * x12493;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12743 = x11842 * x12494;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12744 = x11844 * x12495;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12745 = x11846 * x12496;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12746 = x11848 * x12523;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12747 = x11850 * x12524;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12748 = x11852 * x12525;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12749 = x11854 * x12526;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12750 = x11856 * x12527;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12751 = x11858 * x12528;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12752 = x11860 * x12529;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12753 = x11862 * x12530;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12754 = x11864 * x12531;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12755 = x11866 * x12532;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12756 = x11868 * x12533;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12757 = x11870 * x12534;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12758 = x11872 * x12535;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12759 = x11874 * x12536;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12760 = x11876 * x12537;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12761 = x11878 * x12538;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12762 = x11880 * x12539;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12763 = x11882 * x12540;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12764 = x11884 * x12541;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12765 = x11886 * x12542;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12766 = x11888 * x12543;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12767 = x11890 * x12544;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12768 = x11892 * x12545;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12769 = x11894 * x12546;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12770 = x11896 * x12547;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12771 = x11898 * x12548;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12772 = x11900 * x12549;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12773 = x11902 * x12518;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12774 = x11904 * x12519;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12775 = x11906 * x12520;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12776 = x11908 * x12521;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:28)
      auto x12777 = x11910 * x12522;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12778 = x12556 - x12714;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12779 = x12557 - x12715;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12780 = x12558 - x12716;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12781 = x12559 - x12717;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12782 = x12560 - x12718;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12783 = x12561 - x12719;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12784 = x12562 - x12720;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12785 = x12563 - x12721;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12786 = x12564 - x12722;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12787 = x12565 - x12723;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12788 = x12566 - x12724;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12789 = x12567 - x12725;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12790 = x12568 - x12726;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12791 = x12569 - x12727;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12792 = x12570 - x12728;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12793 = x12571 - x12729;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12794 = x12572 - x12730;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12795 = x12573 - x12731;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12796 = x12574 - x12732;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12797 = x12575 - x12733;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12798 = x12576 - x12734;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12799 = x12577 - x12735;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12800 = x12578 - x12736;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12801 = x12579 - x12737;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12802 = x12580 - x12738;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12803 = x12581 - x12739;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12804 = x12582 - x12740;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12805 = x12583 - x12741;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12806 = x12584 - x12742;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12807 = x12585 - x12743;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12808 = x12586 - x12744;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12809 = x12587 - x12745;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12810 = x12588 - x12746;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12811 = x12589 - x12747;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12812 = x12590 - x12748;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12813 = x12591 - x12749;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12814 = x12592 - x12750;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12815 = x12593 - x12751;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12816 = x12594 - x12752;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12817 = x12595 - x12753;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12818 = x12596 - x12754;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12819 = x12597 - x12755;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12820 = x12598 - x12756;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12821 = x12599 - x12757;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12822 = x12600 - x12758;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12823 = x12601 - x12759;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12824 = x12602 - x12760;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12825 = x12603 - x12761;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12826 = x12604 - x12762;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12827 = x12605 - x12763;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12828 = x12606 - x12764;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12829 = x12607 - x12765;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12830 = x12608 - x12766;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12831 = x12609 - x12767;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12832 = x12610 - x12768;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12833 = x12611 - x12769;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12834 = x12612 - x12770;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12835 = x12613 - x12771;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12836 = x12614 - x12772;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12837 = x12615 - x12773;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12838 = x12616 - x12774;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12839 = x12617 - x12775;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12840 = x12618 - x12776;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":57:14)
      auto x12841 = x12619 - x12777;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x12842 = x12550 + x11921;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x12843 = x12551 + x11936;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x12844 = x12552 + x11945;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x12845 = x12553 + x11960;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x12846 = x12554 + x11975;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x12847 = x12555 + x11990;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12848 = x12652 + x12422;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12849 = x12653 + x12423;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12850 = x12654 + x12424;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12851 = x12655 + x12425;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12852 = x12656 + x12426;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12853 = x12657 + x12427;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12854 = x12658 + x12428;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12855 = x12659 + x12429;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12856 = x12660 + x12430;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12857 = x12661 + x12431;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12858 = x12662 + x12432;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12859 = x12663 + x12433;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12860 = x12664 + x12434;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12861 = x12665 + x12435;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12862 = x12666 + x12436;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12863 = x12667 + x12437;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12864 = x12668 + x12438;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12865 = x12669 + x12439;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12866 = x12670 + x12440;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12867 = x12671 + x12441;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12868 = x12672 + x12442;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12869 = x12673 + x12443;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12870 = x12674 + x12444;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12871 = x12675 + x12445;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12872 = x12676 + x12446;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12873 = x12677 + x12447;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12874 = x12678 + x12448;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12875 = x12679 + x12449;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12876 = x12680 + x12450;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12877 = x12681 + x12451;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12878 = x12682 + x12452;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12879 = x12683 + x12453;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12880 = x12778 * x41;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12881 = x12779 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12882 = x12781 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12883 = x12782 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12884 = x12783 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12885 = x12784 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12886 = x12785 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12887 = x12786 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12888 = x12787 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12889 = x12788 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12890 = x12789 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12891 = x12790 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12892 = x12791 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12893 = x12792 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12894 = x12793 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12895 = x12794 * x41;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12896 = x12795 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12897 = x12797 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12898 = x12798 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12899 = x12799 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12900 = x12800 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12901 = x12801 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12902 = x12802 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12903 = x12803 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12904 = x12804 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12905 = x12805 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12906 = x12806 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12907 = x12807 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12908 = x12808 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12909 = x12809 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12910 = x12810 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12911 = x12811 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12912 = x12812 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12913 = x12813 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12914 = x12814 * x41;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12915 = x12815 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12916 = x12817 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12917 = x12818 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12918 = x12819 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12919 = x12820 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12920 = x12821 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12921 = x12822 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12922 = x12823 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12923 = x12824 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12924 = x12825 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12925 = x12826 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12926 = x12827 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12927 = x12828 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12928 = x12829 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12929 = x12830 * x41;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12930 = x12831 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12931 = x12833 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12932 = x12834 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12933 = x12835 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12934 = x12836 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12935 = x12837 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12936 = x12838 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12937 = x12839 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12938 = x12840 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12939 = x12841 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x12940 = x12842 + x11922;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x12941 = x12843 + x11937;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x12942 = x12844 + x11946;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x12943 = x12845 + x11961;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x12944 = x12846 + x11976;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x12945 = x12847 + x11991;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12946 = x12848 + x12005;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12947 = x12849 + x12007;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12948 = x12850 + x12009;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12949 = x12851 + x12011;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12950 = x12852 + x12013;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12951 = x12853 + x12015;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12952 = x12854 + x12017;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12953 = x12855 + x12019;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12954 = x12856 + x12021;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12955 = x12857 + x12023;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12956 = x12858 + x12025;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12957 = x12859 + x12027;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12958 = x12860 + x12029;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12959 = x12861 + x12031;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12960 = x12862 + x12033;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12961 = x12863 + x12035;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12962 = x12864 + x12037;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12963 = x12865 + x12039;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12964 = x12866 + x12041;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12965 = x12867 + x12043;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12966 = x12868 + x12045;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12967 = x12869 + x12047;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12968 = x12870 + x12049;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12969 = x12871 + x12051;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12970 = x12872 + x12053;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12971 = x12873 + x12055;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12972 = x12874 + x12057;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12973 = x12875 + x12059;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12974 = x12876 + x12061;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12975 = x12877 + x12063;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12976 = x12878 + x12065;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":65:14)
      auto x12977 = x12879 + x12067;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x12978 = x12620 + x12684;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x12979 = x12636 + x12699;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12980 = x12947 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12981 = x12948 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12982 = x12949 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12983 = x12950 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12984 = x12951 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12985 = x12952 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12986 = x12953 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12987 = x12954 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12988 = x12955 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12989 = x12956 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12990 = x12957 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12991 = x12958 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12992 = x12959 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12993 = x12960 * x41;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12994 = x12961 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12995 = x12963 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12996 = x12964 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12997 = x12965 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12998 = x12966 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x12999 = x12967 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x13000 = x12968 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x13001 = x12969 * x65;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x13002 = x12970 * x95;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x13003 = x12971 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x13004 = x12972 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x13005 = x12973 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x13006 = x12974 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x13007 = x12975 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x13008 = x12976 * x41;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:25)
      auto x13009 = x12977 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13010 = x12940 + x11923;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13011 = x12941 + x11938;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13012 = x12942 + x11947;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13013 = x12943 + x11962;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13014 = x12944 + x11977;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13015 = x12945 + x11992;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13016 = x12978 + x12685;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13017 = x12979 + x12700;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13018 = x12780 + x12882;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13019 = x12796 + x12897;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13020 = x12816 + x12916;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13021 = x12832 + x12931;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13022 = x13010 + x11924;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13023 = x13011 + x11939;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13024 = x13012 + x11948;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13025 = x13013 + x11963;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13026 = x13014 + x11978;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13027 = x13015 + x11993;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13028 = x13016 + x12686;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13029 = x13017 + x12701;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13030 = x13018 + x12883;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13031 = x13019 + x12898;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13032 = x13020 + x12917;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13033 = x13021 + x12932;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13034 = x12946 + x12980;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13035 = x12962 + x12995;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13036 = x13022 + x11925;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13037 = x13023 + x11940;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13038 = x13024 + x11949;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13039 = x13025 + x11964;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13040 = x13026 + x11979;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13041 = x13027 + x11994;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13042 = x13028 + x12687;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13043 = x13029 + x12702;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13044 = x13030 + x12884;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13045 = x13031 + x12899;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13046 = x13032 + x12918;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13047 = x13033 + x12933;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13048 = x13034 + x12981;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13049 = x13035 + x12996;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13050 = x13036 + x11926;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13051 = x13037 + x11941;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13052 = x13038 + x11950;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13053 = x13039 + x11965;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13054 = x13040 + x11980;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13055 = x13041 + x11995;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13056 = x13042 + x12688;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13057 = x13043 + x12703;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13058 = x13044 + x12885;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13059 = x13045 + x12900;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13060 = x13046 + x12919;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13061 = x13047 + x12934;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13062 = x13048 + x12982;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13063 = x13049 + x12997;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13064 = x13050 + x11927;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13065 = x13051 + x11942;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13066 = x13052 + x11951;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13067 = x13053 + x11966;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13068 = x13054 + x11981;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13069 = x13055 + x11996;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13070 = x13056 + x12689;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13071 = x13057 + x12704;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13072 = x13058 + x12886;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13073 = x13059 + x12901;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13074 = x13060 + x12920;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13075 = x13061 + x12935;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13076 = x13062 + x12983;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13077 = x13063 + x12998;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13078 = x13064 + x11928;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13079 = x13065 + x11943;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13080 = x13066 + x11952;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13081 = x13067 + x11967;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13082 = x13068 + x11982;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13083 = x13069 + x11997;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13084 = x13070 + x12690;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13085 = x13071 + x12705;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13086 = x13072 + x12887;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13087 = x13073 + x12902;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13088 = x13074 + x12921;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13089 = x13075 + x12936;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13090 = x13076 + x12984;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13091 = x13077 + x12999;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13092 = x13078 + x11929;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13093 = x13079 + x11912;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13094 = x13080 + x11953;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13095 = x13081 + x11968;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13096 = x13082 + x11983;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13097 = x13083 + x11998;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13098 = x13084 + x12691;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13099 = x13085 + x12706;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13100 = x13086 + x12888;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13101 = x13087 + x12903;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13102 = x13088 + x12922;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13103 = x13089 + x12937;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13104 = x13090 + x12985;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13105 = x13091 + x13000;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13106 = x13092 + x11930;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13107 = x13093 + x11914;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13108 = x13094 + x11954;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13109 = x13095 + x11969;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13110 = x13096 + x11984;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13111 = x13097 + x11999;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13112 = x13098 + x12692;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13113 = x13099 + x12707;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13114 = x13100 + x12889;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13115 = x13101 + x12904;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13116 = x13102 + x12923;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13117 = x13103 + x12938;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13118 = x13104 + x12986;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13119 = x13105 + x13001;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13120 = x13106 + x11931;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13121 = x13107 + x11916;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13122 = x13108 + x11955;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13123 = x13109 + x11970;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13124 = x13110 + x11985;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13125 = x13111 + x12000;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13126 = x13112 + x12693;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13127 = x13113 + x12708;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13128 = x13114 + x12890;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13129 = x13115 + x12905;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13130 = x13116 + x12924;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13131 = x13117 + x12939;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13132 = x13118 + x12987;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13133 = x13119 + x13002;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13134 = x13120 + x11932;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13135 = x13121 + x11917;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13136 = x13122 + x11956;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13137 = x13123 + x11971;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13138 = x13124 + x11986;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13139 = x13125 + x12001;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13140 = x13126 + x12694;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13141 = x13127 + x12709;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13142 = x13128 + x12891;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13143 = x13129 + x12906;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13144 = x13130 + x12925;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13145 = x13131 + x12910;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13146 = x13132 + x12988;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13147 = x13133 + x13003;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13148 = x13134 + x11933;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13149 = x13135 + x11918;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13150 = x13136 + x11957;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13151 = x13137 + x11972;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13152 = x13138 + x11987;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13153 = x13139 + x12002;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13154 = x13140 + x12695;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13155 = x13141 + x12710;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13156 = x13142 + x12892;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13157 = x13143 + x12907;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13158 = x13144 + x12926;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13159 = x13145 + x12911;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13160 = x13146 + x12989;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13161 = x13147 + x13004;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13162 = x13150 + x11958;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13163 = x13151 + x11973;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13164 = x13148 + x11934;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13165 = x13149 + x11919;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13166 = x13152 + x11988;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13167 = x13153 + x12003;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13168 = x13154 + x12696;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13169 = x13155 + x12711;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13170 = x13156 + x12893;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13171 = x13157 + x12908;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13172 = x13158 + x12927;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13173 = x13159 + x12912;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13174 = x13160 + x12990;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13175 = x13161 + x13005;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13176 = x13168 + x12697;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13177 = x13169 + x12712;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13178 = x13170 + x12894;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13179 = x13171 + x12909;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13180 = x13172 + x12928;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13181 = x13173 + x12913;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13182 = x13174 + x12991;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13183 = x13175 + x13006;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13184 = x13176 + x12698;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13185 = x13177 + x12713;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13186 = x13178 + x12895;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13187 = x13179 + x12880;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13188 = x13180 + x12929;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13189 = x13181 + x12914;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13190 = x13182 + x12992;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13191 = x13183 + x13007;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13192 = x13186 + x12896;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13193 = x13187 + x12881;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13194 = x13188 + x12930;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13195 = x13189 + x12915;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13196 = x13190 + x12993;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13197 = x13191 + x13008;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":93:14)
      auto x13198 = x13184 + x13194;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":93:14)
      auto x13199 = x13185 + x13195;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":93:14)
      auto x13200 = x13166 + x13198;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":93:14)
      auto x13201 = x13167 + x13199;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":93:14)
      auto x13202 = x12228 + x13200;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":93:14)
      auto x13203 = x12229 + x13201;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":93:14)
      auto x13204 = x13164 + x13203;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":93:14)
      auto x13205 = x13165 + x13202;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13206 = x13196 + x12994;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":84:16)
      auto x13207 = x13197 + x13009;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":93:14)
      auto x13208 = x13204 + x13163;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":93:14)
      auto x13209 = x13205 + x13162;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":93:14)
      auto x13210 = x13206 + x13192;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":93:14)
      auto x13211 = x13207 + x13193;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":93:14)
      auto x13212 = x13204 + x13211;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":93:14)
      auto x13213 = x13205 + x13210;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":502:5)
      {
        auto& reg = arg2[155 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x13213);
        reg = x13213;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":503:5)
      {
        auto& reg = arg2[157 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x13209);
        reg = x13209;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":502:5)
      {
        auto& reg = arg2[156 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x13212);
        reg = x13212;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":503:5)
      {
        auto& reg = arg2[158 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x13208);
        reg = x13208;
      }
      if (x9244 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":150:11))
        auto x13214 = arg2[155 * steps + ((cycle - 0) & mask)];
        assert(x13214 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":150:26))
        auto x13215 = arg2[156 * steps + ((cycle - 0) & mask)];
        assert(x13215 != Fp::invalid());
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13216 = Fp(x13214.asUInt32() & x101.asUInt32());
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[161 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13216);
            reg = x13216;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13217 = Fp(x13214.asUInt32() & x98.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13218 = x13217 * x58;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[162 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13218);
            reg = x13218;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13219 = Fp(x13214.asUInt32() & x83.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13220 = x13219 * x80;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[163 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13220);
            reg = x13220;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13221 = Fp(x13214.asUInt32() & x68.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13222 = x13221 * x59;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[164 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13222);
            reg = x13222;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13223 = Fp(x13214.asUInt32() & x72.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13224 = x13223 * x60;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[165 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13224);
            reg = x13224;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13225 = Fp(x13214.asUInt32() & x62.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13226 = x13225 * x63;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[166 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13226);
            reg = x13226;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13227 = Fp(x13214.asUInt32() & x56.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13228 = x13227 * x57;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[167 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13228);
            reg = x13228;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13229 = Fp(x13214.asUInt32() & x65.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13230 = x13229 * x64;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[168 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13230);
            reg = x13230;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13231 = Fp(x13214.asUInt32() & x95.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13232 = x13231 * x96;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[169 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13232);
            reg = x13232;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13233 = Fp(x13214.asUInt32() & x21.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13234 = x13233 * x22;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[170 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13234);
            reg = x13234;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13235 = Fp(x13214.asUInt32() & x23.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13236 = x13235 * x20;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[171 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13236);
            reg = x13236;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13237 = Fp(x13214.asUInt32() & x18.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13238 = x13237 * x19;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[172 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13238);
            reg = x13238;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13239 = Fp(x13214.asUInt32() & x16.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13240 = x13239 * x17;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[173 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13240);
            reg = x13240;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13241 = Fp(x13214.asUInt32() & x14.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13242 = x13241 * x15;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[174 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13242);
            reg = x13242;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13243 = Fp(x13214.asUInt32() & x41.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13244 = x13243 * x13;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[175 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13244);
            reg = x13244;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13245 = Fp(x13214.asUInt32() & x11.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13246 = x13245 * x12;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[176 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13246);
            reg = x13246;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13247 = arg2[161 * steps + ((cycle - 0) & mask)];
        assert(x13247 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13248 = arg2[162 * steps + ((cycle - 0) & mask)];
        assert(x13248 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13249 = arg2[163 * steps + ((cycle - 0) & mask)];
        assert(x13249 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13250 = arg2[164 * steps + ((cycle - 0) & mask)];
        assert(x13250 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13251 = arg2[165 * steps + ((cycle - 0) & mask)];
        assert(x13251 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13252 = arg2[166 * steps + ((cycle - 0) & mask)];
        assert(x13252 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13253 = arg2[167 * steps + ((cycle - 0) & mask)];
        assert(x13253 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13254 = arg2[168 * steps + ((cycle - 0) & mask)];
        assert(x13254 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13255 = arg2[169 * steps + ((cycle - 0) & mask)];
        assert(x13255 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13256 = arg2[170 * steps + ((cycle - 0) & mask)];
        assert(x13256 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13257 = arg2[171 * steps + ((cycle - 0) & mask)];
        assert(x13257 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13258 = arg2[172 * steps + ((cycle - 0) & mask)];
        assert(x13258 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13259 = arg2[173 * steps + ((cycle - 0) & mask)];
        assert(x13259 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13260 = arg2[174 * steps + ((cycle - 0) & mask)];
        assert(x13260 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13261 = arg2[175 * steps + ((cycle - 0) & mask)];
        assert(x13261 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13262 = arg2[176 * steps + ((cycle - 0) & mask)];
        assert(x13262 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13263 = x13248 * x98;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13264 = x13249 * x83;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13265 = x13250 * x68;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13266 = x13251 * x72;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13267 = x13252 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13268 = x13253 * x56;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13269 = x13254 * x65;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13270 = x13255 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13271 = x13256 * x21;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13272 = x13257 * x23;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13273 = x13258 * x18;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13274 = x13259 * x16;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13275 = x13260 * x14;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13276 = x13261 * x41;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13277 = x13262 * x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13278 = x13247 + x13263;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13279 = x13278 + x13264;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13280 = x13279 + x13265;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13281 = x13280 + x13266;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13282 = x13281 + x13267;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13283 = x13282 + x13268;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13284 = x13283 + x13269;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13285 = x13284 + x13270;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13286 = x13285 + x13271;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13287 = x13286 + x13272;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13288 = x13287 + x13273;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13289 = x13288 + x13274;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13290 = x13289 + x13275;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13291 = x13290 + x13276;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13292 = x13291 + x13277;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":121:16)
        auto x13293 = x13214 - x13292;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":121:15)
        auto x13294 = x13293 * x10;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":132:26)
          auto x13295 = Fp(x13294.asUInt32() & x81.asUInt32());
          // loc("./zirgen/components/bits.h":78:23)
          {
            auto& reg = arg2[73 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13295);
            reg = x13295;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13296 = arg2[73 * steps + ((cycle - 0) & mask)];
        assert(x13296 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":133:20)
        auto x13297 = x13294 - x13296;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":133:19)
        auto x13298 = x13297 * x80;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":134:20)
        auto x13299 = x101 - x13298;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":134:7)
        auto x13300 = x13298 * x13299;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":134:7)
        assert(x13300 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/sha.cpp:134");
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":135:32)
        auto x13301 = x13215 + x13294;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13302 = Fp(x13301.asUInt32() & x101.asUInt32());
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[177 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13302);
            reg = x13302;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13303 = Fp(x13301.asUInt32() & x98.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13304 = x13303 * x58;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[178 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13304);
            reg = x13304;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13305 = Fp(x13301.asUInt32() & x83.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13306 = x13305 * x80;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[179 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13306);
            reg = x13306;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13307 = Fp(x13301.asUInt32() & x68.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13308 = x13307 * x59;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[180 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13308);
            reg = x13308;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13309 = Fp(x13301.asUInt32() & x72.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13310 = x13309 * x60;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[181 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13310);
            reg = x13310;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13311 = Fp(x13301.asUInt32() & x62.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13312 = x13311 * x63;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[182 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13312);
            reg = x13312;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13313 = Fp(x13301.asUInt32() & x56.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13314 = x13313 * x57;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[183 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13314);
            reg = x13314;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13315 = Fp(x13301.asUInt32() & x65.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13316 = x13315 * x64;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[184 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13316);
            reg = x13316;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13317 = Fp(x13301.asUInt32() & x95.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13318 = x13317 * x96;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[185 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13318);
            reg = x13318;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13319 = Fp(x13301.asUInt32() & x21.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13320 = x13319 * x22;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[186 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13320);
            reg = x13320;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13321 = Fp(x13301.asUInt32() & x23.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13322 = x13321 * x20;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[187 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13322);
            reg = x13322;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13323 = Fp(x13301.asUInt32() & x18.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13324 = x13323 * x19;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[188 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13324);
            reg = x13324;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13325 = Fp(x13301.asUInt32() & x16.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13326 = x13325 * x17;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[189 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13326);
            reg = x13326;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13327 = Fp(x13301.asUInt32() & x14.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13328 = x13327 * x15;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[190 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13328);
            reg = x13328;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13329 = Fp(x13301.asUInt32() & x41.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13330 = x13329 * x13;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[191 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13330);
            reg = x13330;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13331 = Fp(x13301.asUInt32() & x11.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13332 = x13331 * x12;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[192 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13332);
            reg = x13332;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13333 = arg2[177 * steps + ((cycle - 0) & mask)];
        assert(x13333 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13334 = arg2[178 * steps + ((cycle - 0) & mask)];
        assert(x13334 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13335 = arg2[179 * steps + ((cycle - 0) & mask)];
        assert(x13335 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13336 = arg2[180 * steps + ((cycle - 0) & mask)];
        assert(x13336 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13337 = arg2[181 * steps + ((cycle - 0) & mask)];
        assert(x13337 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13338 = arg2[182 * steps + ((cycle - 0) & mask)];
        assert(x13338 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13339 = arg2[183 * steps + ((cycle - 0) & mask)];
        assert(x13339 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13340 = arg2[184 * steps + ((cycle - 0) & mask)];
        assert(x13340 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13341 = arg2[185 * steps + ((cycle - 0) & mask)];
        assert(x13341 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13342 = arg2[186 * steps + ((cycle - 0) & mask)];
        assert(x13342 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13343 = arg2[187 * steps + ((cycle - 0) & mask)];
        assert(x13343 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13344 = arg2[188 * steps + ((cycle - 0) & mask)];
        assert(x13344 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13345 = arg2[189 * steps + ((cycle - 0) & mask)];
        assert(x13345 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13346 = arg2[190 * steps + ((cycle - 0) & mask)];
        assert(x13346 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13347 = arg2[191 * steps + ((cycle - 0) & mask)];
        assert(x13347 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13348 = arg2[192 * steps + ((cycle - 0) & mask)];
        assert(x13348 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13349 = x13334 * x98;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13350 = x13335 * x83;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13351 = x13336 * x68;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13352 = x13337 * x72;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13353 = x13338 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13354 = x13339 * x56;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13355 = x13340 * x65;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13356 = x13341 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13357 = x13342 * x21;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13358 = x13343 * x23;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13359 = x13344 * x18;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13360 = x13345 * x16;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13361 = x13346 * x14;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13362 = x13347 * x41;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13363 = x13348 * x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13364 = x13333 + x13349;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13365 = x13364 + x13350;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13366 = x13365 + x13351;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13367 = x13366 + x13352;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13368 = x13367 + x13353;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13369 = x13368 + x13354;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13370 = x13369 + x13355;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13371 = x13370 + x13356;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13372 = x13371 + x13357;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13373 = x13372 + x13358;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13374 = x13373 + x13359;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13375 = x13374 + x13360;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13376 = x13375 + x13361;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13377 = x13376 + x13362;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13378 = x13377 + x13363;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":121:16)
        auto x13379 = x13301 - x13378;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":121:15)
        auto x13380 = x13379 * x10;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":136:27)
          auto x13381 = Fp(x13380.asUInt32() & x81.asUInt32());
          // loc("./zirgen/components/bits.h":78:23)
          {
            auto& reg = arg2[74 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13381);
            reg = x13381;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13382 = arg2[74 * steps + ((cycle - 0) & mask)];
        assert(x13382 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":137:21)
        auto x13383 = x13380 - x13382;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":137:20)
        auto x13384 = x13383 * x80;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":138:21)
        auto x13385 = x101 - x13384;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":138:7)
        auto x13386 = x13384 * x13385;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":138:7)
        assert(x13386 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/sha.cpp:138");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":150:11))
        auto x13387 = arg2[157 * steps + ((cycle - 0) & mask)];
        assert(x13387 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":150:26))
        auto x13388 = arg2[158 * steps + ((cycle - 0) & mask)];
        assert(x13388 != Fp::invalid());
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13389 = Fp(x13387.asUInt32() & x101.asUInt32());
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[193 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13389);
            reg = x13389;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13390 = Fp(x13387.asUInt32() & x98.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13391 = x13390 * x58;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[194 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13391);
            reg = x13391;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13392 = Fp(x13387.asUInt32() & x83.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13393 = x13392 * x80;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[195 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13393);
            reg = x13393;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13394 = Fp(x13387.asUInt32() & x68.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13395 = x13394 * x59;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[196 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13395);
            reg = x13395;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13396 = Fp(x13387.asUInt32() & x72.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13397 = x13396 * x60;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13397);
            reg = x13397;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13398 = Fp(x13387.asUInt32() & x62.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13399 = x13398 * x63;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13399);
            reg = x13399;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13400 = Fp(x13387.asUInt32() & x56.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13401 = x13400 * x57;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[199 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13401);
            reg = x13401;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13402 = Fp(x13387.asUInt32() & x65.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13403 = x13402 * x64;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[200 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13403);
            reg = x13403;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13404 = Fp(x13387.asUInt32() & x95.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13405 = x13404 * x96;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[201 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13405);
            reg = x13405;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13406 = Fp(x13387.asUInt32() & x21.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13407 = x13406 * x22;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[202 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13407);
            reg = x13407;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13408 = Fp(x13387.asUInt32() & x23.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13409 = x13408 * x20;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[203 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13409);
            reg = x13409;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13410 = Fp(x13387.asUInt32() & x18.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13411 = x13410 * x19;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[204 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13411);
            reg = x13411;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13412 = Fp(x13387.asUInt32() & x16.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13413 = x13412 * x17;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[205 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13413);
            reg = x13413;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13414 = Fp(x13387.asUInt32() & x14.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13415 = x13414 * x15;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[206 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13415);
            reg = x13415;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13416 = Fp(x13387.asUInt32() & x41.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13417 = x13416 * x13;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[207 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13417);
            reg = x13417;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13418 = Fp(x13387.asUInt32() & x11.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13419 = x13418 * x12;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[208 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13419);
            reg = x13419;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13420 = arg2[193 * steps + ((cycle - 0) & mask)];
        assert(x13420 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13421 = arg2[194 * steps + ((cycle - 0) & mask)];
        assert(x13421 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13422 = arg2[195 * steps + ((cycle - 0) & mask)];
        assert(x13422 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13423 = arg2[196 * steps + ((cycle - 0) & mask)];
        assert(x13423 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13424 = arg2[197 * steps + ((cycle - 0) & mask)];
        assert(x13424 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13425 = arg2[198 * steps + ((cycle - 0) & mask)];
        assert(x13425 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13426 = arg2[199 * steps + ((cycle - 0) & mask)];
        assert(x13426 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13427 = arg2[200 * steps + ((cycle - 0) & mask)];
        assert(x13427 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13428 = arg2[201 * steps + ((cycle - 0) & mask)];
        assert(x13428 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13429 = arg2[202 * steps + ((cycle - 0) & mask)];
        assert(x13429 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13430 = arg2[203 * steps + ((cycle - 0) & mask)];
        assert(x13430 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13431 = arg2[204 * steps + ((cycle - 0) & mask)];
        assert(x13431 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13432 = arg2[205 * steps + ((cycle - 0) & mask)];
        assert(x13432 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13433 = arg2[206 * steps + ((cycle - 0) & mask)];
        assert(x13433 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13434 = arg2[207 * steps + ((cycle - 0) & mask)];
        assert(x13434 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13435 = arg2[208 * steps + ((cycle - 0) & mask)];
        assert(x13435 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13436 = x13421 * x98;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13437 = x13422 * x83;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13438 = x13423 * x68;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13439 = x13424 * x72;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13440 = x13425 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13441 = x13426 * x56;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13442 = x13427 * x65;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13443 = x13428 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13444 = x13429 * x21;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13445 = x13430 * x23;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13446 = x13431 * x18;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13447 = x13432 * x16;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13448 = x13433 * x14;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13449 = x13434 * x41;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13450 = x13435 * x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13451 = x13420 + x13436;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13452 = x13451 + x13437;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13453 = x13452 + x13438;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13454 = x13453 + x13439;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13455 = x13454 + x13440;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13456 = x13455 + x13441;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13457 = x13456 + x13442;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13458 = x13457 + x13443;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13459 = x13458 + x13444;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13460 = x13459 + x13445;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13461 = x13460 + x13446;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13462 = x13461 + x13447;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13463 = x13462 + x13448;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13464 = x13463 + x13449;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13465 = x13464 + x13450;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":121:16)
        auto x13466 = x13387 - x13465;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":121:15)
        auto x13467 = x13466 * x10;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":132:26)
          auto x13468 = Fp(x13467.asUInt32() & x81.asUInt32());
          // loc("./zirgen/components/bits.h":78:23)
          {
            auto& reg = arg2[75 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13468);
            reg = x13468;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13469 = arg2[75 * steps + ((cycle - 0) & mask)];
        assert(x13469 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":133:20)
        auto x13470 = x13467 - x13469;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":133:19)
        auto x13471 = x13470 * x80;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":134:20)
        auto x13472 = x101 - x13471;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":134:7)
        auto x13473 = x13471 * x13472;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":134:7)
        assert(x13473 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/sha.cpp:134");
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":135:32)
        auto x13474 = x13388 + x13467;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13475 = Fp(x13474.asUInt32() & x101.asUInt32());
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[209 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13475);
            reg = x13475;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13476 = Fp(x13474.asUInt32() & x98.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13477 = x13476 * x58;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[210 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13477);
            reg = x13477;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13478 = Fp(x13474.asUInt32() & x83.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13479 = x13478 * x80;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[211 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13479);
            reg = x13479;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13480 = Fp(x13474.asUInt32() & x68.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13481 = x13480 * x59;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[212 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13481);
            reg = x13481;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13482 = Fp(x13474.asUInt32() & x72.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13483 = x13482 * x60;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[213 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13483);
            reg = x13483;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13484 = Fp(x13474.asUInt32() & x62.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13485 = x13484 * x63;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[214 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13485);
            reg = x13485;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13486 = Fp(x13474.asUInt32() & x56.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13487 = x13486 * x57;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[215 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13487);
            reg = x13487;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13488 = Fp(x13474.asUInt32() & x65.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13489 = x13488 * x64;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[216 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13489);
            reg = x13489;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13490 = Fp(x13474.asUInt32() & x95.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13491 = x13490 * x96;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[217 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13491);
            reg = x13491;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13492 = Fp(x13474.asUInt32() & x21.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13493 = x13492 * x22;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[218 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13493);
            reg = x13493;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13494 = Fp(x13474.asUInt32() & x23.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13495 = x13494 * x20;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[219 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13495);
            reg = x13495;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13496 = Fp(x13474.asUInt32() & x18.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13497 = x13496 * x19;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[220 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13497);
            reg = x13497;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13498 = Fp(x13474.asUInt32() & x16.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13499 = x13498 * x17;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[221 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13499);
            reg = x13499;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13500 = Fp(x13474.asUInt32() & x14.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13501 = x13500 * x15;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[222 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13501);
            reg = x13501;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13502 = Fp(x13474.asUInt32() & x41.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13503 = x13502 * x13;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[223 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13503);
            reg = x13503;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:29)
          auto x13504 = Fp(x13474.asUInt32() & x11.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":114:28)
          auto x13505 = x13504 * x12;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[224 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13505);
            reg = x13505;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13506 = arg2[209 * steps + ((cycle - 0) & mask)];
        assert(x13506 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13507 = arg2[210 * steps + ((cycle - 0) & mask)];
        assert(x13507 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13508 = arg2[211 * steps + ((cycle - 0) & mask)];
        assert(x13508 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13509 = arg2[212 * steps + ((cycle - 0) & mask)];
        assert(x13509 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13510 = arg2[213 * steps + ((cycle - 0) & mask)];
        assert(x13510 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13511 = arg2[214 * steps + ((cycle - 0) & mask)];
        assert(x13511 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13512 = arg2[215 * steps + ((cycle - 0) & mask)];
        assert(x13512 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13513 = arg2[216 * steps + ((cycle - 0) & mask)];
        assert(x13513 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13514 = arg2[217 * steps + ((cycle - 0) & mask)];
        assert(x13514 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13515 = arg2[218 * steps + ((cycle - 0) & mask)];
        assert(x13515 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13516 = arg2[219 * steps + ((cycle - 0) & mask)];
        assert(x13516 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13517 = arg2[220 * steps + ((cycle - 0) & mask)];
        assert(x13517 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13518 = arg2[221 * steps + ((cycle - 0) & mask)];
        assert(x13518 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13519 = arg2[222 * steps + ((cycle - 0) & mask)];
        assert(x13519 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13520 = arg2[223 * steps + ((cycle - 0) & mask)];
        assert(x13520 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13521 = arg2[224 * steps + ((cycle - 0) & mask)];
        assert(x13521 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13522 = x13507 * x98;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13523 = x13508 * x83;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13524 = x13509 * x68;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13525 = x13510 * x72;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13526 = x13511 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13527 = x13512 * x56;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13528 = x13513 * x65;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13529 = x13514 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13530 = x13515 * x21;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13531 = x13516 * x23;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13532 = x13517 * x18;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13533 = x13518 * x16;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13534 = x13519 * x14;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13535 = x13520 * x41;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:21)
        auto x13536 = x13521 * x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13537 = x13506 + x13522;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13538 = x13537 + x13523;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13539 = x13538 + x13524;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13540 = x13539 + x13525;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13541 = x13540 + x13526;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13542 = x13541 + x13527;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13543 = x13542 + x13528;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13544 = x13543 + x13529;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13545 = x13544 + x13530;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13546 = x13545 + x13531;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13547 = x13546 + x13532;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13548 = x13547 + x13533;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13549 = x13548 + x13534;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13550 = x13549 + x13535;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":119:13)
        auto x13551 = x13550 + x13536;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":121:16)
        auto x13552 = x13474 - x13551;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":121:15)
        auto x13553 = x13552 * x10;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":136:27)
          auto x13554 = Fp(x13553.asUInt32() & x81.asUInt32());
          // loc("./zirgen/components/bits.h":78:23)
          {
            auto& reg = arg2[76 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13554);
            reg = x13554;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13555 = arg2[76 * steps + ((cycle - 0) & mask)];
        assert(x13555 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":137:21)
        auto x13556 = x13553 - x13555;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":137:20)
        auto x13557 = x13556 * x80;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":138:21)
        auto x13558 = x101 - x13557;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":138:7)
        auto x13559 = x13557 * x13558;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":138:7)
        assert(x13559 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/sha.cpp:138");
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x13560 = arg2[152 * steps + ((cycle - 0) & mask)];
      assert(x13560 != Fp::invalid());
      if (x13560 != 0) {
        if (x9252 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":446:38))
          auto x13561 = arg2[143 * steps + ((cycle - 1) & mask)];
          assert(x13561 != Fp::invalid());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":446:7)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13561);
            reg = x13561;
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":447:38))
          auto x13562 = arg2[144 * steps + ((cycle - 1) & mask)];
          assert(x13562 != Fp::invalid());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":447:7)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13562);
            reg = x13562;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":448:7)
          {
            auto& reg = arg2[100 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x66);
            reg = x66;
          }
        }
        if (x9253 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":452:51))
          auto x13563 = arg2[143 * steps + ((cycle - 1) & mask)];
          assert(x13563 != Fp::invalid());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":452:51)
          auto x13564 = x13563 + x72;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":452:7)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13564);
            reg = x13564;
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":453:51))
          auto x13565 = arg2[144 * steps + ((cycle - 1) & mask)];
          assert(x13565 != Fp::invalid());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":453:51)
          auto x13566 = x13565 + x72;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":453:7)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13566);
            reg = x13566;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":454:7)
          {
            auto& reg = arg2[100 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x78);
            reg = x78;
          }
        }
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":457:27)
      auto x13567 = x101 - x13560;
      if (x13567 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":458:36))
        auto x13568 = arg2[143 * steps + ((cycle - 1) & mask)];
        assert(x13568 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":458:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13568);
          reg = x13568;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":459:36))
        auto x13569 = arg2[144 * steps + ((cycle - 1) & mask)];
        assert(x13569 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":459:5)
        {
          auto& reg = arg2[144 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13569);
          reg = x13569;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":460:5)
        {
          auto& reg = arg2[100 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x77);
          reg = x77;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/user_mode(Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x13570 = arg2[99 * steps + ((cycle - 0) & mask)];
      assert(x13570 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":60:7)
      auto x13571 = x13570 * x9274;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":60:7)
      auto x13572 = x13571 * x9275;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":60:7)
      assert(x13572 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:60");
    }
    // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[12](Reg)"("./zirgen/components/mux.h":59:25))
    auto x13573 = arg2[113 * steps + ((cycle - 0) & mask)];
    assert(x13573 != Fp::invalid());
    if (x13573 != 0) {
      // loc("Top/mux(Mux)/body(BodyStep)/user_mode(Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x13574 = arg2[99 * steps + ((cycle - 1) & mask)];
      assert(x13574 != Fp::invalid());
      // loc("./zirgen/components/bits.h":37:23)
      {
        auto& reg = arg2[99 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x13574);
        reg = x13574;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":34:23)
      auto x13575 = x980 + x83;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x13576 = Fp(x13575.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[6 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13576);
          reg = x13576;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x13577 = arg2[6 * steps + ((cycle - 0) & mask)];
      assert(x13577 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x13578 = x13575 - x13577;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x13579 = x13578 * x96;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x13580 = Fp(x13579.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[7 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13580);
          reg = x13580;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x13581 = arg2[7 * steps + ((cycle - 0) & mask)];
      assert(x13581 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x13582 = x13579 - x13581;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x13583 = x13582 * x96;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x13584 = Fp(x13583.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[8 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13584);
          reg = x13584;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x13585 = arg2[8 * steps + ((cycle - 0) & mask)];
      assert(x13585 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x13586 = x13583 - x13585;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x13587 = x13586 * x96;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":37:26)
        auto x13588 = Fp(x13587.asUInt32() & x81.asUInt32());
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[70 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13588);
          reg = x13588;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[0](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x13589 = arg2[70 * steps + ((cycle - 0) & mask)];
      assert(x13589 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:18)
      auto x13590 = x13587 - x13589;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:17)
      auto x13591 = x13590 * x80;
      // loc("./zirgen/components/bits.h":78:23)
      {
        auto& reg = arg2[71 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x13591);
        reg = x13591;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x13592 = arg2[71 * steps + ((cycle - 0) & mask)];
      assert(x13592 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:23)
      auto x13593 = x101 - x13592;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:15)
      auto x13594 = x13592 * x13593;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:3)
      {
        auto& reg = arg2[98 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x13594);
        reg = x13594;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:17)
      auto x13595 = x98 - x13592;
      // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x13596 = arg2[98 * steps + ((cycle - 0) & mask)];
      assert(x13596 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
      auto x13597 = x13596 * x13595;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
      assert(x13597 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:43");
      extern_args[0] = x980;
      extern_log(ctx, cycle, "  PageFault: PC = %10x", extern_args, extern_outs);
      {
        extern_args[0] = x980;
        extern_pageInfo(ctx, cycle, "", extern_args, extern_outs);
        auto x13598 = extern_outs[0];
        auto x13599 = extern_outs[1];
        auto x13600 = extern_outs[2];
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[120 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13598);
          reg = x13598;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/page_fault.cpp":53:5)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13599);
          reg = x13599;
        }
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13600);
          reg = x13600;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/page_fault(PageFaultCycle)/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x13601 = arg2[122 * steps + ((cycle - 0) & mask)];
      assert(x13601 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/page_fault.cpp":59:20)
      auto x13602 = x13601 - x5;
      {
        // loc("zirgen/components/iszero.cpp":21:24)
        auto x13603 = (x13602 == 0) ? Fp(1) : Fp(0);
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[125 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13603);
          reg = x13603;
        }
        // loc("zirgen/components/iszero.cpp":22:21)
        auto x13604 = inv(x13602);
        // loc("zirgen/components/iszero.cpp":22:5)
        {
          auto& reg = arg2[126 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13604);
          reg = x13604;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/page_fault(PageFaultCycle)/IsZero/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x13605 = arg2[125 * steps + ((cycle - 0) & mask)];
      assert(x13605 != Fp::invalid());
      if (x13605 != 0) {
        // loc("zirgen/components/iszero.cpp":26:23)
        assert(x13602 == 0 && "eqz failed at: zirgen/components/iszero.cpp:26");
      }
      // loc("zirgen/components/iszero.cpp":28:19)
      auto x13606 = x101 - x13605;
      if (x13606 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/page_fault(PageFaultCycle)/IsZero/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x13607 = arg2[126 * steps + ((cycle - 0) & mask)];
        assert(x13607 != Fp::invalid());
        // loc("zirgen/components/iszero.cpp":28:26)
        auto x13608 = x13602 * x13607;
        // loc("zirgen/components/iszero.cpp":28:26)
        auto x13609 = x13608 - x101;
        // loc("zirgen/components/iszero.cpp":28:26)
        assert(x13609 == 0 && "eqz failed at: zirgen/components/iszero.cpp:28");
      }
      if (x13605 != 0) {
        // loc("zirgen/circuit/rv32im/v1/edsl/page_fault.cpp":61:5)
        {
          auto& reg = arg2[123 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x77);
          reg = x77;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/page_fault.cpp":62:5)
        {
          auto& reg = arg2[124 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
      }
      if (x13606 != 0) {
        // loc("zirgen/circuit/rv32im/v1/edsl/page_fault.cpp":65:5)
        {
          auto& reg = arg2[123 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x72);
          reg = x72;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/page_fault.cpp":66:5)
        {
          auto& reg = arg2[124 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/page_fault(PageFaultCycle)/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x13610 = arg2[124 * steps + ((cycle - 0) & mask)];
      assert(x13610 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/page_fault.cpp":69:24)
      auto x13611 = x13601 + x13610;
      // loc("zirgen/circuit/rv32im/v1/edsl/page_fault.cpp":70:36)
      auto x13612 = x13611 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/page_fault.cpp":70:19)
      auto x13613 = x13612 + x4;
      // loc("zirgen/circuit/rv32im/v1/edsl/page_fault.cpp":71:3)
      {
        auto& reg = arg2[118 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x13613);
        reg = x13613;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/page_fault.cpp":72:3)
      {
        auto& reg = arg2[119 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3);
        reg = x3;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/page_fault(PageFaultCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x13614 = arg2[121 * steps + ((cycle - 0) & mask)];
      assert(x13614 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/page_fault.cpp":74:16)
      auto x13615 = x101 - x13614;
      if (x13615 != 0) {
        // loc("zirgen/circuit/rv32im/v1/edsl/page_fault.cpp":84:17)
        auto x13616 = x13601 - x101;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x13617 = Fp(x13616.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[9 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13617);
            reg = x13617;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x13618 = arg2[9 * steps + ((cycle - 0) & mask)];
        assert(x13618 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x13619 = x13616 - x13618;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x13620 = x13619 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x13621 = Fp(x13620.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[10 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13621);
            reg = x13621;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x13622 = arg2[10 * steps + ((cycle - 0) & mask)];
        assert(x13622 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x13623 = x13620 - x13622;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x13624 = x13623 * x96;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[72 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13624);
          reg = x13624;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/page_fault.cpp":85:17)
        auto x13625 = x5 - x13601;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x13626 = Fp(x13625.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[11 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13626);
            reg = x13626;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x13627 = arg2[11 * steps + ((cycle - 0) & mask)];
        assert(x13627 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x13628 = x13625 - x13627;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x13629 = x13628 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x13630 = Fp(x13629.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[12 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13630);
            reg = x13630;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x13631 = arg2[12 * steps + ((cycle - 0) & mask)];
        assert(x13631 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x13632 = x13629 - x13631;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x13633 = x13632 * x96;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[73 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13633);
          reg = x13633;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/page_fault.cpp":87:5)
        {
          auto& reg = arg2[100 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x67);
          reg = x67;
        }
      }
      if (x13614 != 0) {
        {
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[9 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x13634 = arg2[9 * steps + ((cycle - 0) & mask)];
        assert(x13634 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x13635 = x100 - x13634;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x13636 = x13635 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x13637 = Fp(x13636.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[10 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13637);
            reg = x13637;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x13638 = arg2[10 * steps + ((cycle - 0) & mask)];
        assert(x13638 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x13639 = x13636 - x13638;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x13640 = x13639 * x96;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[72 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13640);
          reg = x13640;
        }
        {
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[11 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x13641 = arg2[11 * steps + ((cycle - 0) & mask)];
        assert(x13641 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x13642 = x100 - x13641;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x13643 = x13642 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x13644 = Fp(x13643.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[12 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13644);
            reg = x13644;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x13645 = arg2[12 * steps + ((cycle - 0) & mask)];
        assert(x13645 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x13646 = x13643 - x13645;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x13647 = x13646 * x96;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[73 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13647);
          reg = x13647;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/page_fault.cpp":93:5)
        {
          auto& reg = arg2[100 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x72);
          reg = x72;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/user_mode(Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x13648 = arg2[99 * steps + ((cycle - 0) & mask)];
      assert(x13648 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":60:7)
      auto x13649 = x13648 * x13592;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":60:7)
      auto x13650 = x13649 * x13593;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":60:7)
      assert(x13650 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:60");
    }
    // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[13](Reg)"("./zirgen/components/mux.h":59:25))
    auto x13651 = arg2[114 * steps + ((cycle - 0) & mask)];
    assert(x13651 != Fp::invalid());
    if (x13651 != 0) {
      // loc("Top/mux(Mux)/body(BodyStep)/user_mode(Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x13652 = arg2[99 * steps + ((cycle - 1) & mask)];
      assert(x13652 != Fp::invalid());
      // loc("./zirgen/components/bits.h":37:23)
      {
        auto& reg = arg2[99 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x13652);
        reg = x13652;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/next_major(Reg)"("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":262:37))
      auto x13653 = arg2[100 * steps + ((cycle - 1) & mask)];
      assert(x13653 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":262:37)
      auto x13654 = x13653 - x75;
      // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":262:37)
      assert(x13654 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/ecall.cpp:262");
      // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[8](Reg)"("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":263:70))
      auto x13655 = arg2[109 * steps + ((cycle - 1) & mask)];
      assert(x13655 != Fp::invalid());
      if (x13655 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13656 = arg2[135 * steps + ((cycle - 1) & mask)];
        assert(x13656 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13657 = arg2[136 * steps + ((cycle - 1) & mask)];
        assert(x13657 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13658 = arg2[137 * steps + ((cycle - 1) & mask)];
        assert(x13658 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13659 = arg2[138 * steps + ((cycle - 1) & mask)];
        assert(x13659 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/Mux/2(ECallSoftware)/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13660 = arg2[76 * steps + ((cycle - 1) & mask)];
        assert(x13660 != Fp::invalid());
        // loc("./zirgen/components/u32.h":35:12)
        auto x13661 = x13657 * x95;
        // loc("./zirgen/components/u32.h":36:12)
        auto x13662 = x13658 * x82;
        // loc("./zirgen/components/u32.h":37:12)
        auto x13663 = x13659 * x84;
        // loc("./zirgen/components/u32.h":34:12)
        auto x13664 = x13656 + x13661;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":273:98)
        auto x13665 = x13660 + x101;
        // loc("./zirgen/components/u32.h":34:12)
        auto x13666 = x13664 + x13662;
        // loc("./zirgen/components/u32.h":34:12)
        auto x13667 = x13666 + x13663;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":273:98)
        auto x13668 = x13667 * x80;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":273:98)
        auto x13669 = x13668 + x13665;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":273:98)
        auto x13670 = x13669 - x83;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":271:5)
        {
          auto& reg = arg2[174 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13670);
          reg = x13670;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/Mux/2(ECallSoftware)/Reg"("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":274:63))
        auto x13671 = arg2[198 * steps + ((cycle - 1) & mask)];
        assert(x13671 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":274:5)
        {
          auto& reg = arg2[173 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13671);
          reg = x13671;
        }
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":277:22)
      auto x13672 = x101 - x13655;
      if (x13672 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":278:56))
        auto x13673 = arg2[173 * steps + ((cycle - 1) & mask)];
        assert(x13673 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":278:56)
        auto x13674 = x13673 - x101;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":278:5)
        {
          auto& reg = arg2[173 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13674);
          reg = x13674;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":279:46))
        auto x13675 = arg2[174 * steps + ((cycle - 1) & mask)];
        assert(x13675 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":279:46)
        auto x13676 = x13675 + x83;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":279:5)
        {
          auto& reg = arg2[174 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13676);
          reg = x13676;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x13677 = arg2[173 * steps + ((cycle - 0) & mask)];
      assert(x13677 != Fp::invalid());
      {
        // loc("zirgen/components/iszero.cpp":21:24)
        auto x13678 = (x13677 == 0) ? Fp(1) : Fp(0);
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[180 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13678);
          reg = x13678;
        }
        // loc("zirgen/components/iszero.cpp":22:21)
        auto x13679 = inv(x13677);
        // loc("zirgen/components/iszero.cpp":22:5)
        {
          auto& reg = arg2[181 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13679);
          reg = x13679;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/IsZero/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x13680 = arg2[180 * steps + ((cycle - 0) & mask)];
      assert(x13680 != Fp::invalid());
      if (x13680 != 0) {
        // loc("zirgen/components/iszero.cpp":26:23)
        assert(x13677 == 0 && "eqz failed at: zirgen/components/iszero.cpp:26");
      }
      // loc("zirgen/components/iszero.cpp":28:19)
      auto x13681 = x101 - x13680;
      if (x13681 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/IsZero/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x13682 = arg2[181 * steps + ((cycle - 0) & mask)];
        assert(x13682 != Fp::invalid());
        // loc("zirgen/components/iszero.cpp":28:26)
        auto x13683 = x13677 * x13682;
        // loc("zirgen/components/iszero.cpp":28:26)
        auto x13684 = x13683 - x101;
        // loc("zirgen/components/iszero.cpp":28:26)
        assert(x13684 == 0 && "eqz failed at: zirgen/components/iszero.cpp:28");
      }
      if (x13655 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/Mux/2(ECallSoftware)/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13685 = arg2[76 * steps + ((cycle - 1) & mask)];
        assert(x13685 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":287:80)
        auto x13686 = x13685 + x101;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":287:80)
        auto x13687 = x13686 * x13681;
        {
          // loc("./zirgen/components/onehot.h":47:26)
          auto x13688 = (x13687 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[175 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13688);
            reg = x13688;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x13689 = x13687 - x101;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x13690 = (x13689 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[176 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13690);
            reg = x13690;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x13691 = x13687 - x98;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x13692 = (x13691 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[177 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13692);
            reg = x13692;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x13693 = x13687 - x81;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x13694 = (x13693 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[178 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13694);
            reg = x13694;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x13695 = x13687 - x83;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x13696 = (x13695 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[179 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13696);
            reg = x13696;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/OneHot/hot[1](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x13697 = arg2[176 * steps + ((cycle - 0) & mask)];
        assert(x13697 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/OneHot/hot[2](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x13698 = arg2[177 * steps + ((cycle - 0) & mask)];
        assert(x13698 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/OneHot/hot[3](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x13699 = arg2[178 * steps + ((cycle - 0) & mask)];
        assert(x13699 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/OneHot/hot[4](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x13700 = arg2[179 * steps + ((cycle - 0) & mask)];
        assert(x13700 != Fp::invalid());
        // loc("./zirgen/components/onehot.h":56:19)
        auto x13701 = x13698 * x98;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x13702 = x13699 * x81;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x13703 = x13700 * x83;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x13704 = x13697 + x13701;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x13705 = x13704 + x13702;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x13706 = x13705 + x13703;
        // loc("./zirgen/components/onehot.h":50:8)
        auto x13707 = x13706 - x13687;
        // loc("./zirgen/components/onehot.h":50:8)
        assert(x13707 == 0 && "eqz failed at: ./zirgen/components/onehot.h:50");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x13708 = arg2[174 * steps + ((cycle - 0) & mask)];
        assert(x13708 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":290:10)
        auto x13709 = x13708 * x83;
        extern_args[0] = x13709;
        extern_args[1] = x13677;
        extern_args[2] = x13706;
        extern_log(ctx, cycle, "  COPYIN INIT: dest=%x, remaining=%u first chunk words=%u", extern_args, extern_outs);
      }
      if (x13672 != 0) {
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":295:43)
        auto x13710 = x13681 * x83;
        {
          // loc("./zirgen/components/onehot.h":47:26)
          auto x13711 = (x13710 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[175 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13711);
            reg = x13711;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x13712 = x13710 - x101;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x13713 = (x13712 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[176 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13713);
            reg = x13713;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x13714 = x13710 - x98;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x13715 = (x13714 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[177 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13715);
            reg = x13715;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x13716 = x13710 - x81;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x13717 = (x13716 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[178 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13717);
            reg = x13717;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x13718 = x13710 - x83;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x13719 = (x13718 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[179 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13719);
            reg = x13719;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/OneHot/hot[1](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x13720 = arg2[176 * steps + ((cycle - 0) & mask)];
        assert(x13720 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/OneHot/hot[2](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x13721 = arg2[177 * steps + ((cycle - 0) & mask)];
        assert(x13721 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/OneHot/hot[3](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x13722 = arg2[178 * steps + ((cycle - 0) & mask)];
        assert(x13722 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/OneHot/hot[4](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x13723 = arg2[179 * steps + ((cycle - 0) & mask)];
        assert(x13723 != Fp::invalid());
        // loc("./zirgen/components/onehot.h":56:19)
        auto x13724 = x13721 * x98;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x13725 = x13722 * x81;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x13726 = x13723 * x83;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x13727 = x13720 + x13724;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x13728 = x13727 + x13725;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x13729 = x13728 + x13726;
        // loc("./zirgen/components/onehot.h":50:8)
        auto x13730 = x13729 - x13710;
        // loc("./zirgen/components/onehot.h":50:8)
        assert(x13730 == 0 && "eqz failed at: ./zirgen/components/onehot.h:50");
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/OneHot/hot[0](Reg)"("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":297:24))
      auto x13731 = arg2[175 * steps + ((cycle - 0) & mask)];
      assert(x13731 != Fp::invalid());
      if (x13731 != 0) {
        {
          extern_syscallFini(ctx, cycle, "", extern_args, extern_outs);
          auto x13732 = extern_outs[0];
          auto x13733 = extern_outs[1];
          auto x13734 = extern_outs[2];
          auto x13735 = extern_outs[3];
          auto x13736 = extern_outs[4];
          auto x13737 = extern_outs[5];
          auto x13738 = extern_outs[6];
          auto x13739 = extern_outs[7];
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[121 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13732);
            reg = x13732;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[122 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13733);
            reg = x13733;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[123 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13734);
            reg = x13734;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[124 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13735);
            reg = x13735;
          }
          {
            extern_args[0] = x31;
            extern_args[1] = x13732;
            extern_args[2] = x13733;
            extern_args[3] = x13734;
            extern_args[4] = x13735;
            extern_args[5] = x98;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x13740 = arg2[121 * steps + ((cycle - 0) & mask)];
          assert(x13740 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x13741 = arg2[122 * steps + ((cycle - 0) & mask)];
          assert(x13741 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x13742 = arg2[123 * steps + ((cycle - 0) & mask)];
          assert(x13742 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x13743 = arg2[124 * steps + ((cycle - 0) & mask)];
          assert(x13743 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":178:3)
          {
            auto& reg = arg2[118 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x31);
            reg = x31;
          }
          // loc("zirgen/components/ram.cpp":179:3)
          {
            auto& reg = arg2[119 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x966);
            reg = x966;
          }
          // loc("zirgen/components/ram.cpp":180:3)
          {
            auto& reg = arg2[120 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x98);
            reg = x98;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[121 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13740);
            reg = x13740;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[122 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13741);
            reg = x13741;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[123 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13742);
            reg = x13742;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[124 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13743);
            reg = x13743;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[128 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13736);
            reg = x13736;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[129 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13737);
            reg = x13737;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[130 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13738);
            reg = x13738;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[131 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13739);
            reg = x13739;
          }
          {
            extern_args[0] = x32;
            extern_args[1] = x13736;
            extern_args[2] = x13737;
            extern_args[3] = x13738;
            extern_args[4] = x13739;
            extern_args[5] = x98;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x13744 = arg2[128 * steps + ((cycle - 0) & mask)];
          assert(x13744 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x13745 = arg2[129 * steps + ((cycle - 0) & mask)];
          assert(x13745 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x13746 = arg2[130 * steps + ((cycle - 0) & mask)];
          assert(x13746 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x13747 = arg2[131 * steps + ((cycle - 0) & mask)];
          assert(x13747 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":178:3)
          {
            auto& reg = arg2[125 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x32);
            reg = x32;
          }
          // loc("zirgen/components/ram.cpp":179:3)
          {
            auto& reg = arg2[126 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x966);
            reg = x966;
          }
          // loc("zirgen/components/ram.cpp":180:3)
          {
            auto& reg = arg2[127 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x98);
            reg = x98;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[128 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13744);
            reg = x13744;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[129 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13745);
            reg = x13745;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[130 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13746);
            reg = x13746;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[131 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13747);
            reg = x13747;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("zirgen/components/ram.cpp":189:10))
        auto x13748 = arg2[119 * steps + ((cycle - 0) & mask)];
        assert(x13748 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":306:8)
        auto x13749 = x13748 - x966;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":306:8)
        assert(x13749 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/ecall.cpp:306");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("zirgen/components/ram.cpp":189:10))
        auto x13750 = arg2[126 * steps + ((cycle - 0) & mask)];
        assert(x13750 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":307:8)
        auto x13751 = x13750 - x966;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":307:8)
        assert(x13751 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/ecall.cpp:307");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("zirgen/components/ram.cpp":185:10))
        auto x13752 = arg2[118 * steps + ((cycle - 0) & mask)];
        assert(x13752 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":309:8)
        auto x13753 = x13752 - x31;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":309:8)
        assert(x13753 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/ecall.cpp:309");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("zirgen/components/ram.cpp":185:10))
        auto x13754 = arg2[125 * steps + ((cycle - 0) & mask)];
        assert(x13754 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":310:8)
        auto x13755 = x13754 - x32;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":310:8)
        assert(x13755 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/ecall.cpp:310");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13756 = arg2[121 * steps + ((cycle - 0) & mask)];
        assert(x13756 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13757 = arg2[122 * steps + ((cycle - 0) & mask)];
        assert(x13757 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13758 = arg2[123 * steps + ((cycle - 0) & mask)];
        assert(x13758 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13759 = arg2[124 * steps + ((cycle - 0) & mask)];
        assert(x13759 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13760 = arg2[128 * steps + ((cycle - 0) & mask)];
        assert(x13760 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13761 = arg2[129 * steps + ((cycle - 0) & mask)];
        assert(x13761 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13762 = arg2[130 * steps + ((cycle - 0) & mask)];
        assert(x13762 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13763 = arg2[131 * steps + ((cycle - 0) & mask)];
        assert(x13763 != Fp::invalid());
        extern_args[0] = x13756;
        extern_args[1] = x13757;
        extern_args[2] = x13758;
        extern_args[3] = x13759;
        extern_args[4] = x13760;
        extern_args[5] = x13761;
        extern_args[6] = x13762;
        extern_args[7] = x13763;
        extern_log(ctx, cycle, "  COPYIN FINI: a0=%w a1=%w", extern_args, extern_outs);
        // loc("zirgen/components/ram.cpp":53:3)
        {
          auto& reg = arg2[132 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/ram.cpp":54:3)
        {
          auto& reg = arg2[133 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/ram.cpp":55:3)
        {
          auto& reg = arg2[134 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[137 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[138 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/ram.cpp":53:3)
        {
          auto& reg = arg2[139 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/ram.cpp":54:3)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/ram.cpp":55:3)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[144 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[145 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":317:19)
        auto x13764 = x980 + x83;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":34:23)
        auto x13765 = x13764 + x83;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x13766 = Fp(x13765.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13766);
            reg = x13766;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x13767 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x13767 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x13768 = x13765 - x13767;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x13769 = x13768 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x13770 = Fp(x13769.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13770);
            reg = x13770;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x13771 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x13771 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x13772 = x13769 - x13771;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x13773 = x13772 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x13774 = Fp(x13773.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13774);
            reg = x13774;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x13775 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x13775 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x13776 = x13773 - x13775;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x13777 = x13776 * x96;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":37:26)
          auto x13778 = Fp(x13777.asUInt32() & x81.asUInt32());
          // loc("./zirgen/components/bits.h":78:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13778);
            reg = x13778;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[0](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13779 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x13779 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:18)
        auto x13780 = x13777 - x13779;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:17)
        auto x13781 = x13780 * x80;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13781);
          reg = x13781;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13782 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x13782 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:23)
        auto x13783 = x101 - x13782;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:15)
        auto x13784 = x13782 * x13783;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13784);
          reg = x13784;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:17)
        auto x13785 = x98 - x13782;
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x13786 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x13786 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        auto x13787 = x13786 * x13785;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        assert(x13787 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:43");
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":318:5)
        {
          auto& reg = arg2[100 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x66);
          reg = x66;
        }
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":320:28)
      auto x13788 = x101 - x13731;
      if (x13788 != 0) {
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":34:23)
        auto x13789 = x980 + x83;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x13790 = Fp(x13789.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13790);
            reg = x13790;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x13791 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x13791 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x13792 = x13789 - x13791;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x13793 = x13792 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x13794 = Fp(x13793.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13794);
            reg = x13794;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x13795 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x13795 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x13796 = x13793 - x13795;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x13797 = x13796 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x13798 = Fp(x13797.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13798);
            reg = x13798;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x13799 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x13799 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x13800 = x13797 - x13799;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x13801 = x13800 * x96;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":37:26)
          auto x13802 = Fp(x13801.asUInt32() & x81.asUInt32());
          // loc("./zirgen/components/bits.h":78:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13802);
            reg = x13802;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[0](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13803 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x13803 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:18)
        auto x13804 = x13801 - x13803;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:17)
        auto x13805 = x13804 * x80;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13805);
          reg = x13805;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13806 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x13806 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:23)
        auto x13807 = x101 - x13806;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:15)
        auto x13808 = x13806 * x13807;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13808);
          reg = x13808;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:17)
        auto x13809 = x98 - x13806;
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x13810 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x13810 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        auto x13811 = x13810 * x13809;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        assert(x13811 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:43");
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":322:5)
        {
          auto& reg = arg2[100 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x75);
          reg = x75;
        }
      }
      // loc("./zirgen/components/bits.h":37:23)
      {
        auto& reg = arg2[99 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x13652);
        reg = x13652;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/OneHot/hot[1](Reg)"("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":333:35))
      auto x13812 = arg2[176 * steps + ((cycle - 0) & mask)];
      assert(x13812 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/OneHot/hot[4](Reg)"("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":331:35))
      auto x13813 = arg2[179 * steps + ((cycle - 0) & mask)];
      assert(x13813 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/OneHot/hot[2](Reg)"("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":333:35))
      auto x13814 = arg2[177 * steps + ((cycle - 0) & mask)];
      assert(x13814 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/OneHot/hot[3](Reg)"("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":333:35))
      auto x13815 = arg2[178 * steps + ((cycle - 0) & mask)];
      assert(x13815 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":333:22)
      auto x13816 = x13812 + x13814;
      // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":333:22)
      auto x13817 = x13816 + x13815;
      if (x13813 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x13818 = arg2[174 * steps + ((cycle - 0) & mask)];
        assert(x13818 != Fp::invalid());
        {
          extern_syscallBody(ctx, cycle, "", extern_args, extern_outs);
          auto x13819 = extern_outs[0];
          auto x13820 = extern_outs[1];
          auto x13821 = extern_outs[2];
          auto x13822 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[121 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13819);
            reg = x13819;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[122 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13820);
            reg = x13820;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[123 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13821);
            reg = x13821;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[124 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13822);
            reg = x13822;
          }
          {
            extern_args[0] = x13818;
            extern_args[1] = x13819;
            extern_args[2] = x13820;
            extern_args[3] = x13821;
            extern_args[4] = x13822;
            extern_args[5] = x98;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x13823 = arg2[121 * steps + ((cycle - 0) & mask)];
          assert(x13823 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x13824 = arg2[122 * steps + ((cycle - 0) & mask)];
          assert(x13824 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x13825 = arg2[123 * steps + ((cycle - 0) & mask)];
          assert(x13825 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x13826 = arg2[124 * steps + ((cycle - 0) & mask)];
          assert(x13826 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":178:3)
          {
            auto& reg = arg2[118 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13818);
            reg = x13818;
          }
          // loc("zirgen/components/ram.cpp":179:3)
          {
            auto& reg = arg2[119 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x966);
            reg = x966;
          }
          // loc("zirgen/components/ram.cpp":180:3)
          {
            auto& reg = arg2[120 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x98);
            reg = x98;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[121 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13823);
            reg = x13823;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[122 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13824);
            reg = x13824;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[123 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13825);
            reg = x13825;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[124 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13826);
            reg = x13826;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":342:41)
          auto x13827 = x13818 * x83;
          extern_args[0] = x13827;
          extern_args[1] = x13823;
          extern_args[2] = x13824;
          extern_args[3] = x13825;
          extern_args[4] = x13826;
          extern_log(ctx, cycle, "  COPYIN BODY: %x <- %w", extern_args, extern_outs);
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("zirgen/components/ram.cpp":189:10))
        auto x13828 = arg2[119 * steps + ((cycle - 0) & mask)];
        assert(x13828 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":345:10)
        auto x13829 = x13828 - x966;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":345:10)
        assert(x13829 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/ecall.cpp:345");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("zirgen/components/ram.cpp":185:10))
        auto x13830 = arg2[118 * steps + ((cycle - 0) & mask)];
        assert(x13830 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":346:10)
        auto x13831 = x13830 - x13818;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":346:10)
        assert(x13831 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/ecall.cpp:346");
      }
      if (x13817 != 0) {
        // loc("zirgen/components/ram.cpp":53:3)
        {
          auto& reg = arg2[118 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/ram.cpp":54:3)
        {
          auto& reg = arg2[119 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/ram.cpp":55:3)
        {
          auto& reg = arg2[120 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[123 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[124 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x13832 = arg2[121 * steps + ((cycle - 0) & mask)];
      assert(x13832 != Fp::invalid());
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x13833 = Fp(x13832.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[18 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13833);
          reg = x13833;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x13834 = arg2[122 * steps + ((cycle - 0) & mask)];
      assert(x13834 != Fp::invalid());
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x13835 = Fp(x13834.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[19 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13835);
          reg = x13835;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x13836 = arg2[123 * steps + ((cycle - 0) & mask)];
      assert(x13836 != Fp::invalid());
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x13837 = Fp(x13836.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[20 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13837);
          reg = x13837;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x13838 = arg2[124 * steps + ((cycle - 0) & mask)];
      assert(x13838 != Fp::invalid());
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x13839 = Fp(x13838.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[21 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13839);
          reg = x13839;
        }
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":331:22)
      auto x13840 = x13815 + x13813;
      if (x13840 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x13841 = arg2[174 * steps + ((cycle - 0) & mask)];
        assert(x13841 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":338:23)
        auto x13842 = x13841 + x101;
        {
          extern_syscallBody(ctx, cycle, "", extern_args, extern_outs);
          auto x13843 = extern_outs[0];
          auto x13844 = extern_outs[1];
          auto x13845 = extern_outs[2];
          auto x13846 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[128 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13843);
            reg = x13843;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[129 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13844);
            reg = x13844;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[130 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13845);
            reg = x13845;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[131 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13846);
            reg = x13846;
          }
          {
            extern_args[0] = x13842;
            extern_args[1] = x13843;
            extern_args[2] = x13844;
            extern_args[3] = x13845;
            extern_args[4] = x13846;
            extern_args[5] = x98;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x13847 = arg2[128 * steps + ((cycle - 0) & mask)];
          assert(x13847 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x13848 = arg2[129 * steps + ((cycle - 0) & mask)];
          assert(x13848 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x13849 = arg2[130 * steps + ((cycle - 0) & mask)];
          assert(x13849 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x13850 = arg2[131 * steps + ((cycle - 0) & mask)];
          assert(x13850 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":178:3)
          {
            auto& reg = arg2[125 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13842);
            reg = x13842;
          }
          // loc("zirgen/components/ram.cpp":179:3)
          {
            auto& reg = arg2[126 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x966);
            reg = x966;
          }
          // loc("zirgen/components/ram.cpp":180:3)
          {
            auto& reg = arg2[127 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x98);
            reg = x98;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[128 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13847);
            reg = x13847;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[129 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13848);
            reg = x13848;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[130 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13849);
            reg = x13849;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[131 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13850);
            reg = x13850;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":342:41)
          auto x13851 = x13842 * x83;
          extern_args[0] = x13851;
          extern_args[1] = x13847;
          extern_args[2] = x13848;
          extern_args[3] = x13849;
          extern_args[4] = x13850;
          extern_log(ctx, cycle, "  COPYIN BODY: %x <- %w", extern_args, extern_outs);
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("zirgen/components/ram.cpp":189:10))
        auto x13852 = arg2[126 * steps + ((cycle - 0) & mask)];
        assert(x13852 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":345:10)
        auto x13853 = x13852 - x966;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":345:10)
        assert(x13853 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/ecall.cpp:345");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("zirgen/components/ram.cpp":185:10))
        auto x13854 = arg2[125 * steps + ((cycle - 0) & mask)];
        assert(x13854 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":346:10)
        auto x13855 = x13854 - x13842;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":346:10)
        assert(x13855 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/ecall.cpp:346");
      }
      if (x13816 != 0) {
        // loc("zirgen/components/ram.cpp":53:3)
        {
          auto& reg = arg2[125 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/ram.cpp":54:3)
        {
          auto& reg = arg2[126 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/ram.cpp":55:3)
        {
          auto& reg = arg2[127 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[128 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[129 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[130 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[131 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x13856 = arg2[128 * steps + ((cycle - 0) & mask)];
      assert(x13856 != Fp::invalid());
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x13857 = Fp(x13856.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[22 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13857);
          reg = x13857;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x13858 = arg2[129 * steps + ((cycle - 0) & mask)];
      assert(x13858 != Fp::invalid());
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x13859 = Fp(x13858.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[23 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13859);
          reg = x13859;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x13860 = arg2[130 * steps + ((cycle - 0) & mask)];
      assert(x13860 != Fp::invalid());
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x13861 = Fp(x13860.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[24 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13861);
          reg = x13861;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x13862 = arg2[131 * steps + ((cycle - 0) & mask)];
      assert(x13862 != Fp::invalid());
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x13863 = Fp(x13862.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[25 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13863);
          reg = x13863;
        }
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":331:22)
      auto x13864 = x13814 + x13815;
      // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":331:22)
      auto x13865 = x13864 + x13813;
      if (x13865 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x13866 = arg2[174 * steps + ((cycle - 0) & mask)];
        assert(x13866 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":338:23)
        auto x13867 = x13866 + x98;
        {
          extern_syscallBody(ctx, cycle, "", extern_args, extern_outs);
          auto x13868 = extern_outs[0];
          auto x13869 = extern_outs[1];
          auto x13870 = extern_outs[2];
          auto x13871 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[135 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13868);
            reg = x13868;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[136 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13869);
            reg = x13869;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13870);
            reg = x13870;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13871);
            reg = x13871;
          }
          {
            extern_args[0] = x13867;
            extern_args[1] = x13868;
            extern_args[2] = x13869;
            extern_args[3] = x13870;
            extern_args[4] = x13871;
            extern_args[5] = x98;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x13872 = arg2[135 * steps + ((cycle - 0) & mask)];
          assert(x13872 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x13873 = arg2[136 * steps + ((cycle - 0) & mask)];
          assert(x13873 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x13874 = arg2[137 * steps + ((cycle - 0) & mask)];
          assert(x13874 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x13875 = arg2[138 * steps + ((cycle - 0) & mask)];
          assert(x13875 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":178:3)
          {
            auto& reg = arg2[132 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13867);
            reg = x13867;
          }
          // loc("zirgen/components/ram.cpp":179:3)
          {
            auto& reg = arg2[133 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x966);
            reg = x966;
          }
          // loc("zirgen/components/ram.cpp":180:3)
          {
            auto& reg = arg2[134 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x98);
            reg = x98;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[135 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13872);
            reg = x13872;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[136 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13873);
            reg = x13873;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13874);
            reg = x13874;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13875);
            reg = x13875;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":342:41)
          auto x13876 = x13867 * x83;
          extern_args[0] = x13876;
          extern_args[1] = x13872;
          extern_args[2] = x13873;
          extern_args[3] = x13874;
          extern_args[4] = x13875;
          extern_log(ctx, cycle, "  COPYIN BODY: %x <- %w", extern_args, extern_outs);
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("zirgen/components/ram.cpp":189:10))
        auto x13877 = arg2[133 * steps + ((cycle - 0) & mask)];
        assert(x13877 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":345:10)
        auto x13878 = x13877 - x966;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":345:10)
        assert(x13878 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/ecall.cpp:345");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("zirgen/components/ram.cpp":185:10))
        auto x13879 = arg2[132 * steps + ((cycle - 0) & mask)];
        assert(x13879 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":346:10)
        auto x13880 = x13879 - x13867;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":346:10)
        assert(x13880 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/ecall.cpp:346");
      }
      if (x13812 != 0) {
        // loc("zirgen/components/ram.cpp":53:3)
        {
          auto& reg = arg2[132 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/ram.cpp":54:3)
        {
          auto& reg = arg2[133 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/ram.cpp":55:3)
        {
          auto& reg = arg2[134 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[137 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[138 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x13881 = arg2[135 * steps + ((cycle - 0) & mask)];
      assert(x13881 != Fp::invalid());
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x13882 = Fp(x13881.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[26 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13882);
          reg = x13882;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x13883 = arg2[136 * steps + ((cycle - 0) & mask)];
      assert(x13883 != Fp::invalid());
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x13884 = Fp(x13883.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[27 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13884);
          reg = x13884;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x13885 = arg2[137 * steps + ((cycle - 0) & mask)];
      assert(x13885 != Fp::invalid());
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x13886 = Fp(x13885.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[28 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13886);
          reg = x13886;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x13887 = arg2[138 * steps + ((cycle - 0) & mask)];
      assert(x13887 != Fp::invalid());
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x13888 = Fp(x13887.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[29 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13888);
          reg = x13888;
        }
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":331:22)
      auto x13889 = x13817 + x13813;
      if (x13889 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x13890 = arg2[174 * steps + ((cycle - 0) & mask)];
        assert(x13890 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":338:23)
        auto x13891 = x13890 + x81;
        {
          extern_syscallBody(ctx, cycle, "", extern_args, extern_outs);
          auto x13892 = extern_outs[0];
          auto x13893 = extern_outs[1];
          auto x13894 = extern_outs[2];
          auto x13895 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13892);
            reg = x13892;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13893);
            reg = x13893;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13894);
            reg = x13894;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13895);
            reg = x13895;
          }
          {
            extern_args[0] = x13891;
            extern_args[1] = x13892;
            extern_args[2] = x13893;
            extern_args[3] = x13894;
            extern_args[4] = x13895;
            extern_args[5] = x98;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x13896 = arg2[142 * steps + ((cycle - 0) & mask)];
          assert(x13896 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x13897 = arg2[143 * steps + ((cycle - 0) & mask)];
          assert(x13897 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x13898 = arg2[144 * steps + ((cycle - 0) & mask)];
          assert(x13898 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x13899 = arg2[145 * steps + ((cycle - 0) & mask)];
          assert(x13899 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":178:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13891);
            reg = x13891;
          }
          // loc("zirgen/components/ram.cpp":179:3)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x966);
            reg = x966;
          }
          // loc("zirgen/components/ram.cpp":180:3)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x98);
            reg = x98;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13896);
            reg = x13896;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13897);
            reg = x13897;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13898);
            reg = x13898;
          }
          // loc("zirgen/components/u32.cpp":44:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13899);
            reg = x13899;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":342:41)
          auto x13900 = x13891 * x83;
          extern_args[0] = x13900;
          extern_args[1] = x13896;
          extern_args[2] = x13897;
          extern_args[3] = x13898;
          extern_args[4] = x13899;
          extern_log(ctx, cycle, "  COPYIN BODY: %x <- %w", extern_args, extern_outs);
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("zirgen/components/ram.cpp":189:10))
        auto x13901 = arg2[140 * steps + ((cycle - 0) & mask)];
        assert(x13901 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":345:10)
        auto x13902 = x13901 - x966;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":345:10)
        assert(x13902 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/ecall.cpp:345");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("zirgen/components/ram.cpp":185:10))
        auto x13903 = arg2[139 * steps + ((cycle - 0) & mask)];
        assert(x13903 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":346:10)
        auto x13904 = x13903 - x13891;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":346:10)
        assert(x13904 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/ecall.cpp:346");
      }
      if (x100 != 0) {
        // loc("zirgen/components/ram.cpp":53:3)
        {
          auto& reg = arg2[139 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/ram.cpp":54:3)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/ram.cpp":55:3)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[144 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[145 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x13905 = arg2[142 * steps + ((cycle - 0) & mask)];
      assert(x13905 != Fp::invalid());
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x13906 = Fp(x13905.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[30 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13906);
          reg = x13906;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x13907 = arg2[143 * steps + ((cycle - 0) & mask)];
      assert(x13907 != Fp::invalid());
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x13908 = Fp(x13907.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[31 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13908);
          reg = x13908;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x13909 = arg2[144 * steps + ((cycle - 0) & mask)];
      assert(x13909 != Fp::invalid());
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":240:29)
        auto x13910 = Fp(x13909.asUInt32() & x81.asUInt32());
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[75 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13910);
          reg = x13910;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/TwitByteReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x13911 = arg2[75 * steps + ((cycle - 0) & mask)];
      assert(x13911 != Fp::invalid());
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":240:29)
        auto x13912 = Fp(x13909.asUInt32() & x76.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":240:28)
        auto x13913 = x13912 * x80;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[76 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13913);
          reg = x13913;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/TwitByteReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x13914 = arg2[76 * steps + ((cycle - 0) & mask)];
      assert(x13914 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":241:21)
      auto x13915 = x13914 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":241:13)
      auto x13916 = x13911 + x13915;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":240:29)
        auto x13917 = Fp(x13909.asUInt32() & x55.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":240:28)
        auto x13918 = x13917 * x60;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[77 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13918);
          reg = x13918;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/TwitByteReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x13919 = arg2[77 * steps + ((cycle - 0) & mask)];
      assert(x13919 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":241:21)
      auto x13920 = x13919 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":241:13)
      auto x13921 = x13916 + x13920;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":240:29)
        auto x13922 = Fp(x13909.asUInt32() & x38.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":240:28)
        auto x13923 = x13922 * x57;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[78 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13923);
          reg = x13923;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/TwitByteReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x13924 = arg2[78 * steps + ((cycle - 0) & mask)];
      assert(x13924 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":241:21)
      auto x13925 = x13924 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":241:13)
      auto x13926 = x13921 + x13925;
      // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":243:6)
      auto x13927 = x13926 - x13909;
      // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":243:6)
      assert(x13927 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/ecall.cpp:243");
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x13928 = arg2[145 * steps + ((cycle - 0) & mask)];
      assert(x13928 != Fp::invalid());
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":240:29)
        auto x13929 = Fp(x13928.asUInt32() & x81.asUInt32());
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[79 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13929);
          reg = x13929;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/TwitByteReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x13930 = arg2[79 * steps + ((cycle - 0) & mask)];
      assert(x13930 != Fp::invalid());
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":240:29)
        auto x13931 = Fp(x13928.asUInt32() & x76.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":240:28)
        auto x13932 = x13931 * x80;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[80 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13932);
          reg = x13932;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/TwitByteReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x13933 = arg2[80 * steps + ((cycle - 0) & mask)];
      assert(x13933 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":241:21)
      auto x13934 = x13933 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":241:13)
      auto x13935 = x13930 + x13934;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":240:29)
        auto x13936 = Fp(x13928.asUInt32() & x55.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":240:28)
        auto x13937 = x13936 * x60;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[81 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13937);
          reg = x13937;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/TwitByteReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x13938 = arg2[81 * steps + ((cycle - 0) & mask)];
      assert(x13938 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":241:21)
      auto x13939 = x13938 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":241:13)
      auto x13940 = x13935 + x13939;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":240:29)
        auto x13941 = Fp(x13928.asUInt32() & x38.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":240:28)
        auto x13942 = x13941 * x57;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[82 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13942);
          reg = x13942;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/TwitByteReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x13943 = arg2[82 * steps + ((cycle - 0) & mask)];
      assert(x13943 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":241:21)
      auto x13944 = x13943 * x56;
      // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":241:13)
      auto x13945 = x13940 + x13944;
      // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":243:6)
      auto x13946 = x13945 - x13928;
      // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":243:6)
      assert(x13946 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/ecall.cpp:243");
      // loc("Top/mux(Mux)/body(BodyStep)/user_mode(Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x13947 = arg2[99 * steps + ((cycle - 0) & mask)];
      assert(x13947 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x13948 = arg2[71 * steps + ((cycle - 0) & mask)];
      assert(x13948 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":60:7)
      auto x13949 = x13947 * x13948;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":60:26)
      auto x13950 = x101 - x13948;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":60:7)
      auto x13951 = x13949 * x13950;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":60:7)
      assert(x13951 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:60");
    }
    // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[14](Reg)"("./zirgen/components/mux.h":59:25))
    auto x13952 = arg2[115 * steps + ((cycle - 0) & mask)];
    assert(x13952 != Fp::invalid());
    if (x13952 != 0) {
      // loc("Top/mux(Mux)/body(BodyStep)/user_mode(Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x13953 = arg2[99 * steps + ((cycle - 1) & mask)];
      assert(x13953 != Fp::invalid());
      // loc("./zirgen/components/bits.h":37:23)
      {
        auto& reg = arg2[99 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x13953);
        reg = x13953;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/next_major(Reg)"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":189:37))
      auto x13954 = arg2[100 * steps + ((cycle - 1) & mask)];
      assert(x13954 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":189:37)
      auto x13955 = x13954 - x74;
      // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":189:37)
      assert(x13955 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:189");
      // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[8](Reg)"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":190:70))
      auto x13956 = arg2[109 * steps + ((cycle - 1) & mask)];
      assert(x13956 != Fp::invalid());
      if (x13956 != 0) {
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[179 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        {
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[174 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[175 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[176 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[177 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[178 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/OneHot/hot[1](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x13957 = arg2[175 * steps + ((cycle - 0) & mask)];
        assert(x13957 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/OneHot/hot[2](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x13958 = arg2[176 * steps + ((cycle - 0) & mask)];
        assert(x13958 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/OneHot/hot[3](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x13959 = arg2[177 * steps + ((cycle - 0) & mask)];
        assert(x13959 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/OneHot/hot[4](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x13960 = arg2[178 * steps + ((cycle - 0) & mask)];
        assert(x13960 != Fp::invalid());
        // loc("./zirgen/components/onehot.h":56:19)
        auto x13961 = x13958 * x98;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x13962 = x13959 * x81;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x13963 = x13960 * x83;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x13964 = x13957 + x13961;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x13965 = x13964 + x13962;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x13966 = x13965 + x13963;
        // loc("./zirgen/components/onehot.h":50:8)
        assert(x13966 == 0 && "eqz failed at: ./zirgen/components/onehot.h:50");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13967 = arg2[135 * steps + ((cycle - 1) & mask)];
        assert(x13967 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13968 = arg2[136 * steps + ((cycle - 1) & mask)];
        assert(x13968 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13969 = arg2[137 * steps + ((cycle - 1) & mask)];
        assert(x13969 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13970 = arg2[138 * steps + ((cycle - 1) & mask)];
        assert(x13970 != Fp::invalid());
        // loc("./zirgen/components/u32.h":35:12)
        auto x13971 = x13968 * x95;
        // loc("./zirgen/components/u32.h":36:12)
        auto x13972 = x13969 * x82;
        // loc("./zirgen/components/u32.h":37:12)
        auto x13973 = x13970 * x84;
        // loc("./zirgen/components/u32.h":34:12)
        auto x13974 = x13967 + x13971;
        // loc("./zirgen/components/u32.h":34:12)
        auto x13975 = x13974 + x13972;
        // loc("./zirgen/components/u32.h":34:12)
        auto x13976 = x13975 + x13973;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":200:9)
        assert(x13976 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:200");
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":202:22)
      auto x13977 = x101 - x13956;
      if (x13977 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/OneHot/hot[0](Reg)"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":203:47))
        auto x13978 = arg2[174 * steps + ((cycle - 1) & mask)];
        assert(x13978 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13979 = arg2[179 * steps + ((cycle - 1) & mask)];
        assert(x13979 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":203:23)
        auto x13980 = x101 - x13978;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":203:22)
        auto x13981 = x13980 - x13979;
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[179 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13981);
          reg = x13981;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x13982 = arg2[179 * steps + ((cycle - 0) & mask)];
        assert(x13982 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/OneHot/hot[1](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x13983 = arg2[175 * steps + ((cycle - 1) & mask)];
        assert(x13983 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/OneHot/hot[2](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x13984 = arg2[176 * steps + ((cycle - 1) & mask)];
        assert(x13984 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/OneHot/hot[3](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x13985 = arg2[177 * steps + ((cycle - 1) & mask)];
        assert(x13985 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/OneHot/hot[4](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x13986 = arg2[178 * steps + ((cycle - 1) & mask)];
        assert(x13986 != Fp::invalid());
        // loc("./zirgen/components/onehot.h":56:19)
        auto x13987 = x13984 * x98;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x13988 = x13985 * x81;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x13989 = x13986 * x83;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":204:41)
        auto x13990 = x101 - x13982;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x13991 = x13983 + x13987;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x13992 = x13991 + x13988;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x13993 = x13992 + x13989;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":204:36)
        auto x13994 = x13993 + x13990;
        {
          // loc("./zirgen/components/onehot.h":47:26)
          auto x13995 = (x13994 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[174 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13995);
            reg = x13995;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x13996 = x13994 - x101;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x13997 = (x13996 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[175 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13997);
            reg = x13997;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x13998 = x13994 - x98;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x13999 = (x13998 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[176 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13999);
            reg = x13999;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x14000 = x13994 - x81;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x14001 = (x14000 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[177 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x14001);
            reg = x14001;
          }
          // loc("./zirgen/components/onehot.h":47:26)
          auto x14002 = x13994 - x83;
          // loc("./zirgen/components/onehot.h":47:26)
          auto x14003 = (x14002 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[178 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x14003);
            reg = x14003;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/OneHot/hot[1](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x14004 = arg2[175 * steps + ((cycle - 0) & mask)];
        assert(x14004 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/OneHot/hot[2](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x14005 = arg2[176 * steps + ((cycle - 0) & mask)];
        assert(x14005 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/OneHot/hot[3](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x14006 = arg2[177 * steps + ((cycle - 0) & mask)];
        assert(x14006 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/OneHot/hot[4](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x14007 = arg2[178 * steps + ((cycle - 0) & mask)];
        assert(x14007 != Fp::invalid());
        // loc("./zirgen/components/onehot.h":56:19)
        auto x14008 = x14005 * x98;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x14009 = x14006 * x81;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x14010 = x14007 * x83;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x14011 = x14004 + x14008;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x14012 = x14011 + x14009;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x14013 = x14012 + x14010;
        // loc("./zirgen/components/onehot.h":50:8)
        auto x14014 = x14013 - x13994;
        // loc("./zirgen/components/onehot.h":50:8)
        assert(x14014 == 0 && "eqz failed at: ./zirgen/components/onehot.h:50");
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/OneHot/hot[2](Reg)"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":206:19))
      auto x14015 = arg2[176 * steps + ((cycle - 0) & mask)];
      assert(x14015 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/OneHot/hot[4](Reg)"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":206:34))
      auto x14016 = arg2[178 * steps + ((cycle - 0) & mask)];
      assert(x14016 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x14017 = arg2[179 * steps + ((cycle - 0) & mask)];
      assert(x14017 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":206:19)
      auto x14018 = x14015 + x14016;
      // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":206:18)
      auto x14019 = x14018 * x14017;
      // loc("./zirgen/components/bits.h":37:23)
      {
        auto& reg = arg2[180 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x14019);
        reg = x14019;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":207:17)
      auto x14020 = x14016 * x14017;
      // loc("./zirgen/components/bits.h":37:23)
      {
        auto& reg = arg2[181 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x14020);
        reg = x14020;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/OneHot/hot[1](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x14021 = arg2[175 * steps + ((cycle - 0) & mask)];
      assert(x14021 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/OneHot/hot[3](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x14022 = arg2[177 * steps + ((cycle - 0) & mask)];
      assert(x14022 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x14023 = arg2[180 * steps + ((cycle - 0) & mask)];
      assert(x14023 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x14024 = arg2[181 * steps + ((cycle - 0) & mask)];
      assert(x14024 != Fp::invalid());
      // loc("./zirgen/components/onehot.h":56:19)
      auto x14025 = x14015 * x98;
      // loc("./zirgen/components/onehot.h":56:19)
      auto x14026 = x14022 * x81;
      // loc("./zirgen/components/onehot.h":56:19)
      auto x14027 = x14016 * x83;
      // loc("./zirgen/components/onehot.h":56:13)
      auto x14028 = x14021 + x14025;
      // loc("./zirgen/components/onehot.h":56:13)
      auto x14029 = x14028 + x14026;
      // loc("./zirgen/components/onehot.h":56:13)
      auto x14030 = x14029 + x14027;
      extern_args[0] = x14030;
      extern_args[1] = x14017;
      extern_args[2] = x14023;
      extern_args[3] = x14024;
      extern_log(ctx, cycle, "BIGINT: stage = %u, stageOffset = %u, mulActive = %u, finalize = %u", extern_args, extern_outs);
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/OneHot/hot[0](Reg)"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":215:18))
      auto x14031 = arg2[174 * steps + ((cycle - 0) & mask)];
      assert(x14031 != Fp::invalid());
      if (x14031 != 0) {
        {
          extern_args[0] = x31;
          extern_args[1] = x101;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x14032 = extern_outs[0];
          auto x14033 = extern_outs[1];
          auto x14034 = extern_outs[2];
          auto x14035 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[121 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x14032);
            reg = x14032;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[122 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x14033);
            reg = x14033;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[123 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x14034);
            reg = x14034;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[124 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x14035);
            reg = x14035;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x14036 = arg2[121 * steps + ((cycle - 0) & mask)];
        assert(x14036 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x14037 = arg2[122 * steps + ((cycle - 0) & mask)];
        assert(x14037 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x14038 = arg2[123 * steps + ((cycle - 0) & mask)];
        assert(x14038 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x14039 = arg2[124 * steps + ((cycle - 0) & mask)];
        assert(x14039 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[118 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x31);
          reg = x31;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[119 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x966);
          reg = x966;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[120 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x14036);
          reg = x14036;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x14037);
          reg = x14037;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[123 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x14038);
          reg = x14038;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[124 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x14039);
          reg = x14039;
        }
        {
          extern_args[0] = x25;
          extern_args[1] = x101;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x14040 = extern_outs[0];
          auto x14041 = extern_outs[1];
          auto x14042 = extern_outs[2];
          auto x14043 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[128 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x14040);
            reg = x14040;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[129 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x14041);
            reg = x14041;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[130 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x14042);
            reg = x14042;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[131 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x14043);
            reg = x14043;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x14044 = arg2[128 * steps + ((cycle - 0) & mask)];
        assert(x14044 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x14045 = arg2[129 * steps + ((cycle - 0) & mask)];
        assert(x14045 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x14046 = arg2[130 * steps + ((cycle - 0) & mask)];
        assert(x14046 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x14047 = arg2[131 * steps + ((cycle - 0) & mask)];
        assert(x14047 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[125 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x25);
          reg = x25;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[126 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x966);
          reg = x966;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[127 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[128 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x14044);
          reg = x14044;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[129 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x14045);
          reg = x14045;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[130 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x14046);
          reg = x14046;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[131 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x14047);
          reg = x14047;
        }
        {
          extern_args[0] = x24;
          extern_args[1] = x101;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x14048 = extern_outs[0];
          auto x14049 = extern_outs[1];
          auto x14050 = extern_outs[2];
          auto x14051 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[135 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x14048);
            reg = x14048;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[136 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x14049);
            reg = x14049;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x14050);
            reg = x14050;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x14051);
            reg = x14051;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x14052 = arg2[135 * steps + ((cycle - 0) & mask)];
        assert(x14052 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x14053 = arg2[136 * steps + ((cycle - 0) & mask)];
        assert(x14053 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x14054 = arg2[137 * steps + ((cycle - 0) & mask)];
        assert(x14054 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x14055 = arg2[138 * steps + ((cycle - 0) & mask)];
        assert(x14055 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[132 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x24);
          reg = x24;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[133 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x966);
          reg = x966;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[134 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x14052);
          reg = x14052;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x14053);
          reg = x14053;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[137 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x14054);
          reg = x14054;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[138 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x14055);
          reg = x14055;
        }
        {
          extern_args[0] = x30;
          extern_args[1] = x101;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x14056 = extern_outs[0];
          auto x14057 = extern_outs[1];
          auto x14058 = extern_outs[2];
          auto x14059 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x14056);
            reg = x14056;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x14057);
            reg = x14057;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x14058);
            reg = x14058;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x14059);
            reg = x14059;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x14060 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x14060 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x14061 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x14061 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x14062 = arg2[144 * steps + ((cycle - 0) & mask)];
        assert(x14062 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x14063 = arg2[145 * steps + ((cycle - 0) & mask)];
        assert(x14063 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[139 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x30);
          reg = x30;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x966);
          reg = x966;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x14060);
          reg = x14060;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x14061);
          reg = x14061;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[144 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x14062);
          reg = x14062;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[145 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x14063);
          reg = x14063;
        }
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":223:21)
      auto x14064 = x101 - x14017;
      if (x14064 != 0) {
        if (x14021 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x14065 = arg2[142 * steps + ((cycle - 1) & mask)];
          assert(x14065 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x14066 = arg2[143 * steps + ((cycle - 1) & mask)];
          assert(x14066 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x14067 = arg2[144 * steps + ((cycle - 1) & mask)];
          assert(x14067 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x14068 = arg2[145 * steps + ((cycle - 1) & mask)];
          assert(x14068 != Fp::invalid());
          // loc("./zirgen/components/u32.h":35:12)
          auto x14069 = x14066 * x95;
          // loc("./zirgen/components/u32.h":36:12)
          auto x14070 = x14067 * x82;
          // loc("./zirgen/components/u32.h":37:12)
          auto x14071 = x14068 * x84;
          // loc("./zirgen/components/u32.h":34:12)
          auto x14072 = x14065 + x14069;
          // loc("./zirgen/components/u32.h":34:12)
          auto x14073 = x14072 + x14070;
          // loc("./zirgen/components/u32.h":34:12)
          auto x14074 = x14073 + x14071;
          // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":249:83)
          auto x14075 = x14074 * x80;
          // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":249:9)
          {
            auto& reg = arg2[173 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x14075);
            reg = x14075;
          }
        }
        if (x14015 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x14076 = arg2[128 * steps + ((cycle - 3) & mask)];
          assert(x14076 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x14077 = arg2[129 * steps + ((cycle - 3) & mask)];
          assert(x14077 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x14078 = arg2[130 * steps + ((cycle - 3) & mask)];
          assert(x14078 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x14079 = arg2[131 * steps + ((cycle - 3) & mask)];
          assert(x14079 != Fp::invalid());
          // loc("./zirgen/components/u32.h":35:12)
          auto x14080 = x14077 * x95;
          // loc("./zirgen/components/u32.h":36:12)
          auto x14081 = x14078 * x82;
          // loc("./zirgen/components/u32.h":37:12)
          auto x14082 = x14079 * x84;
          // loc("./zirgen/components/u32.h":34:12)
          auto x14083 = x14076 + x14080;
          // loc("./zirgen/components/u32.h":34:12)
          auto x14084 = x14083 + x14081;
          // loc("./zirgen/components/u32.h":34:12)
          auto x14085 = x14084 + x14082;
          // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":249:83)
          auto x14086 = x14085 * x80;
          // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":249:9)
          {
            auto& reg = arg2[173 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x14086);
            reg = x14086;
          }
        }
        if (x14022 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x14087 = arg2[135 * steps + ((cycle - 5) & mask)];
          assert(x14087 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x14088 = arg2[136 * steps + ((cycle - 5) & mask)];
          assert(x14088 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x14089 = arg2[137 * steps + ((cycle - 5) & mask)];
          assert(x14089 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x14090 = arg2[138 * steps + ((cycle - 5) & mask)];
          assert(x14090 != Fp::invalid());
          // loc("./zirgen/components/u32.h":35:12)
          auto x14091 = x14088 * x95;
          // loc("./zirgen/components/u32.h":36:12)
          auto x14092 = x14089 * x82;
          // loc("./zirgen/components/u32.h":37:12)
          auto x14093 = x14090 * x84;
          // loc("./zirgen/components/u32.h":34:12)
          auto x14094 = x14087 + x14091;
          // loc("./zirgen/components/u32.h":34:12)
          auto x14095 = x14094 + x14092;
          // loc("./zirgen/components/u32.h":34:12)
          auto x14096 = x14095 + x14093;
          // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":249:83)
          auto x14097 = x14096 * x80;
          // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":249:9)
          {
            auto& reg = arg2[173 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x14097);
            reg = x14097;
          }
        }
        if (x14016 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x14098 = arg2[121 * steps + ((cycle - 7) & mask)];
          assert(x14098 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x14099 = arg2[122 * steps + ((cycle - 7) & mask)];
          assert(x14099 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x14100 = arg2[123 * steps + ((cycle - 7) & mask)];
          assert(x14100 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x14101 = arg2[124 * steps + ((cycle - 7) & mask)];
          assert(x14101 != Fp::invalid());
          // loc("./zirgen/components/u32.h":35:12)
          auto x14102 = x14099 * x95;
          // loc("./zirgen/components/u32.h":36:12)
          auto x14103 = x14100 * x82;
          // loc("./zirgen/components/u32.h":37:12)
          auto x14104 = x14101 * x84;
          // loc("./zirgen/components/u32.h":34:12)
          auto x14105 = x14098 + x14102;
          // loc("./zirgen/components/u32.h":34:12)
          auto x14106 = x14105 + x14103;
          // loc("./zirgen/components/u32.h":34:12)
          auto x14107 = x14106 + x14104;
          // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":249:83)
          auto x14108 = x14107 * x80;
          // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":249:9)
          {
            auto& reg = arg2[173 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x14108);
            reg = x14108;
          }
        }
      }
      if (x14017 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":253:54))
        auto x14109 = arg2[173 * steps + ((cycle - 1) & mask)];
        assert(x14109 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":253:21)
        {
          auto& reg = arg2[173 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x14109);
          reg = x14109;
        }
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":257:48)
      auto x14110 = x14021 + x14015;
      // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":257:48)
      auto x14111 = x14110 + x14022;
      if (x14111 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x14112 = arg2[173 * steps + ((cycle - 0) & mask)];
        assert(x14112 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":259:40)
        auto x14113 = x14017 * x83;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":259:31)
        auto x14114 = x14112 + x14113;
        {
          extern_args[0] = x14114;
          extern_args[1] = x101;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x14115 = extern_outs[0];
          auto x14116 = extern_outs[1];
          auto x14117 = extern_outs[2];
          auto x14118 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[121 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x14115);
            reg = x14115;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[122 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x14116);
            reg = x14116;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[123 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x14117);
            reg = x14117;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[124 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x14118);
            reg = x14118;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x14119 = arg2[121 * steps + ((cycle - 0) & mask)];
        assert(x14119 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x14120 = arg2[122 * steps + ((cycle - 0) & mask)];
        assert(x14120 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x14121 = arg2[123 * steps + ((cycle - 0) & mask)];
        assert(x14121 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x14122 = arg2[124 * steps + ((cycle - 0) & mask)];
        assert(x14122 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[118 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x14114);
          reg = x14114;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[119 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x966);
          reg = x966;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[120 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x14119);
          reg = x14119;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x14120);
          reg = x14120;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[123 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x14121);
          reg = x14121;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[124 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x14122);
          reg = x14122;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":259:31)
        auto x14123 = x14114 + x101;
        {
          extern_args[0] = x14123;
          extern_args[1] = x101;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x14124 = extern_outs[0];
          auto x14125 = extern_outs[1];
          auto x14126 = extern_outs[2];
          auto x14127 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[128 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x14124);
            reg = x14124;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[129 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x14125);
            reg = x14125;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[130 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x14126);
            reg = x14126;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[131 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x14127);
            reg = x14127;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x14128 = arg2[128 * steps + ((cycle - 0) & mask)];
        assert(x14128 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x14129 = arg2[129 * steps + ((cycle - 0) & mask)];
        assert(x14129 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x14130 = arg2[130 * steps + ((cycle - 0) & mask)];
        assert(x14130 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x14131 = arg2[131 * steps + ((cycle - 0) & mask)];
        assert(x14131 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[125 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x14123);
          reg = x14123;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[126 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x966);
          reg = x966;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[127 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[128 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x14128);
          reg = x14128;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[129 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x14129);
          reg = x14129;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[130 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x14130);
          reg = x14130;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[131 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x14131);
          reg = x14131;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":259:31)
        auto x14132 = x14114 + x98;
        {
          extern_args[0] = x14132;
          extern_args[1] = x101;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x14133 = extern_outs[0];
          auto x14134 = extern_outs[1];
          auto x14135 = extern_outs[2];
          auto x14136 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[135 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x14133);
            reg = x14133;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[136 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x14134);
            reg = x14134;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x14135);
            reg = x14135;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x14136);
            reg = x14136;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x14137 = arg2[135 * steps + ((cycle - 0) & mask)];
        assert(x14137 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x14138 = arg2[136 * steps + ((cycle - 0) & mask)];
        assert(x14138 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x14139 = arg2[137 * steps + ((cycle - 0) & mask)];
        assert(x14139 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x14140 = arg2[138 * steps + ((cycle - 0) & mask)];
        assert(x14140 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[132 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x14132);
          reg = x14132;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[133 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x966);
          reg = x966;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[134 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x14137);
          reg = x14137;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x14138);
          reg = x14138;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[137 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x14139);
          reg = x14139;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[138 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x14140);
          reg = x14140;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":259:31)
        auto x14141 = x14114 + x81;
        {
          extern_args[0] = x14141;
          extern_args[1] = x101;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x14142 = extern_outs[0];
          auto x14143 = extern_outs[1];
          auto x14144 = extern_outs[2];
          auto x14145 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x14142);
            reg = x14142;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x14143);
            reg = x14143;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x14144);
            reg = x14144;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x14145);
            reg = x14145;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x14146 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x14146 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x14147 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x14147 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x14148 = arg2[144 * steps + ((cycle - 0) & mask)];
        assert(x14148 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x14149 = arg2[145 * steps + ((cycle - 0) & mask)];
        assert(x14149 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[139 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x14141);
          reg = x14141;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x966);
          reg = x966;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x14146);
          reg = x14146;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x14147);
          reg = x14147;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[144 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x14148);
          reg = x14148;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[145 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x14149);
          reg = x14149;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":262:10)
        auto x14150 = x14112 * x83;
        // loc("./zirgen/components/u32.h":35:12)
        auto x14151 = x14120 * x95;
        // loc("./zirgen/components/u32.h":36:12)
        auto x14152 = x14121 * x82;
        // loc("./zirgen/components/u32.h":37:12)
        auto x14153 = x14122 * x84;
        // loc("./zirgen/components/u32.h":35:12)
        auto x14154 = x14129 * x95;
        // loc("./zirgen/components/u32.h":36:12)
        auto x14155 = x14130 * x82;
        // loc("./zirgen/components/u32.h":37:12)
        auto x14156 = x14131 * x84;
        // loc("./zirgen/components/u32.h":35:12)
        auto x14157 = x14138 * x95;
        // loc("./zirgen/components/u32.h":36:12)
        auto x14158 = x14139 * x82;
        // loc("./zirgen/components/u32.h":37:12)
        auto x14159 = x14140 * x84;
        // loc("./zirgen/components/u32.h":35:12)
        auto x14160 = x14147 * x95;
        // loc("./zirgen/components/u32.h":36:12)
        auto x14161 = x14148 * x82;
        // loc("./zirgen/components/u32.h":37:12)
        auto x14162 = x14149 * x84;
        // loc("./zirgen/components/u32.h":34:12)
        auto x14163 = x14119 + x14151;
        // loc("./zirgen/components/u32.h":34:12)
        auto x14164 = x14128 + x14154;
        // loc("./zirgen/components/u32.h":34:12)
        auto x14165 = x14137 + x14157;
        // loc("./zirgen/components/u32.h":34:12)
        auto x14166 = x14146 + x14160;
        // loc("./zirgen/components/u32.h":34:12)
        auto x14167 = x14163 + x14152;
        // loc("./zirgen/components/u32.h":34:12)
        auto x14168 = x14164 + x14155;
        // loc("./zirgen/components/u32.h":34:12)
        auto x14169 = x14165 + x14158;
        // loc("./zirgen/components/u32.h":34:12)
        auto x14170 = x14166 + x14161;
        // loc("./zirgen/components/u32.h":34:12)
        auto x14171 = x14167 + x14153;
        // loc("./zirgen/components/u32.h":34:12)
        auto x14172 = x14168 + x14156;
        // loc("./zirgen/components/u32.h":34:12)
        auto x14173 = x14169 + x14159;
        // loc("./zirgen/components/u32.h":34:12)
        auto x14174 = x14170 + x14162;
        extern_args[0] = x14150;
        extern_args[1] = x14171;
        extern_args[2] = x14172;
        extern_args[3] = x14173;
        extern_args[4] = x14174;
        extern_log(ctx, cycle, "  Reading: ioAddr = 0x%x, data = { %u, %u, %u, %u }", extern_args, extern_outs);
      }
      {
        extern_args[0] = x25;
        extern_args[1] = x101;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x14175 = extern_outs[0];
        auto x14176 = extern_outs[1];
        auto x14177 = extern_outs[2];
        auto x14178 = extern_outs[3];
        // loc("./zirgen/components/u32.h":35:12)
        auto x14179 = x14176 * x95;
        // loc("./zirgen/components/u32.h":36:12)
        auto x14180 = x14177 * x82;
        // loc("./zirgen/components/u32.h":37:12)
        auto x14181 = x14178 * x84;
        // loc("./zirgen/components/u32.h":34:12)
        auto x14182 = x14175 + x14179;
        // loc("./zirgen/components/u32.h":34:12)
        auto x14183 = x14182 + x14180;
        // loc("./zirgen/components/u32.h":34:12)
        auto x14184 = x14183 + x14181;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":23:14)
        auto x14185 = x14184 * x80;
        extern_args[0] = x14185;
        extern_args[1] = x101;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x14186 = extern_outs[0];
        auto x14187 = extern_outs[1];
        auto x14188 = extern_outs[2];
        auto x14189 = extern_outs[3];
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":28:27)
        auto x14190 = x14185 + x101;
        extern_args[0] = x14190;
        extern_args[1] = x101;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x14191 = extern_outs[0];
        auto x14192 = extern_outs[1];
        auto x14193 = extern_outs[2];
        auto x14194 = extern_outs[3];
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":28:27)
        auto x14195 = x14185 + x98;
        extern_args[0] = x14195;
        extern_args[1] = x101;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x14196 = extern_outs[0];
        auto x14197 = extern_outs[1];
        auto x14198 = extern_outs[2];
        auto x14199 = extern_outs[3];
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":28:27)
        auto x14200 = x14185 + x81;
        extern_args[0] = x14200;
        extern_args[1] = x101;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x14201 = extern_outs[0];
        auto x14202 = extern_outs[1];
        auto x14203 = extern_outs[2];
        auto x14204 = extern_outs[3];
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":28:27)
        auto x14205 = x14185 + x83;
        extern_args[0] = x14205;
        extern_args[1] = x101;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x14206 = extern_outs[0];
        auto x14207 = extern_outs[1];
        auto x14208 = extern_outs[2];
        auto x14209 = extern_outs[3];
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":28:27)
        auto x14210 = x14185 + x71;
        extern_args[0] = x14210;
        extern_args[1] = x101;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x14211 = extern_outs[0];
        auto x14212 = extern_outs[1];
        auto x14213 = extern_outs[2];
        auto x14214 = extern_outs[3];
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":28:27)
        auto x14215 = x14185 + x70;
        extern_args[0] = x14215;
        extern_args[1] = x101;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x14216 = extern_outs[0];
        auto x14217 = extern_outs[1];
        auto x14218 = extern_outs[2];
        auto x14219 = extern_outs[3];
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":28:27)
        auto x14220 = x14185 + x69;
        extern_args[0] = x14220;
        extern_args[1] = x101;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x14221 = extern_outs[0];
        auto x14222 = extern_outs[1];
        auto x14223 = extern_outs[2];
        auto x14224 = extern_outs[3];
        extern_args[0] = x24;
        extern_args[1] = x101;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x14225 = extern_outs[0];
        auto x14226 = extern_outs[1];
        auto x14227 = extern_outs[2];
        auto x14228 = extern_outs[3];
        // loc("./zirgen/components/u32.h":35:12)
        auto x14229 = x14226 * x95;
        // loc("./zirgen/components/u32.h":36:12)
        auto x14230 = x14227 * x82;
        // loc("./zirgen/components/u32.h":37:12)
        auto x14231 = x14228 * x84;
        // loc("./zirgen/components/u32.h":34:12)
        auto x14232 = x14225 + x14229;
        // loc("./zirgen/components/u32.h":34:12)
        auto x14233 = x14232 + x14230;
        // loc("./zirgen/components/u32.h":34:12)
        auto x14234 = x14233 + x14231;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":23:14)
        auto x14235 = x14234 * x80;
        extern_args[0] = x14235;
        extern_args[1] = x101;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x14236 = extern_outs[0];
        auto x14237 = extern_outs[1];
        auto x14238 = extern_outs[2];
        auto x14239 = extern_outs[3];
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":28:27)
        auto x14240 = x14235 + x101;
        extern_args[0] = x14240;
        extern_args[1] = x101;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x14241 = extern_outs[0];
        auto x14242 = extern_outs[1];
        auto x14243 = extern_outs[2];
        auto x14244 = extern_outs[3];
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":28:27)
        auto x14245 = x14235 + x98;
        extern_args[0] = x14245;
        extern_args[1] = x101;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x14246 = extern_outs[0];
        auto x14247 = extern_outs[1];
        auto x14248 = extern_outs[2];
        auto x14249 = extern_outs[3];
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":28:27)
        auto x14250 = x14235 + x81;
        extern_args[0] = x14250;
        extern_args[1] = x101;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x14251 = extern_outs[0];
        auto x14252 = extern_outs[1];
        auto x14253 = extern_outs[2];
        auto x14254 = extern_outs[3];
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":28:27)
        auto x14255 = x14235 + x83;
        extern_args[0] = x14255;
        extern_args[1] = x101;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x14256 = extern_outs[0];
        auto x14257 = extern_outs[1];
        auto x14258 = extern_outs[2];
        auto x14259 = extern_outs[3];
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":28:27)
        auto x14260 = x14235 + x71;
        extern_args[0] = x14260;
        extern_args[1] = x101;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x14261 = extern_outs[0];
        auto x14262 = extern_outs[1];
        auto x14263 = extern_outs[2];
        auto x14264 = extern_outs[3];
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":28:27)
        auto x14265 = x14235 + x70;
        extern_args[0] = x14265;
        extern_args[1] = x101;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x14266 = extern_outs[0];
        auto x14267 = extern_outs[1];
        auto x14268 = extern_outs[2];
        auto x14269 = extern_outs[3];
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":28:27)
        auto x14270 = x14235 + x69;
        extern_args[0] = x14270;
        extern_args[1] = x101;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x14271 = extern_outs[0];
        auto x14272 = extern_outs[1];
        auto x14273 = extern_outs[2];
        auto x14274 = extern_outs[3];
        extern_args[0] = x30;
        extern_args[1] = x101;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x14275 = extern_outs[0];
        auto x14276 = extern_outs[1];
        auto x14277 = extern_outs[2];
        auto x14278 = extern_outs[3];
        // loc("./zirgen/components/u32.h":35:12)
        auto x14279 = x14276 * x95;
        // loc("./zirgen/components/u32.h":36:12)
        auto x14280 = x14277 * x82;
        // loc("./zirgen/components/u32.h":37:12)
        auto x14281 = x14278 * x84;
        // loc("./zirgen/components/u32.h":34:12)
        auto x14282 = x14275 + x14279;
        // loc("./zirgen/components/u32.h":34:12)
        auto x14283 = x14282 + x14280;
        // loc("./zirgen/components/u32.h":34:12)
        auto x14284 = x14283 + x14281;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":23:14)
        auto x14285 = x14284 * x80;
        extern_args[0] = x14285;
        extern_args[1] = x101;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x14286 = extern_outs[0];
        auto x14287 = extern_outs[1];
        auto x14288 = extern_outs[2];
        auto x14289 = extern_outs[3];
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":28:27)
        auto x14290 = x14285 + x101;
        extern_args[0] = x14290;
        extern_args[1] = x101;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x14291 = extern_outs[0];
        auto x14292 = extern_outs[1];
        auto x14293 = extern_outs[2];
        auto x14294 = extern_outs[3];
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":28:27)
        auto x14295 = x14285 + x98;
        extern_args[0] = x14295;
        extern_args[1] = x101;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x14296 = extern_outs[0];
        auto x14297 = extern_outs[1];
        auto x14298 = extern_outs[2];
        auto x14299 = extern_outs[3];
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":28:27)
        auto x14300 = x14285 + x81;
        extern_args[0] = x14300;
        extern_args[1] = x101;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x14301 = extern_outs[0];
        auto x14302 = extern_outs[1];
        auto x14303 = extern_outs[2];
        auto x14304 = extern_outs[3];
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":28:27)
        auto x14305 = x14285 + x83;
        extern_args[0] = x14305;
        extern_args[1] = x101;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x14306 = extern_outs[0];
        auto x14307 = extern_outs[1];
        auto x14308 = extern_outs[2];
        auto x14309 = extern_outs[3];
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":28:27)
        auto x14310 = x14285 + x71;
        extern_args[0] = x14310;
        extern_args[1] = x101;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x14311 = extern_outs[0];
        auto x14312 = extern_outs[1];
        auto x14313 = extern_outs[2];
        auto x14314 = extern_outs[3];
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":28:27)
        auto x14315 = x14285 + x70;
        extern_args[0] = x14315;
        extern_args[1] = x101;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x14316 = extern_outs[0];
        auto x14317 = extern_outs[1];
        auto x14318 = extern_outs[2];
        auto x14319 = extern_outs[3];
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":28:27)
        auto x14320 = x14285 + x69;
        extern_args[0] = x14320;
        extern_args[1] = x101;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x14321 = extern_outs[0];
        auto x14322 = extern_outs[1];
        auto x14323 = extern_outs[2];
        auto x14324 = extern_outs[3];
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14325 = x14191 * x14274;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14326 = x14196 * x14274;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14327 = x14201 * x14274;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14328 = x14206 * x14274;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14329 = x14211 * x14274;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14330 = x14216 * x14274;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14331 = x14221 * x14274;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14332 = x14186 * x14241;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14333 = x14186 * x14246;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14334 = x14186 * x14251;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14335 = x14186 * x14256;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14336 = x14186 * x14261;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14337 = x14186 * x14266;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14338 = x14186 * x14271;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14339 = x14186 * x14236;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14340 = x14186 * x14242;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14341 = x14186 * x14247;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14342 = x14186 * x14252;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14343 = x14186 * x14257;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14344 = x14186 * x14262;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14345 = x14186 * x14267;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14346 = x14186 * x14272;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14347 = x14186 * x14237;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14348 = x14186 * x14243;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14349 = x14186 * x14248;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14350 = x14186 * x14253;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14351 = x14186 * x14258;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14352 = x14186 * x14263;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14353 = x14186 * x14268;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14354 = x14186 * x14273;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14355 = x14186 * x14238;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14356 = x14186 * x14244;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14357 = x14186 * x14249;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14358 = x14186 * x14254;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14359 = x14186 * x14259;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14360 = x14186 * x14264;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14361 = x14186 * x14269;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14362 = x14186 * x14274;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14363 = x14186 * x14239;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14364 = x14192 * x14274;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14365 = x14197 * x14274;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14366 = x14202 * x14274;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14367 = x14207 * x14274;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14368 = x14212 * x14274;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14369 = x14217 * x14274;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14370 = x14222 * x14274;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14371 = x14187 * x14274;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14372 = x14193 * x14274;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14373 = x14198 * x14274;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14374 = x14203 * x14274;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14375 = x14208 * x14274;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14376 = x14213 * x14274;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14377 = x14218 * x14274;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14378 = x14223 * x14274;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14379 = x14188 * x14274;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14380 = x14194 * x14274;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14381 = x14199 * x14274;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14382 = x14204 * x14274;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14383 = x14209 * x14274;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14384 = x14214 * x14274;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14385 = x14219 * x14274;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14386 = x14224 * x14274;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14387 = x14189 * x14274;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14388 = x14191 * x14241;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14389 = x14191 * x14246;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14390 = x14191 * x14251;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14391 = x14191 * x14256;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14392 = x14191 * x14261;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14393 = x14191 * x14266;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14394 = x14191 * x14271;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14395 = x14191 * x14236;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14396 = x14191 * x14242;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14397 = x14191 * x14247;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14398 = x14191 * x14252;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14399 = x14191 * x14257;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14400 = x14191 * x14262;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14401 = x14191 * x14267;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14402 = x14191 * x14272;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14403 = x14191 * x14237;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14404 = x14191 * x14243;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14405 = x14191 * x14248;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14406 = x14191 * x14253;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14407 = x14191 * x14258;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14408 = x14191 * x14263;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14409 = x14191 * x14268;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14410 = x14191 * x14273;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14411 = x14191 * x14238;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14412 = x14191 * x14244;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14413 = x14191 * x14249;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14414 = x14191 * x14254;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14415 = x14191 * x14259;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14416 = x14191 * x14264;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14417 = x14191 * x14269;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14418 = x14191 * x14239;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14419 = x14196 * x14241;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14420 = x14196 * x14246;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14421 = x14196 * x14251;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14422 = x14196 * x14256;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14423 = x14196 * x14261;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14424 = x14196 * x14266;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14425 = x14196 * x14271;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14426 = x14196 * x14236;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14427 = x14196 * x14242;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14428 = x14196 * x14247;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14429 = x14196 * x14252;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14430 = x14196 * x14257;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14431 = x14196 * x14262;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14432 = x14196 * x14267;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14433 = x14196 * x14272;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14434 = x14196 * x14237;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14435 = x14196 * x14243;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14436 = x14196 * x14248;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14437 = x14196 * x14253;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14438 = x14196 * x14258;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14439 = x14196 * x14263;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14440 = x14196 * x14268;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14441 = x14196 * x14273;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14442 = x14196 * x14238;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14443 = x14196 * x14244;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14444 = x14196 * x14249;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14445 = x14196 * x14254;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14446 = x14196 * x14259;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14447 = x14196 * x14264;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14448 = x14196 * x14269;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14449 = x14196 * x14239;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14450 = x14201 * x14241;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14451 = x14201 * x14246;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14452 = x14201 * x14251;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14453 = x14201 * x14256;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14454 = x14201 * x14261;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14455 = x14201 * x14266;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14456 = x14201 * x14271;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14457 = x14201 * x14236;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14458 = x14201 * x14242;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14459 = x14201 * x14247;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14460 = x14201 * x14252;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14461 = x14201 * x14257;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14462 = x14201 * x14262;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14463 = x14201 * x14267;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14464 = x14201 * x14272;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14465 = x14201 * x14237;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14466 = x14201 * x14243;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14467 = x14201 * x14248;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14468 = x14201 * x14253;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14469 = x14201 * x14258;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14470 = x14201 * x14263;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14471 = x14201 * x14268;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14472 = x14201 * x14273;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14473 = x14201 * x14238;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14474 = x14201 * x14244;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14475 = x14201 * x14249;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14476 = x14201 * x14254;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14477 = x14201 * x14259;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14478 = x14201 * x14264;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14479 = x14201 * x14269;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14480 = x14201 * x14239;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14481 = x14206 * x14241;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14482 = x14206 * x14246;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14483 = x14206 * x14251;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14484 = x14206 * x14256;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14485 = x14206 * x14261;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14486 = x14206 * x14266;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14487 = x14206 * x14271;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14488 = x14206 * x14236;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14489 = x14206 * x14242;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14490 = x14206 * x14247;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14491 = x14206 * x14252;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14492 = x14206 * x14257;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14493 = x14206 * x14262;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14494 = x14206 * x14267;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14495 = x14206 * x14272;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14496 = x14206 * x14237;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14497 = x14206 * x14243;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14498 = x14206 * x14248;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14499 = x14206 * x14253;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14500 = x14206 * x14258;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14501 = x14206 * x14263;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14502 = x14206 * x14268;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14503 = x14206 * x14273;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14504 = x14206 * x14238;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14505 = x14206 * x14244;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14506 = x14206 * x14249;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14507 = x14206 * x14254;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14508 = x14206 * x14259;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14509 = x14206 * x14264;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14510 = x14206 * x14269;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14511 = x14206 * x14239;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14512 = x14211 * x14241;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14513 = x14211 * x14246;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14514 = x14211 * x14251;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14515 = x14211 * x14256;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14516 = x14211 * x14261;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14517 = x14211 * x14266;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14518 = x14211 * x14271;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14519 = x14211 * x14236;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14520 = x14211 * x14242;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14521 = x14211 * x14247;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14522 = x14211 * x14252;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14523 = x14211 * x14257;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14524 = x14211 * x14262;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14525 = x14211 * x14267;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14526 = x14211 * x14272;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14527 = x14211 * x14237;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14528 = x14211 * x14243;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14529 = x14211 * x14248;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14530 = x14211 * x14253;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14531 = x14211 * x14258;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14532 = x14211 * x14263;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14533 = x14211 * x14268;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14534 = x14211 * x14273;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14535 = x14211 * x14238;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14536 = x14211 * x14244;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14537 = x14211 * x14249;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14538 = x14211 * x14254;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14539 = x14211 * x14259;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14540 = x14211 * x14264;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14541 = x14211 * x14269;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14542 = x14211 * x14239;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14543 = x14216 * x14241;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14544 = x14216 * x14246;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14545 = x14216 * x14251;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14546 = x14216 * x14256;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14547 = x14216 * x14261;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14548 = x14216 * x14266;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14549 = x14216 * x14271;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14550 = x14216 * x14236;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14551 = x14216 * x14242;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14552 = x14216 * x14247;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14553 = x14216 * x14252;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14554 = x14216 * x14257;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14555 = x14216 * x14262;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14556 = x14216 * x14267;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14557 = x14216 * x14272;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14558 = x14216 * x14237;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14559 = x14216 * x14243;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14560 = x14216 * x14248;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14561 = x14216 * x14253;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14562 = x14216 * x14258;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14563 = x14216 * x14263;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14564 = x14216 * x14268;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14565 = x14216 * x14273;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14566 = x14216 * x14238;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14567 = x14216 * x14244;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14568 = x14216 * x14249;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14569 = x14216 * x14254;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14570 = x14216 * x14259;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14571 = x14216 * x14264;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14572 = x14216 * x14269;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14573 = x14216 * x14239;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14574 = x14221 * x14241;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14575 = x14221 * x14246;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14576 = x14221 * x14251;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14577 = x14221 * x14256;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14578 = x14221 * x14261;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14579 = x14221 * x14266;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14580 = x14221 * x14271;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14581 = x14221 * x14236;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14582 = x14221 * x14242;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14583 = x14221 * x14247;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14584 = x14221 * x14252;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14585 = x14221 * x14257;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14586 = x14221 * x14262;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14587 = x14221 * x14267;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14588 = x14221 * x14272;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14589 = x14221 * x14237;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14590 = x14221 * x14243;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14591 = x14221 * x14248;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14592 = x14221 * x14253;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14593 = x14221 * x14258;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14594 = x14221 * x14263;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14595 = x14221 * x14268;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14596 = x14221 * x14273;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14597 = x14221 * x14238;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14598 = x14221 * x14244;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14599 = x14221 * x14249;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14600 = x14221 * x14254;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14601 = x14221 * x14259;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14602 = x14221 * x14264;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14603 = x14221 * x14269;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14604 = x14221 * x14239;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14605 = x14192 * x14241;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14606 = x14192 * x14246;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14607 = x14192 * x14251;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14608 = x14192 * x14256;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14609 = x14192 * x14261;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14610 = x14192 * x14266;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14611 = x14192 * x14271;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14612 = x14192 * x14236;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14613 = x14192 * x14242;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14614 = x14192 * x14247;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14615 = x14192 * x14252;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14616 = x14192 * x14257;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14617 = x14192 * x14262;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14618 = x14192 * x14267;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14619 = x14192 * x14272;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14620 = x14192 * x14237;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14621 = x14192 * x14243;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14622 = x14192 * x14248;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14623 = x14192 * x14253;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14624 = x14192 * x14258;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14625 = x14192 * x14263;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14626 = x14192 * x14268;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14627 = x14192 * x14273;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14628 = x14192 * x14238;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14629 = x14192 * x14244;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14630 = x14192 * x14249;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14631 = x14192 * x14254;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14632 = x14192 * x14259;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14633 = x14192 * x14264;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14634 = x14192 * x14269;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14635 = x14192 * x14239;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14636 = x14197 * x14241;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14637 = x14197 * x14246;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14638 = x14197 * x14251;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14639 = x14197 * x14256;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14640 = x14197 * x14261;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14641 = x14197 * x14266;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14642 = x14197 * x14271;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14643 = x14197 * x14236;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14644 = x14197 * x14242;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14645 = x14197 * x14247;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14646 = x14197 * x14252;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14647 = x14197 * x14257;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14648 = x14197 * x14262;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14649 = x14197 * x14267;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14650 = x14197 * x14272;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14651 = x14197 * x14237;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14652 = x14197 * x14243;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14653 = x14197 * x14248;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14654 = x14197 * x14253;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14655 = x14197 * x14258;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14656 = x14197 * x14263;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14657 = x14197 * x14268;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14658 = x14197 * x14273;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14659 = x14197 * x14238;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14660 = x14197 * x14244;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14661 = x14197 * x14249;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14662 = x14197 * x14254;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14663 = x14197 * x14259;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14664 = x14197 * x14264;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14665 = x14197 * x14269;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14666 = x14197 * x14239;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14667 = x14202 * x14241;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14668 = x14202 * x14246;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14669 = x14202 * x14251;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14670 = x14202 * x14256;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14671 = x14202 * x14261;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14672 = x14202 * x14266;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14673 = x14202 * x14271;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14674 = x14202 * x14236;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14675 = x14202 * x14242;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14676 = x14202 * x14247;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14677 = x14202 * x14252;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14678 = x14202 * x14257;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14679 = x14202 * x14262;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14680 = x14202 * x14267;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14681 = x14202 * x14272;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14682 = x14202 * x14237;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14683 = x14202 * x14243;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14684 = x14202 * x14248;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14685 = x14202 * x14253;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14686 = x14202 * x14258;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14687 = x14202 * x14263;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14688 = x14202 * x14268;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14689 = x14202 * x14273;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14690 = x14202 * x14238;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14691 = x14202 * x14244;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14692 = x14202 * x14249;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14693 = x14202 * x14254;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14694 = x14202 * x14259;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14695 = x14202 * x14264;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14696 = x14202 * x14269;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14697 = x14202 * x14239;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14698 = x14207 * x14241;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14699 = x14207 * x14246;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14700 = x14207 * x14251;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14701 = x14207 * x14256;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14702 = x14207 * x14261;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14703 = x14207 * x14266;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14704 = x14207 * x14271;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14705 = x14207 * x14236;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14706 = x14207 * x14242;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14707 = x14207 * x14247;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14708 = x14207 * x14252;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14709 = x14207 * x14257;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14710 = x14207 * x14262;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14711 = x14207 * x14267;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14712 = x14207 * x14272;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14713 = x14207 * x14237;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14714 = x14207 * x14243;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14715 = x14207 * x14248;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14716 = x14207 * x14253;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14717 = x14207 * x14258;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14718 = x14207 * x14263;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14719 = x14207 * x14268;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14720 = x14207 * x14273;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14721 = x14207 * x14238;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14722 = x14207 * x14244;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14723 = x14207 * x14249;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14724 = x14207 * x14254;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14725 = x14207 * x14259;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14726 = x14207 * x14264;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14727 = x14207 * x14269;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14728 = x14207 * x14239;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14729 = x14212 * x14241;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14730 = x14212 * x14246;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14731 = x14212 * x14251;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14732 = x14212 * x14256;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14733 = x14212 * x14261;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14734 = x14212 * x14266;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14735 = x14212 * x14271;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14736 = x14212 * x14236;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14737 = x14212 * x14242;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14738 = x14212 * x14247;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14739 = x14212 * x14252;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14740 = x14212 * x14257;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14741 = x14212 * x14262;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14742 = x14212 * x14267;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14743 = x14212 * x14272;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14744 = x14212 * x14237;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14745 = x14212 * x14243;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14746 = x14212 * x14248;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14747 = x14212 * x14253;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14748 = x14212 * x14258;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14749 = x14212 * x14263;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14750 = x14212 * x14268;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14751 = x14212 * x14273;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14752 = x14212 * x14238;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14753 = x14212 * x14244;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14754 = x14212 * x14249;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14755 = x14212 * x14254;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14756 = x14212 * x14259;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14757 = x14212 * x14264;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14758 = x14212 * x14269;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14759 = x14212 * x14239;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14760 = x14217 * x14241;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14761 = x14217 * x14246;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14762 = x14217 * x14251;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14763 = x14217 * x14256;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14764 = x14217 * x14261;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14765 = x14217 * x14266;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14766 = x14217 * x14271;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14767 = x14217 * x14236;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14768 = x14217 * x14242;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14769 = x14217 * x14247;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14770 = x14217 * x14252;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14771 = x14217 * x14257;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14772 = x14217 * x14262;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14773 = x14217 * x14267;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14774 = x14217 * x14272;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14775 = x14217 * x14237;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14776 = x14217 * x14243;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14777 = x14217 * x14248;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14778 = x14217 * x14253;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14779 = x14217 * x14258;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14780 = x14217 * x14263;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14781 = x14217 * x14268;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14782 = x14217 * x14273;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14783 = x14217 * x14238;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14784 = x14217 * x14244;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14785 = x14217 * x14249;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14786 = x14217 * x14254;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14787 = x14217 * x14259;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14788 = x14217 * x14264;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14789 = x14217 * x14269;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14790 = x14217 * x14239;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14791 = x14222 * x14241;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14792 = x14222 * x14246;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14793 = x14222 * x14251;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14794 = x14222 * x14256;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14795 = x14222 * x14261;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14796 = x14222 * x14266;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14797 = x14222 * x14271;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14798 = x14222 * x14236;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14799 = x14222 * x14242;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14800 = x14222 * x14247;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14801 = x14222 * x14252;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14802 = x14222 * x14257;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14803 = x14222 * x14262;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14804 = x14222 * x14267;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14805 = x14222 * x14272;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14806 = x14222 * x14237;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14807 = x14222 * x14243;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14808 = x14222 * x14248;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14809 = x14222 * x14253;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14810 = x14222 * x14258;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14811 = x14222 * x14263;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14812 = x14222 * x14268;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14813 = x14222 * x14273;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14814 = x14222 * x14238;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14815 = x14222 * x14244;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14816 = x14222 * x14249;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14817 = x14222 * x14254;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14818 = x14222 * x14259;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14819 = x14222 * x14264;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14820 = x14222 * x14269;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14821 = x14222 * x14239;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14822 = x14187 * x14241;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14823 = x14187 * x14246;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14824 = x14187 * x14251;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14825 = x14187 * x14256;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14826 = x14187 * x14261;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14827 = x14187 * x14266;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14828 = x14187 * x14271;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14829 = x14187 * x14236;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14830 = x14187 * x14242;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14831 = x14187 * x14247;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14832 = x14187 * x14252;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14833 = x14187 * x14257;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14834 = x14187 * x14262;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14835 = x14187 * x14267;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14836 = x14187 * x14272;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14837 = x14187 * x14237;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14838 = x14187 * x14243;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14839 = x14187 * x14248;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14840 = x14187 * x14253;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14841 = x14187 * x14258;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14842 = x14187 * x14263;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14843 = x14187 * x14268;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14844 = x14187 * x14273;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14845 = x14187 * x14238;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14846 = x14187 * x14244;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14847 = x14187 * x14249;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14848 = x14187 * x14254;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14849 = x14187 * x14259;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14850 = x14187 * x14264;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14851 = x14187 * x14269;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14852 = x14187 * x14239;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14853 = x14193 * x14241;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14854 = x14193 * x14246;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14855 = x14193 * x14251;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14856 = x14193 * x14256;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14857 = x14193 * x14261;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14858 = x14193 * x14266;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14859 = x14193 * x14271;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14860 = x14193 * x14236;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14861 = x14193 * x14242;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14862 = x14193 * x14247;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14863 = x14193 * x14252;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14864 = x14193 * x14257;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14865 = x14193 * x14262;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14866 = x14193 * x14267;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14867 = x14193 * x14272;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14868 = x14193 * x14237;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14869 = x14193 * x14243;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14870 = x14193 * x14248;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14871 = x14193 * x14253;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14872 = x14193 * x14258;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14873 = x14193 * x14263;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14874 = x14193 * x14268;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14875 = x14193 * x14273;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14876 = x14193 * x14238;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14877 = x14193 * x14244;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14878 = x14193 * x14249;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14879 = x14193 * x14254;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14880 = x14193 * x14259;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14881 = x14193 * x14264;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14882 = x14193 * x14269;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14883 = x14193 * x14239;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14884 = x14198 * x14241;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14885 = x14198 * x14246;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14886 = x14198 * x14251;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14887 = x14198 * x14256;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14888 = x14198 * x14261;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14889 = x14198 * x14266;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14890 = x14198 * x14271;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14891 = x14198 * x14236;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14892 = x14198 * x14242;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14893 = x14198 * x14247;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14894 = x14198 * x14252;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14895 = x14198 * x14257;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14896 = x14198 * x14262;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14897 = x14198 * x14267;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14898 = x14198 * x14272;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14899 = x14198 * x14237;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14900 = x14198 * x14243;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14901 = x14198 * x14248;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14902 = x14198 * x14253;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14903 = x14198 * x14258;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14904 = x14198 * x14263;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14905 = x14198 * x14268;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14906 = x14198 * x14273;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14907 = x14198 * x14238;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14908 = x14198 * x14244;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14909 = x14198 * x14249;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14910 = x14198 * x14254;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14911 = x14198 * x14259;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14912 = x14198 * x14264;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14913 = x14198 * x14269;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14914 = x14198 * x14239;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14915 = x14203 * x14241;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14916 = x14203 * x14246;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14917 = x14203 * x14251;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14918 = x14203 * x14256;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14919 = x14203 * x14261;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14920 = x14203 * x14266;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14921 = x14203 * x14271;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14922 = x14203 * x14236;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14923 = x14203 * x14242;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14924 = x14203 * x14247;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14925 = x14203 * x14252;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14926 = x14203 * x14257;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14927 = x14203 * x14262;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14928 = x14203 * x14267;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14929 = x14203 * x14272;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14930 = x14203 * x14237;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14931 = x14203 * x14243;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14932 = x14203 * x14248;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14933 = x14203 * x14253;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14934 = x14203 * x14258;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14935 = x14203 * x14263;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14936 = x14203 * x14268;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14937 = x14203 * x14273;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14938 = x14203 * x14238;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14939 = x14203 * x14244;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14940 = x14203 * x14249;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14941 = x14203 * x14254;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14942 = x14203 * x14259;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14943 = x14203 * x14264;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14944 = x14203 * x14269;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14945 = x14203 * x14239;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14946 = x14208 * x14241;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14947 = x14208 * x14246;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14948 = x14208 * x14251;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14949 = x14208 * x14256;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14950 = x14208 * x14261;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14951 = x14208 * x14266;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14952 = x14208 * x14271;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14953 = x14208 * x14236;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14954 = x14208 * x14242;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14955 = x14208 * x14247;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14956 = x14208 * x14252;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14957 = x14208 * x14257;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14958 = x14208 * x14262;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14959 = x14208 * x14267;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14960 = x14208 * x14272;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14961 = x14208 * x14237;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14962 = x14208 * x14243;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14963 = x14208 * x14248;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14964 = x14208 * x14253;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14965 = x14208 * x14258;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14966 = x14208 * x14263;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14967 = x14208 * x14268;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14968 = x14208 * x14273;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14969 = x14208 * x14238;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14970 = x14208 * x14244;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14971 = x14208 * x14249;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14972 = x14208 * x14254;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14973 = x14208 * x14259;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14974 = x14208 * x14264;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14975 = x14208 * x14269;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14976 = x14208 * x14239;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14977 = x14213 * x14241;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14978 = x14213 * x14246;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14979 = x14213 * x14251;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14980 = x14213 * x14256;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14981 = x14213 * x14261;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14982 = x14213 * x14266;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14983 = x14213 * x14271;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14984 = x14213 * x14236;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14985 = x14213 * x14242;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14986 = x14213 * x14247;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14987 = x14213 * x14252;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14988 = x14213 * x14257;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14989 = x14213 * x14262;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14990 = x14213 * x14267;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14991 = x14213 * x14272;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14992 = x14213 * x14237;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14993 = x14213 * x14243;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14994 = x14213 * x14248;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14995 = x14213 * x14253;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14996 = x14213 * x14258;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14997 = x14213 * x14263;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14998 = x14213 * x14268;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x14999 = x14213 * x14273;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15000 = x14213 * x14238;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15001 = x14213 * x14244;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15002 = x14213 * x14249;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15003 = x14213 * x14254;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15004 = x14213 * x14259;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15005 = x14213 * x14264;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15006 = x14213 * x14269;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15007 = x14213 * x14239;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15008 = x14218 * x14241;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15009 = x14218 * x14246;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15010 = x14218 * x14251;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15011 = x14218 * x14256;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15012 = x14218 * x14261;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15013 = x14218 * x14266;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15014 = x14218 * x14271;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15015 = x14218 * x14236;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15016 = x14218 * x14242;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15017 = x14218 * x14247;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15018 = x14218 * x14252;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15019 = x14218 * x14257;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15020 = x14218 * x14262;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15021 = x14218 * x14267;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15022 = x14218 * x14272;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15023 = x14218 * x14237;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15024 = x14218 * x14243;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15025 = x14218 * x14248;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15026 = x14218 * x14253;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15027 = x14218 * x14258;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15028 = x14218 * x14263;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15029 = x14218 * x14268;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15030 = x14218 * x14273;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15031 = x14218 * x14238;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15032 = x14218 * x14244;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15033 = x14218 * x14249;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15034 = x14218 * x14254;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15035 = x14218 * x14259;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15036 = x14218 * x14264;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15037 = x14218 * x14269;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15038 = x14218 * x14239;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15039 = x14223 * x14241;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15040 = x14223 * x14246;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15041 = x14223 * x14251;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15042 = x14223 * x14256;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15043 = x14223 * x14261;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15044 = x14223 * x14266;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15045 = x14223 * x14271;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15046 = x14223 * x14236;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15047 = x14223 * x14242;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15048 = x14223 * x14247;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15049 = x14223 * x14252;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15050 = x14223 * x14257;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15051 = x14223 * x14262;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15052 = x14223 * x14267;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15053 = x14223 * x14272;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15054 = x14223 * x14237;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15055 = x14223 * x14243;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15056 = x14223 * x14248;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15057 = x14223 * x14253;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15058 = x14223 * x14258;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15059 = x14223 * x14263;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15060 = x14223 * x14268;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15061 = x14223 * x14273;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15062 = x14223 * x14238;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15063 = x14223 * x14244;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15064 = x14223 * x14249;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15065 = x14223 * x14254;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15066 = x14223 * x14259;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15067 = x14223 * x14264;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15068 = x14223 * x14269;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15069 = x14223 * x14239;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15070 = x14188 * x14241;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15071 = x14188 * x14246;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15072 = x14188 * x14251;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15073 = x14188 * x14256;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15074 = x14188 * x14261;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15075 = x14188 * x14266;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15076 = x14188 * x14271;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15077 = x14188 * x14236;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15078 = x14188 * x14242;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15079 = x14188 * x14247;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15080 = x14188 * x14252;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15081 = x14188 * x14257;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15082 = x14188 * x14262;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15083 = x14188 * x14267;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15084 = x14188 * x14272;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15085 = x14188 * x14237;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15086 = x14188 * x14243;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15087 = x14188 * x14248;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15088 = x14188 * x14253;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15089 = x14188 * x14258;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15090 = x14188 * x14263;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15091 = x14188 * x14268;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15092 = x14188 * x14273;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15093 = x14188 * x14238;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15094 = x14188 * x14244;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15095 = x14188 * x14249;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15096 = x14188 * x14254;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15097 = x14188 * x14259;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15098 = x14188 * x14264;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15099 = x14188 * x14269;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15100 = x14188 * x14239;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15101 = x14194 * x14241;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15102 = x14194 * x14246;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15103 = x14194 * x14251;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15104 = x14194 * x14256;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15105 = x14194 * x14261;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15106 = x14194 * x14266;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15107 = x14194 * x14271;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15108 = x14194 * x14236;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15109 = x14194 * x14242;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15110 = x14194 * x14247;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15111 = x14194 * x14252;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15112 = x14194 * x14257;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15113 = x14194 * x14262;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15114 = x14194 * x14267;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15115 = x14194 * x14272;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15116 = x14194 * x14237;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15117 = x14194 * x14243;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15118 = x14194 * x14248;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15119 = x14194 * x14253;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15120 = x14194 * x14258;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15121 = x14194 * x14263;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15122 = x14194 * x14268;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15123 = x14194 * x14273;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15124 = x14194 * x14238;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15125 = x14194 * x14244;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15126 = x14194 * x14249;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15127 = x14194 * x14254;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15128 = x14194 * x14259;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15129 = x14194 * x14264;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15130 = x14194 * x14269;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15131 = x14194 * x14239;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15132 = x14199 * x14241;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15133 = x14199 * x14246;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15134 = x14199 * x14251;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15135 = x14199 * x14256;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15136 = x14199 * x14261;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15137 = x14199 * x14266;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15138 = x14199 * x14271;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15139 = x14199 * x14236;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15140 = x14199 * x14242;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15141 = x14199 * x14247;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15142 = x14199 * x14252;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15143 = x14199 * x14257;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15144 = x14199 * x14262;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15145 = x14199 * x14267;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15146 = x14199 * x14272;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15147 = x14199 * x14237;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15148 = x14199 * x14243;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15149 = x14199 * x14248;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15150 = x14199 * x14253;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15151 = x14199 * x14258;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15152 = x14199 * x14263;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15153 = x14199 * x14268;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15154 = x14199 * x14273;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15155 = x14199 * x14238;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15156 = x14199 * x14244;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15157 = x14199 * x14249;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15158 = x14199 * x14254;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15159 = x14199 * x14259;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15160 = x14199 * x14264;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15161 = x14199 * x14269;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15162 = x14199 * x14239;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15163 = x14204 * x14241;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15164 = x14204 * x14246;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15165 = x14204 * x14251;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15166 = x14204 * x14256;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15167 = x14204 * x14261;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15168 = x14204 * x14266;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15169 = x14204 * x14271;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15170 = x14204 * x14236;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15171 = x14204 * x14242;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15172 = x14204 * x14247;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15173 = x14204 * x14252;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15174 = x14204 * x14257;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15175 = x14204 * x14262;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15176 = x14204 * x14267;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15177 = x14204 * x14272;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15178 = x14204 * x14237;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15179 = x14204 * x14243;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15180 = x14204 * x14248;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15181 = x14204 * x14253;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15182 = x14204 * x14258;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15183 = x14204 * x14263;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15184 = x14204 * x14268;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15185 = x14204 * x14273;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15186 = x14204 * x14238;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15187 = x14204 * x14244;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15188 = x14204 * x14249;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15189 = x14204 * x14254;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15190 = x14204 * x14259;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15191 = x14204 * x14264;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15192 = x14204 * x14269;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15193 = x14204 * x14239;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15194 = x14209 * x14241;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15195 = x14209 * x14246;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15196 = x14209 * x14251;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15197 = x14209 * x14256;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15198 = x14209 * x14261;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15199 = x14209 * x14266;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15200 = x14209 * x14271;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15201 = x14209 * x14236;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15202 = x14209 * x14242;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15203 = x14209 * x14247;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15204 = x14209 * x14252;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15205 = x14209 * x14257;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15206 = x14209 * x14262;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15207 = x14209 * x14267;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15208 = x14209 * x14272;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15209 = x14209 * x14237;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15210 = x14209 * x14243;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15211 = x14209 * x14248;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15212 = x14209 * x14253;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15213 = x14209 * x14258;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15214 = x14209 * x14263;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15215 = x14209 * x14268;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15216 = x14209 * x14273;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15217 = x14209 * x14238;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15218 = x14209 * x14244;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15219 = x14209 * x14249;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15220 = x14209 * x14254;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15221 = x14209 * x14259;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15222 = x14209 * x14264;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15223 = x14209 * x14269;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15224 = x14209 * x14239;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15225 = x14214 * x14241;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15226 = x14214 * x14246;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15227 = x14214 * x14251;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15228 = x14214 * x14256;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15229 = x14214 * x14261;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15230 = x14214 * x14266;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15231 = x14214 * x14271;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15232 = x14214 * x14236;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15233 = x14214 * x14242;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15234 = x14214 * x14247;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15235 = x14214 * x14252;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15236 = x14214 * x14257;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15237 = x14214 * x14262;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15238 = x14214 * x14267;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15239 = x14214 * x14272;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15240 = x14214 * x14237;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15241 = x14214 * x14243;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15242 = x14214 * x14248;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15243 = x14214 * x14253;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15244 = x14214 * x14258;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15245 = x14214 * x14263;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15246 = x14214 * x14268;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15247 = x14214 * x14273;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15248 = x14214 * x14238;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15249 = x14214 * x14244;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15250 = x14214 * x14249;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15251 = x14214 * x14254;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15252 = x14214 * x14259;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15253 = x14214 * x14264;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15254 = x14214 * x14269;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15255 = x14214 * x14239;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15256 = x14219 * x14241;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15257 = x14219 * x14246;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15258 = x14219 * x14251;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15259 = x14219 * x14256;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15260 = x14219 * x14261;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15261 = x14219 * x14266;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15262 = x14219 * x14271;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15263 = x14219 * x14236;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15264 = x14219 * x14242;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15265 = x14219 * x14247;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15266 = x14219 * x14252;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15267 = x14219 * x14257;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15268 = x14219 * x14262;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15269 = x14219 * x14267;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15270 = x14219 * x14272;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15271 = x14219 * x14237;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15272 = x14219 * x14243;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15273 = x14219 * x14248;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15274 = x14219 * x14253;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15275 = x14219 * x14258;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15276 = x14219 * x14263;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15277 = x14219 * x14268;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15278 = x14219 * x14273;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15279 = x14219 * x14238;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15280 = x14219 * x14244;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15281 = x14219 * x14249;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15282 = x14219 * x14254;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15283 = x14219 * x14259;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15284 = x14219 * x14264;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15285 = x14219 * x14269;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15286 = x14219 * x14239;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15287 = x14224 * x14241;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15288 = x14224 * x14246;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15289 = x14224 * x14251;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15290 = x14224 * x14256;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15291 = x14224 * x14261;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15292 = x14224 * x14266;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15293 = x14224 * x14271;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15294 = x14224 * x14236;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15295 = x14224 * x14242;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15296 = x14224 * x14247;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15297 = x14224 * x14252;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15298 = x14224 * x14257;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15299 = x14224 * x14262;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15300 = x14224 * x14267;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15301 = x14224 * x14272;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15302 = x14224 * x14237;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15303 = x14224 * x14243;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15304 = x14224 * x14248;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15305 = x14224 * x14253;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15306 = x14224 * x14258;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15307 = x14224 * x14263;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15308 = x14224 * x14268;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15309 = x14224 * x14273;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15310 = x14224 * x14238;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15311 = x14224 * x14244;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15312 = x14224 * x14249;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15313 = x14224 * x14254;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15314 = x14224 * x14259;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15315 = x14224 * x14264;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15316 = x14224 * x14269;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15317 = x14224 * x14239;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15318 = x14189 * x14241;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15319 = x14189 * x14246;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15320 = x14189 * x14251;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15321 = x14189 * x14256;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15322 = x14189 * x14261;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15323 = x14189 * x14266;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15324 = x14189 * x14271;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15325 = x14189 * x14236;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15326 = x14189 * x14242;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15327 = x14189 * x14247;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15328 = x14189 * x14252;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15329 = x14189 * x14257;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15330 = x14189 * x14262;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15331 = x14189 * x14267;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15332 = x14189 * x14272;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15333 = x14189 * x14237;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15334 = x14189 * x14243;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15335 = x14189 * x14248;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15336 = x14189 * x14253;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15337 = x14189 * x14258;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15338 = x14189 * x14263;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15339 = x14189 * x14268;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15340 = x14189 * x14273;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15341 = x14189 * x14238;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15342 = x14189 * x14244;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15343 = x14189 * x14249;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15344 = x14189 * x14254;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15345 = x14189 * x14259;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15346 = x14189 * x14264;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15347 = x14189 * x14269;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x15348 = x14189 * x14239;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15349 = x14325 + x14627;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15350 = x14326 + x14658;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15351 = x14327 + x14689;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15352 = x14328 + x14720;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15353 = x14329 + x14751;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15354 = x14330 + x14782;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15355 = x14331 + x14813;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15356 = x14332 + x14852;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15357 = x14333 + x14846;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15358 = x14334 + x14847;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15359 = x14335 + x14848;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15360 = x14336 + x14849;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15361 = x14337 + x14850;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15362 = x14338 + x14851;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x15363 = x14339 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15364 = x14340 + x14822;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15365 = x14341 + x14823;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15366 = x14342 + x14824;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15367 = x14343 + x14825;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15368 = x14344 + x14826;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15369 = x14345 + x14827;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15370 = x14346 + x14828;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15371 = x14347 + x14829;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15372 = x14348 + x14830;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15373 = x14349 + x14831;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15374 = x14350 + x14832;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15375 = x14351 + x14833;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15376 = x14352 + x14834;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15377 = x14353 + x14835;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15378 = x14354 + x14836;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15379 = x14355 + x14837;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15380 = x14356 + x14838;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15381 = x14357 + x14839;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15382 = x14358 + x14840;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15383 = x14359 + x14841;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15384 = x14360 + x14842;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15385 = x14361 + x14843;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15386 = x14362 + x14844;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15387 = x14363 + x14845;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15388 = x14364 + x14875;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15389 = x14365 + x14906;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15390 = x14366 + x14937;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15391 = x14367 + x14968;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15392 = x14368 + x14999;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15393 = x14369 + x15030;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15394 = x14370 + x15061;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15395 = x14371 + x15092;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15396 = x14372 + x15123;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15397 = x14373 + x15154;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15398 = x14374 + x15185;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15399 = x14375 + x15216;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15400 = x14376 + x15247;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15401 = x14377 + x15278;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15402 = x14378 + x15309;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15403 = x14379 + x15340;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15404 = x14380 + x14441;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15405 = x14381 + x14472;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15406 = x14382 + x14503;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15407 = x14383 + x14534;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15408 = x14384 + x14565;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15409 = x14385 + x14596;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15410 = x14387 + x14410;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x15411 = Fp(x15363.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x15412 = x15363 - x15411;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15413 = x15349 + x14867;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15414 = x15350 + x14898;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15415 = x15351 + x14929;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15416 = x15352 + x14960;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15417 = x15353 + x14991;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15418 = x15354 + x15022;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15419 = x15355 + x15053;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15420 = x15356 + x15093;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15421 = x15357 + x15086;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15422 = x15358 + x15087;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15423 = x15359 + x15088;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15424 = x15360 + x15089;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15425 = x15361 + x15090;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15426 = x15362 + x15091;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15427 = x15364 + x15100;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15428 = x15365 + x15094;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15429 = x15366 + x15095;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15430 = x15367 + x15096;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15431 = x15368 + x15097;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15432 = x15369 + x15098;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15433 = x15370 + x15099;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15434 = x15372 + x15070;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15435 = x15373 + x15071;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15436 = x15374 + x15072;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15437 = x15375 + x15073;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15438 = x15376 + x15074;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15439 = x15377 + x15075;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15440 = x15378 + x15076;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15441 = x15379 + x15077;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15442 = x15380 + x15078;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15443 = x15381 + x15079;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15444 = x15382 + x15080;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15445 = x15383 + x15081;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15446 = x15384 + x15082;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15447 = x15385 + x15083;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15448 = x15386 + x15084;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15449 = x15387 + x15085;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15450 = x15388 + x15115;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15451 = x15389 + x15146;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15452 = x15390 + x15177;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15453 = x15391 + x15208;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15454 = x15392 + x15239;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15455 = x15393 + x15270;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15456 = x15394 + x15301;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15457 = x15395 + x15332;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15458 = x15396 + x14433;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15459 = x15397 + x14464;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15460 = x15398 + x14495;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15461 = x15399 + x14526;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15462 = x15400 + x14557;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15463 = x15401 + x14588;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15464 = x15403 + x14402;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15465 = x15404 + x14650;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15466 = x15405 + x14681;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15467 = x15406 + x14712;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15468 = x15407 + x14743;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15469 = x15408 + x14774;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15470 = x15409 + x14805;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15471 = x15410 + x14619;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x15472 = x15412 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x15473 = x15472 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15474 = x15413 + x15107;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15475 = x15414 + x15138;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15476 = x15415 + x15169;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15477 = x15416 + x15200;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15478 = x15417 + x15231;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15479 = x15418 + x15262;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15480 = x15419 + x15293;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15481 = x15420 + x15333;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15482 = x15421 + x15326;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15483 = x15422 + x15327;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15484 = x15423 + x15328;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15485 = x15424 + x15329;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15486 = x15425 + x15330;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15487 = x15426 + x15331;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15488 = x15427 + x15341;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15489 = x15428 + x15334;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15490 = x15429 + x15335;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15491 = x15430 + x15336;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15492 = x15431 + x15337;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15493 = x15432 + x15338;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15494 = x15433 + x15339;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15495 = x15434 + x15348;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15496 = x15435 + x15342;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15497 = x15436 + x15343;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15498 = x15437 + x15344;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15499 = x15438 + x15345;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15500 = x15439 + x15346;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15501 = x15440 + x15347;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15502 = x15442 + x15318;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15503 = x15443 + x15319;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15504 = x15444 + x15320;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15505 = x15445 + x15321;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15506 = x15446 + x15322;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15507 = x15447 + x15323;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15508 = x15448 + x15324;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15509 = x15449 + x15325;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15510 = x15450 + x14425;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15511 = x15451 + x14456;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15512 = x15452 + x14487;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15513 = x15453 + x14518;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15514 = x15454 + x14549;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15515 = x15455 + x14580;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15516 = x15457 + x14394;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15517 = x15458 + x14642;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15518 = x15459 + x14673;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15519 = x15460 + x14704;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15520 = x15461 + x14735;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15521 = x15462 + x14766;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15522 = x15463 + x14797;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15523 = x15464 + x14611;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15524 = x15465 + x14890;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15525 = x15466 + x14921;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15526 = x15467 + x14952;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15527 = x15468 + x14983;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15528 = x15469 + x15014;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15529 = x15470 + x15045;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15530 = x15471 + x14859;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x15531 = x15371 + x15473;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15532 = x15474 + x14448;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15533 = x15475 + x14479;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15534 = x15476 + x14510;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15535 = x15477 + x14541;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15536 = x15478 + x14572;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15537 = x15479 + x14603;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15538 = x15481 + x14395;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15539 = x15482 + x14388;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15540 = x15483 + x14389;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15541 = x15484 + x14390;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15542 = x15485 + x14391;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15543 = x15486 + x14392;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15544 = x15487 + x14393;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15545 = x15488 + x14403;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15546 = x15489 + x14396;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15547 = x15490 + x14397;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15548 = x15491 + x14398;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15549 = x15492 + x14399;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15550 = x15493 + x14400;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15551 = x15494 + x14401;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15552 = x15495 + x14411;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15553 = x15496 + x14404;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15554 = x15497 + x14405;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15555 = x15498 + x14406;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15556 = x15499 + x14407;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15557 = x15500 + x14408;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15558 = x15501 + x14409;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15559 = x15502 + x14418;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15560 = x15503 + x14412;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15561 = x15504 + x14413;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15562 = x15505 + x14414;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15563 = x15506 + x14415;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15564 = x15507 + x14416;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15565 = x15508 + x14417;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15566 = x15510 + x14665;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15567 = x15511 + x14696;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15568 = x15512 + x14727;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15569 = x15513 + x14758;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15570 = x15514 + x14789;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15571 = x15515 + x14820;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15572 = x15516 + x14634;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15573 = x15517 + x14913;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15574 = x15518 + x14944;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15575 = x15519 + x14975;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15576 = x15520 + x15006;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15577 = x15521 + x15037;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15578 = x15522 + x15068;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15579 = x15523 + x14882;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15580 = x15524 + x15161;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15581 = x15525 + x15192;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15582 = x15526 + x15223;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15583 = x15527 + x15254;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15584 = x15528 + x15285;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15585 = x15529 + x15316;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15586 = x15530 + x15130;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x15587 = x15531 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x15588 = Fp(x15587.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x15589 = x15587 - x15588;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15590 = x15532 + x14657;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15591 = x15533 + x14688;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15592 = x15534 + x14719;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15593 = x15535 + x14750;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15594 = x15536 + x14781;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15595 = x15537 + x14812;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15596 = x15539 + x14635;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15597 = x15540 + x14629;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15598 = x15541 + x14630;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15599 = x15542 + x14631;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15600 = x15543 + x14632;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15601 = x15544 + x14633;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15602 = x15545 + x14612;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15603 = x15546 + x14605;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15604 = x15547 + x14606;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15605 = x15548 + x14607;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15606 = x15549 + x14608;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15607 = x15550 + x14609;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15608 = x15551 + x14610;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15609 = x15552 + x14620;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15610 = x15553 + x14613;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15611 = x15554 + x14614;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15612 = x15555 + x14615;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15613 = x15556 + x14616;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15614 = x15557 + x14617;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15615 = x15558 + x14618;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15616 = x15559 + x14628;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15617 = x15560 + x14621;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15618 = x15561 + x14622;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15619 = x15562 + x14623;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15620 = x15563 + x14624;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15621 = x15564 + x14625;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15622 = x15565 + x14626;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15623 = x15566 + x14905;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15624 = x15567 + x14936;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15625 = x15568 + x14967;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15626 = x15569 + x14998;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15627 = x15570 + x15029;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15628 = x15571 + x15060;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15629 = x15572 + x14874;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15630 = x15573 + x15153;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15631 = x15574 + x15184;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15632 = x15575 + x15215;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15633 = x15576 + x15246;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15634 = x15577 + x15277;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15635 = x15578 + x15308;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15636 = x15579 + x15122;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15637 = x15580 + x14471;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15638 = x15581 + x14502;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15639 = x15582 + x14533;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15640 = x15583 + x14564;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15641 = x15584 + x14595;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15642 = x15586 + x14440;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x15643 = x15589 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x15644 = x15643 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15645 = x15590 + x14897;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15646 = x15591 + x14928;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15647 = x15592 + x14959;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15648 = x15593 + x14990;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15649 = x15594 + x15021;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15650 = x15595 + x15052;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15651 = x15596 + x14876;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15652 = x15597 + x14869;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15653 = x15598 + x14870;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15654 = x15599 + x14871;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15655 = x15600 + x14872;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15656 = x15601 + x14873;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15657 = x15603 + x14883;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15658 = x15604 + x14877;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15659 = x15605 + x14878;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15660 = x15606 + x14879;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15661 = x15607 + x14880;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15662 = x15608 + x14881;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15663 = x15609 + x14860;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15664 = x15610 + x14853;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15665 = x15611 + x14854;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15666 = x15612 + x14855;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15667 = x15613 + x14856;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15668 = x15614 + x14857;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15669 = x15615 + x14858;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15670 = x15616 + x14868;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15671 = x15617 + x14861;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15672 = x15618 + x14862;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15673 = x15619 + x14863;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15674 = x15620 + x14864;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15675 = x15621 + x14865;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15676 = x15622 + x14866;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15677 = x15623 + x15145;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15678 = x15624 + x15176;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15679 = x15625 + x15207;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15680 = x15626 + x15238;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15681 = x15627 + x15269;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15682 = x15628 + x15300;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15683 = x15629 + x15114;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15684 = x15630 + x14463;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15685 = x15631 + x14494;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15686 = x15632 + x14525;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15687 = x15633 + x14556;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15688 = x15634 + x14587;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15689 = x15636 + x14432;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15690 = x15637 + x14680;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15691 = x15638 + x14711;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15692 = x15639 + x14742;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15693 = x15640 + x14773;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15694 = x15641 + x14804;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15695 = x15642 + x14649;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x15696 = x15441 + x15644;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15697 = x15645 + x15137;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15698 = x15646 + x15168;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15699 = x15647 + x15199;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15700 = x15648 + x15230;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15701 = x15649 + x15261;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15702 = x15650 + x15292;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15703 = x15651 + x15116;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15704 = x15652 + x15109;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15705 = x15653 + x15110;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15706 = x15654 + x15111;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15707 = x15655 + x15112;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15708 = x15656 + x15113;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15709 = x15657 + x15124;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15710 = x15658 + x15117;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15711 = x15659 + x15118;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15712 = x15660 + x15119;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15713 = x15661 + x15120;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15714 = x15662 + x15121;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15715 = x15664 + x15131;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15716 = x15665 + x15125;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15717 = x15666 + x15126;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15718 = x15667 + x15127;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15719 = x15668 + x15128;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15720 = x15669 + x15129;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15721 = x15670 + x15108;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15722 = x15671 + x15101;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15723 = x15672 + x15102;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15724 = x15673 + x15103;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15725 = x15674 + x15104;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15726 = x15675 + x15105;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15727 = x15676 + x15106;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15728 = x15677 + x14455;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15729 = x15678 + x14486;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15730 = x15679 + x14517;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15731 = x15680 + x14548;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15732 = x15681 + x14579;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15733 = x15683 + x14424;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15734 = x15684 + x14672;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15735 = x15685 + x14703;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15736 = x15686 + x14734;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15737 = x15687 + x14765;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15738 = x15688 + x14796;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15739 = x15689 + x14641;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15740 = x15690 + x14920;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15741 = x15691 + x14951;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15742 = x15692 + x14982;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15743 = x15693 + x15013;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15744 = x15694 + x15044;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15745 = x15695 + x14889;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x15746 = x15696 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x15747 = Fp(x15746.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x15748 = x15746 - x15747;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15749 = x15697 + x14478;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15750 = x15698 + x14509;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15751 = x15699 + x14540;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15752 = x15700 + x14571;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15753 = x15701 + x14602;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15754 = x15703 + x14426;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15755 = x15704 + x14419;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15756 = x15705 + x14420;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15757 = x15706 + x14421;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15758 = x15707 + x14422;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15759 = x15708 + x14423;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15760 = x15709 + x14434;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15761 = x15710 + x14427;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15762 = x15711 + x14428;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15763 = x15712 + x14429;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15764 = x15713 + x14430;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15765 = x15714 + x14431;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15766 = x15715 + x14442;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15767 = x15716 + x14435;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15768 = x15717 + x14436;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15769 = x15718 + x14437;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15770 = x15719 + x14438;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15771 = x15720 + x14439;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15772 = x15722 + x14449;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15773 = x15723 + x14443;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15774 = x15724 + x14444;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15775 = x15725 + x14445;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15776 = x15726 + x14446;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15777 = x15727 + x14447;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15778 = x15728 + x14695;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15779 = x15729 + x14726;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15780 = x15730 + x14757;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15781 = x15731 + x14788;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15782 = x15732 + x14819;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15783 = x15733 + x14664;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15784 = x15734 + x14943;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15785 = x15735 + x14974;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15786 = x15736 + x15005;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15787 = x15737 + x15036;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15788 = x15738 + x15067;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15789 = x15739 + x14912;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15790 = x15740 + x15191;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15791 = x15741 + x15222;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15792 = x15742 + x15253;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15793 = x15743 + x15284;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15794 = x15744 + x15315;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15795 = x15745 + x15160;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x15796 = x15748 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x15797 = x15796 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15798 = x15749 + x14687;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15799 = x15750 + x14718;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15800 = x15751 + x14749;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15801 = x15752 + x14780;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15802 = x15753 + x14811;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15803 = x15755 + x14666;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15804 = x15756 + x14660;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15805 = x15757 + x14661;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15806 = x15758 + x14662;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15807 = x15759 + x14663;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15808 = x15760 + x14643;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15809 = x15761 + x14636;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15810 = x15762 + x14637;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15811 = x15763 + x14638;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15812 = x15764 + x14639;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15813 = x15765 + x14640;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15814 = x15766 + x14651;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15815 = x15767 + x14644;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15816 = x15768 + x14645;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15817 = x15769 + x14646;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15818 = x15770 + x14647;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15819 = x15771 + x14648;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15820 = x15772 + x14659;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15821 = x15773 + x14652;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15822 = x15774 + x14653;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15823 = x15775 + x14654;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15824 = x15776 + x14655;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15825 = x15777 + x14656;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15826 = x15778 + x14935;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15827 = x15779 + x14966;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15828 = x15780 + x14997;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15829 = x15781 + x15028;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15830 = x15782 + x15059;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15831 = x15783 + x14904;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15832 = x15784 + x15183;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15833 = x15785 + x15214;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15834 = x15786 + x15245;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15835 = x15787 + x15276;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15836 = x15788 + x15307;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15837 = x15789 + x15152;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15838 = x15790 + x14501;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15839 = x15791 + x14532;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15840 = x15792 + x14563;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15841 = x15793 + x14594;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15842 = x15795 + x14470;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x15843 = x15509 + x15797;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15844 = x15798 + x14927;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15845 = x15799 + x14958;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15846 = x15800 + x14989;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15847 = x15801 + x15020;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15848 = x15802 + x15051;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15849 = x15803 + x14907;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15850 = x15804 + x14900;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15851 = x15805 + x14901;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15852 = x15806 + x14902;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15853 = x15807 + x14903;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15854 = x15809 + x14914;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15855 = x15810 + x14908;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15856 = x15811 + x14909;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15857 = x15812 + x14910;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15858 = x15813 + x14911;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15859 = x15814 + x14891;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15860 = x15815 + x14884;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15861 = x15816 + x14885;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15862 = x15817 + x14886;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15863 = x15818 + x14887;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15864 = x15819 + x14888;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15865 = x15820 + x14899;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15866 = x15821 + x14892;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15867 = x15822 + x14893;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15868 = x15823 + x14894;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15869 = x15824 + x14895;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15870 = x15825 + x14896;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15871 = x15826 + x15175;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15872 = x15827 + x15206;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15873 = x15828 + x15237;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15874 = x15829 + x15268;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15875 = x15830 + x15299;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15876 = x15831 + x15144;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15877 = x15832 + x14493;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15878 = x15833 + x14524;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15879 = x15834 + x14555;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15880 = x15835 + x14586;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15881 = x15837 + x14462;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15882 = x15838 + x14710;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15883 = x15839 + x14741;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15884 = x15840 + x14772;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15885 = x15841 + x14803;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15886 = x15842 + x14679;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x15887 = x15843 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x15888 = Fp(x15887.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x15889 = x15887 - x15888;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15890 = x15844 + x15167;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15891 = x15845 + x15198;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15892 = x15846 + x15229;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15893 = x15847 + x15260;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15894 = x15848 + x15291;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15895 = x15849 + x15147;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15896 = x15850 + x15140;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15897 = x15851 + x15141;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15898 = x15852 + x15142;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15899 = x15853 + x15143;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15900 = x15854 + x15155;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15901 = x15855 + x15148;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15902 = x15856 + x15149;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15903 = x15857 + x15150;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15904 = x15858 + x15151;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15905 = x15860 + x15162;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15906 = x15861 + x15156;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15907 = x15862 + x15157;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15908 = x15863 + x15158;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15909 = x15864 + x15159;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15910 = x15865 + x15139;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15911 = x15866 + x15132;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15912 = x15867 + x15133;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15913 = x15868 + x15134;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15914 = x15869 + x15135;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15915 = x15870 + x15136;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15916 = x15871 + x14485;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15917 = x15872 + x14516;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15918 = x15873 + x14547;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15919 = x15874 + x14578;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15920 = x15876 + x14454;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15921 = x15877 + x14702;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15922 = x15878 + x14733;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15923 = x15879 + x14764;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15924 = x15880 + x14795;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15925 = x15881 + x14671;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15926 = x15882 + x14950;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15927 = x15883 + x14981;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15928 = x15884 + x15012;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15929 = x15885 + x15043;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15930 = x15886 + x14919;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x15931 = x15889 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x15932 = x15931 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15933 = x15890 + x14508;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15934 = x15891 + x14539;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15935 = x15892 + x14570;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15936 = x15893 + x14601;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15937 = x15895 + x14457;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15938 = x15896 + x14450;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15939 = x15897 + x14451;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15940 = x15898 + x14452;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15941 = x15899 + x14453;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15942 = x15900 + x14465;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15943 = x15901 + x14458;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15944 = x15902 + x14459;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15945 = x15903 + x14460;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15946 = x15904 + x14461;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15947 = x15905 + x14473;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15948 = x15906 + x14466;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15949 = x15907 + x14467;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15950 = x15908 + x14468;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15951 = x15909 + x14469;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15952 = x15911 + x14480;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15953 = x15912 + x14474;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15954 = x15913 + x14475;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15955 = x15914 + x14476;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15956 = x15915 + x14477;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15957 = x15916 + x14725;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15958 = x15917 + x14756;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15959 = x15918 + x14787;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15960 = x15919 + x14818;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15961 = x15920 + x14694;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15962 = x15921 + x14973;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15963 = x15922 + x15004;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15964 = x15923 + x15035;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15965 = x15924 + x15066;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15966 = x15925 + x14942;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15967 = x15926 + x15221;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15968 = x15927 + x15252;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15969 = x15928 + x15283;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15970 = x15929 + x15314;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15971 = x15930 + x15190;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x15972 = x15538 + x15932;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15973 = x15933 + x14717;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15974 = x15934 + x14748;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15975 = x15935 + x14779;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15976 = x15936 + x14810;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15977 = x15938 + x14697;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15978 = x15939 + x14691;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15979 = x15940 + x14692;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15980 = x15941 + x14693;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15981 = x15942 + x14674;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15982 = x15943 + x14667;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15983 = x15944 + x14668;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15984 = x15945 + x14669;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15985 = x15946 + x14670;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15986 = x15947 + x14682;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15987 = x15948 + x14675;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15988 = x15949 + x14676;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15989 = x15950 + x14677;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15990 = x15951 + x14678;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15991 = x15952 + x14690;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15992 = x15953 + x14683;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15993 = x15954 + x14684;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15994 = x15955 + x14685;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15995 = x15956 + x14686;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15996 = x15957 + x14965;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15997 = x15958 + x14996;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15998 = x15959 + x15027;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x15999 = x15960 + x15058;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16000 = x15961 + x14934;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16001 = x15962 + x15213;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16002 = x15963 + x15244;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16003 = x15964 + x15275;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16004 = x15965 + x15306;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16005 = x15966 + x15182;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16006 = x15967 + x14531;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16007 = x15968 + x14562;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16008 = x15969 + x14593;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16009 = x15971 + x14500;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16010 = x15972 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x16011 = Fp(x16010.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x16012 = x16010 - x16011;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16013 = x15973 + x14957;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16014 = x15974 + x14988;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16015 = x15975 + x15019;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16016 = x15976 + x15050;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16017 = x15977 + x14938;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16018 = x15978 + x14931;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16019 = x15979 + x14932;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16020 = x15980 + x14933;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16021 = x15982 + x14945;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16022 = x15983 + x14939;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16023 = x15984 + x14940;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16024 = x15985 + x14941;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16025 = x15986 + x14922;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16026 = x15987 + x14915;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16027 = x15988 + x14916;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16028 = x15989 + x14917;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16029 = x15990 + x14918;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16030 = x15991 + x14930;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16031 = x15992 + x14923;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16032 = x15993 + x14924;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16033 = x15994 + x14925;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16034 = x15995 + x14926;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16035 = x15996 + x15205;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16036 = x15997 + x15236;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16037 = x15998 + x15267;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16038 = x15999 + x15298;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16039 = x16000 + x15174;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16040 = x16001 + x14523;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16041 = x16002 + x14554;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16042 = x16003 + x14585;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16043 = x16005 + x14492;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16044 = x16006 + x14740;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16045 = x16007 + x14771;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16046 = x16008 + x14802;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16047 = x16009 + x14709;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x16048 = x16012 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x16049 = x16048 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16050 = x16013 + x15197;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16051 = x16014 + x15228;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16052 = x16015 + x15259;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16053 = x16016 + x15290;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16054 = x16017 + x15178;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16055 = x16018 + x15171;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16056 = x16019 + x15172;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16057 = x16020 + x15173;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16058 = x16021 + x15186;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16059 = x16022 + x15179;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16060 = x16023 + x15180;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16061 = x16024 + x15181;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16062 = x16026 + x15193;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16063 = x16027 + x15187;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16064 = x16028 + x15188;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16065 = x16029 + x15189;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16066 = x16030 + x15170;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16067 = x16031 + x15163;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16068 = x16032 + x15164;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16069 = x16033 + x15165;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16070 = x16034 + x15166;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16071 = x16035 + x14515;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16072 = x16036 + x14546;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16073 = x16037 + x14577;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16074 = x16039 + x14484;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16075 = x16040 + x14732;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16076 = x16041 + x14763;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16077 = x16042 + x14794;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16078 = x16043 + x14701;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16079 = x16044 + x14980;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16080 = x16045 + x15011;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16081 = x16046 + x15042;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16082 = x16047 + x14949;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16083 = x15602 + x16049;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16084 = x16050 + x14538;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16085 = x16051 + x14569;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16086 = x16052 + x14600;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16087 = x16054 + x14488;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16088 = x16055 + x14481;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16089 = x16056 + x14482;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16090 = x16057 + x14483;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16091 = x16058 + x14496;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16092 = x16059 + x14489;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16093 = x16060 + x14490;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16094 = x16061 + x14491;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16095 = x16062 + x14504;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16096 = x16063 + x14497;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16097 = x16064 + x14498;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16098 = x16065 + x14499;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16099 = x16067 + x14511;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16100 = x16068 + x14505;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16101 = x16069 + x14506;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16102 = x16070 + x14507;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16103 = x16071 + x14755;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16104 = x16072 + x14786;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16105 = x16073 + x14817;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16106 = x16074 + x14724;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16107 = x16075 + x15003;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16108 = x16076 + x15034;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16109 = x16077 + x15065;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16110 = x16078 + x14972;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16111 = x16079 + x15251;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16112 = x16080 + x15282;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16113 = x16081 + x15313;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16114 = x16082 + x15220;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16115 = x16083 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x16116 = Fp(x16115.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x16117 = x16115 - x16116;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16118 = x16084 + x14747;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16119 = x16085 + x14778;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16120 = x16086 + x14809;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16121 = x16088 + x14728;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16122 = x16089 + x14722;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16123 = x16090 + x14723;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16124 = x16091 + x14705;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16125 = x16092 + x14698;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16126 = x16093 + x14699;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16127 = x16094 + x14700;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16128 = x16095 + x14713;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16129 = x16096 + x14706;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16130 = x16097 + x14707;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16131 = x16098 + x14708;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16132 = x16099 + x14721;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16133 = x16100 + x14714;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16134 = x16101 + x14715;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16135 = x16102 + x14716;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16136 = x16103 + x14995;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16137 = x16104 + x15026;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16138 = x16105 + x15057;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16139 = x16106 + x14964;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16140 = x16107 + x15243;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16141 = x16108 + x15274;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16142 = x16109 + x15305;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16143 = x16110 + x15212;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16144 = x16111 + x14561;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16145 = x16112 + x14592;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16146 = x16114 + x14530;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x16147 = x16117 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x16148 = x16147 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16149 = x16118 + x14987;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16150 = x16119 + x15018;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16151 = x16120 + x15049;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16152 = x16121 + x14969;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16153 = x16122 + x14962;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16154 = x16123 + x14963;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16155 = x16125 + x14976;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16156 = x16126 + x14970;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16157 = x16127 + x14971;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16158 = x16128 + x14953;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16159 = x16129 + x14946;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16160 = x16130 + x14947;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16161 = x16131 + x14948;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16162 = x16132 + x14961;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16163 = x16133 + x14954;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16164 = x16134 + x14955;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16165 = x16135 + x14956;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16166 = x16136 + x15235;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16167 = x16137 + x15266;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16168 = x16138 + x15297;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16169 = x16139 + x15204;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16170 = x16140 + x14553;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16171 = x16141 + x14584;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16172 = x16143 + x14522;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16173 = x16144 + x14770;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16174 = x16145 + x14801;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16175 = x16146 + x14739;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16176 = x15663 + x16148;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16177 = x16149 + x15227;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16178 = x16150 + x15258;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16179 = x16151 + x15289;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16180 = x16152 + x15209;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16181 = x16153 + x15202;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16182 = x16154 + x15203;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16183 = x16155 + x15217;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16184 = x16156 + x15210;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16185 = x16157 + x15211;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16186 = x16159 + x15224;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16187 = x16160 + x15218;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16188 = x16161 + x15219;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16189 = x16162 + x15201;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16190 = x16163 + x15194;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16191 = x16164 + x15195;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16192 = x16165 + x15196;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16193 = x16166 + x14545;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16194 = x16167 + x14576;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16195 = x16169 + x14514;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16196 = x16170 + x14762;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16197 = x16171 + x14793;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16198 = x16172 + x14731;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16199 = x16173 + x15010;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16200 = x16174 + x15041;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16201 = x16175 + x14979;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16202 = x16176 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x16203 = Fp(x16202.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x16204 = x16202 - x16203;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16205 = x16177 + x14568;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16206 = x16178 + x14599;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16207 = x16180 + x14519;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16208 = x16181 + x14512;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16209 = x16182 + x14513;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16210 = x16183 + x14527;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16211 = x16184 + x14520;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16212 = x16185 + x14521;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16213 = x16186 + x14535;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16214 = x16187 + x14528;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16215 = x16188 + x14529;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16216 = x16190 + x14542;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16217 = x16191 + x14536;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16218 = x16192 + x14537;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16219 = x16193 + x14785;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16220 = x16194 + x14816;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16221 = x16195 + x14754;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16222 = x16196 + x15033;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16223 = x16197 + x15064;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16224 = x16198 + x15002;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16225 = x16199 + x15281;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16226 = x16200 + x15312;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16227 = x16201 + x15250;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x16228 = x16204 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x16229 = x16228 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16230 = x16205 + x14777;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16231 = x16206 + x14808;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16232 = x16208 + x14759;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16233 = x16209 + x14753;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16234 = x16210 + x14736;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16235 = x16211 + x14729;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16236 = x16212 + x14730;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16237 = x16213 + x14744;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16238 = x16214 + x14737;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16239 = x16215 + x14738;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16240 = x16216 + x14752;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16241 = x16217 + x14745;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16242 = x16218 + x14746;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16243 = x16219 + x15025;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16244 = x16220 + x15056;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16245 = x16221 + x14994;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16246 = x16222 + x15273;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16247 = x16223 + x15304;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16248 = x16224 + x15242;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16249 = x16225 + x14591;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16250 = x16227 + x14560;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16251 = x15721 + x16229;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16252 = x16230 + x15017;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16253 = x16231 + x15048;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16254 = x16232 + x15000;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16255 = x16233 + x14993;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16256 = x16235 + x15007;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16257 = x16236 + x15001;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16258 = x16237 + x14984;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16259 = x16238 + x14977;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16260 = x16239 + x14978;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16261 = x16240 + x14992;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16262 = x16241 + x14985;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16263 = x16242 + x14986;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16264 = x16243 + x15265;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16265 = x16244 + x15296;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16266 = x16245 + x15234;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16267 = x16246 + x14583;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16268 = x16248 + x14552;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16269 = x16249 + x14800;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16270 = x16250 + x14769;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16271 = x16251 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x16272 = Fp(x16271.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x16273 = x16271 - x16272;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16274 = x16252 + x15257;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16275 = x16253 + x15288;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16276 = x16254 + x15240;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16277 = x16255 + x15233;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16278 = x16256 + x15248;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16279 = x16257 + x15241;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16280 = x16259 + x15255;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16281 = x16260 + x15249;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16282 = x16261 + x15232;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16283 = x16262 + x15225;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16284 = x16263 + x15226;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16285 = x16264 + x14575;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16286 = x16266 + x14544;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16287 = x16267 + x14792;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16288 = x16268 + x14761;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16289 = x16269 + x15040;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16290 = x16270 + x15009;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x16291 = x16273 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x16292 = x16291 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16293 = x16274 + x14598;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16294 = x16276 + x14550;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16295 = x16277 + x14543;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16296 = x16278 + x14558;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16297 = x16279 + x14551;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16298 = x16280 + x14566;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16299 = x16281 + x14559;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16300 = x16283 + x14573;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16301 = x16284 + x14567;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16302 = x16285 + x14815;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16303 = x16286 + x14784;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16304 = x16287 + x15063;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16305 = x16288 + x15032;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16306 = x16289 + x15311;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16307 = x16290 + x15280;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16308 = x15754 + x16292;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16309 = x16293 + x14807;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16310 = x16295 + x14790;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16311 = x16296 + x14767;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16312 = x16297 + x14760;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16313 = x16298 + x14775;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16314 = x16299 + x14768;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16315 = x16300 + x14783;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16316 = x16301 + x14776;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16317 = x16302 + x15055;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16318 = x16303 + x15024;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16319 = x16304 + x15303;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16320 = x16305 + x15272;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16321 = x16307 + x14590;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16322 = x16308 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x16323 = Fp(x16322.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x16324 = x16322 - x16323;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16325 = x16309 + x15047;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16326 = x16310 + x15031;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16327 = x16312 + x15038;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16328 = x16313 + x15015;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16329 = x16314 + x15008;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16330 = x16315 + x15023;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16331 = x16316 + x15016;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16332 = x16317 + x15295;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16333 = x16318 + x15264;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16334 = x16320 + x14582;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16335 = x16321 + x14799;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x16336 = x16324 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x16337 = x16336 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16338 = x16325 + x15287;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16339 = x16326 + x15271;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16340 = x16327 + x15279;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16341 = x16329 + x15286;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16342 = x16330 + x15263;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16343 = x16331 + x15256;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16344 = x16333 + x14574;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16345 = x16334 + x14791;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16346 = x16335 + x15039;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16347 = x15808 + x16337;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16348 = x16339 + x14581;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16349 = x16340 + x14589;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16350 = x16341 + x14597;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16351 = x16343 + x14604;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16352 = x16344 + x14821;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16353 = x16345 + x15069;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16354 = x16346 + x15317;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16355 = x16347 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x16356 = Fp(x16355.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x16357 = x16355 - x16356;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16358 = x16349 + x14798;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16359 = x16350 + x14806;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16360 = x16351 + x14814;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16361 = x16352 + x15062;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16362 = x16353 + x15310;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x16363 = x16357 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x16364 = x16363 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16365 = x16359 + x15046;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16366 = x16360 + x15054;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16367 = x16361 + x15302;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16368 = x15859 + x16364;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x16369 = x16366 + x15294;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16370 = x16368 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x16371 = Fp(x16370.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x16372 = x16370 - x16371;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x16373 = x16372 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x16374 = x16373 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16375 = x15910 + x16374;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16376 = x16375 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x16377 = Fp(x16376.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x16378 = x16376 - x16377;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x16379 = x16378 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x16380 = x16379 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16381 = x15937 + x16380;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16382 = x16381 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x16383 = Fp(x16382.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x16384 = x16382 - x16383;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x16385 = x16384 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x16386 = x16385 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16387 = x15981 + x16386;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16388 = x16387 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x16389 = Fp(x16388.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x16390 = x16388 - x16389;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x16391 = x16390 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x16392 = x16391 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16393 = x16025 + x16392;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16394 = x16393 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x16395 = Fp(x16394.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x16396 = x16394 - x16395;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x16397 = x16396 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x16398 = x16397 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16399 = x16066 + x16398;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16400 = x16399 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x16401 = Fp(x16400.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x16402 = x16400 - x16401;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x16403 = x16402 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x16404 = x16403 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16405 = x16087 + x16404;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16406 = x16405 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x16407 = Fp(x16406.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x16408 = x16406 - x16407;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x16409 = x16408 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x16410 = x16409 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16411 = x16124 + x16410;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16412 = x16411 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x16413 = Fp(x16412.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x16414 = x16412 - x16413;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x16415 = x16414 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x16416 = x16415 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16417 = x16158 + x16416;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16418 = x16417 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x16419 = Fp(x16418.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x16420 = x16418 - x16419;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x16421 = x16420 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x16422 = x16421 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16423 = x16189 + x16422;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16424 = x16423 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x16425 = Fp(x16424.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x16426 = x16424 - x16425;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x16427 = x16426 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x16428 = x16427 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16429 = x16207 + x16428;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16430 = x16429 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x16431 = Fp(x16430.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x16432 = x16430 - x16431;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x16433 = x16432 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x16434 = x16433 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16435 = x16234 + x16434;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16436 = x16435 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x16437 = Fp(x16436.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x16438 = x16436 - x16437;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x16439 = x16438 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x16440 = x16439 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16441 = x16258 + x16440;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16442 = x16441 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x16443 = Fp(x16442.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x16444 = x16442 - x16443;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x16445 = x16444 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x16446 = x16445 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16447 = x16282 + x16446;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16448 = x16447 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x16449 = Fp(x16448.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x16450 = x16448 - x16449;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x16451 = x16450 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x16452 = x16451 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16453 = x16294 + x16452;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16454 = x16453 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x16455 = Fp(x16454.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x16456 = x16454 - x16455;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x16457 = x16456 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x16458 = x16457 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16459 = x16311 + x16458;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16460 = x16459 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x16461 = Fp(x16460.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x16462 = x16460 - x16461;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x16463 = x16462 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x16464 = x16463 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16465 = x16328 + x16464;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16466 = x16465 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x16467 = Fp(x16466.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x16468 = x16466 - x16467;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x16469 = x16468 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x16470 = x16469 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16471 = x16342 + x16470;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16472 = x16471 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x16473 = Fp(x16472.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x16474 = x16472 - x16473;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x16475 = x16474 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x16476 = x16475 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16477 = x16348 + x16476;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16478 = x16477 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x16479 = Fp(x16478.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x16480 = x16478 - x16479;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x16481 = x16480 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x16482 = x16481 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16483 = x16358 + x16482;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16484 = x16483 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x16485 = Fp(x16484.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x16486 = x16484 - x16485;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x16487 = x16486 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x16488 = x16487 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16489 = x16365 + x16488;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16490 = x16489 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x16491 = Fp(x16490.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x16492 = x16490 - x16491;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x16493 = x16492 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x16494 = x16493 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16495 = x16369 + x16494;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16496 = x16495 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x16497 = Fp(x16496.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x16498 = x16496 - x16497;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x16499 = x16498 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x16500 = x16499 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16501 = x16367 + x16500;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16502 = x16501 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x16503 = Fp(x16502.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x16504 = x16502 - x16503;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x16505 = x16504 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x16506 = x16505 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16507 = x16362 + x16506;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16508 = x16507 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x16509 = Fp(x16508.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x16510 = x16508 - x16509;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x16511 = x16510 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x16512 = x16511 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16513 = x16354 + x16512;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16514 = x16513 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x16515 = Fp(x16514.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x16516 = x16514 - x16515;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x16517 = x16516 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x16518 = x16517 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16519 = x16338 + x16518;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16520 = x16519 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x16521 = Fp(x16520.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x16522 = x16520 - x16521;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x16523 = x16522 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x16524 = x16523 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16525 = x16332 + x16524;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16526 = x16525 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x16527 = Fp(x16526.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x16528 = x16526 - x16527;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x16529 = x16528 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x16530 = x16529 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16531 = x16319 + x16530;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16532 = x16531 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x16533 = Fp(x16532.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x16534 = x16532 - x16533;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x16535 = x16534 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x16536 = x16535 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16537 = x16306 + x16536;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16538 = x16537 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x16539 = Fp(x16538.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x16540 = x16538 - x16539;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x16541 = x16540 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x16542 = x16541 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16543 = x16275 + x16542;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16544 = x16543 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x16545 = Fp(x16544.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x16546 = x16544 - x16545;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x16547 = x16546 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x16548 = x16547 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16549 = x16265 + x16548;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16550 = x16549 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x16551 = Fp(x16550.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x16552 = x16550 - x16551;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x16553 = x16552 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x16554 = x16553 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16555 = x16247 + x16554;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16556 = x16555 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x16557 = Fp(x16556.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x16558 = x16556 - x16557;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x16559 = x16558 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x16560 = x16559 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16561 = x16226 + x16560;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16562 = x16561 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x16563 = Fp(x16562.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x16564 = x16562 - x16563;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x16565 = x16564 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x16566 = x16565 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16567 = x16179 + x16566;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16568 = x16567 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x16569 = Fp(x16568.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x16570 = x16568 - x16569;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x16571 = x16570 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x16572 = x16571 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16573 = x16168 + x16572;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16574 = x16573 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x16575 = Fp(x16574.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x16576 = x16574 - x16575;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x16577 = x16576 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x16578 = x16577 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16579 = x16142 + x16578;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16580 = x16579 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x16581 = Fp(x16580.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x16582 = x16580 - x16581;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x16583 = x16582 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x16584 = x16583 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16585 = x16113 + x16584;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16586 = x16585 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x16587 = Fp(x16586.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x16588 = x16586 - x16587;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x16589 = x16588 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x16590 = x16589 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16591 = x16053 + x16590;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16592 = x16591 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x16593 = Fp(x16592.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x16594 = x16592 - x16593;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x16595 = x16594 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x16596 = x16595 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16597 = x16038 + x16596;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16598 = x16597 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x16599 = Fp(x16598.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x16600 = x16598 - x16599;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x16601 = x16600 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x16602 = x16601 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16603 = x16004 + x16602;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16604 = x16603 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x16605 = Fp(x16604.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x16606 = x16604 - x16605;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x16607 = x16606 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x16608 = x16607 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16609 = x15970 + x16608;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16610 = x16609 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x16611 = Fp(x16610.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x16612 = x16610 - x16611;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x16613 = x16612 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x16614 = x16613 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16615 = x15894 + x16614;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16616 = x16615 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x16617 = Fp(x16616.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x16618 = x16616 - x16617;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x16619 = x16618 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x16620 = x16619 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16621 = x15875 + x16620;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16622 = x16621 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x16623 = Fp(x16622.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x16624 = x16622 - x16623;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x16625 = x16624 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x16626 = x16625 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16627 = x15836 + x16626;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16628 = x16627 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x16629 = Fp(x16628.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x16630 = x16628 - x16629;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x16631 = x16630 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x16632 = x16631 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16633 = x15794 + x16632;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16634 = x16633 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x16635 = Fp(x16634.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x16636 = x16634 - x16635;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x16637 = x16636 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x16638 = x16637 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16639 = x15702 + x16638;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16640 = x16639 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x16641 = Fp(x16640.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x16642 = x16640 - x16641;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x16643 = x16642 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x16644 = x16643 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16645 = x15682 + x16644;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16646 = x16645 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x16647 = Fp(x16646.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x16648 = x16646 - x16647;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x16649 = x16648 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x16650 = x16649 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16651 = x15635 + x16650;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16652 = x16651 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x16653 = Fp(x16652.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x16654 = x16652 - x16653;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x16655 = x16654 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x16656 = x16655 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16657 = x15585 + x16656;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16658 = x16657 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x16659 = Fp(x16658.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x16660 = x16658 - x16659;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x16661 = x16660 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x16662 = x16661 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16663 = x15480 + x16662;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16664 = x16663 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x16665 = Fp(x16664.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x16666 = x16664 - x16665;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x16667 = x16666 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x16668 = x16667 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16669 = x15456 + x16668;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16670 = x16669 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x16671 = Fp(x16670.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x16672 = x16670 - x16671;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x16673 = x16672 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x16674 = x16673 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16675 = x15402 + x16674;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16676 = x16675 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x16677 = Fp(x16676.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x16678 = x16676 - x16677;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x16679 = x16678 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x16680 = x16679 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16681 = x14386 + x16680;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x16682 = x16681 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x16683 = Fp(x16682.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x16684 = x16682 - x16683;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x16685 = x16684 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x16686 = x16685 - x11;
        extern_args[0] = x15411;
        extern_args[1] = x15588;
        extern_args[2] = x15747;
        extern_args[3] = x15888;
        extern_args[4] = x16011;
        extern_args[5] = x16116;
        extern_args[6] = x16203;
        extern_args[7] = x16272;
        extern_args[8] = x16323;
        extern_args[9] = x16356;
        extern_args[10] = x16371;
        extern_args[11] = x16377;
        extern_args[12] = x16383;
        extern_args[13] = x16389;
        extern_args[14] = x16395;
        extern_args[15] = x16401;
        extern_args[16] = x16407;
        extern_args[17] = x16413;
        extern_args[18] = x16419;
        extern_args[19] = x16425;
        extern_args[20] = x16431;
        extern_args[21] = x16437;
        extern_args[22] = x16443;
        extern_args[23] = x16449;
        extern_args[24] = x16455;
        extern_args[25] = x16461;
        extern_args[26] = x16467;
        extern_args[27] = x16473;
        extern_args[28] = x16479;
        extern_args[29] = x16485;
        extern_args[30] = x16491;
        extern_args[31] = x16497;
        extern_args[32] = x16503;
        extern_args[33] = x16509;
        extern_args[34] = x16515;
        extern_args[35] = x16521;
        extern_args[36] = x16527;
        extern_args[37] = x16533;
        extern_args[38] = x16539;
        extern_args[39] = x16545;
        extern_args[40] = x16551;
        extern_args[41] = x16557;
        extern_args[42] = x16563;
        extern_args[43] = x16569;
        extern_args[44] = x16575;
        extern_args[45] = x16581;
        extern_args[46] = x16587;
        extern_args[47] = x16593;
        extern_args[48] = x16599;
        extern_args[49] = x16605;
        extern_args[50] = x16611;
        extern_args[51] = x16617;
        extern_args[52] = x16623;
        extern_args[53] = x16629;
        extern_args[54] = x16635;
        extern_args[55] = x16641;
        extern_args[56] = x16647;
        extern_args[57] = x16653;
        extern_args[58] = x16659;
        extern_args[59] = x16665;
        extern_args[60] = x16671;
        extern_args[61] = x16677;
        extern_args[62] = x16683;
        extern_args[63] = x16686;
        extern_args[64] = x14286;
        extern_args[65] = x14287;
        extern_args[66] = x14288;
        extern_args[67] = x14289;
        extern_args[68] = x14291;
        extern_args[69] = x14292;
        extern_args[70] = x14293;
        extern_args[71] = x14294;
        extern_args[72] = x14296;
        extern_args[73] = x14297;
        extern_args[74] = x14298;
        extern_args[75] = x14299;
        extern_args[76] = x14301;
        extern_args[77] = x14302;
        extern_args[78] = x14303;
        extern_args[79] = x14304;
        extern_args[80] = x14306;
        extern_args[81] = x14307;
        extern_args[82] = x14308;
        extern_args[83] = x14309;
        extern_args[84] = x14311;
        extern_args[85] = x14312;
        extern_args[86] = x14313;
        extern_args[87] = x14314;
        extern_args[88] = x14316;
        extern_args[89] = x14317;
        extern_args[90] = x14318;
        extern_args[91] = x14319;
        extern_args[92] = x14321;
        extern_args[93] = x14322;
        extern_args[94] = x14323;
        extern_args[95] = x14324;
        extern_bigintQuotient(ctx, cycle, "", extern_args, extern_outs);
        auto x16687 = extern_outs[0];
        auto x16688 = extern_outs[1];
        auto x16689 = extern_outs[2];
        auto x16690 = extern_outs[3];
        auto x16691 = extern_outs[4];
        auto x16692 = extern_outs[5];
        auto x16693 = extern_outs[6];
        auto x16694 = extern_outs[7];
        auto x16695 = extern_outs[8];
        auto x16696 = extern_outs[9];
        auto x16697 = extern_outs[10];
        auto x16698 = extern_outs[11];
        auto x16699 = extern_outs[12];
        auto x16700 = extern_outs[13];
        auto x16701 = extern_outs[14];
        auto x16702 = extern_outs[15];
        auto x16703 = extern_outs[16];
        auto x16704 = extern_outs[17];
        auto x16705 = extern_outs[18];
        auto x16706 = extern_outs[19];
        auto x16707 = extern_outs[20];
        auto x16708 = extern_outs[21];
        auto x16709 = extern_outs[22];
        auto x16710 = extern_outs[23];
        auto x16711 = extern_outs[24];
        auto x16712 = extern_outs[25];
        auto x16713 = extern_outs[26];
        auto x16714 = extern_outs[27];
        auto x16715 = extern_outs[28];
        auto x16716 = extern_outs[29];
        auto x16717 = extern_outs[30];
        auto x16718 = extern_outs[31];
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16719 = x16687 * x14286;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16720 = x16687 * x14291;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16721 = x16687 * x14296;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16722 = x16687 * x14301;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16723 = x16687 * x14306;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16724 = x16687 * x14311;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16725 = x16687 * x14316;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16726 = x16687 * x14321;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16727 = x16687 * x14287;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16728 = x16687 * x14292;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16729 = x16687 * x14297;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16730 = x16687 * x14302;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16731 = x16687 * x14307;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16732 = x16687 * x14312;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16733 = x16687 * x14317;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16734 = x16687 * x14322;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16735 = x16687 * x14288;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16736 = x16687 * x14293;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16737 = x16687 * x14298;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16738 = x16687 * x14303;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16739 = x16687 * x14308;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16740 = x16687 * x14313;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16741 = x16687 * x14318;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16742 = x16687 * x14323;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16743 = x16687 * x14289;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16744 = x16687 * x14294;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16745 = x16687 * x14299;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16746 = x16687 * x14304;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16747 = x16687 * x14309;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16748 = x16687 * x14314;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16749 = x16687 * x14319;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16750 = x16687 * x14324;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16751 = x16688 * x14324;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16752 = x16689 * x14324;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16753 = x16690 * x14324;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16754 = x16691 * x14324;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16755 = x16692 * x14324;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16756 = x16693 * x14324;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16757 = x16694 * x14324;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16758 = x16695 * x14324;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16759 = x16696 * x14324;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16760 = x16697 * x14324;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16761 = x16698 * x14324;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16762 = x16699 * x14324;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16763 = x16700 * x14324;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16764 = x16701 * x14324;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16765 = x16702 * x14324;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16766 = x16703 * x14324;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16767 = x16704 * x14324;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16768 = x16705 * x14324;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16769 = x16706 * x14324;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16770 = x16707 * x14324;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16771 = x16708 * x14324;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16772 = x16709 * x14324;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16773 = x16710 * x14324;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16774 = x16711 * x14324;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16775 = x16712 * x14324;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16776 = x16713 * x14324;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16777 = x16714 * x14324;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16778 = x16715 * x14324;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16779 = x16716 * x14324;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16780 = x16717 * x14324;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16781 = x16718 * x14324;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16782 = x16688 * x14286;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16783 = x16688 * x14291;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16784 = x16688 * x14296;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16785 = x16688 * x14301;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16786 = x16688 * x14306;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16787 = x16688 * x14311;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16788 = x16688 * x14316;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16789 = x16688 * x14321;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16790 = x16688 * x14287;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16791 = x16688 * x14292;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16792 = x16688 * x14297;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16793 = x16688 * x14302;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16794 = x16688 * x14307;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16795 = x16688 * x14312;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16796 = x16688 * x14317;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16797 = x16688 * x14322;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16798 = x16688 * x14288;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16799 = x16688 * x14293;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16800 = x16688 * x14298;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16801 = x16688 * x14303;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16802 = x16688 * x14308;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16803 = x16688 * x14313;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16804 = x16688 * x14318;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16805 = x16688 * x14323;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16806 = x16688 * x14289;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16807 = x16688 * x14294;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16808 = x16688 * x14299;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16809 = x16688 * x14304;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16810 = x16688 * x14309;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16811 = x16688 * x14314;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16812 = x16688 * x14319;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16813 = x16689 * x14286;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16814 = x16689 * x14291;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16815 = x16689 * x14296;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16816 = x16689 * x14301;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16817 = x16689 * x14306;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16818 = x16689 * x14311;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16819 = x16689 * x14316;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16820 = x16689 * x14321;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16821 = x16689 * x14287;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16822 = x16689 * x14292;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16823 = x16689 * x14297;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16824 = x16689 * x14302;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16825 = x16689 * x14307;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16826 = x16689 * x14312;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16827 = x16689 * x14317;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16828 = x16689 * x14322;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16829 = x16689 * x14288;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16830 = x16689 * x14293;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16831 = x16689 * x14298;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16832 = x16689 * x14303;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16833 = x16689 * x14308;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16834 = x16689 * x14313;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16835 = x16689 * x14318;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16836 = x16689 * x14323;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16837 = x16689 * x14289;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16838 = x16689 * x14294;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16839 = x16689 * x14299;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16840 = x16689 * x14304;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16841 = x16689 * x14309;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16842 = x16689 * x14314;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16843 = x16689 * x14319;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16844 = x16690 * x14286;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16845 = x16690 * x14291;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16846 = x16690 * x14296;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16847 = x16690 * x14301;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16848 = x16690 * x14306;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16849 = x16690 * x14311;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16850 = x16690 * x14316;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16851 = x16690 * x14321;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16852 = x16690 * x14287;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16853 = x16690 * x14292;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16854 = x16690 * x14297;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16855 = x16690 * x14302;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16856 = x16690 * x14307;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16857 = x16690 * x14312;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16858 = x16690 * x14317;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16859 = x16690 * x14322;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16860 = x16690 * x14288;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16861 = x16690 * x14293;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16862 = x16690 * x14298;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16863 = x16690 * x14303;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16864 = x16690 * x14308;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16865 = x16690 * x14313;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16866 = x16690 * x14318;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16867 = x16690 * x14323;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16868 = x16690 * x14289;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16869 = x16690 * x14294;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16870 = x16690 * x14299;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16871 = x16690 * x14304;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16872 = x16690 * x14309;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16873 = x16690 * x14314;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16874 = x16690 * x14319;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16875 = x16691 * x14286;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16876 = x16691 * x14291;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16877 = x16691 * x14296;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16878 = x16691 * x14301;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16879 = x16691 * x14306;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16880 = x16691 * x14311;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16881 = x16691 * x14316;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16882 = x16691 * x14321;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16883 = x16691 * x14287;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16884 = x16691 * x14292;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16885 = x16691 * x14297;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16886 = x16691 * x14302;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16887 = x16691 * x14307;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16888 = x16691 * x14312;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16889 = x16691 * x14317;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16890 = x16691 * x14322;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16891 = x16691 * x14288;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16892 = x16691 * x14293;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16893 = x16691 * x14298;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16894 = x16691 * x14303;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16895 = x16691 * x14308;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16896 = x16691 * x14313;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16897 = x16691 * x14318;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16898 = x16691 * x14323;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16899 = x16691 * x14289;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16900 = x16691 * x14294;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16901 = x16691 * x14299;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16902 = x16691 * x14304;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16903 = x16691 * x14309;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16904 = x16691 * x14314;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16905 = x16691 * x14319;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16906 = x16692 * x14286;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16907 = x16692 * x14291;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16908 = x16692 * x14296;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16909 = x16692 * x14301;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16910 = x16692 * x14306;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16911 = x16692 * x14311;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16912 = x16692 * x14316;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16913 = x16692 * x14321;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16914 = x16692 * x14287;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16915 = x16692 * x14292;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16916 = x16692 * x14297;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16917 = x16692 * x14302;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16918 = x16692 * x14307;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16919 = x16692 * x14312;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16920 = x16692 * x14317;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16921 = x16692 * x14322;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16922 = x16692 * x14288;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16923 = x16692 * x14293;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16924 = x16692 * x14298;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16925 = x16692 * x14303;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16926 = x16692 * x14308;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16927 = x16692 * x14313;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16928 = x16692 * x14318;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16929 = x16692 * x14323;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16930 = x16692 * x14289;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16931 = x16692 * x14294;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16932 = x16692 * x14299;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16933 = x16692 * x14304;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16934 = x16692 * x14309;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16935 = x16692 * x14314;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16936 = x16692 * x14319;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16937 = x16693 * x14286;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16938 = x16693 * x14291;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16939 = x16693 * x14296;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16940 = x16693 * x14301;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16941 = x16693 * x14306;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16942 = x16693 * x14311;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16943 = x16693 * x14316;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16944 = x16693 * x14321;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16945 = x16693 * x14287;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16946 = x16693 * x14292;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16947 = x16693 * x14297;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16948 = x16693 * x14302;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16949 = x16693 * x14307;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16950 = x16693 * x14312;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16951 = x16693 * x14317;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16952 = x16693 * x14322;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16953 = x16693 * x14288;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16954 = x16693 * x14293;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16955 = x16693 * x14298;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16956 = x16693 * x14303;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16957 = x16693 * x14308;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16958 = x16693 * x14313;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16959 = x16693 * x14318;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16960 = x16693 * x14323;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16961 = x16693 * x14289;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16962 = x16693 * x14294;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16963 = x16693 * x14299;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16964 = x16693 * x14304;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16965 = x16693 * x14309;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16966 = x16693 * x14314;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16967 = x16693 * x14319;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16968 = x16694 * x14286;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16969 = x16694 * x14291;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16970 = x16694 * x14296;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16971 = x16694 * x14301;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16972 = x16694 * x14306;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16973 = x16694 * x14311;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16974 = x16694 * x14316;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16975 = x16694 * x14321;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16976 = x16694 * x14287;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16977 = x16694 * x14292;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16978 = x16694 * x14297;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16979 = x16694 * x14302;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16980 = x16694 * x14307;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16981 = x16694 * x14312;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16982 = x16694 * x14317;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16983 = x16694 * x14322;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16984 = x16694 * x14288;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16985 = x16694 * x14293;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16986 = x16694 * x14298;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16987 = x16694 * x14303;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16988 = x16694 * x14308;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16989 = x16694 * x14313;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16990 = x16694 * x14318;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16991 = x16694 * x14323;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16992 = x16694 * x14289;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16993 = x16694 * x14294;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16994 = x16694 * x14299;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16995 = x16694 * x14304;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16996 = x16694 * x14309;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16997 = x16694 * x14314;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16998 = x16694 * x14319;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x16999 = x16695 * x14286;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17000 = x16695 * x14291;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17001 = x16695 * x14296;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17002 = x16695 * x14301;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17003 = x16695 * x14306;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17004 = x16695 * x14311;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17005 = x16695 * x14316;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17006 = x16695 * x14321;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17007 = x16695 * x14287;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17008 = x16695 * x14292;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17009 = x16695 * x14297;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17010 = x16695 * x14302;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17011 = x16695 * x14307;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17012 = x16695 * x14312;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17013 = x16695 * x14317;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17014 = x16695 * x14322;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17015 = x16695 * x14288;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17016 = x16695 * x14293;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17017 = x16695 * x14298;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17018 = x16695 * x14303;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17019 = x16695 * x14308;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17020 = x16695 * x14313;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17021 = x16695 * x14318;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17022 = x16695 * x14323;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17023 = x16695 * x14289;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17024 = x16695 * x14294;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17025 = x16695 * x14299;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17026 = x16695 * x14304;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17027 = x16695 * x14309;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17028 = x16695 * x14314;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17029 = x16695 * x14319;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17030 = x16696 * x14286;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17031 = x16696 * x14291;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17032 = x16696 * x14296;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17033 = x16696 * x14301;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17034 = x16696 * x14306;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17035 = x16696 * x14311;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17036 = x16696 * x14316;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17037 = x16696 * x14321;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17038 = x16696 * x14287;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17039 = x16696 * x14292;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17040 = x16696 * x14297;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17041 = x16696 * x14302;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17042 = x16696 * x14307;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17043 = x16696 * x14312;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17044 = x16696 * x14317;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17045 = x16696 * x14322;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17046 = x16696 * x14288;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17047 = x16696 * x14293;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17048 = x16696 * x14298;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17049 = x16696 * x14303;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17050 = x16696 * x14308;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17051 = x16696 * x14313;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17052 = x16696 * x14318;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17053 = x16696 * x14323;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17054 = x16696 * x14289;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17055 = x16696 * x14294;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17056 = x16696 * x14299;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17057 = x16696 * x14304;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17058 = x16696 * x14309;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17059 = x16696 * x14314;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17060 = x16696 * x14319;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17061 = x16697 * x14286;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17062 = x16697 * x14291;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17063 = x16697 * x14296;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17064 = x16697 * x14301;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17065 = x16697 * x14306;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17066 = x16697 * x14311;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17067 = x16697 * x14316;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17068 = x16697 * x14321;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17069 = x16697 * x14287;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17070 = x16697 * x14292;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17071 = x16697 * x14297;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17072 = x16697 * x14302;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17073 = x16697 * x14307;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17074 = x16697 * x14312;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17075 = x16697 * x14317;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17076 = x16697 * x14322;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17077 = x16697 * x14288;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17078 = x16697 * x14293;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17079 = x16697 * x14298;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17080 = x16697 * x14303;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17081 = x16697 * x14308;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17082 = x16697 * x14313;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17083 = x16697 * x14318;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17084 = x16697 * x14323;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17085 = x16697 * x14289;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17086 = x16697 * x14294;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17087 = x16697 * x14299;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17088 = x16697 * x14304;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17089 = x16697 * x14309;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17090 = x16697 * x14314;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17091 = x16697 * x14319;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17092 = x16698 * x14286;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17093 = x16698 * x14291;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17094 = x16698 * x14296;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17095 = x16698 * x14301;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17096 = x16698 * x14306;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17097 = x16698 * x14311;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17098 = x16698 * x14316;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17099 = x16698 * x14321;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17100 = x16698 * x14287;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17101 = x16698 * x14292;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17102 = x16698 * x14297;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17103 = x16698 * x14302;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17104 = x16698 * x14307;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17105 = x16698 * x14312;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17106 = x16698 * x14317;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17107 = x16698 * x14322;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17108 = x16698 * x14288;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17109 = x16698 * x14293;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17110 = x16698 * x14298;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17111 = x16698 * x14303;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17112 = x16698 * x14308;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17113 = x16698 * x14313;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17114 = x16698 * x14318;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17115 = x16698 * x14323;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17116 = x16698 * x14289;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17117 = x16698 * x14294;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17118 = x16698 * x14299;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17119 = x16698 * x14304;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17120 = x16698 * x14309;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17121 = x16698 * x14314;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17122 = x16698 * x14319;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17123 = x16699 * x14286;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17124 = x16699 * x14291;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17125 = x16699 * x14296;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17126 = x16699 * x14301;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17127 = x16699 * x14306;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17128 = x16699 * x14311;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17129 = x16699 * x14316;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17130 = x16699 * x14321;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17131 = x16699 * x14287;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17132 = x16699 * x14292;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17133 = x16699 * x14297;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17134 = x16699 * x14302;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17135 = x16699 * x14307;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17136 = x16699 * x14312;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17137 = x16699 * x14317;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17138 = x16699 * x14322;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17139 = x16699 * x14288;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17140 = x16699 * x14293;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17141 = x16699 * x14298;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17142 = x16699 * x14303;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17143 = x16699 * x14308;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17144 = x16699 * x14313;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17145 = x16699 * x14318;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17146 = x16699 * x14323;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17147 = x16699 * x14289;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17148 = x16699 * x14294;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17149 = x16699 * x14299;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17150 = x16699 * x14304;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17151 = x16699 * x14309;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17152 = x16699 * x14314;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17153 = x16699 * x14319;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17154 = x16700 * x14286;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17155 = x16700 * x14291;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17156 = x16700 * x14296;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17157 = x16700 * x14301;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17158 = x16700 * x14306;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17159 = x16700 * x14311;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17160 = x16700 * x14316;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17161 = x16700 * x14321;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17162 = x16700 * x14287;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17163 = x16700 * x14292;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17164 = x16700 * x14297;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17165 = x16700 * x14302;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17166 = x16700 * x14307;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17167 = x16700 * x14312;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17168 = x16700 * x14317;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17169 = x16700 * x14322;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17170 = x16700 * x14288;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17171 = x16700 * x14293;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17172 = x16700 * x14298;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17173 = x16700 * x14303;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17174 = x16700 * x14308;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17175 = x16700 * x14313;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17176 = x16700 * x14318;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17177 = x16700 * x14323;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17178 = x16700 * x14289;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17179 = x16700 * x14294;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17180 = x16700 * x14299;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17181 = x16700 * x14304;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17182 = x16700 * x14309;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17183 = x16700 * x14314;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17184 = x16700 * x14319;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17185 = x16701 * x14286;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17186 = x16701 * x14291;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17187 = x16701 * x14296;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17188 = x16701 * x14301;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17189 = x16701 * x14306;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17190 = x16701 * x14311;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17191 = x16701 * x14316;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17192 = x16701 * x14321;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17193 = x16701 * x14287;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17194 = x16701 * x14292;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17195 = x16701 * x14297;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17196 = x16701 * x14302;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17197 = x16701 * x14307;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17198 = x16701 * x14312;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17199 = x16701 * x14317;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17200 = x16701 * x14322;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17201 = x16701 * x14288;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17202 = x16701 * x14293;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17203 = x16701 * x14298;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17204 = x16701 * x14303;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17205 = x16701 * x14308;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17206 = x16701 * x14313;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17207 = x16701 * x14318;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17208 = x16701 * x14323;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17209 = x16701 * x14289;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17210 = x16701 * x14294;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17211 = x16701 * x14299;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17212 = x16701 * x14304;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17213 = x16701 * x14309;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17214 = x16701 * x14314;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17215 = x16701 * x14319;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17216 = x16702 * x14286;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17217 = x16702 * x14291;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17218 = x16702 * x14296;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17219 = x16702 * x14301;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17220 = x16702 * x14306;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17221 = x16702 * x14311;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17222 = x16702 * x14316;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17223 = x16702 * x14321;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17224 = x16702 * x14287;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17225 = x16702 * x14292;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17226 = x16702 * x14297;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17227 = x16702 * x14302;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17228 = x16702 * x14307;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17229 = x16702 * x14312;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17230 = x16702 * x14317;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17231 = x16702 * x14322;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17232 = x16702 * x14288;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17233 = x16702 * x14293;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17234 = x16702 * x14298;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17235 = x16702 * x14303;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17236 = x16702 * x14308;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17237 = x16702 * x14313;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17238 = x16702 * x14318;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17239 = x16702 * x14323;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17240 = x16702 * x14289;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17241 = x16702 * x14294;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17242 = x16702 * x14299;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17243 = x16702 * x14304;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17244 = x16702 * x14309;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17245 = x16702 * x14314;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17246 = x16702 * x14319;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17247 = x16703 * x14286;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17248 = x16703 * x14291;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17249 = x16703 * x14296;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17250 = x16703 * x14301;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17251 = x16703 * x14306;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17252 = x16703 * x14311;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17253 = x16703 * x14316;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17254 = x16703 * x14321;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17255 = x16703 * x14287;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17256 = x16703 * x14292;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17257 = x16703 * x14297;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17258 = x16703 * x14302;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17259 = x16703 * x14307;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17260 = x16703 * x14312;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17261 = x16703 * x14317;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17262 = x16703 * x14322;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17263 = x16703 * x14288;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17264 = x16703 * x14293;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17265 = x16703 * x14298;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17266 = x16703 * x14303;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17267 = x16703 * x14308;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17268 = x16703 * x14313;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17269 = x16703 * x14318;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17270 = x16703 * x14323;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17271 = x16703 * x14289;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17272 = x16703 * x14294;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17273 = x16703 * x14299;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17274 = x16703 * x14304;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17275 = x16703 * x14309;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17276 = x16703 * x14314;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17277 = x16703 * x14319;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17278 = x16704 * x14286;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17279 = x16704 * x14291;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17280 = x16704 * x14296;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17281 = x16704 * x14301;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17282 = x16704 * x14306;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17283 = x16704 * x14311;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17284 = x16704 * x14316;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17285 = x16704 * x14321;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17286 = x16704 * x14287;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17287 = x16704 * x14292;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17288 = x16704 * x14297;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17289 = x16704 * x14302;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17290 = x16704 * x14307;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17291 = x16704 * x14312;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17292 = x16704 * x14317;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17293 = x16704 * x14322;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17294 = x16704 * x14288;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17295 = x16704 * x14293;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17296 = x16704 * x14298;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17297 = x16704 * x14303;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17298 = x16704 * x14308;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17299 = x16704 * x14313;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17300 = x16704 * x14318;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17301 = x16704 * x14323;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17302 = x16704 * x14289;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17303 = x16704 * x14294;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17304 = x16704 * x14299;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17305 = x16704 * x14304;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17306 = x16704 * x14309;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17307 = x16704 * x14314;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17308 = x16704 * x14319;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17309 = x16705 * x14286;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17310 = x16705 * x14291;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17311 = x16705 * x14296;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17312 = x16705 * x14301;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17313 = x16705 * x14306;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17314 = x16705 * x14311;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17315 = x16705 * x14316;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17316 = x16705 * x14321;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17317 = x16705 * x14287;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17318 = x16705 * x14292;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17319 = x16705 * x14297;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17320 = x16705 * x14302;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17321 = x16705 * x14307;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17322 = x16705 * x14312;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17323 = x16705 * x14317;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17324 = x16705 * x14322;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17325 = x16705 * x14288;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17326 = x16705 * x14293;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17327 = x16705 * x14298;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17328 = x16705 * x14303;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17329 = x16705 * x14308;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17330 = x16705 * x14313;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17331 = x16705 * x14318;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17332 = x16705 * x14323;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17333 = x16705 * x14289;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17334 = x16705 * x14294;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17335 = x16705 * x14299;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17336 = x16705 * x14304;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17337 = x16705 * x14309;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17338 = x16705 * x14314;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17339 = x16705 * x14319;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17340 = x16706 * x14286;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17341 = x16706 * x14291;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17342 = x16706 * x14296;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17343 = x16706 * x14301;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17344 = x16706 * x14306;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17345 = x16706 * x14311;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17346 = x16706 * x14316;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17347 = x16706 * x14321;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17348 = x16706 * x14287;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17349 = x16706 * x14292;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17350 = x16706 * x14297;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17351 = x16706 * x14302;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17352 = x16706 * x14307;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17353 = x16706 * x14312;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17354 = x16706 * x14317;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17355 = x16706 * x14322;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17356 = x16706 * x14288;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17357 = x16706 * x14293;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17358 = x16706 * x14298;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17359 = x16706 * x14303;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17360 = x16706 * x14308;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17361 = x16706 * x14313;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17362 = x16706 * x14318;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17363 = x16706 * x14323;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17364 = x16706 * x14289;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17365 = x16706 * x14294;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17366 = x16706 * x14299;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17367 = x16706 * x14304;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17368 = x16706 * x14309;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17369 = x16706 * x14314;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17370 = x16706 * x14319;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17371 = x16707 * x14286;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17372 = x16707 * x14291;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17373 = x16707 * x14296;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17374 = x16707 * x14301;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17375 = x16707 * x14306;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17376 = x16707 * x14311;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17377 = x16707 * x14316;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17378 = x16707 * x14321;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17379 = x16707 * x14287;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17380 = x16707 * x14292;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17381 = x16707 * x14297;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17382 = x16707 * x14302;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17383 = x16707 * x14307;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17384 = x16707 * x14312;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17385 = x16707 * x14317;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17386 = x16707 * x14322;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17387 = x16707 * x14288;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17388 = x16707 * x14293;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17389 = x16707 * x14298;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17390 = x16707 * x14303;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17391 = x16707 * x14308;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17392 = x16707 * x14313;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17393 = x16707 * x14318;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17394 = x16707 * x14323;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17395 = x16707 * x14289;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17396 = x16707 * x14294;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17397 = x16707 * x14299;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17398 = x16707 * x14304;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17399 = x16707 * x14309;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17400 = x16707 * x14314;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17401 = x16707 * x14319;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17402 = x16708 * x14286;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17403 = x16708 * x14291;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17404 = x16708 * x14296;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17405 = x16708 * x14301;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17406 = x16708 * x14306;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17407 = x16708 * x14311;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17408 = x16708 * x14316;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17409 = x16708 * x14321;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17410 = x16708 * x14287;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17411 = x16708 * x14292;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17412 = x16708 * x14297;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17413 = x16708 * x14302;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17414 = x16708 * x14307;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17415 = x16708 * x14312;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17416 = x16708 * x14317;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17417 = x16708 * x14322;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17418 = x16708 * x14288;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17419 = x16708 * x14293;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17420 = x16708 * x14298;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17421 = x16708 * x14303;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17422 = x16708 * x14308;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17423 = x16708 * x14313;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17424 = x16708 * x14318;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17425 = x16708 * x14323;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17426 = x16708 * x14289;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17427 = x16708 * x14294;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17428 = x16708 * x14299;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17429 = x16708 * x14304;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17430 = x16708 * x14309;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17431 = x16708 * x14314;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17432 = x16708 * x14319;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17433 = x16709 * x14286;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17434 = x16709 * x14291;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17435 = x16709 * x14296;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17436 = x16709 * x14301;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17437 = x16709 * x14306;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17438 = x16709 * x14311;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17439 = x16709 * x14316;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17440 = x16709 * x14321;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17441 = x16709 * x14287;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17442 = x16709 * x14292;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17443 = x16709 * x14297;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17444 = x16709 * x14302;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17445 = x16709 * x14307;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17446 = x16709 * x14312;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17447 = x16709 * x14317;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17448 = x16709 * x14322;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17449 = x16709 * x14288;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17450 = x16709 * x14293;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17451 = x16709 * x14298;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17452 = x16709 * x14303;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17453 = x16709 * x14308;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17454 = x16709 * x14313;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17455 = x16709 * x14318;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17456 = x16709 * x14323;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17457 = x16709 * x14289;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17458 = x16709 * x14294;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17459 = x16709 * x14299;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17460 = x16709 * x14304;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17461 = x16709 * x14309;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17462 = x16709 * x14314;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17463 = x16709 * x14319;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17464 = x16710 * x14286;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17465 = x16710 * x14291;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17466 = x16710 * x14296;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17467 = x16710 * x14301;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17468 = x16710 * x14306;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17469 = x16710 * x14311;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17470 = x16710 * x14316;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17471 = x16710 * x14321;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17472 = x16710 * x14287;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17473 = x16710 * x14292;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17474 = x16710 * x14297;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17475 = x16710 * x14302;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17476 = x16710 * x14307;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17477 = x16710 * x14312;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17478 = x16710 * x14317;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17479 = x16710 * x14322;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17480 = x16710 * x14288;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17481 = x16710 * x14293;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17482 = x16710 * x14298;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17483 = x16710 * x14303;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17484 = x16710 * x14308;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17485 = x16710 * x14313;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17486 = x16710 * x14318;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17487 = x16710 * x14323;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17488 = x16710 * x14289;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17489 = x16710 * x14294;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17490 = x16710 * x14299;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17491 = x16710 * x14304;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17492 = x16710 * x14309;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17493 = x16710 * x14314;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17494 = x16710 * x14319;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17495 = x16711 * x14286;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17496 = x16711 * x14291;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17497 = x16711 * x14296;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17498 = x16711 * x14301;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17499 = x16711 * x14306;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17500 = x16711 * x14311;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17501 = x16711 * x14316;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17502 = x16711 * x14321;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17503 = x16711 * x14287;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17504 = x16711 * x14292;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17505 = x16711 * x14297;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17506 = x16711 * x14302;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17507 = x16711 * x14307;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17508 = x16711 * x14312;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17509 = x16711 * x14317;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17510 = x16711 * x14322;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17511 = x16711 * x14288;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17512 = x16711 * x14293;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17513 = x16711 * x14298;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17514 = x16711 * x14303;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17515 = x16711 * x14308;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17516 = x16711 * x14313;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17517 = x16711 * x14318;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17518 = x16711 * x14323;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17519 = x16711 * x14289;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17520 = x16711 * x14294;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17521 = x16711 * x14299;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17522 = x16711 * x14304;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17523 = x16711 * x14309;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17524 = x16711 * x14314;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17525 = x16711 * x14319;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17526 = x16712 * x14286;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17527 = x16712 * x14291;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17528 = x16712 * x14296;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17529 = x16712 * x14301;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17530 = x16712 * x14306;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17531 = x16712 * x14311;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17532 = x16712 * x14316;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17533 = x16712 * x14321;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17534 = x16712 * x14287;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17535 = x16712 * x14292;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17536 = x16712 * x14297;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17537 = x16712 * x14302;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17538 = x16712 * x14307;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17539 = x16712 * x14312;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17540 = x16712 * x14317;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17541 = x16712 * x14322;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17542 = x16712 * x14288;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17543 = x16712 * x14293;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17544 = x16712 * x14298;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17545 = x16712 * x14303;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17546 = x16712 * x14308;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17547 = x16712 * x14313;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17548 = x16712 * x14318;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17549 = x16712 * x14323;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17550 = x16712 * x14289;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17551 = x16712 * x14294;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17552 = x16712 * x14299;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17553 = x16712 * x14304;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17554 = x16712 * x14309;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17555 = x16712 * x14314;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17556 = x16712 * x14319;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17557 = x16713 * x14286;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17558 = x16713 * x14291;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17559 = x16713 * x14296;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17560 = x16713 * x14301;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17561 = x16713 * x14306;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17562 = x16713 * x14311;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17563 = x16713 * x14316;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17564 = x16713 * x14321;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17565 = x16713 * x14287;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17566 = x16713 * x14292;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17567 = x16713 * x14297;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17568 = x16713 * x14302;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17569 = x16713 * x14307;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17570 = x16713 * x14312;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17571 = x16713 * x14317;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17572 = x16713 * x14322;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17573 = x16713 * x14288;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17574 = x16713 * x14293;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17575 = x16713 * x14298;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17576 = x16713 * x14303;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17577 = x16713 * x14308;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17578 = x16713 * x14313;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17579 = x16713 * x14318;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17580 = x16713 * x14323;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17581 = x16713 * x14289;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17582 = x16713 * x14294;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17583 = x16713 * x14299;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17584 = x16713 * x14304;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17585 = x16713 * x14309;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17586 = x16713 * x14314;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17587 = x16713 * x14319;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17588 = x16714 * x14286;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17589 = x16714 * x14291;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17590 = x16714 * x14296;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17591 = x16714 * x14301;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17592 = x16714 * x14306;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17593 = x16714 * x14311;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17594 = x16714 * x14316;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17595 = x16714 * x14321;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17596 = x16714 * x14287;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17597 = x16714 * x14292;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17598 = x16714 * x14297;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17599 = x16714 * x14302;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17600 = x16714 * x14307;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17601 = x16714 * x14312;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17602 = x16714 * x14317;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17603 = x16714 * x14322;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17604 = x16714 * x14288;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17605 = x16714 * x14293;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17606 = x16714 * x14298;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17607 = x16714 * x14303;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17608 = x16714 * x14308;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17609 = x16714 * x14313;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17610 = x16714 * x14318;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17611 = x16714 * x14323;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17612 = x16714 * x14289;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17613 = x16714 * x14294;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17614 = x16714 * x14299;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17615 = x16714 * x14304;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17616 = x16714 * x14309;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17617 = x16714 * x14314;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17618 = x16714 * x14319;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17619 = x16715 * x14286;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17620 = x16715 * x14291;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17621 = x16715 * x14296;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17622 = x16715 * x14301;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17623 = x16715 * x14306;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17624 = x16715 * x14311;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17625 = x16715 * x14316;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17626 = x16715 * x14321;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17627 = x16715 * x14287;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17628 = x16715 * x14292;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17629 = x16715 * x14297;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17630 = x16715 * x14302;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17631 = x16715 * x14307;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17632 = x16715 * x14312;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17633 = x16715 * x14317;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17634 = x16715 * x14322;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17635 = x16715 * x14288;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17636 = x16715 * x14293;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17637 = x16715 * x14298;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17638 = x16715 * x14303;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17639 = x16715 * x14308;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17640 = x16715 * x14313;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17641 = x16715 * x14318;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17642 = x16715 * x14323;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17643 = x16715 * x14289;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17644 = x16715 * x14294;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17645 = x16715 * x14299;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17646 = x16715 * x14304;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17647 = x16715 * x14309;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17648 = x16715 * x14314;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17649 = x16715 * x14319;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17650 = x16716 * x14286;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17651 = x16716 * x14291;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17652 = x16716 * x14296;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17653 = x16716 * x14301;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17654 = x16716 * x14306;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17655 = x16716 * x14311;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17656 = x16716 * x14316;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17657 = x16716 * x14321;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17658 = x16716 * x14287;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17659 = x16716 * x14292;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17660 = x16716 * x14297;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17661 = x16716 * x14302;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17662 = x16716 * x14307;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17663 = x16716 * x14312;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17664 = x16716 * x14317;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17665 = x16716 * x14322;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17666 = x16716 * x14288;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17667 = x16716 * x14293;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17668 = x16716 * x14298;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17669 = x16716 * x14303;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17670 = x16716 * x14308;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17671 = x16716 * x14313;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17672 = x16716 * x14318;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17673 = x16716 * x14323;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17674 = x16716 * x14289;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17675 = x16716 * x14294;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17676 = x16716 * x14299;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17677 = x16716 * x14304;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17678 = x16716 * x14309;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17679 = x16716 * x14314;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17680 = x16716 * x14319;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17681 = x16717 * x14286;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17682 = x16717 * x14291;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17683 = x16717 * x14296;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17684 = x16717 * x14301;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17685 = x16717 * x14306;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17686 = x16717 * x14311;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17687 = x16717 * x14316;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17688 = x16717 * x14321;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17689 = x16717 * x14287;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17690 = x16717 * x14292;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17691 = x16717 * x14297;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17692 = x16717 * x14302;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17693 = x16717 * x14307;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17694 = x16717 * x14312;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17695 = x16717 * x14317;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17696 = x16717 * x14322;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17697 = x16717 * x14288;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17698 = x16717 * x14293;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17699 = x16717 * x14298;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17700 = x16717 * x14303;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17701 = x16717 * x14308;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17702 = x16717 * x14313;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17703 = x16717 * x14318;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17704 = x16717 * x14323;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17705 = x16717 * x14289;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17706 = x16717 * x14294;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17707 = x16717 * x14299;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17708 = x16717 * x14304;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17709 = x16717 * x14309;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17710 = x16717 * x14314;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17711 = x16717 * x14319;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17712 = x16718 * x14286;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17713 = x16718 * x14291;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17714 = x16718 * x14296;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17715 = x16718 * x14301;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17716 = x16718 * x14306;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17717 = x16718 * x14311;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17718 = x16718 * x14316;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17719 = x16718 * x14321;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17720 = x16718 * x14287;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17721 = x16718 * x14292;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17722 = x16718 * x14297;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17723 = x16718 * x14302;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17724 = x16718 * x14307;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17725 = x16718 * x14312;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17726 = x16718 * x14317;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17727 = x16718 * x14322;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17728 = x16718 * x14288;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17729 = x16718 * x14293;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17730 = x16718 * x14298;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17731 = x16718 * x14303;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17732 = x16718 * x14308;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17733 = x16718 * x14313;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17734 = x16718 * x14318;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17735 = x16718 * x14323;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17736 = x16718 * x14289;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17737 = x16718 * x14294;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17738 = x16718 * x14299;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17739 = x16718 * x14304;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17740 = x16718 * x14309;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17741 = x16718 * x14314;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:21)
        auto x17742 = x16718 * x14319;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17743 = x16727 + x16782;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17744 = x16780 + x17735;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x17745 = x15371 - x17743;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x17746 = x15402 - x17744;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x17747 = x14339 - x16719;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x17748 = x14386 - x16781;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17749 = x16720 + x16806;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17750 = x16721 + x16807;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17751 = x16722 + x16808;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17752 = x16723 + x16809;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17753 = x16724 + x16810;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17754 = x16725 + x16811;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17755 = x16726 + x16812;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17756 = x16728 + x16783;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17757 = x16729 + x16784;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17758 = x16730 + x16785;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17759 = x16731 + x16786;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17760 = x16732 + x16787;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17761 = x16733 + x16788;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17762 = x16734 + x16789;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17763 = x16735 + x16790;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17764 = x16736 + x16791;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17765 = x16737 + x16792;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17766 = x16738 + x16793;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17767 = x16739 + x16794;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17768 = x16740 + x16795;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17769 = x16741 + x16796;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17770 = x16742 + x16797;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17771 = x16743 + x16798;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17772 = x16744 + x16799;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17773 = x16745 + x16800;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17774 = x16746 + x16801;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17775 = x16747 + x16802;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17776 = x16748 + x16803;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17777 = x16749 + x16804;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17778 = x16750 + x16805;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17779 = x16751 + x16836;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17780 = x16752 + x16867;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17781 = x16753 + x16898;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17782 = x16754 + x16929;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17783 = x16755 + x16960;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17784 = x16756 + x16991;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17785 = x16757 + x17022;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17786 = x16758 + x17053;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17787 = x16759 + x17084;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17788 = x16760 + x17115;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17789 = x16761 + x17146;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17790 = x16762 + x17177;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17791 = x16763 + x17208;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17792 = x16764 + x17239;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17793 = x16765 + x17270;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17794 = x16766 + x17301;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17795 = x16767 + x17332;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17796 = x16768 + x17363;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17797 = x16769 + x17394;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17798 = x16770 + x17425;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17799 = x16771 + x17456;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17800 = x16772 + x17487;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17801 = x16773 + x17518;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17802 = x16774 + x17549;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17803 = x16775 + x17580;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17804 = x16776 + x17611;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17805 = x16777 + x17642;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17806 = x16778 + x17673;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17807 = x16779 + x17704;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x17808 = x17747 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17809 = x17763 + x16813;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17810 = x17807 + x17727;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x17811 = Fp(x17808.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x17812 = x17808 - x17811;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x17813 = x15441 - x17809;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x17814 = x15456 - x17810;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17815 = x17749 + x16829;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17816 = x17750 + x16830;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17817 = x17751 + x16831;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17818 = x17752 + x16832;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17819 = x17753 + x16833;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17820 = x17754 + x16834;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17821 = x17755 + x16835;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17822 = x17756 + x16837;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17823 = x17757 + x16838;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17824 = x17758 + x16839;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17825 = x17759 + x16840;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17826 = x17760 + x16841;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17827 = x17761 + x16842;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17828 = x17762 + x16843;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17829 = x17764 + x16814;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17830 = x17765 + x16815;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17831 = x17766 + x16816;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17832 = x17767 + x16817;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17833 = x17768 + x16818;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17834 = x17769 + x16819;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17835 = x17770 + x16820;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17836 = x17771 + x16821;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17837 = x17772 + x16822;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17838 = x17773 + x16823;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17839 = x17774 + x16824;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17840 = x17775 + x16825;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17841 = x17776 + x16826;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17842 = x17777 + x16827;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17843 = x17778 + x16828;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17844 = x17779 + x16859;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17845 = x17780 + x16890;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17846 = x17781 + x16921;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17847 = x17782 + x16952;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17848 = x17783 + x16983;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17849 = x17784 + x17014;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17850 = x17785 + x17045;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17851 = x17786 + x17076;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17852 = x17787 + x17107;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17853 = x17788 + x17138;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17854 = x17789 + x17169;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17855 = x17790 + x17200;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17856 = x17791 + x17231;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17857 = x17792 + x17262;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17858 = x17793 + x17293;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17859 = x17794 + x17324;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17860 = x17795 + x17355;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17861 = x17796 + x17386;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17862 = x17797 + x17417;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17863 = x17798 + x17448;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17864 = x17799 + x17479;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17865 = x17800 + x17510;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17866 = x17801 + x17541;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17867 = x17802 + x17572;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17868 = x17803 + x17603;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17869 = x17804 + x17634;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17870 = x17805 + x17665;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17871 = x17806 + x17696;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17872 = x17836 + x16844;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17873 = x17871 + x17719;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x17874 = x17812 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x17875 = x15480 - x17873;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x17876 = x15509 - x17872;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x17877 = x17874 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17878 = x17815 + x16852;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17879 = x17816 + x16853;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17880 = x17817 + x16854;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17881 = x17818 + x16855;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17882 = x17819 + x16856;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17883 = x17820 + x16857;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17884 = x17821 + x16858;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17885 = x17822 + x16860;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17886 = x17823 + x16861;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17887 = x17824 + x16862;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17888 = x17825 + x16863;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17889 = x17826 + x16864;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17890 = x17827 + x16865;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17891 = x17828 + x16866;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17892 = x17829 + x16868;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17893 = x17830 + x16869;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17894 = x17831 + x16870;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17895 = x17832 + x16871;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17896 = x17833 + x16872;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17897 = x17834 + x16873;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17898 = x17835 + x16874;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17899 = x17837 + x16845;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17900 = x17838 + x16846;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17901 = x17839 + x16847;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17902 = x17840 + x16848;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17903 = x17841 + x16849;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17904 = x17842 + x16850;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17905 = x17843 + x16851;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17906 = x17844 + x16882;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17907 = x17845 + x16913;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17908 = x17846 + x16944;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17909 = x17847 + x16975;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17910 = x17848 + x17006;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17911 = x17849 + x17037;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17912 = x17850 + x17068;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17913 = x17851 + x17099;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17914 = x17852 + x17130;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17915 = x17853 + x17161;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17916 = x17854 + x17192;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17917 = x17855 + x17223;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17918 = x17856 + x17254;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17919 = x17857 + x17285;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17920 = x17858 + x17316;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17921 = x17859 + x17347;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17922 = x17860 + x17378;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17923 = x17861 + x17409;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17924 = x17862 + x17440;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17925 = x17863 + x17471;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17926 = x17864 + x17502;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17927 = x17865 + x17533;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17928 = x17866 + x17564;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17929 = x17867 + x17595;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17930 = x17868 + x17626;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17931 = x17869 + x17657;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17932 = x17870 + x17688;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x17933 = x17745 + x17877;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17934 = x17878 + x16875;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17935 = x17932 + x17742;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x17936 = x15538 - x17934;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x17937 = x15585 - x17935;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17938 = x17879 + x16876;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17939 = x17880 + x16877;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17940 = x17881 + x16878;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17941 = x17882 + x16879;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17942 = x17883 + x16880;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17943 = x17884 + x16881;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17944 = x17885 + x16883;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17945 = x17886 + x16884;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17946 = x17887 + x16885;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17947 = x17888 + x16886;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17948 = x17889 + x16887;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17949 = x17890 + x16888;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17950 = x17891 + x16889;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17951 = x17892 + x16891;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17952 = x17893 + x16892;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17953 = x17894 + x16893;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17954 = x17895 + x16894;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17955 = x17896 + x16895;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17956 = x17897 + x16896;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17957 = x17898 + x16897;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17958 = x17899 + x16899;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17959 = x17900 + x16900;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17960 = x17901 + x16901;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17961 = x17902 + x16902;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17962 = x17903 + x16903;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17963 = x17904 + x16904;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17964 = x17905 + x16905;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17965 = x17906 + x16936;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17966 = x17907 + x16967;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17967 = x17908 + x16998;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17968 = x17909 + x17029;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17969 = x17910 + x17060;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17970 = x17911 + x17091;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17971 = x17912 + x17122;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17972 = x17913 + x17153;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17973 = x17914 + x17184;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17974 = x17915 + x17215;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17975 = x17916 + x17246;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17976 = x17917 + x17277;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17977 = x17918 + x17308;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17978 = x17919 + x17339;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17979 = x17920 + x17370;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17980 = x17921 + x17401;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17981 = x17922 + x17432;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17982 = x17923 + x17463;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17983 = x17924 + x17494;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17984 = x17925 + x17525;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17985 = x17926 + x17556;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17986 = x17927 + x17587;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17987 = x17928 + x17618;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17988 = x17929 + x17649;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17989 = x17930 + x17680;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17990 = x17931 + x17711;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x17991 = x17933 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17992 = x17944 + x16906;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17993 = x17990 + x17734;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x17994 = Fp(x17991.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x17995 = x17991 - x17994;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x17996 = x15602 - x17992;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x17997 = x15635 - x17993;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17998 = x17938 + x16930;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x17999 = x17939 + x16931;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18000 = x17940 + x16932;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18001 = x17941 + x16933;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18002 = x17942 + x16934;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18003 = x17943 + x16935;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18004 = x17945 + x16907;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18005 = x17946 + x16908;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18006 = x17947 + x16909;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18007 = x17948 + x16910;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18008 = x17949 + x16911;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18009 = x17950 + x16912;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18010 = x17951 + x16914;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18011 = x17952 + x16915;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18012 = x17953 + x16916;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18013 = x17954 + x16917;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18014 = x17955 + x16918;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18015 = x17956 + x16919;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18016 = x17957 + x16920;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18017 = x17958 + x16922;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18018 = x17959 + x16923;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18019 = x17960 + x16924;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18020 = x17961 + x16925;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18021 = x17962 + x16926;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18022 = x17963 + x16927;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18023 = x17964 + x16928;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18024 = x17965 + x16959;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18025 = x17966 + x16990;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18026 = x17967 + x17021;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18027 = x17968 + x17052;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18028 = x17969 + x17083;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18029 = x17970 + x17114;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18030 = x17971 + x17145;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18031 = x17972 + x17176;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18032 = x17973 + x17207;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18033 = x17974 + x17238;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18034 = x17975 + x17269;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18035 = x17976 + x17300;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18036 = x17977 + x17331;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18037 = x17978 + x17362;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18038 = x17979 + x17393;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18039 = x17980 + x17424;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18040 = x17981 + x17455;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18041 = x17982 + x17486;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18042 = x17983 + x17517;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18043 = x17984 + x17548;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18044 = x17985 + x17579;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18045 = x17986 + x17610;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18046 = x17987 + x17641;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18047 = x17988 + x17672;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18048 = x17989 + x17703;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18049 = x18010 + x16937;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18050 = x18048 + x17726;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x18051 = x17995 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x18052 = x15663 - x18049;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x18053 = x15682 - x18050;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x18054 = x18051 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18055 = x17998 + x16953;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18056 = x17999 + x16954;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18057 = x18000 + x16955;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18058 = x18001 + x16956;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18059 = x18002 + x16957;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18060 = x18003 + x16958;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18061 = x18004 + x16961;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18062 = x18005 + x16962;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18063 = x18006 + x16963;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18064 = x18007 + x16964;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18065 = x18008 + x16965;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18066 = x18009 + x16966;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18067 = x18011 + x16938;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18068 = x18012 + x16939;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18069 = x18013 + x16940;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18070 = x18014 + x16941;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18071 = x18015 + x16942;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18072 = x18016 + x16943;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18073 = x18017 + x16945;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18074 = x18018 + x16946;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18075 = x18019 + x16947;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18076 = x18020 + x16948;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18077 = x18021 + x16949;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18078 = x18022 + x16950;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18079 = x18023 + x16951;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18080 = x18024 + x16982;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18081 = x18025 + x17013;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18082 = x18026 + x17044;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18083 = x18027 + x17075;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18084 = x18028 + x17106;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18085 = x18029 + x17137;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18086 = x18030 + x17168;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18087 = x18031 + x17199;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18088 = x18032 + x17230;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18089 = x18033 + x17261;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18090 = x18034 + x17292;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18091 = x18035 + x17323;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18092 = x18036 + x17354;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18093 = x18037 + x17385;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18094 = x18038 + x17416;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18095 = x18039 + x17447;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18096 = x18040 + x17478;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18097 = x18041 + x17509;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18098 = x18042 + x17540;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18099 = x18043 + x17571;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18100 = x18044 + x17602;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18101 = x18045 + x17633;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18102 = x18046 + x17664;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18103 = x18047 + x17695;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18104 = x17813 + x18054;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18105 = x18073 + x16968;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18106 = x18103 + x17718;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x18107 = x15702 - x18106;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x18108 = x15721 - x18105;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18109 = x18055 + x16976;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18110 = x18056 + x16977;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18111 = x18057 + x16978;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18112 = x18058 + x16979;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18113 = x18059 + x16980;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18114 = x18060 + x16981;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18115 = x18061 + x16984;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18116 = x18062 + x16985;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18117 = x18063 + x16986;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18118 = x18064 + x16987;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18119 = x18065 + x16988;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18120 = x18066 + x16989;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18121 = x18067 + x16992;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18122 = x18068 + x16993;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18123 = x18069 + x16994;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18124 = x18070 + x16995;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18125 = x18071 + x16996;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18126 = x18072 + x16997;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18127 = x18074 + x16969;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18128 = x18075 + x16970;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18129 = x18076 + x16971;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18130 = x18077 + x16972;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18131 = x18078 + x16973;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18132 = x18079 + x16974;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18133 = x18080 + x17005;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18134 = x18081 + x17036;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18135 = x18082 + x17067;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18136 = x18083 + x17098;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18137 = x18084 + x17129;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18138 = x18085 + x17160;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18139 = x18086 + x17191;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18140 = x18087 + x17222;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18141 = x18088 + x17253;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18142 = x18089 + x17284;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18143 = x18090 + x17315;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18144 = x18091 + x17346;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18145 = x18092 + x17377;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18146 = x18093 + x17408;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18147 = x18094 + x17439;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18148 = x18095 + x17470;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18149 = x18096 + x17501;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18150 = x18097 + x17532;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18151 = x18098 + x17563;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18152 = x18099 + x17594;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18153 = x18100 + x17625;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18154 = x18101 + x17656;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18155 = x18102 + x17687;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18156 = x18104 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18157 = x18109 + x16999;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18158 = x18155 + x17741;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x18159 = Fp(x18156.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x18160 = x18156 - x18159;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x18161 = x15754 - x18157;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x18162 = x15794 - x18158;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18163 = x18110 + x17000;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18164 = x18111 + x17001;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18165 = x18112 + x17002;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18166 = x18113 + x17003;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18167 = x18114 + x17004;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18168 = x18115 + x17007;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18169 = x18116 + x17008;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18170 = x18117 + x17009;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18171 = x18118 + x17010;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18172 = x18119 + x17011;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18173 = x18120 + x17012;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18174 = x18121 + x17015;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18175 = x18122 + x17016;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18176 = x18123 + x17017;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18177 = x18124 + x17018;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18178 = x18125 + x17019;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18179 = x18126 + x17020;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18180 = x18127 + x17023;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18181 = x18128 + x17024;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18182 = x18129 + x17025;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18183 = x18130 + x17026;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18184 = x18131 + x17027;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18185 = x18132 + x17028;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18186 = x18133 + x17059;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18187 = x18134 + x17090;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18188 = x18135 + x17121;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18189 = x18136 + x17152;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18190 = x18137 + x17183;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18191 = x18138 + x17214;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18192 = x18139 + x17245;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18193 = x18140 + x17276;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18194 = x18141 + x17307;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18195 = x18142 + x17338;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18196 = x18143 + x17369;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18197 = x18144 + x17400;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18198 = x18145 + x17431;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18199 = x18146 + x17462;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18200 = x18147 + x17493;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18201 = x18148 + x17524;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18202 = x18149 + x17555;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18203 = x18150 + x17586;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18204 = x18151 + x17617;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18205 = x18152 + x17648;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18206 = x18153 + x17679;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18207 = x18154 + x17710;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18208 = x18168 + x17030;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18209 = x18207 + x17733;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x18210 = x18160 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x18211 = x15808 - x18208;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x18212 = x15836 - x18209;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x18213 = x18210 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18214 = x18163 + x17054;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18215 = x18164 + x17055;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18216 = x18165 + x17056;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18217 = x18166 + x17057;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18218 = x18167 + x17058;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18219 = x18169 + x17031;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18220 = x18170 + x17032;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18221 = x18171 + x17033;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18222 = x18172 + x17034;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18223 = x18173 + x17035;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18224 = x18174 + x17038;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18225 = x18175 + x17039;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18226 = x18176 + x17040;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18227 = x18177 + x17041;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18228 = x18178 + x17042;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18229 = x18179 + x17043;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18230 = x18180 + x17046;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18231 = x18181 + x17047;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18232 = x18182 + x17048;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18233 = x18183 + x17049;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18234 = x18184 + x17050;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18235 = x18185 + x17051;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18236 = x18186 + x17082;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18237 = x18187 + x17113;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18238 = x18188 + x17144;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18239 = x18189 + x17175;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18240 = x18190 + x17206;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18241 = x18191 + x17237;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18242 = x18192 + x17268;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18243 = x18193 + x17299;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18244 = x18194 + x17330;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18245 = x18195 + x17361;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18246 = x18196 + x17392;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18247 = x18197 + x17423;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18248 = x18198 + x17454;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18249 = x18199 + x17485;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18250 = x18200 + x17516;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18251 = x18201 + x17547;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18252 = x18202 + x17578;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18253 = x18203 + x17609;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18254 = x18204 + x17640;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18255 = x18205 + x17671;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18256 = x18206 + x17702;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18257 = x17876 + x18213;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18258 = x18224 + x17061;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18259 = x18256 + x17725;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x18260 = x15859 - x18258;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x18261 = x15875 - x18259;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18262 = x18214 + x17077;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18263 = x18215 + x17078;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18264 = x18216 + x17079;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18265 = x18217 + x17080;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18266 = x18218 + x17081;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18267 = x18219 + x17085;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18268 = x18220 + x17086;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18269 = x18221 + x17087;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18270 = x18222 + x17088;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18271 = x18223 + x17089;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18272 = x18225 + x17062;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18273 = x18226 + x17063;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18274 = x18227 + x17064;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18275 = x18228 + x17065;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18276 = x18229 + x17066;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18277 = x18230 + x17069;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18278 = x18231 + x17070;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18279 = x18232 + x17071;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18280 = x18233 + x17072;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18281 = x18234 + x17073;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18282 = x18235 + x17074;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18283 = x18236 + x17105;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18284 = x18237 + x17136;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18285 = x18238 + x17167;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18286 = x18239 + x17198;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18287 = x18240 + x17229;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18288 = x18241 + x17260;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18289 = x18242 + x17291;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18290 = x18243 + x17322;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18291 = x18244 + x17353;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18292 = x18245 + x17384;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18293 = x18246 + x17415;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18294 = x18247 + x17446;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18295 = x18248 + x17477;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18296 = x18249 + x17508;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18297 = x18250 + x17539;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18298 = x18251 + x17570;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18299 = x18252 + x17601;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18300 = x18253 + x17632;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18301 = x18254 + x17663;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18302 = x18255 + x17694;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18303 = x18257 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18304 = x18277 + x17092;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18305 = x18302 + x17717;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x18306 = Fp(x18303.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x18307 = x18303 - x18306;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x18308 = x15894 - x18305;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x18309 = x15910 - x18304;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18310 = x18262 + x17100;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18311 = x18263 + x17101;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18312 = x18264 + x17102;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18313 = x18265 + x17103;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18314 = x18266 + x17104;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18315 = x18267 + x17108;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18316 = x18268 + x17109;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18317 = x18269 + x17110;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18318 = x18270 + x17111;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18319 = x18271 + x17112;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18320 = x18272 + x17116;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18321 = x18273 + x17117;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18322 = x18274 + x17118;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18323 = x18275 + x17119;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18324 = x18276 + x17120;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18325 = x18278 + x17093;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18326 = x18279 + x17094;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18327 = x18280 + x17095;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18328 = x18281 + x17096;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18329 = x18282 + x17097;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18330 = x18283 + x17128;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18331 = x18284 + x17159;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18332 = x18285 + x17190;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18333 = x18286 + x17221;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18334 = x18287 + x17252;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18335 = x18288 + x17283;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18336 = x18289 + x17314;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18337 = x18290 + x17345;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18338 = x18291 + x17376;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18339 = x18292 + x17407;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18340 = x18293 + x17438;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18341 = x18294 + x17469;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18342 = x18295 + x17500;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18343 = x18296 + x17531;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18344 = x18297 + x17562;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18345 = x18298 + x17593;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18346 = x18299 + x17624;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18347 = x18300 + x17655;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18348 = x18301 + x17686;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18349 = x18310 + x17123;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18350 = x18348 + x17740;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x18351 = x18307 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x18352 = x15937 - x18349;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x18353 = x15970 - x18350;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x18354 = x18351 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18355 = x18311 + x17124;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18356 = x18312 + x17125;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18357 = x18313 + x17126;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18358 = x18314 + x17127;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18359 = x18315 + x17131;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18360 = x18316 + x17132;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18361 = x18317 + x17133;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18362 = x18318 + x17134;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18363 = x18319 + x17135;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18364 = x18320 + x17139;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18365 = x18321 + x17140;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18366 = x18322 + x17141;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18367 = x18323 + x17142;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18368 = x18324 + x17143;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18369 = x18325 + x17147;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18370 = x18326 + x17148;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18371 = x18327 + x17149;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18372 = x18328 + x17150;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18373 = x18329 + x17151;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18374 = x18330 + x17182;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18375 = x18331 + x17213;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18376 = x18332 + x17244;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18377 = x18333 + x17275;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18378 = x18334 + x17306;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18379 = x18335 + x17337;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18380 = x18336 + x17368;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18381 = x18337 + x17399;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18382 = x18338 + x17430;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18383 = x18339 + x17461;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18384 = x18340 + x17492;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18385 = x18341 + x17523;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18386 = x18342 + x17554;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18387 = x18343 + x17585;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18388 = x18344 + x17616;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18389 = x18345 + x17647;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18390 = x18346 + x17678;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18391 = x18347 + x17709;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18392 = x17936 + x18354;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18393 = x18359 + x17154;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18394 = x18391 + x17732;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x18395 = x15981 - x18393;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x18396 = x16004 - x18394;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18397 = x18355 + x17178;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18398 = x18356 + x17179;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18399 = x18357 + x17180;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18400 = x18358 + x17181;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18401 = x18360 + x17155;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18402 = x18361 + x17156;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18403 = x18362 + x17157;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18404 = x18363 + x17158;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18405 = x18364 + x17162;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18406 = x18365 + x17163;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18407 = x18366 + x17164;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18408 = x18367 + x17165;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18409 = x18368 + x17166;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18410 = x18369 + x17170;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18411 = x18370 + x17171;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18412 = x18371 + x17172;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18413 = x18372 + x17173;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18414 = x18373 + x17174;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18415 = x18374 + x17205;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18416 = x18375 + x17236;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18417 = x18376 + x17267;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18418 = x18377 + x17298;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18419 = x18378 + x17329;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18420 = x18379 + x17360;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18421 = x18380 + x17391;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18422 = x18381 + x17422;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18423 = x18382 + x17453;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18424 = x18383 + x17484;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18425 = x18384 + x17515;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18426 = x18385 + x17546;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18427 = x18386 + x17577;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18428 = x18387 + x17608;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18429 = x18388 + x17639;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18430 = x18389 + x17670;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18431 = x18390 + x17701;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18432 = x18392 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18433 = x18405 + x17185;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18434 = x18431 + x17724;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x18435 = Fp(x18432.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x18436 = x18432 - x18435;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x18437 = x16025 - x18433;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x18438 = x16038 - x18434;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18439 = x18397 + x17201;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18440 = x18398 + x17202;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18441 = x18399 + x17203;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18442 = x18400 + x17204;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18443 = x18401 + x17209;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18444 = x18402 + x17210;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18445 = x18403 + x17211;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18446 = x18404 + x17212;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18447 = x18406 + x17186;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18448 = x18407 + x17187;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18449 = x18408 + x17188;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18450 = x18409 + x17189;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18451 = x18410 + x17193;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18452 = x18411 + x17194;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18453 = x18412 + x17195;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18454 = x18413 + x17196;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18455 = x18414 + x17197;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18456 = x18415 + x17228;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18457 = x18416 + x17259;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18458 = x18417 + x17290;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18459 = x18418 + x17321;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18460 = x18419 + x17352;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18461 = x18420 + x17383;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18462 = x18421 + x17414;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18463 = x18422 + x17445;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18464 = x18423 + x17476;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18465 = x18424 + x17507;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18466 = x18425 + x17538;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18467 = x18426 + x17569;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18468 = x18427 + x17600;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18469 = x18428 + x17631;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18470 = x18429 + x17662;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18471 = x18430 + x17693;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18472 = x18451 + x17216;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18473 = x18471 + x17716;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x18474 = x18436 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x18475 = x16053 - x18473;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x18476 = x16066 - x18472;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x18477 = x18474 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18478 = x18439 + x17224;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18479 = x18440 + x17225;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18480 = x18441 + x17226;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18481 = x18442 + x17227;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18482 = x18443 + x17232;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18483 = x18444 + x17233;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18484 = x18445 + x17234;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18485 = x18446 + x17235;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18486 = x18447 + x17240;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18487 = x18448 + x17241;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18488 = x18449 + x17242;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18489 = x18450 + x17243;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18490 = x18452 + x17217;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18491 = x18453 + x17218;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18492 = x18454 + x17219;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18493 = x18455 + x17220;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18494 = x18456 + x17251;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18495 = x18457 + x17282;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18496 = x18458 + x17313;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18497 = x18459 + x17344;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18498 = x18460 + x17375;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18499 = x18461 + x17406;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18500 = x18462 + x17437;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18501 = x18463 + x17468;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18502 = x18464 + x17499;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18503 = x18465 + x17530;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18504 = x18466 + x17561;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18505 = x18467 + x17592;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18506 = x18468 + x17623;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18507 = x18469 + x17654;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18508 = x18470 + x17685;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18509 = x17996 + x18477;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18510 = x18478 + x17247;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18511 = x18508 + x17739;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x18512 = x16087 - x18510;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x18513 = x16113 - x18511;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18514 = x18479 + x17248;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18515 = x18480 + x17249;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18516 = x18481 + x17250;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18517 = x18482 + x17255;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18518 = x18483 + x17256;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18519 = x18484 + x17257;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18520 = x18485 + x17258;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18521 = x18486 + x17263;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18522 = x18487 + x17264;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18523 = x18488 + x17265;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18524 = x18489 + x17266;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18525 = x18490 + x17271;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18526 = x18491 + x17272;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18527 = x18492 + x17273;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18528 = x18493 + x17274;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18529 = x18494 + x17305;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18530 = x18495 + x17336;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18531 = x18496 + x17367;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18532 = x18497 + x17398;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18533 = x18498 + x17429;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18534 = x18499 + x17460;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18535 = x18500 + x17491;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18536 = x18501 + x17522;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18537 = x18502 + x17553;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18538 = x18503 + x17584;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18539 = x18504 + x17615;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18540 = x18505 + x17646;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18541 = x18506 + x17677;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18542 = x18507 + x17708;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18543 = x18509 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18544 = x18517 + x17278;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18545 = x18542 + x17731;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x18546 = Fp(x18543.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x18547 = x18543 - x18546;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x18548 = x16124 - x18544;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x18549 = x16142 - x18545;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18550 = x18514 + x17302;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18551 = x18515 + x17303;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18552 = x18516 + x17304;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18553 = x18518 + x17279;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18554 = x18519 + x17280;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18555 = x18520 + x17281;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18556 = x18521 + x17286;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18557 = x18522 + x17287;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18558 = x18523 + x17288;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18559 = x18524 + x17289;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18560 = x18525 + x17294;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18561 = x18526 + x17295;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18562 = x18527 + x17296;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18563 = x18528 + x17297;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18564 = x18529 + x17328;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18565 = x18530 + x17359;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18566 = x18531 + x17390;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18567 = x18532 + x17421;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18568 = x18533 + x17452;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18569 = x18534 + x17483;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18570 = x18535 + x17514;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18571 = x18536 + x17545;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18572 = x18537 + x17576;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18573 = x18538 + x17607;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18574 = x18539 + x17638;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18575 = x18540 + x17669;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18576 = x18541 + x17700;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18577 = x18556 + x17309;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18578 = x18576 + x17723;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x18579 = x18547 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x18580 = x16158 - x18577;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x18581 = x16168 - x18578;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x18582 = x18579 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18583 = x18550 + x17325;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18584 = x18551 + x17326;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18585 = x18552 + x17327;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18586 = x18553 + x17333;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18587 = x18554 + x17334;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18588 = x18555 + x17335;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18589 = x18557 + x17310;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18590 = x18558 + x17311;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18591 = x18559 + x17312;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18592 = x18560 + x17317;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18593 = x18561 + x17318;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18594 = x18562 + x17319;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18595 = x18563 + x17320;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18596 = x18564 + x17351;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18597 = x18565 + x17382;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18598 = x18566 + x17413;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18599 = x18567 + x17444;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18600 = x18568 + x17475;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18601 = x18569 + x17506;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18602 = x18570 + x17537;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18603 = x18571 + x17568;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18604 = x18572 + x17599;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18605 = x18573 + x17630;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18606 = x18574 + x17661;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18607 = x18575 + x17692;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18608 = x18052 + x18582;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18609 = x18592 + x17340;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18610 = x18607 + x17715;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x18611 = x16179 - x18610;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x18612 = x16189 - x18609;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18613 = x18583 + x17348;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18614 = x18584 + x17349;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18615 = x18585 + x17350;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18616 = x18586 + x17356;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18617 = x18587 + x17357;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18618 = x18588 + x17358;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18619 = x18589 + x17364;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18620 = x18590 + x17365;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18621 = x18591 + x17366;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18622 = x18593 + x17341;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18623 = x18594 + x17342;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18624 = x18595 + x17343;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18625 = x18596 + x17374;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18626 = x18597 + x17405;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18627 = x18598 + x17436;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18628 = x18599 + x17467;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18629 = x18600 + x17498;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18630 = x18601 + x17529;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18631 = x18602 + x17560;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18632 = x18603 + x17591;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18633 = x18604 + x17622;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18634 = x18605 + x17653;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18635 = x18606 + x17684;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18636 = x18608 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18637 = x18613 + x17371;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18638 = x18635 + x17738;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x18639 = Fp(x18636.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x18640 = x18636 - x18639;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x18641 = x16207 - x18637;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x18642 = x16226 - x18638;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18643 = x18614 + x17372;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18644 = x18615 + x17373;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18645 = x18616 + x17379;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18646 = x18617 + x17380;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18647 = x18618 + x17381;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18648 = x18619 + x17387;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18649 = x18620 + x17388;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18650 = x18621 + x17389;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18651 = x18622 + x17395;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18652 = x18623 + x17396;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18653 = x18624 + x17397;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18654 = x18625 + x17428;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18655 = x18626 + x17459;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18656 = x18627 + x17490;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18657 = x18628 + x17521;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18658 = x18629 + x17552;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18659 = x18630 + x17583;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18660 = x18631 + x17614;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18661 = x18632 + x17645;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18662 = x18633 + x17676;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18663 = x18634 + x17707;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18664 = x18645 + x17402;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18665 = x18663 + x17730;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x18666 = x18640 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x18667 = x16234 - x18664;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x18668 = x16247 - x18665;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x18669 = x18666 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18670 = x18643 + x17426;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18671 = x18644 + x17427;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18672 = x18646 + x17403;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18673 = x18647 + x17404;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18674 = x18648 + x17410;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18675 = x18649 + x17411;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18676 = x18650 + x17412;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18677 = x18651 + x17418;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18678 = x18652 + x17419;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18679 = x18653 + x17420;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18680 = x18654 + x17451;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18681 = x18655 + x17482;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18682 = x18656 + x17513;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18683 = x18657 + x17544;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18684 = x18658 + x17575;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18685 = x18659 + x17606;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18686 = x18660 + x17637;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18687 = x18661 + x17668;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18688 = x18662 + x17699;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18689 = x18108 + x18669;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18690 = x18674 + x17433;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18691 = x18688 + x17722;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x18692 = x16258 - x18690;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x18693 = x16265 - x18691;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18694 = x18670 + x17449;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18695 = x18671 + x17450;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18696 = x18672 + x17457;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18697 = x18673 + x17458;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18698 = x18675 + x17434;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18699 = x18676 + x17435;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18700 = x18677 + x17441;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18701 = x18678 + x17442;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18702 = x18679 + x17443;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18703 = x18680 + x17474;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18704 = x18681 + x17505;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18705 = x18682 + x17536;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18706 = x18683 + x17567;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18707 = x18684 + x17598;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18708 = x18685 + x17629;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18709 = x18686 + x17660;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18710 = x18687 + x17691;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18711 = x18689 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18712 = x18700 + x17464;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18713 = x18710 + x17714;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x18714 = Fp(x18711.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x18715 = x18711 - x18714;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x18716 = x16275 - x18713;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x18717 = x16282 - x18712;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18718 = x18694 + x17472;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18719 = x18695 + x17473;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18720 = x18696 + x17480;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18721 = x18697 + x17481;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18722 = x18698 + x17488;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18723 = x18699 + x17489;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18724 = x18701 + x17465;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18725 = x18702 + x17466;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18726 = x18703 + x17497;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18727 = x18704 + x17528;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18728 = x18705 + x17559;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18729 = x18706 + x17590;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18730 = x18707 + x17621;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18731 = x18708 + x17652;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18732 = x18709 + x17683;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18733 = x18718 + x17495;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18734 = x18732 + x17737;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x18735 = x18715 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x18736 = x16294 - x18733;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x18737 = x16306 - x18734;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x18738 = x18735 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18739 = x18719 + x17496;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18740 = x18720 + x17503;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18741 = x18721 + x17504;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18742 = x18722 + x17511;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18743 = x18723 + x17512;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18744 = x18724 + x17519;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18745 = x18725 + x17520;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18746 = x18726 + x17551;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18747 = x18727 + x17582;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18748 = x18728 + x17613;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18749 = x18729 + x17644;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18750 = x18730 + x17675;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18751 = x18731 + x17706;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18752 = x18161 + x18738;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18753 = x18740 + x17526;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18754 = x18751 + x17729;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x18755 = x16311 - x18753;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x18756 = x16319 - x18754;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18757 = x18739 + x17550;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18758 = x18741 + x17527;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18759 = x18742 + x17534;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18760 = x18743 + x17535;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18761 = x18744 + x17542;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18762 = x18745 + x17543;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18763 = x18746 + x17574;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18764 = x18747 + x17605;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18765 = x18748 + x17636;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18766 = x18749 + x17667;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18767 = x18750 + x17698;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18768 = x18752 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18769 = x18759 + x17557;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18770 = x18767 + x17721;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x18771 = Fp(x18768.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x18772 = x18768 - x18771;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x18773 = x16328 - x18769;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x18774 = x16332 - x18770;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18775 = x18757 + x17573;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18776 = x18758 + x17581;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18777 = x18760 + x17558;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18778 = x18761 + x17565;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18779 = x18762 + x17566;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18780 = x18763 + x17597;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18781 = x18764 + x17628;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18782 = x18765 + x17659;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18783 = x18766 + x17690;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18784 = x18778 + x17588;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18785 = x18783 + x17713;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x18786 = x18772 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x18787 = x16338 - x18785;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x18788 = x16342 - x18784;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x18789 = x18786 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18790 = x18775 + x17596;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18791 = x18776 + x17604;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18792 = x18777 + x17612;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18793 = x18779 + x17589;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18794 = x18780 + x17620;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18795 = x18781 + x17651;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18796 = x18782 + x17682;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18797 = x18211 + x18789;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18798 = x18790 + x17619;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18799 = x18796 + x17736;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x18800 = x16348 - x18798;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x18801 = x16354 - x18799;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18802 = x18791 + x17627;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18803 = x18792 + x17635;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18804 = x18793 + x17643;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18805 = x18794 + x17674;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18806 = x18795 + x17705;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18807 = x18797 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18808 = x18802 + x17650;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18809 = x18806 + x17728;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x18810 = Fp(x18807.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x18811 = x18807 - x18810;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x18812 = x16358 - x18808;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x18813 = x16362 - x18809;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18814 = x18803 + x17658;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18815 = x18804 + x17666;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18816 = x18805 + x17697;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18817 = x18814 + x17681;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18818 = x18816 + x17720;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x18819 = x18811 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x18820 = x16365 - x18817;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x18821 = x16367 - x18818;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x18822 = x18819 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18823 = x18815 + x17689;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18824 = x18260 + x18822;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":83:14)
        auto x18825 = x18823 + x17712;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":115:17)
        auto x18826 = x16369 - x18825;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18827 = x18824 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x18828 = Fp(x18827.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x18829 = x18827 - x18828;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x18830 = x18829 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x18831 = x18830 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18832 = x18309 + x18831;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18833 = x18832 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x18834 = Fp(x18833.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x18835 = x18833 - x18834;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x18836 = x18835 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x18837 = x18836 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18838 = x18352 + x18837;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18839 = x18838 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x18840 = Fp(x18839.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x18841 = x18839 - x18840;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x18842 = x18841 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x18843 = x18842 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18844 = x18395 + x18843;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18845 = x18844 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x18846 = Fp(x18845.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x18847 = x18845 - x18846;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x18848 = x18847 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x18849 = x18848 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18850 = x18437 + x18849;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18851 = x18850 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x18852 = Fp(x18851.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x18853 = x18851 - x18852;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x18854 = x18853 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x18855 = x18854 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18856 = x18476 + x18855;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18857 = x18856 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x18858 = Fp(x18857.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x18859 = x18857 - x18858;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x18860 = x18859 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x18861 = x18860 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18862 = x18512 + x18861;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18863 = x18862 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x18864 = Fp(x18863.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x18865 = x18863 - x18864;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x18866 = x18865 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x18867 = x18866 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18868 = x18548 + x18867;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18869 = x18868 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x18870 = Fp(x18869.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x18871 = x18869 - x18870;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x18872 = x18871 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x18873 = x18872 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18874 = x18580 + x18873;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18875 = x18874 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x18876 = Fp(x18875.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x18877 = x18875 - x18876;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x18878 = x18877 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x18879 = x18878 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18880 = x18612 + x18879;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18881 = x18880 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x18882 = Fp(x18881.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x18883 = x18881 - x18882;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x18884 = x18883 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x18885 = x18884 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18886 = x18641 + x18885;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18887 = x18886 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x18888 = Fp(x18887.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x18889 = x18887 - x18888;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x18890 = x18889 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x18891 = x18890 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18892 = x18667 + x18891;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18893 = x18892 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x18894 = Fp(x18893.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x18895 = x18893 - x18894;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x18896 = x18895 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x18897 = x18896 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18898 = x18692 + x18897;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18899 = x18898 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x18900 = Fp(x18899.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x18901 = x18899 - x18900;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x18902 = x18901 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x18903 = x18902 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18904 = x18717 + x18903;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18905 = x18904 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x18906 = Fp(x18905.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x18907 = x18905 - x18906;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x18908 = x18907 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x18909 = x18908 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18910 = x18736 + x18909;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18911 = x18910 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x18912 = Fp(x18911.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x18913 = x18911 - x18912;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x18914 = x18913 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x18915 = x18914 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18916 = x18755 + x18915;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18917 = x18916 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x18918 = Fp(x18917.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x18919 = x18917 - x18918;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x18920 = x18919 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x18921 = x18920 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18922 = x18773 + x18921;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18923 = x18922 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x18924 = Fp(x18923.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x18925 = x18923 - x18924;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x18926 = x18925 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x18927 = x18926 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18928 = x18788 + x18927;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18929 = x18928 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x18930 = Fp(x18929.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x18931 = x18929 - x18930;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x18932 = x18931 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x18933 = x18932 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18934 = x18800 + x18933;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18935 = x18934 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x18936 = Fp(x18935.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x18937 = x18935 - x18936;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x18938 = x18937 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x18939 = x18938 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18940 = x18812 + x18939;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18941 = x18940 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x18942 = Fp(x18941.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x18943 = x18941 - x18942;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x18944 = x18943 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x18945 = x18944 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18946 = x18820 + x18945;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18947 = x18946 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x18948 = Fp(x18947.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x18949 = x18947 - x18948;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x18950 = x18949 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x18951 = x18950 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18952 = x18826 + x18951;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18953 = x18952 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x18954 = Fp(x18953.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x18955 = x18953 - x18954;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x18956 = x18955 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x18957 = x18956 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18958 = x18821 + x18957;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18959 = x18958 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x18960 = Fp(x18959.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x18961 = x18959 - x18960;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x18962 = x18961 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x18963 = x18962 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18964 = x18813 + x18963;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18965 = x18964 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x18966 = Fp(x18965.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x18967 = x18965 - x18966;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x18968 = x18967 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x18969 = x18968 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18970 = x18801 + x18969;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18971 = x18970 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x18972 = Fp(x18971.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x18973 = x18971 - x18972;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x18974 = x18973 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x18975 = x18974 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18976 = x18787 + x18975;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18977 = x18976 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x18978 = Fp(x18977.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x18979 = x18977 - x18978;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x18980 = x18979 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x18981 = x18980 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18982 = x18774 + x18981;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18983 = x18982 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x18984 = Fp(x18983.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x18985 = x18983 - x18984;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x18986 = x18985 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x18987 = x18986 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18988 = x18756 + x18987;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18989 = x18988 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x18990 = Fp(x18989.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x18991 = x18989 - x18990;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x18992 = x18991 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x18993 = x18992 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18994 = x18737 + x18993;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x18995 = x18994 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x18996 = Fp(x18995.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x18997 = x18995 - x18996;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x18998 = x18997 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x18999 = x18998 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x19000 = x18716 + x18999;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x19001 = x19000 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x19002 = Fp(x19001.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x19003 = x19001 - x19002;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x19004 = x19003 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x19005 = x19004 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x19006 = x18693 + x19005;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x19007 = x19006 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x19008 = Fp(x19007.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x19009 = x19007 - x19008;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x19010 = x19009 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x19011 = x19010 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x19012 = x18668 + x19011;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x19013 = x19012 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x19014 = Fp(x19013.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x19015 = x19013 - x19014;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x19016 = x19015 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x19017 = x19016 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x19018 = x18642 + x19017;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x19019 = x19018 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x19020 = Fp(x19019.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x19021 = x19019 - x19020;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x19022 = x19021 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x19023 = x19022 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x19024 = x18611 + x19023;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x19025 = x19024 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x19026 = Fp(x19025.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x19027 = x19025 - x19026;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x19028 = x19027 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x19029 = x19028 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x19030 = x18581 + x19029;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x19031 = x19030 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x19032 = Fp(x19031.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x19033 = x19031 - x19032;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x19034 = x19033 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x19035 = x19034 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x19036 = x18549 + x19035;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x19037 = x19036 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x19038 = Fp(x19037.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x19039 = x19037 - x19038;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x19040 = x19039 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x19041 = x19040 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x19042 = x18513 + x19041;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x19043 = x19042 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x19044 = Fp(x19043.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x19045 = x19043 - x19044;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x19046 = x19045 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x19047 = x19046 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x19048 = x18475 + x19047;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x19049 = x19048 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x19050 = Fp(x19049.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x19051 = x19049 - x19050;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x19052 = x19051 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x19053 = x19052 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x19054 = x18438 + x19053;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x19055 = x19054 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x19056 = Fp(x19055.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x19057 = x19055 - x19056;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x19058 = x19057 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x19059 = x19058 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x19060 = x18396 + x19059;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x19061 = x19060 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x19062 = Fp(x19061.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x19063 = x19061 - x19062;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x19064 = x19063 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x19065 = x19064 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x19066 = x18353 + x19065;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x19067 = x19066 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x19068 = Fp(x19067.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x19069 = x19067 - x19068;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x19070 = x19069 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x19071 = x19070 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x19072 = x18308 + x19071;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x19073 = x19072 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x19074 = Fp(x19073.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x19075 = x19073 - x19074;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x19076 = x19075 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x19077 = x19076 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x19078 = x18261 + x19077;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x19079 = x19078 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x19080 = Fp(x19079.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x19081 = x19079 - x19080;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x19082 = x19081 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x19083 = x19082 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x19084 = x18212 + x19083;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x19085 = x19084 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x19086 = Fp(x19085.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x19087 = x19085 - x19086;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x19088 = x19087 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x19089 = x19088 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x19090 = x18162 + x19089;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x19091 = x19090 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x19092 = Fp(x19091.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x19093 = x19091 - x19092;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x19094 = x19093 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x19095 = x19094 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x19096 = x18107 + x19095;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x19097 = x19096 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x19098 = Fp(x19097.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x19099 = x19097 - x19098;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x19100 = x19099 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x19101 = x19100 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x19102 = x18053 + x19101;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x19103 = x19102 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x19104 = Fp(x19103.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x19105 = x19103 - x19104;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x19106 = x19105 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x19107 = x19106 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x19108 = x17997 + x19107;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x19109 = x19108 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x19110 = Fp(x19109.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x19111 = x19109 - x19110;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x19112 = x19111 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x19113 = x19112 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x19114 = x17937 + x19113;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x19115 = x19114 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x19116 = Fp(x19115.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x19117 = x19115 - x19116;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x19118 = x19117 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x19119 = x19118 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x19120 = x17875 + x19119;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x19121 = x19120 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x19122 = Fp(x19121.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x19123 = x19121 - x19122;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x19124 = x19123 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x19125 = x19124 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x19126 = x17814 + x19125;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x19127 = x19126 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x19128 = Fp(x19127.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x19129 = x19127 - x19128;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x19130 = x19129 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x19131 = x19130 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x19132 = x17746 + x19131;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x19133 = x19132 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x19134 = Fp(x19133.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x19135 = x19133 - x19134;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x19136 = x19135 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x19137 = x19136 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x19138 = x17748 + x19137;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":138:15)
        auto x19139 = x19138 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":139:16)
        auto x19140 = Fp(x19139.asUInt32() & x97.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:15)
        auto x19141 = x19139 - x19140;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:14)
        auto x19142 = x19141 * x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":140:13)
        auto x19143 = x19142 - x11;
        if (x14031 != 0) {
          {
            // loc("zirgen/components/bytes.cpp":106:12)
            {
              auto& reg = arg2[18 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x100);
              reg = x100;
            }
          }
        }
        if (x14021 != 0) {
          if (x14064 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19144 = Fp(x16687.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[18 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19144);
                reg = x19144;
              }
            }
          }
          if (x14017 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19145 = Fp(x16703.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[18 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19145);
                reg = x19145;
              }
            }
          }
        }
        if (x14015 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":307:31)
            auto x19146 = x17877 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":307:30)
            auto x19147 = Fp(x19146.asUInt32() & x97.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19148 = Fp(x19147.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[18 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19148);
                reg = x19148;
              }
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":315:31)
            auto x19149 = x18789 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":315:30)
            auto x19150 = Fp(x19149.asUInt32() & x97.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19151 = Fp(x19150.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[18 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19151);
                reg = x19151;
              }
            }
          }
        }
        if (x14022 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":325:31)
            auto x19152 = x18867 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":325:30)
            auto x19153 = Fp(x19152.asUInt32() & x97.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19154 = Fp(x19153.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[18 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19154);
                reg = x19154;
              }
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":333:31)
            auto x19155 = x18915 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":333:30)
            auto x19156 = Fp(x19155.asUInt32() & x97.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19157 = Fp(x19156.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[18 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19157);
                reg = x19157;
              }
            }
          }
        }
        if (x14016 != 0) {
          if (x14064 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19158 = Fp(x17811.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[18 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19158);
                reg = x19158;
              }
            }
          }
          if (x14017 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19159 = Fp(x18864.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[18 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19159);
                reg = x19159;
              }
            }
          }
        }
        if (x14031 != 0) {
          {
            // loc("zirgen/components/bytes.cpp":106:12)
            {
              auto& reg = arg2[19 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x100);
              reg = x100;
            }
          }
        }
        if (x14021 != 0) {
          if (x14064 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19160 = Fp(x16688.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[19 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19160);
                reg = x19160;
              }
            }
          }
          if (x14017 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19161 = Fp(x16704.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[19 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19161);
                reg = x19161;
              }
            }
          }
        }
        if (x14015 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":309:32)
            auto x19162 = x17877 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":309:31)
            auto x19163 = Fp(x19162.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":309:30)
            auto x19164 = x19163 * x96;
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19165 = Fp(x19164.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[19 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19165);
                reg = x19165;
              }
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":317:32)
            auto x19166 = x18789 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":317:31)
            auto x19167 = Fp(x19166.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":317:30)
            auto x19168 = x19167 * x96;
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19169 = Fp(x19168.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[19 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19169);
                reg = x19169;
              }
            }
          }
        }
        if (x14022 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":327:32)
            auto x19170 = x18867 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":327:31)
            auto x19171 = Fp(x19170.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":327:30)
            auto x19172 = x19171 * x96;
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19173 = Fp(x19172.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[19 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19173);
                reg = x19173;
              }
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":335:32)
            auto x19174 = x18915 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":335:31)
            auto x19175 = Fp(x19174.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":335:30)
            auto x19176 = x19175 * x96;
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19177 = Fp(x19176.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[19 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19177);
                reg = x19177;
              }
            }
          }
        }
        if (x14016 != 0) {
          if (x14064 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19178 = Fp(x17994.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[19 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19178);
                reg = x19178;
              }
            }
          }
          if (x14017 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19179 = Fp(x18870.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[19 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19179);
                reg = x19179;
              }
            }
          }
        }
        if (x14031 != 0) {
          {
            // loc("zirgen/components/bytes.cpp":106:12)
            {
              auto& reg = arg2[20 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x100);
              reg = x100;
            }
          }
        }
        if (x14021 != 0) {
          if (x14064 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19180 = Fp(x16689.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[20 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19180);
                reg = x19180;
              }
            }
          }
          if (x14017 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19181 = Fp(x16705.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[20 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19181);
                reg = x19181;
              }
            }
          }
        }
        if (x14015 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":307:31)
            auto x19182 = x18054 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":307:30)
            auto x19183 = Fp(x19182.asUInt32() & x97.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19184 = Fp(x19183.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[20 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19184);
                reg = x19184;
              }
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":315:31)
            auto x19185 = x18822 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":315:30)
            auto x19186 = Fp(x19185.asUInt32() & x97.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19187 = Fp(x19186.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[20 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19187);
                reg = x19187;
              }
            }
          }
        }
        if (x14022 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":325:31)
            auto x19188 = x18873 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":325:30)
            auto x19189 = Fp(x19188.asUInt32() & x97.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19190 = Fp(x19189.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[20 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19190);
                reg = x19190;
              }
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":333:31)
            auto x19191 = x18921 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":333:30)
            auto x19192 = Fp(x19191.asUInt32() & x97.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19193 = Fp(x19192.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[20 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19193);
                reg = x19193;
              }
            }
          }
        }
        if (x14016 != 0) {
          if (x14064 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19194 = Fp(x18159.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[20 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19194);
                reg = x19194;
              }
            }
          }
          if (x14017 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19195 = Fp(x18876.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[20 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19195);
                reg = x19195;
              }
            }
          }
        }
        if (x14031 != 0) {
          {
            // loc("zirgen/components/bytes.cpp":106:12)
            {
              auto& reg = arg2[21 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x100);
              reg = x100;
            }
          }
        }
        if (x14021 != 0) {
          if (x14064 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19196 = Fp(x16690.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[21 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19196);
                reg = x19196;
              }
            }
          }
          if (x14017 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19197 = Fp(x16706.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[21 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19197);
                reg = x19197;
              }
            }
          }
        }
        if (x14015 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":309:32)
            auto x19198 = x18054 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":309:31)
            auto x19199 = Fp(x19198.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":309:30)
            auto x19200 = x19199 * x96;
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19201 = Fp(x19200.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[21 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19201);
                reg = x19201;
              }
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":317:32)
            auto x19202 = x18822 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":317:31)
            auto x19203 = Fp(x19202.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":317:30)
            auto x19204 = x19203 * x96;
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19205 = Fp(x19204.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[21 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19205);
                reg = x19205;
              }
            }
          }
        }
        if (x14022 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":327:32)
            auto x19206 = x18873 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":327:31)
            auto x19207 = Fp(x19206.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":327:30)
            auto x19208 = x19207 * x96;
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19209 = Fp(x19208.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[21 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19209);
                reg = x19209;
              }
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":335:32)
            auto x19210 = x18921 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":335:31)
            auto x19211 = Fp(x19210.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":335:30)
            auto x19212 = x19211 * x96;
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19213 = Fp(x19212.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[21 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19213);
                reg = x19213;
              }
            }
          }
        }
        if (x14016 != 0) {
          if (x14064 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19214 = Fp(x18306.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[21 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19214);
                reg = x19214;
              }
            }
          }
          if (x14017 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19215 = Fp(x18882.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[21 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19215);
                reg = x19215;
              }
            }
          }
        }
        if (x14031 != 0) {
          {
            // loc("zirgen/components/bytes.cpp":106:12)
            {
              auto& reg = arg2[22 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x100);
              reg = x100;
            }
          }
        }
        if (x14021 != 0) {
          if (x14064 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19216 = Fp(x16691.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[22 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19216);
                reg = x19216;
              }
            }
          }
          if (x14017 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19217 = Fp(x16707.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[22 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19217);
                reg = x19217;
              }
            }
          }
        }
        if (x14015 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":307:31)
            auto x19218 = x18213 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":307:30)
            auto x19219 = Fp(x19218.asUInt32() & x97.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19220 = Fp(x19219.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[22 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19220);
                reg = x19220;
              }
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":315:31)
            auto x19221 = x18831 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":315:30)
            auto x19222 = Fp(x19221.asUInt32() & x97.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19223 = Fp(x19222.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[22 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19223);
                reg = x19223;
              }
            }
          }
        }
        if (x14022 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":325:31)
            auto x19224 = x18879 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":325:30)
            auto x19225 = Fp(x19224.asUInt32() & x97.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19226 = Fp(x19225.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[22 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19226);
                reg = x19226;
              }
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":333:31)
            auto x19227 = x18927 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":333:30)
            auto x19228 = Fp(x19227.asUInt32() & x97.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19229 = Fp(x19228.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[22 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19229);
                reg = x19229;
              }
            }
          }
        }
        if (x14016 != 0) {
          if (x14064 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19230 = Fp(x18435.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[22 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19230);
                reg = x19230;
              }
            }
          }
          if (x14017 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19231 = Fp(x18888.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[22 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19231);
                reg = x19231;
              }
            }
          }
        }
        if (x14031 != 0) {
          {
            // loc("zirgen/components/bytes.cpp":106:12)
            {
              auto& reg = arg2[23 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x100);
              reg = x100;
            }
          }
        }
        if (x14021 != 0) {
          if (x14064 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19232 = Fp(x16692.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[23 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19232);
                reg = x19232;
              }
            }
          }
          if (x14017 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19233 = Fp(x16708.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[23 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19233);
                reg = x19233;
              }
            }
          }
        }
        if (x14015 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":309:32)
            auto x19234 = x18213 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":309:31)
            auto x19235 = Fp(x19234.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":309:30)
            auto x19236 = x19235 * x96;
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19237 = Fp(x19236.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[23 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19237);
                reg = x19237;
              }
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":317:32)
            auto x19238 = x18831 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":317:31)
            auto x19239 = Fp(x19238.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":317:30)
            auto x19240 = x19239 * x96;
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19241 = Fp(x19240.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[23 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19241);
                reg = x19241;
              }
            }
          }
        }
        if (x14022 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":327:32)
            auto x19242 = x18879 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":327:31)
            auto x19243 = Fp(x19242.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":327:30)
            auto x19244 = x19243 * x96;
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19245 = Fp(x19244.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[23 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19245);
                reg = x19245;
              }
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":335:32)
            auto x19246 = x18927 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":335:31)
            auto x19247 = Fp(x19246.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":335:30)
            auto x19248 = x19247 * x96;
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19249 = Fp(x19248.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[23 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19249);
                reg = x19249;
              }
            }
          }
        }
        if (x14016 != 0) {
          if (x14064 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19250 = Fp(x18546.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[23 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19250);
                reg = x19250;
              }
            }
          }
          if (x14017 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19251 = Fp(x18894.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[23 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19251);
                reg = x19251;
              }
            }
          }
        }
        if (x14031 != 0) {
          {
            // loc("zirgen/components/bytes.cpp":106:12)
            {
              auto& reg = arg2[24 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x100);
              reg = x100;
            }
          }
        }
        if (x14021 != 0) {
          if (x14064 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19252 = Fp(x16693.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[24 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19252);
                reg = x19252;
              }
            }
          }
          if (x14017 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19253 = Fp(x16709.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[24 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19253);
                reg = x19253;
              }
            }
          }
        }
        if (x14015 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":307:31)
            auto x19254 = x18354 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":307:30)
            auto x19255 = Fp(x19254.asUInt32() & x97.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19256 = Fp(x19255.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[24 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19256);
                reg = x19256;
              }
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":315:31)
            auto x19257 = x18837 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":315:30)
            auto x19258 = Fp(x19257.asUInt32() & x97.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19259 = Fp(x19258.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[24 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19259);
                reg = x19259;
              }
            }
          }
        }
        if (x14022 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":325:31)
            auto x19260 = x18885 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":325:30)
            auto x19261 = Fp(x19260.asUInt32() & x97.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19262 = Fp(x19261.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[24 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19262);
                reg = x19262;
              }
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":333:31)
            auto x19263 = x18933 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":333:30)
            auto x19264 = Fp(x19263.asUInt32() & x97.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19265 = Fp(x19264.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[24 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19265);
                reg = x19265;
              }
            }
          }
        }
        if (x14016 != 0) {
          if (x14064 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19266 = Fp(x18639.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[24 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19266);
                reg = x19266;
              }
            }
          }
          if (x14017 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19267 = Fp(x18900.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[24 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19267);
                reg = x19267;
              }
            }
          }
        }
        if (x14031 != 0) {
          {
            // loc("zirgen/components/bytes.cpp":106:12)
            {
              auto& reg = arg2[25 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x100);
              reg = x100;
            }
          }
        }
        if (x14021 != 0) {
          if (x14064 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19268 = Fp(x16694.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[25 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19268);
                reg = x19268;
              }
            }
          }
          if (x14017 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19269 = Fp(x16710.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[25 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19269);
                reg = x19269;
              }
            }
          }
        }
        if (x14015 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":309:32)
            auto x19270 = x18354 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":309:31)
            auto x19271 = Fp(x19270.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":309:30)
            auto x19272 = x19271 * x96;
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19273 = Fp(x19272.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[25 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19273);
                reg = x19273;
              }
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":317:32)
            auto x19274 = x18837 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":317:31)
            auto x19275 = Fp(x19274.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":317:30)
            auto x19276 = x19275 * x96;
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19277 = Fp(x19276.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[25 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19277);
                reg = x19277;
              }
            }
          }
        }
        if (x14022 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":327:32)
            auto x19278 = x18885 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":327:31)
            auto x19279 = Fp(x19278.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":327:30)
            auto x19280 = x19279 * x96;
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19281 = Fp(x19280.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[25 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19281);
                reg = x19281;
              }
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":335:32)
            auto x19282 = x18933 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":335:31)
            auto x19283 = Fp(x19282.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":335:30)
            auto x19284 = x19283 * x96;
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19285 = Fp(x19284.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[25 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19285);
                reg = x19285;
              }
            }
          }
        }
        if (x14016 != 0) {
          if (x14064 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19286 = Fp(x18714.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[25 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19286);
                reg = x19286;
              }
            }
          }
          if (x14017 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19287 = Fp(x18906.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[25 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19287);
                reg = x19287;
              }
            }
          }
        }
        if (x14031 != 0) {
          {
            // loc("zirgen/components/bytes.cpp":106:12)
            {
              auto& reg = arg2[26 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x100);
              reg = x100;
            }
          }
        }
        if (x14021 != 0) {
          if (x14064 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19288 = Fp(x16695.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[26 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19288);
                reg = x19288;
              }
            }
          }
          if (x14017 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19289 = Fp(x16711.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[26 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19289);
                reg = x19289;
              }
            }
          }
        }
        if (x14015 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":307:31)
            auto x19290 = x18477 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":307:30)
            auto x19291 = Fp(x19290.asUInt32() & x97.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19292 = Fp(x19291.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[26 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19292);
                reg = x19292;
              }
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":315:31)
            auto x19293 = x18843 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":315:30)
            auto x19294 = Fp(x19293.asUInt32() & x97.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19295 = Fp(x19294.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[26 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19295);
                reg = x19295;
              }
            }
          }
        }
        if (x14022 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":325:31)
            auto x19296 = x18891 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":325:30)
            auto x19297 = Fp(x19296.asUInt32() & x97.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19298 = Fp(x19297.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[26 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19298);
                reg = x19298;
              }
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":333:31)
            auto x19299 = x18939 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":333:30)
            auto x19300 = Fp(x19299.asUInt32() & x97.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19301 = Fp(x19300.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[26 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19301);
                reg = x19301;
              }
            }
          }
        }
        if (x14016 != 0) {
          if (x14064 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19302 = Fp(x18771.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[26 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19302);
                reg = x19302;
              }
            }
          }
          if (x14017 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19303 = Fp(x18912.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[26 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19303);
                reg = x19303;
              }
            }
          }
        }
        if (x14031 != 0) {
          {
            // loc("zirgen/components/bytes.cpp":106:12)
            {
              auto& reg = arg2[27 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x100);
              reg = x100;
            }
          }
        }
        if (x14021 != 0) {
          if (x14064 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19304 = Fp(x16696.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[27 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19304);
                reg = x19304;
              }
            }
          }
          if (x14017 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19305 = Fp(x16712.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[27 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19305);
                reg = x19305;
              }
            }
          }
        }
        if (x14015 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":309:32)
            auto x19306 = x18477 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":309:31)
            auto x19307 = Fp(x19306.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":309:30)
            auto x19308 = x19307 * x96;
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19309 = Fp(x19308.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[27 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19309);
                reg = x19309;
              }
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":317:32)
            auto x19310 = x18843 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":317:31)
            auto x19311 = Fp(x19310.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":317:30)
            auto x19312 = x19311 * x96;
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19313 = Fp(x19312.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[27 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19313);
                reg = x19313;
              }
            }
          }
        }
        if (x14022 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":327:32)
            auto x19314 = x18891 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":327:31)
            auto x19315 = Fp(x19314.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":327:30)
            auto x19316 = x19315 * x96;
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19317 = Fp(x19316.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[27 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19317);
                reg = x19317;
              }
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":335:32)
            auto x19318 = x18939 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":335:31)
            auto x19319 = Fp(x19318.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":335:30)
            auto x19320 = x19319 * x96;
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19321 = Fp(x19320.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[27 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19321);
                reg = x19321;
              }
            }
          }
        }
        if (x14016 != 0) {
          if (x14064 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19322 = Fp(x18810.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[27 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19322);
                reg = x19322;
              }
            }
          }
          if (x14017 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19323 = Fp(x18918.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[27 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19323);
                reg = x19323;
              }
            }
          }
        }
        if (x14031 != 0) {
          {
            // loc("zirgen/components/bytes.cpp":106:12)
            {
              auto& reg = arg2[28 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x100);
              reg = x100;
            }
          }
        }
        if (x14021 != 0) {
          if (x14064 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19324 = Fp(x16697.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[28 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19324);
                reg = x19324;
              }
            }
          }
          if (x14017 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19325 = Fp(x16713.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[28 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19325);
                reg = x19325;
              }
            }
          }
        }
        if (x14015 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":307:31)
            auto x19326 = x18582 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":307:30)
            auto x19327 = Fp(x19326.asUInt32() & x97.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19328 = Fp(x19327.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[28 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19328);
                reg = x19328;
              }
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":315:31)
            auto x19329 = x18849 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":315:30)
            auto x19330 = Fp(x19329.asUInt32() & x97.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19331 = Fp(x19330.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[28 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19331);
                reg = x19331;
              }
            }
          }
        }
        if (x14022 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":325:31)
            auto x19332 = x18897 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":325:30)
            auto x19333 = Fp(x19332.asUInt32() & x97.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19334 = Fp(x19333.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[28 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19334);
                reg = x19334;
              }
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":333:31)
            auto x19335 = x18945 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":333:30)
            auto x19336 = Fp(x19335.asUInt32() & x97.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19337 = Fp(x19336.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[28 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19337);
                reg = x19337;
              }
            }
          }
        }
        if (x14016 != 0) {
          if (x14064 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19338 = Fp(x18828.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[28 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19338);
                reg = x19338;
              }
            }
          }
          if (x14017 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19339 = Fp(x18924.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[28 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19339);
                reg = x19339;
              }
            }
          }
        }
        if (x14031 != 0) {
          {
            // loc("zirgen/components/bytes.cpp":106:12)
            {
              auto& reg = arg2[29 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x100);
              reg = x100;
            }
          }
        }
        if (x14021 != 0) {
          if (x14064 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19340 = Fp(x16698.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[29 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19340);
                reg = x19340;
              }
            }
          }
          if (x14017 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19341 = Fp(x16714.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[29 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19341);
                reg = x19341;
              }
            }
          }
        }
        if (x14015 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":309:32)
            auto x19342 = x18582 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":309:31)
            auto x19343 = Fp(x19342.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":309:30)
            auto x19344 = x19343 * x96;
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19345 = Fp(x19344.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[29 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19345);
                reg = x19345;
              }
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":317:32)
            auto x19346 = x18849 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":317:31)
            auto x19347 = Fp(x19346.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":317:30)
            auto x19348 = x19347 * x96;
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19349 = Fp(x19348.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[29 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19349);
                reg = x19349;
              }
            }
          }
        }
        if (x14022 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":327:32)
            auto x19350 = x18897 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":327:31)
            auto x19351 = Fp(x19350.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":327:30)
            auto x19352 = x19351 * x96;
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19353 = Fp(x19352.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[29 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19353);
                reg = x19353;
              }
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":335:32)
            auto x19354 = x18945 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":335:31)
            auto x19355 = Fp(x19354.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":335:30)
            auto x19356 = x19355 * x96;
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19357 = Fp(x19356.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[29 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19357);
                reg = x19357;
              }
            }
          }
        }
        if (x14016 != 0) {
          if (x14064 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19358 = Fp(x18834.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[29 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19358);
                reg = x19358;
              }
            }
          }
          if (x14017 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19359 = Fp(x18930.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[29 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19359);
                reg = x19359;
              }
            }
          }
        }
        if (x14031 != 0) {
          {
            // loc("zirgen/components/bytes.cpp":106:12)
            {
              auto& reg = arg2[30 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x100);
              reg = x100;
            }
          }
        }
        if (x14021 != 0) {
          if (x14064 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19360 = Fp(x16699.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[30 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19360);
                reg = x19360;
              }
            }
          }
          if (x14017 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19361 = Fp(x16715.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[30 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19361);
                reg = x19361;
              }
            }
          }
        }
        if (x14015 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":307:31)
            auto x19362 = x18669 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":307:30)
            auto x19363 = Fp(x19362.asUInt32() & x97.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19364 = Fp(x19363.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[30 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19364);
                reg = x19364;
              }
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":315:31)
            auto x19365 = x18855 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":315:30)
            auto x19366 = Fp(x19365.asUInt32() & x97.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19367 = Fp(x19366.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[30 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19367);
                reg = x19367;
              }
            }
          }
        }
        if (x14022 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":325:31)
            auto x19368 = x18903 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":325:30)
            auto x19369 = Fp(x19368.asUInt32() & x97.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19370 = Fp(x19369.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[30 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19370);
                reg = x19370;
              }
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":333:31)
            auto x19371 = x18951 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":333:30)
            auto x19372 = Fp(x19371.asUInt32() & x97.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19373 = Fp(x19372.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[30 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19373);
                reg = x19373;
              }
            }
          }
        }
        if (x14016 != 0) {
          if (x14064 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19374 = Fp(x18840.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[30 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19374);
                reg = x19374;
              }
            }
          }
          if (x14017 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19375 = Fp(x18936.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[30 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19375);
                reg = x19375;
              }
            }
          }
        }
        if (x14031 != 0) {
          {
            // loc("zirgen/components/bytes.cpp":106:12)
            {
              auto& reg = arg2[31 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x100);
              reg = x100;
            }
          }
        }
        if (x14021 != 0) {
          if (x14064 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19376 = Fp(x16700.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[31 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19376);
                reg = x19376;
              }
            }
          }
          if (x14017 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19377 = Fp(x16716.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[31 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19377);
                reg = x19377;
              }
            }
          }
        }
        if (x14015 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":309:32)
            auto x19378 = x18669 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":309:31)
            auto x19379 = Fp(x19378.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":309:30)
            auto x19380 = x19379 * x96;
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19381 = Fp(x19380.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[31 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19381);
                reg = x19381;
              }
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":317:32)
            auto x19382 = x18855 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":317:31)
            auto x19383 = Fp(x19382.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":317:30)
            auto x19384 = x19383 * x96;
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19385 = Fp(x19384.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[31 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19385);
                reg = x19385;
              }
            }
          }
        }
        if (x14022 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":327:32)
            auto x19386 = x18903 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":327:31)
            auto x19387 = Fp(x19386.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":327:30)
            auto x19388 = x19387 * x96;
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19389 = Fp(x19388.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[31 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19389);
                reg = x19389;
              }
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":335:32)
            auto x19390 = x18951 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":335:31)
            auto x19391 = Fp(x19390.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":335:30)
            auto x19392 = x19391 * x96;
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19393 = Fp(x19392.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[31 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19393);
                reg = x19393;
              }
            }
          }
        }
        if (x14016 != 0) {
          if (x14064 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19394 = Fp(x18846.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[31 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19394);
                reg = x19394;
              }
            }
          }
          if (x14017 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19395 = Fp(x18942.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[31 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19395);
                reg = x19395;
              }
            }
          }
        }
        if (x14031 != 0) {
          {
            // loc("zirgen/components/bytes.cpp":106:12)
            {
              auto& reg = arg2[32 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x100);
              reg = x100;
            }
          }
        }
        if (x14021 != 0) {
          if (x14064 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19396 = Fp(x16701.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[32 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19396);
                reg = x19396;
              }
            }
          }
          if (x14017 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19397 = Fp(x16717.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[32 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19397);
                reg = x19397;
              }
            }
          }
        }
        if (x14015 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":307:31)
            auto x19398 = x18738 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":307:30)
            auto x19399 = Fp(x19398.asUInt32() & x97.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19400 = Fp(x19399.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[32 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19400);
                reg = x19400;
              }
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":315:31)
            auto x19401 = x18861 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":315:30)
            auto x19402 = Fp(x19401.asUInt32() & x97.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19403 = Fp(x19402.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[32 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19403);
                reg = x19403;
              }
            }
          }
        }
        if (x14022 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":325:31)
            auto x19404 = x18909 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":325:30)
            auto x19405 = Fp(x19404.asUInt32() & x97.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19406 = Fp(x19405.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[32 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19406);
                reg = x19406;
              }
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":333:31)
            auto x19407 = x18957 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":333:30)
            auto x19408 = Fp(x19407.asUInt32() & x97.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19409 = Fp(x19408.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[32 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19409);
                reg = x19409;
              }
            }
          }
        }
        if (x14016 != 0) {
          if (x14064 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19410 = Fp(x18852.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[32 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19410);
                reg = x19410;
              }
            }
          }
          if (x14017 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19411 = Fp(x18948.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[32 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19411);
                reg = x19411;
              }
            }
          }
        }
        if (x14031 != 0) {
          {
            // loc("zirgen/components/bytes.cpp":106:12)
            {
              auto& reg = arg2[33 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x100);
              reg = x100;
            }
          }
        }
        if (x14021 != 0) {
          if (x14064 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19412 = Fp(x16702.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[33 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19412);
                reg = x19412;
              }
            }
          }
          if (x14017 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19413 = Fp(x16718.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[33 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19413);
                reg = x19413;
              }
            }
          }
        }
        if (x14015 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":309:32)
            auto x19414 = x18738 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":309:31)
            auto x19415 = Fp(x19414.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":309:30)
            auto x19416 = x19415 * x96;
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19417 = Fp(x19416.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[33 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19417);
                reg = x19417;
              }
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":317:32)
            auto x19418 = x18861 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":317:31)
            auto x19419 = Fp(x19418.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":317:30)
            auto x19420 = x19419 * x96;
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19421 = Fp(x19420.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[33 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19421);
                reg = x19421;
              }
            }
          }
        }
        if (x14022 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":327:32)
            auto x19422 = x18909 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":327:31)
            auto x19423 = Fp(x19422.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":327:30)
            auto x19424 = x19423 * x96;
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19425 = Fp(x19424.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[33 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19425);
                reg = x19425;
              }
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":335:32)
            auto x19426 = x18957 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":335:31)
            auto x19427 = Fp(x19426.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":335:30)
            auto x19428 = x19427 * x96;
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19429 = Fp(x19428.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[33 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19429);
                reg = x19429;
              }
            }
          }
        }
        if (x14016 != 0) {
          if (x14064 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19430 = Fp(x18858.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[33 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19430);
                reg = x19430;
              }
            }
          }
          if (x14017 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":106:21)
              auto x19431 = Fp(x18954.asUInt32() & x97.asUInt32());
              // loc("zirgen/components/bytes.cpp":106:12)
              {
                auto& reg = arg2[33 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19431);
                reg = x19431;
              }
            }
          }
        }
        if (x14015 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":354:31)
            {
              auto& reg = arg2[214 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18963);
              reg = x18963;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":355:27)
            {
              auto& reg = arg2[214 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x19011);
              reg = x19011;
            }
          }
        }
        if (x14022 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":359:11)
            {
              auto& reg = arg2[214 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x19059);
              reg = x19059;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":362:11)
            {
              auto& reg = arg2[214 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x19107);
              reg = x19107;
            }
          }
        }
        if (x14015 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":354:31)
            {
              auto& reg = arg2[215 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18969);
              reg = x18969;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":355:27)
            {
              auto& reg = arg2[215 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x19017);
              reg = x19017;
            }
          }
        }
        if (x14022 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":359:11)
            {
              auto& reg = arg2[215 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x19065);
              reg = x19065;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":362:11)
            {
              auto& reg = arg2[215 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x19113);
              reg = x19113;
            }
          }
        }
        if (x14015 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":354:31)
            {
              auto& reg = arg2[216 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18975);
              reg = x18975;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":355:27)
            {
              auto& reg = arg2[216 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x19023);
              reg = x19023;
            }
          }
        }
        if (x14022 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":359:11)
            {
              auto& reg = arg2[216 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x19071);
              reg = x19071;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":362:11)
            {
              auto& reg = arg2[216 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x19119);
              reg = x19119;
            }
          }
        }
        if (x14015 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":354:31)
            {
              auto& reg = arg2[217 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18981);
              reg = x18981;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":355:27)
            {
              auto& reg = arg2[217 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x19029);
              reg = x19029;
            }
          }
        }
        if (x14022 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":359:11)
            {
              auto& reg = arg2[217 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x19077);
              reg = x19077;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":362:11)
            {
              auto& reg = arg2[217 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x19125);
              reg = x19125;
            }
          }
        }
        if (x14015 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":354:31)
            {
              auto& reg = arg2[218 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18987);
              reg = x18987;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":355:27)
            {
              auto& reg = arg2[218 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x19035);
              reg = x19035;
            }
          }
        }
        if (x14022 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":359:11)
            {
              auto& reg = arg2[218 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x19083);
              reg = x19083;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":362:11)
            {
              auto& reg = arg2[218 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x19131);
              reg = x19131;
            }
          }
        }
        if (x14015 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":354:31)
            {
              auto& reg = arg2[219 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18993);
              reg = x18993;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":355:27)
            {
              auto& reg = arg2[219 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x19041);
              reg = x19041;
            }
          }
        }
        if (x14022 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":359:11)
            {
              auto& reg = arg2[219 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x19089);
              reg = x19089;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":362:11)
            {
              auto& reg = arg2[219 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x19137);
              reg = x19137;
            }
          }
        }
        if (x14015 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":354:31)
            {
              auto& reg = arg2[220 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18999);
              reg = x18999;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":355:27)
            {
              auto& reg = arg2[220 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x19047);
              reg = x19047;
            }
          }
        }
        if (x14022 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":359:11)
            {
              auto& reg = arg2[220 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x19095);
              reg = x19095;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":362:11)
            {
              auto& reg = arg2[220 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x19143);
              reg = x19143;
            }
          }
        }
        if (x14015 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":354:31)
            {
              auto& reg = arg2[221 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x19005);
              reg = x19005;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":355:27)
            {
              auto& reg = arg2[221 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x19053);
              reg = x19053;
            }
          }
        }
        if (x14022 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":359:11)
            {
              auto& reg = arg2[221 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x19101);
              reg = x19101;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":362:11)
            {
              auto& reg = arg2[221 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x100);
              reg = x100;
            }
          }
        }
        if (x14015 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":371:31)
            {
              auto& reg = arg2[182 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x16719);
              reg = x16719;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":372:27)
            {
              auto& reg = arg2[182 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18818);
              reg = x18818;
            }
          }
        }
        if (x14016 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":375:31)
            {
              auto& reg = arg2[182 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17747);
              reg = x17747;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":376:27)
            {
              auto& reg = arg2[182 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18821);
              reg = x18821;
            }
          }
        }
        if (x14015 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":371:31)
            {
              auto& reg = arg2[183 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17743);
              reg = x17743;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":372:27)
            {
              auto& reg = arg2[183 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18809);
              reg = x18809;
            }
          }
        }
        if (x14016 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":375:31)
            {
              auto& reg = arg2[183 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17745);
              reg = x17745;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":376:27)
            {
              auto& reg = arg2[183 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18813);
              reg = x18813;
            }
          }
        }
        if (x14015 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":371:31)
            {
              auto& reg = arg2[184 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17809);
              reg = x17809;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":372:27)
            {
              auto& reg = arg2[184 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18799);
              reg = x18799;
            }
          }
        }
        if (x14016 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":375:31)
            {
              auto& reg = arg2[184 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17813);
              reg = x17813;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":376:27)
            {
              auto& reg = arg2[184 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18801);
              reg = x18801;
            }
          }
        }
        if (x14015 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":371:31)
            {
              auto& reg = arg2[185 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17872);
              reg = x17872;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":372:27)
            {
              auto& reg = arg2[185 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18785);
              reg = x18785;
            }
          }
        }
        if (x14016 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":375:31)
            {
              auto& reg = arg2[185 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17876);
              reg = x17876;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":376:27)
            {
              auto& reg = arg2[185 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18787);
              reg = x18787;
            }
          }
        }
        if (x14015 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":371:31)
            {
              auto& reg = arg2[186 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17934);
              reg = x17934;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":372:27)
            {
              auto& reg = arg2[186 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18770);
              reg = x18770;
            }
          }
        }
        if (x14016 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":375:31)
            {
              auto& reg = arg2[186 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17936);
              reg = x17936;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":376:27)
            {
              auto& reg = arg2[186 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18774);
              reg = x18774;
            }
          }
        }
        if (x14015 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":371:31)
            {
              auto& reg = arg2[187 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17992);
              reg = x17992;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":372:27)
            {
              auto& reg = arg2[187 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18754);
              reg = x18754;
            }
          }
        }
        if (x14016 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":375:31)
            {
              auto& reg = arg2[187 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17996);
              reg = x17996;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":376:27)
            {
              auto& reg = arg2[187 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18756);
              reg = x18756;
            }
          }
        }
        if (x14015 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":371:31)
            {
              auto& reg = arg2[188 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18049);
              reg = x18049;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":372:27)
            {
              auto& reg = arg2[188 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18734);
              reg = x18734;
            }
          }
        }
        if (x14016 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":375:31)
            {
              auto& reg = arg2[188 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18052);
              reg = x18052;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":376:27)
            {
              auto& reg = arg2[188 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18737);
              reg = x18737;
            }
          }
        }
        if (x14015 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":371:31)
            {
              auto& reg = arg2[189 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18105);
              reg = x18105;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":372:27)
            {
              auto& reg = arg2[189 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18713);
              reg = x18713;
            }
          }
        }
        if (x14016 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":375:31)
            {
              auto& reg = arg2[189 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18108);
              reg = x18108;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":376:27)
            {
              auto& reg = arg2[189 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18716);
              reg = x18716;
            }
          }
        }
        if (x14015 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":371:31)
            {
              auto& reg = arg2[190 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18157);
              reg = x18157;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":372:27)
            {
              auto& reg = arg2[190 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18691);
              reg = x18691;
            }
          }
        }
        if (x14016 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":375:31)
            {
              auto& reg = arg2[190 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18161);
              reg = x18161;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":376:27)
            {
              auto& reg = arg2[190 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18693);
              reg = x18693;
            }
          }
        }
        if (x14015 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":371:31)
            {
              auto& reg = arg2[191 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18208);
              reg = x18208;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":372:27)
            {
              auto& reg = arg2[191 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18665);
              reg = x18665;
            }
          }
        }
        if (x14016 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":375:31)
            {
              auto& reg = arg2[191 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18211);
              reg = x18211;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":376:27)
            {
              auto& reg = arg2[191 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18668);
              reg = x18668;
            }
          }
        }
        if (x14015 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":371:31)
            {
              auto& reg = arg2[192 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18258);
              reg = x18258;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":372:27)
            {
              auto& reg = arg2[192 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18638);
              reg = x18638;
            }
          }
        }
        if (x14016 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":375:31)
            {
              auto& reg = arg2[192 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18260);
              reg = x18260;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":376:27)
            {
              auto& reg = arg2[192 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18642);
              reg = x18642;
            }
          }
        }
        if (x14015 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":371:31)
            {
              auto& reg = arg2[193 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18304);
              reg = x18304;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":372:27)
            {
              auto& reg = arg2[193 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18610);
              reg = x18610;
            }
          }
        }
        if (x14016 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":375:31)
            {
              auto& reg = arg2[193 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18309);
              reg = x18309;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":376:27)
            {
              auto& reg = arg2[193 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18611);
              reg = x18611;
            }
          }
        }
        if (x14015 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":371:31)
            {
              auto& reg = arg2[194 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18349);
              reg = x18349;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":372:27)
            {
              auto& reg = arg2[194 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18578);
              reg = x18578;
            }
          }
        }
        if (x14016 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":375:31)
            {
              auto& reg = arg2[194 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18352);
              reg = x18352;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":376:27)
            {
              auto& reg = arg2[194 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18581);
              reg = x18581;
            }
          }
        }
        if (x14015 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":371:31)
            {
              auto& reg = arg2[195 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18393);
              reg = x18393;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":372:27)
            {
              auto& reg = arg2[195 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18545);
              reg = x18545;
            }
          }
        }
        if (x14016 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":375:31)
            {
              auto& reg = arg2[195 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18395);
              reg = x18395;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":376:27)
            {
              auto& reg = arg2[195 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18549);
              reg = x18549;
            }
          }
        }
        if (x14015 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":371:31)
            {
              auto& reg = arg2[196 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18433);
              reg = x18433;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":372:27)
            {
              auto& reg = arg2[196 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18511);
              reg = x18511;
            }
          }
        }
        if (x14016 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":375:31)
            {
              auto& reg = arg2[196 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18437);
              reg = x18437;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":376:27)
            {
              auto& reg = arg2[196 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18513);
              reg = x18513;
            }
          }
        }
        if (x14015 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":371:31)
            {
              auto& reg = arg2[197 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18472);
              reg = x18472;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":372:27)
            {
              auto& reg = arg2[197 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18473);
              reg = x18473;
            }
          }
        }
        if (x14016 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":375:31)
            {
              auto& reg = arg2[197 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18476);
              reg = x18476;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":376:27)
            {
              auto& reg = arg2[197 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18475);
              reg = x18475;
            }
          }
        }
        if (x14015 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":371:31)
            {
              auto& reg = arg2[198 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18510);
              reg = x18510;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":372:27)
            {
              auto& reg = arg2[198 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18434);
              reg = x18434;
            }
          }
        }
        if (x14016 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":375:31)
            {
              auto& reg = arg2[198 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18512);
              reg = x18512;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":376:27)
            {
              auto& reg = arg2[198 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18438);
              reg = x18438;
            }
          }
        }
        if (x14015 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":371:31)
            {
              auto& reg = arg2[199 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18544);
              reg = x18544;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":372:27)
            {
              auto& reg = arg2[199 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18394);
              reg = x18394;
            }
          }
        }
        if (x14016 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":375:31)
            {
              auto& reg = arg2[199 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18548);
              reg = x18548;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":376:27)
            {
              auto& reg = arg2[199 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18396);
              reg = x18396;
            }
          }
        }
        if (x14015 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":371:31)
            {
              auto& reg = arg2[200 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18577);
              reg = x18577;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":372:27)
            {
              auto& reg = arg2[200 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18350);
              reg = x18350;
            }
          }
        }
        if (x14016 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":375:31)
            {
              auto& reg = arg2[200 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18580);
              reg = x18580;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":376:27)
            {
              auto& reg = arg2[200 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18353);
              reg = x18353;
            }
          }
        }
        if (x14015 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":371:31)
            {
              auto& reg = arg2[201 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18609);
              reg = x18609;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":372:27)
            {
              auto& reg = arg2[201 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18305);
              reg = x18305;
            }
          }
        }
        if (x14016 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":375:31)
            {
              auto& reg = arg2[201 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18612);
              reg = x18612;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":376:27)
            {
              auto& reg = arg2[201 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18308);
              reg = x18308;
            }
          }
        }
        if (x14015 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":371:31)
            {
              auto& reg = arg2[202 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18637);
              reg = x18637;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":372:27)
            {
              auto& reg = arg2[202 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18259);
              reg = x18259;
            }
          }
        }
        if (x14016 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":375:31)
            {
              auto& reg = arg2[202 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18641);
              reg = x18641;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":376:27)
            {
              auto& reg = arg2[202 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18261);
              reg = x18261;
            }
          }
        }
        if (x14015 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":371:31)
            {
              auto& reg = arg2[203 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18664);
              reg = x18664;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":372:27)
            {
              auto& reg = arg2[203 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18209);
              reg = x18209;
            }
          }
        }
        if (x14016 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":375:31)
            {
              auto& reg = arg2[203 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18667);
              reg = x18667;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":376:27)
            {
              auto& reg = arg2[203 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18212);
              reg = x18212;
            }
          }
        }
        if (x14015 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":371:31)
            {
              auto& reg = arg2[204 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18690);
              reg = x18690;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":372:27)
            {
              auto& reg = arg2[204 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18158);
              reg = x18158;
            }
          }
        }
        if (x14016 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":375:31)
            {
              auto& reg = arg2[204 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18692);
              reg = x18692;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":376:27)
            {
              auto& reg = arg2[204 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18162);
              reg = x18162;
            }
          }
        }
        if (x14015 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":371:31)
            {
              auto& reg = arg2[205 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18712);
              reg = x18712;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":372:27)
            {
              auto& reg = arg2[205 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18106);
              reg = x18106;
            }
          }
        }
        if (x14016 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":375:31)
            {
              auto& reg = arg2[205 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18717);
              reg = x18717;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":376:27)
            {
              auto& reg = arg2[205 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18107);
              reg = x18107;
            }
          }
        }
        if (x14015 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":371:31)
            {
              auto& reg = arg2[206 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18733);
              reg = x18733;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":372:27)
            {
              auto& reg = arg2[206 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18050);
              reg = x18050;
            }
          }
        }
        if (x14016 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":375:31)
            {
              auto& reg = arg2[206 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18736);
              reg = x18736;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":376:27)
            {
              auto& reg = arg2[206 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18053);
              reg = x18053;
            }
          }
        }
        if (x14015 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":371:31)
            {
              auto& reg = arg2[207 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18753);
              reg = x18753;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":372:27)
            {
              auto& reg = arg2[207 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17993);
              reg = x17993;
            }
          }
        }
        if (x14016 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":375:31)
            {
              auto& reg = arg2[207 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18755);
              reg = x18755;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":376:27)
            {
              auto& reg = arg2[207 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17997);
              reg = x17997;
            }
          }
        }
        if (x14015 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":371:31)
            {
              auto& reg = arg2[208 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18769);
              reg = x18769;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":372:27)
            {
              auto& reg = arg2[208 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17935);
              reg = x17935;
            }
          }
        }
        if (x14016 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":375:31)
            {
              auto& reg = arg2[208 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18773);
              reg = x18773;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":376:27)
            {
              auto& reg = arg2[208 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17937);
              reg = x17937;
            }
          }
        }
        if (x14015 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":371:31)
            {
              auto& reg = arg2[209 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18784);
              reg = x18784;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":372:27)
            {
              auto& reg = arg2[209 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17873);
              reg = x17873;
            }
          }
        }
        if (x14016 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":375:31)
            {
              auto& reg = arg2[209 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18788);
              reg = x18788;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":376:27)
            {
              auto& reg = arg2[209 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17875);
              reg = x17875;
            }
          }
        }
        if (x14015 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":371:31)
            {
              auto& reg = arg2[210 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18798);
              reg = x18798;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":372:27)
            {
              auto& reg = arg2[210 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17810);
              reg = x17810;
            }
          }
        }
        if (x14016 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":375:31)
            {
              auto& reg = arg2[210 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18800);
              reg = x18800;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":376:27)
            {
              auto& reg = arg2[210 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17814);
              reg = x17814;
            }
          }
        }
        if (x14015 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":371:31)
            {
              auto& reg = arg2[211 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18808);
              reg = x18808;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":372:27)
            {
              auto& reg = arg2[211 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17744);
              reg = x17744;
            }
          }
        }
        if (x14016 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":375:31)
            {
              auto& reg = arg2[211 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18812);
              reg = x18812;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":376:27)
            {
              auto& reg = arg2[211 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17746);
              reg = x17746;
            }
          }
        }
        if (x14015 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":371:31)
            {
              auto& reg = arg2[212 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18817);
              reg = x18817;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":372:27)
            {
              auto& reg = arg2[212 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x16781);
              reg = x16781;
            }
          }
        }
        if (x14016 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":375:31)
            {
              auto& reg = arg2[212 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18820);
              reg = x18820;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":376:27)
            {
              auto& reg = arg2[212 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17748);
              reg = x17748;
            }
          }
        }
        if (x14015 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":371:31)
            {
              auto& reg = arg2[213 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18825);
              reg = x18825;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":372:27)
            {
              auto& reg = arg2[213 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x100);
              reg = x100;
            }
          }
        }
        if (x14016 != 0) {
          if (x14064 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":375:31)
            {
              auto& reg = arg2[213 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18826);
              reg = x18826;
            }
          }
          if (x14017 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":376:27)
            {
              auto& reg = arg2[213 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x100);
              reg = x100;
            }
          }
        }
      }
      if (x14021 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19432 = arg2[18 * steps + ((cycle - 0) & mask)];
        assert(x19432 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":384:24)
        {
          auto& reg = arg2[182 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19432);
          reg = x19432;
        }
      }
      if (x14022 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x19433 = arg2[121 * steps + ((cycle - 2) & mask)];
        assert(x19433 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":387:7)
        {
          auto& reg = arg2[182 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19433);
          reg = x19433;
        }
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":390:35)
      auto x19434 = x14021 + x14022;
      if (x19434 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x19435 = arg2[121 * steps + ((cycle - 0) & mask)];
        assert(x19435 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":391:7)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19435);
          reg = x19435;
        }
      }
      if (x14021 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19436 = arg2[19 * steps + ((cycle - 0) & mask)];
        assert(x19436 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":384:24)
        {
          auto& reg = arg2[183 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19436);
          reg = x19436;
        }
      }
      if (x14022 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x19437 = arg2[122 * steps + ((cycle - 2) & mask)];
        assert(x19437 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":387:7)
        {
          auto& reg = arg2[183 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19437);
          reg = x19437;
        }
      }
      if (x19434 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x19438 = arg2[122 * steps + ((cycle - 0) & mask)];
        assert(x19438 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":391:7)
        {
          auto& reg = arg2[199 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19438);
          reg = x19438;
        }
      }
      if (x14021 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19439 = arg2[20 * steps + ((cycle - 0) & mask)];
        assert(x19439 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":384:24)
        {
          auto& reg = arg2[184 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19439);
          reg = x19439;
        }
      }
      if (x14022 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x19440 = arg2[123 * steps + ((cycle - 2) & mask)];
        assert(x19440 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":387:7)
        {
          auto& reg = arg2[184 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19440);
          reg = x19440;
        }
      }
      if (x19434 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x19441 = arg2[123 * steps + ((cycle - 0) & mask)];
        assert(x19441 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":391:7)
        {
          auto& reg = arg2[200 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19441);
          reg = x19441;
        }
      }
      if (x14021 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19442 = arg2[21 * steps + ((cycle - 0) & mask)];
        assert(x19442 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":384:24)
        {
          auto& reg = arg2[185 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19442);
          reg = x19442;
        }
      }
      if (x14022 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x19443 = arg2[124 * steps + ((cycle - 2) & mask)];
        assert(x19443 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":387:7)
        {
          auto& reg = arg2[185 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19443);
          reg = x19443;
        }
      }
      if (x19434 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x19444 = arg2[124 * steps + ((cycle - 0) & mask)];
        assert(x19444 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":391:7)
        {
          auto& reg = arg2[201 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19444);
          reg = x19444;
        }
      }
      if (x14021 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19445 = arg2[22 * steps + ((cycle - 0) & mask)];
        assert(x19445 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":384:24)
        {
          auto& reg = arg2[186 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19445);
          reg = x19445;
        }
      }
      if (x14022 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x19446 = arg2[128 * steps + ((cycle - 2) & mask)];
        assert(x19446 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":387:7)
        {
          auto& reg = arg2[186 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19446);
          reg = x19446;
        }
      }
      if (x19434 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x19447 = arg2[128 * steps + ((cycle - 0) & mask)];
        assert(x19447 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":391:7)
        {
          auto& reg = arg2[202 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19447);
          reg = x19447;
        }
      }
      if (x14021 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19448 = arg2[23 * steps + ((cycle - 0) & mask)];
        assert(x19448 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":384:24)
        {
          auto& reg = arg2[187 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19448);
          reg = x19448;
        }
      }
      if (x14022 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x19449 = arg2[129 * steps + ((cycle - 2) & mask)];
        assert(x19449 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":387:7)
        {
          auto& reg = arg2[187 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19449);
          reg = x19449;
        }
      }
      if (x19434 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x19450 = arg2[129 * steps + ((cycle - 0) & mask)];
        assert(x19450 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":391:7)
        {
          auto& reg = arg2[203 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19450);
          reg = x19450;
        }
      }
      if (x14021 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19451 = arg2[24 * steps + ((cycle - 0) & mask)];
        assert(x19451 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":384:24)
        {
          auto& reg = arg2[188 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19451);
          reg = x19451;
        }
      }
      if (x14022 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x19452 = arg2[130 * steps + ((cycle - 2) & mask)];
        assert(x19452 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":387:7)
        {
          auto& reg = arg2[188 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19452);
          reg = x19452;
        }
      }
      if (x19434 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x19453 = arg2[130 * steps + ((cycle - 0) & mask)];
        assert(x19453 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":391:7)
        {
          auto& reg = arg2[204 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19453);
          reg = x19453;
        }
      }
      if (x14021 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19454 = arg2[25 * steps + ((cycle - 0) & mask)];
        assert(x19454 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":384:24)
        {
          auto& reg = arg2[189 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19454);
          reg = x19454;
        }
      }
      if (x14022 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x19455 = arg2[131 * steps + ((cycle - 2) & mask)];
        assert(x19455 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":387:7)
        {
          auto& reg = arg2[189 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19455);
          reg = x19455;
        }
      }
      if (x19434 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x19456 = arg2[131 * steps + ((cycle - 0) & mask)];
        assert(x19456 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":391:7)
        {
          auto& reg = arg2[205 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19456);
          reg = x19456;
        }
      }
      if (x14021 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19457 = arg2[26 * steps + ((cycle - 0) & mask)];
        assert(x19457 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":384:24)
        {
          auto& reg = arg2[190 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19457);
          reg = x19457;
        }
      }
      if (x14022 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x19458 = arg2[135 * steps + ((cycle - 2) & mask)];
        assert(x19458 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":387:7)
        {
          auto& reg = arg2[190 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19458);
          reg = x19458;
        }
      }
      if (x19434 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x19459 = arg2[135 * steps + ((cycle - 0) & mask)];
        assert(x19459 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":391:7)
        {
          auto& reg = arg2[206 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19459);
          reg = x19459;
        }
      }
      if (x14021 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19460 = arg2[27 * steps + ((cycle - 0) & mask)];
        assert(x19460 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":384:24)
        {
          auto& reg = arg2[191 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19460);
          reg = x19460;
        }
      }
      if (x14022 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x19461 = arg2[136 * steps + ((cycle - 2) & mask)];
        assert(x19461 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":387:7)
        {
          auto& reg = arg2[191 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19461);
          reg = x19461;
        }
      }
      if (x19434 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x19462 = arg2[136 * steps + ((cycle - 0) & mask)];
        assert(x19462 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":391:7)
        {
          auto& reg = arg2[207 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19462);
          reg = x19462;
        }
      }
      if (x14021 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19463 = arg2[28 * steps + ((cycle - 0) & mask)];
        assert(x19463 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":384:24)
        {
          auto& reg = arg2[192 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19463);
          reg = x19463;
        }
      }
      if (x14022 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x19464 = arg2[137 * steps + ((cycle - 2) & mask)];
        assert(x19464 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":387:7)
        {
          auto& reg = arg2[192 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19464);
          reg = x19464;
        }
      }
      if (x19434 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x19465 = arg2[137 * steps + ((cycle - 0) & mask)];
        assert(x19465 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":391:7)
        {
          auto& reg = arg2[208 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19465);
          reg = x19465;
        }
      }
      if (x14021 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19466 = arg2[29 * steps + ((cycle - 0) & mask)];
        assert(x19466 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":384:24)
        {
          auto& reg = arg2[193 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19466);
          reg = x19466;
        }
      }
      if (x14022 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x19467 = arg2[138 * steps + ((cycle - 2) & mask)];
        assert(x19467 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":387:7)
        {
          auto& reg = arg2[193 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19467);
          reg = x19467;
        }
      }
      if (x19434 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x19468 = arg2[138 * steps + ((cycle - 0) & mask)];
        assert(x19468 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":391:7)
        {
          auto& reg = arg2[209 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19468);
          reg = x19468;
        }
      }
      if (x14021 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19469 = arg2[30 * steps + ((cycle - 0) & mask)];
        assert(x19469 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":384:24)
        {
          auto& reg = arg2[194 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19469);
          reg = x19469;
        }
      }
      if (x14022 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x19470 = arg2[142 * steps + ((cycle - 2) & mask)];
        assert(x19470 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":387:7)
        {
          auto& reg = arg2[194 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19470);
          reg = x19470;
        }
      }
      if (x19434 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x19471 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x19471 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":391:7)
        {
          auto& reg = arg2[210 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19471);
          reg = x19471;
        }
      }
      if (x14021 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19472 = arg2[31 * steps + ((cycle - 0) & mask)];
        assert(x19472 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":384:24)
        {
          auto& reg = arg2[195 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19472);
          reg = x19472;
        }
      }
      if (x14022 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x19473 = arg2[143 * steps + ((cycle - 2) & mask)];
        assert(x19473 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":387:7)
        {
          auto& reg = arg2[195 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19473);
          reg = x19473;
        }
      }
      if (x19434 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x19474 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x19474 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":391:7)
        {
          auto& reg = arg2[211 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19474);
          reg = x19474;
        }
      }
      if (x14021 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19475 = arg2[32 * steps + ((cycle - 0) & mask)];
        assert(x19475 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":384:24)
        {
          auto& reg = arg2[196 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19475);
          reg = x19475;
        }
      }
      if (x14022 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x19476 = arg2[144 * steps + ((cycle - 2) & mask)];
        assert(x19476 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":387:7)
        {
          auto& reg = arg2[196 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19476);
          reg = x19476;
        }
      }
      if (x19434 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x19477 = arg2[144 * steps + ((cycle - 0) & mask)];
        assert(x19477 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":391:7)
        {
          auto& reg = arg2[212 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19477);
          reg = x19477;
        }
      }
      if (x14021 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19478 = arg2[33 * steps + ((cycle - 0) & mask)];
        assert(x19478 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":384:24)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19478);
          reg = x19478;
        }
      }
      if (x14022 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x19479 = arg2[145 * steps + ((cycle - 2) & mask)];
        assert(x19479 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":387:7)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19479);
          reg = x19479;
        }
      }
      if (x19434 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x19480 = arg2[145 * steps + ((cycle - 0) & mask)];
        assert(x19480 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":391:7)
        {
          auto& reg = arg2[213 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19480);
          reg = x19480;
        }
      }
      if (x14024 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19481 = arg2[182 * steps + ((cycle - 1) & mask)];
        assert(x19481 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19482 = arg2[18 * steps + ((cycle - 1) & mask)];
        assert(x19482 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19483 = arg2[18 * steps + ((cycle - 5) & mask)];
        assert(x19483 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19484 = arg2[19 * steps + ((cycle - 5) & mask)];
        assert(x19484 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":416:67)
        auto x19485 = x19484 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:63)
        auto x19486 = x19483 + x19485;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:16)
        auto x19487 = x19486 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19488 = x19487 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19489 = x19488 + x19482;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19490 = x19481 - x19489;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19490 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19491 = arg2[183 * steps + ((cycle - 1) & mask)];
        assert(x19491 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19492 = arg2[19 * steps + ((cycle - 1) & mask)];
        assert(x19492 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19493 = arg2[20 * steps + ((cycle - 5) & mask)];
        assert(x19493 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19494 = arg2[21 * steps + ((cycle - 5) & mask)];
        assert(x19494 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":416:67)
        auto x19495 = x19494 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19496 = x19491 + x19487;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:63)
        auto x19497 = x19493 + x19495;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:16)
        auto x19498 = x19497 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19499 = x19498 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19500 = x19499 + x19492;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19501 = x19496 - x19500;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19501 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19502 = arg2[184 * steps + ((cycle - 1) & mask)];
        assert(x19502 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19503 = arg2[20 * steps + ((cycle - 1) & mask)];
        assert(x19503 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19504 = arg2[22 * steps + ((cycle - 5) & mask)];
        assert(x19504 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19505 = arg2[23 * steps + ((cycle - 5) & mask)];
        assert(x19505 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":416:67)
        auto x19506 = x19505 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19507 = x19502 + x19498;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:63)
        auto x19508 = x19504 + x19506;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:16)
        auto x19509 = x19508 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19510 = x19509 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19511 = x19510 + x19503;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19512 = x19507 - x19511;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19512 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19513 = arg2[185 * steps + ((cycle - 1) & mask)];
        assert(x19513 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19514 = arg2[21 * steps + ((cycle - 1) & mask)];
        assert(x19514 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19515 = arg2[24 * steps + ((cycle - 5) & mask)];
        assert(x19515 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19516 = arg2[25 * steps + ((cycle - 5) & mask)];
        assert(x19516 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":416:67)
        auto x19517 = x19516 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19518 = x19513 + x19509;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:63)
        auto x19519 = x19515 + x19517;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:16)
        auto x19520 = x19519 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19521 = x19520 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19522 = x19521 + x19514;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19523 = x19518 - x19522;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19523 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19524 = arg2[186 * steps + ((cycle - 1) & mask)];
        assert(x19524 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19525 = arg2[22 * steps + ((cycle - 1) & mask)];
        assert(x19525 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19526 = arg2[26 * steps + ((cycle - 5) & mask)];
        assert(x19526 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19527 = arg2[27 * steps + ((cycle - 5) & mask)];
        assert(x19527 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":416:67)
        auto x19528 = x19527 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19529 = x19524 + x19520;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:63)
        auto x19530 = x19526 + x19528;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:16)
        auto x19531 = x19530 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19532 = x19531 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19533 = x19532 + x19525;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19534 = x19529 - x19533;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19534 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19535 = arg2[187 * steps + ((cycle - 1) & mask)];
        assert(x19535 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19536 = arg2[23 * steps + ((cycle - 1) & mask)];
        assert(x19536 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19537 = arg2[28 * steps + ((cycle - 5) & mask)];
        assert(x19537 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19538 = arg2[29 * steps + ((cycle - 5) & mask)];
        assert(x19538 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":416:67)
        auto x19539 = x19538 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19540 = x19535 + x19531;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:63)
        auto x19541 = x19537 + x19539;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:16)
        auto x19542 = x19541 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19543 = x19542 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19544 = x19543 + x19536;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19545 = x19540 - x19544;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19545 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19546 = arg2[188 * steps + ((cycle - 1) & mask)];
        assert(x19546 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19547 = arg2[24 * steps + ((cycle - 1) & mask)];
        assert(x19547 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19548 = arg2[30 * steps + ((cycle - 5) & mask)];
        assert(x19548 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19549 = arg2[31 * steps + ((cycle - 5) & mask)];
        assert(x19549 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":416:67)
        auto x19550 = x19549 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19551 = x19546 + x19542;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:63)
        auto x19552 = x19548 + x19550;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:16)
        auto x19553 = x19552 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19554 = x19553 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19555 = x19554 + x19547;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19556 = x19551 - x19555;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19556 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19557 = arg2[189 * steps + ((cycle - 1) & mask)];
        assert(x19557 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19558 = arg2[25 * steps + ((cycle - 1) & mask)];
        assert(x19558 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19559 = arg2[32 * steps + ((cycle - 5) & mask)];
        assert(x19559 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19560 = arg2[33 * steps + ((cycle - 5) & mask)];
        assert(x19560 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":416:67)
        auto x19561 = x19560 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19562 = x19557 + x19553;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:63)
        auto x19563 = x19559 + x19561;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:16)
        auto x19564 = x19563 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19565 = x19564 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19566 = x19565 + x19558;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19567 = x19562 - x19566;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19567 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19568 = arg2[190 * steps + ((cycle - 1) & mask)];
        assert(x19568 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19569 = arg2[26 * steps + ((cycle - 1) & mask)];
        assert(x19569 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19570 = arg2[18 * steps + ((cycle - 4) & mask)];
        assert(x19570 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19571 = arg2[19 * steps + ((cycle - 4) & mask)];
        assert(x19571 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":416:67)
        auto x19572 = x19571 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19573 = x19568 + x19564;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:63)
        auto x19574 = x19570 + x19572;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:16)
        auto x19575 = x19574 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19576 = x19575 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19577 = x19576 + x19569;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19578 = x19573 - x19577;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19578 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19579 = arg2[191 * steps + ((cycle - 1) & mask)];
        assert(x19579 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19580 = arg2[27 * steps + ((cycle - 1) & mask)];
        assert(x19580 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19581 = arg2[20 * steps + ((cycle - 4) & mask)];
        assert(x19581 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19582 = arg2[21 * steps + ((cycle - 4) & mask)];
        assert(x19582 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":416:67)
        auto x19583 = x19582 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19584 = x19579 + x19575;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:63)
        auto x19585 = x19581 + x19583;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:16)
        auto x19586 = x19585 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19587 = x19586 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19588 = x19587 + x19580;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19589 = x19584 - x19588;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19589 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19590 = arg2[192 * steps + ((cycle - 1) & mask)];
        assert(x19590 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19591 = arg2[28 * steps + ((cycle - 1) & mask)];
        assert(x19591 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19592 = arg2[22 * steps + ((cycle - 4) & mask)];
        assert(x19592 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19593 = arg2[23 * steps + ((cycle - 4) & mask)];
        assert(x19593 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":416:67)
        auto x19594 = x19593 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19595 = x19590 + x19586;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:63)
        auto x19596 = x19592 + x19594;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:16)
        auto x19597 = x19596 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19598 = x19597 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19599 = x19598 + x19591;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19600 = x19595 - x19599;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19600 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19601 = arg2[193 * steps + ((cycle - 1) & mask)];
        assert(x19601 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19602 = arg2[29 * steps + ((cycle - 1) & mask)];
        assert(x19602 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19603 = arg2[24 * steps + ((cycle - 4) & mask)];
        assert(x19603 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19604 = arg2[25 * steps + ((cycle - 4) & mask)];
        assert(x19604 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":416:67)
        auto x19605 = x19604 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19606 = x19601 + x19597;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:63)
        auto x19607 = x19603 + x19605;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:16)
        auto x19608 = x19607 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19609 = x19608 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19610 = x19609 + x19602;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19611 = x19606 - x19610;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19611 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19612 = arg2[194 * steps + ((cycle - 1) & mask)];
        assert(x19612 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19613 = arg2[30 * steps + ((cycle - 1) & mask)];
        assert(x19613 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19614 = arg2[26 * steps + ((cycle - 4) & mask)];
        assert(x19614 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19615 = arg2[27 * steps + ((cycle - 4) & mask)];
        assert(x19615 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":416:67)
        auto x19616 = x19615 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19617 = x19612 + x19608;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:63)
        auto x19618 = x19614 + x19616;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:16)
        auto x19619 = x19618 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19620 = x19619 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19621 = x19620 + x19613;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19622 = x19617 - x19621;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19622 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19623 = arg2[195 * steps + ((cycle - 1) & mask)];
        assert(x19623 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19624 = arg2[31 * steps + ((cycle - 1) & mask)];
        assert(x19624 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19625 = arg2[28 * steps + ((cycle - 4) & mask)];
        assert(x19625 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19626 = arg2[29 * steps + ((cycle - 4) & mask)];
        assert(x19626 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":416:67)
        auto x19627 = x19626 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19628 = x19623 + x19619;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:63)
        auto x19629 = x19625 + x19627;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:16)
        auto x19630 = x19629 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19631 = x19630 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19632 = x19631 + x19624;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19633 = x19628 - x19632;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19633 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19634 = arg2[196 * steps + ((cycle - 1) & mask)];
        assert(x19634 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19635 = arg2[32 * steps + ((cycle - 1) & mask)];
        assert(x19635 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19636 = arg2[30 * steps + ((cycle - 4) & mask)];
        assert(x19636 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19637 = arg2[31 * steps + ((cycle - 4) & mask)];
        assert(x19637 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":416:67)
        auto x19638 = x19637 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19639 = x19634 + x19630;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:63)
        auto x19640 = x19636 + x19638;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:16)
        auto x19641 = x19640 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19642 = x19641 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19643 = x19642 + x19635;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19644 = x19639 - x19643;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19644 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19645 = arg2[197 * steps + ((cycle - 1) & mask)];
        assert(x19645 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19646 = arg2[33 * steps + ((cycle - 1) & mask)];
        assert(x19646 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19647 = arg2[32 * steps + ((cycle - 4) & mask)];
        assert(x19647 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19648 = arg2[33 * steps + ((cycle - 4) & mask)];
        assert(x19648 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":416:67)
        auto x19649 = x19648 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19650 = x19645 + x19641;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:63)
        auto x19651 = x19647 + x19649;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:16)
        auto x19652 = x19651 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19653 = x19652 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19654 = x19653 + x19646;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19655 = x19650 - x19654;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19655 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19656 = arg2[18 * steps + ((cycle - 0) & mask)];
        assert(x19656 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19657 = arg2[198 * steps + ((cycle - 1) & mask)];
        assert(x19657 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19658 = arg2[18 * steps + ((cycle - 3) & mask)];
        assert(x19658 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19659 = arg2[19 * steps + ((cycle - 3) & mask)];
        assert(x19659 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":416:67)
        auto x19660 = x19659 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19661 = x19657 + x19652;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:63)
        auto x19662 = x19658 + x19660;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:16)
        auto x19663 = x19662 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19664 = x19663 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19665 = x19664 + x19656;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19666 = x19661 - x19665;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19666 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19667 = arg2[19 * steps + ((cycle - 0) & mask)];
        assert(x19667 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19668 = arg2[199 * steps + ((cycle - 1) & mask)];
        assert(x19668 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19669 = arg2[20 * steps + ((cycle - 3) & mask)];
        assert(x19669 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19670 = arg2[21 * steps + ((cycle - 3) & mask)];
        assert(x19670 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":416:67)
        auto x19671 = x19670 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19672 = x19668 + x19663;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:63)
        auto x19673 = x19669 + x19671;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:16)
        auto x19674 = x19673 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19675 = x19674 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19676 = x19675 + x19667;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19677 = x19672 - x19676;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19677 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19678 = arg2[20 * steps + ((cycle - 0) & mask)];
        assert(x19678 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19679 = arg2[200 * steps + ((cycle - 1) & mask)];
        assert(x19679 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19680 = arg2[22 * steps + ((cycle - 3) & mask)];
        assert(x19680 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19681 = arg2[23 * steps + ((cycle - 3) & mask)];
        assert(x19681 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":416:67)
        auto x19682 = x19681 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19683 = x19679 + x19674;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:63)
        auto x19684 = x19680 + x19682;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:16)
        auto x19685 = x19684 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19686 = x19685 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19687 = x19686 + x19678;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19688 = x19683 - x19687;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19688 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19689 = arg2[21 * steps + ((cycle - 0) & mask)];
        assert(x19689 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19690 = arg2[201 * steps + ((cycle - 1) & mask)];
        assert(x19690 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19691 = arg2[24 * steps + ((cycle - 3) & mask)];
        assert(x19691 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19692 = arg2[25 * steps + ((cycle - 3) & mask)];
        assert(x19692 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":416:67)
        auto x19693 = x19692 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19694 = x19690 + x19685;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:63)
        auto x19695 = x19691 + x19693;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:16)
        auto x19696 = x19695 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19697 = x19696 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19698 = x19697 + x19689;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19699 = x19694 - x19698;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19699 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19700 = arg2[22 * steps + ((cycle - 0) & mask)];
        assert(x19700 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19701 = arg2[202 * steps + ((cycle - 1) & mask)];
        assert(x19701 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19702 = arg2[26 * steps + ((cycle - 3) & mask)];
        assert(x19702 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19703 = arg2[27 * steps + ((cycle - 3) & mask)];
        assert(x19703 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":416:67)
        auto x19704 = x19703 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19705 = x19701 + x19696;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:63)
        auto x19706 = x19702 + x19704;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:16)
        auto x19707 = x19706 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19708 = x19707 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19709 = x19708 + x19700;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19710 = x19705 - x19709;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19710 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19711 = arg2[23 * steps + ((cycle - 0) & mask)];
        assert(x19711 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19712 = arg2[203 * steps + ((cycle - 1) & mask)];
        assert(x19712 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19713 = arg2[28 * steps + ((cycle - 3) & mask)];
        assert(x19713 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19714 = arg2[29 * steps + ((cycle - 3) & mask)];
        assert(x19714 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":416:67)
        auto x19715 = x19714 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19716 = x19712 + x19707;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:63)
        auto x19717 = x19713 + x19715;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:16)
        auto x19718 = x19717 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19719 = x19718 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19720 = x19719 + x19711;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19721 = x19716 - x19720;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19721 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19722 = arg2[24 * steps + ((cycle - 0) & mask)];
        assert(x19722 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19723 = arg2[204 * steps + ((cycle - 1) & mask)];
        assert(x19723 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19724 = arg2[30 * steps + ((cycle - 3) & mask)];
        assert(x19724 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19725 = arg2[31 * steps + ((cycle - 3) & mask)];
        assert(x19725 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":416:67)
        auto x19726 = x19725 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19727 = x19723 + x19718;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:63)
        auto x19728 = x19724 + x19726;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:16)
        auto x19729 = x19728 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19730 = x19729 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19731 = x19730 + x19722;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19732 = x19727 - x19731;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19732 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19733 = arg2[25 * steps + ((cycle - 0) & mask)];
        assert(x19733 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19734 = arg2[205 * steps + ((cycle - 1) & mask)];
        assert(x19734 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19735 = arg2[32 * steps + ((cycle - 3) & mask)];
        assert(x19735 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19736 = arg2[33 * steps + ((cycle - 3) & mask)];
        assert(x19736 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":416:67)
        auto x19737 = x19736 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19738 = x19734 + x19729;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:63)
        auto x19739 = x19735 + x19737;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:16)
        auto x19740 = x19739 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19741 = x19740 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19742 = x19741 + x19733;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19743 = x19738 - x19742;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19743 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19744 = arg2[26 * steps + ((cycle - 0) & mask)];
        assert(x19744 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19745 = arg2[206 * steps + ((cycle - 1) & mask)];
        assert(x19745 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19746 = arg2[18 * steps + ((cycle - 2) & mask)];
        assert(x19746 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19747 = arg2[19 * steps + ((cycle - 2) & mask)];
        assert(x19747 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":416:67)
        auto x19748 = x19747 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19749 = x19745 + x19740;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:63)
        auto x19750 = x19746 + x19748;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:16)
        auto x19751 = x19750 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19752 = x19751 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19753 = x19752 + x19744;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19754 = x19749 - x19753;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19754 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19755 = arg2[27 * steps + ((cycle - 0) & mask)];
        assert(x19755 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19756 = arg2[207 * steps + ((cycle - 1) & mask)];
        assert(x19756 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19757 = arg2[20 * steps + ((cycle - 2) & mask)];
        assert(x19757 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19758 = arg2[21 * steps + ((cycle - 2) & mask)];
        assert(x19758 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":416:67)
        auto x19759 = x19758 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19760 = x19756 + x19751;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:63)
        auto x19761 = x19757 + x19759;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:16)
        auto x19762 = x19761 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19763 = x19762 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19764 = x19763 + x19755;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19765 = x19760 - x19764;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19765 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19766 = arg2[28 * steps + ((cycle - 0) & mask)];
        assert(x19766 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19767 = arg2[208 * steps + ((cycle - 1) & mask)];
        assert(x19767 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19768 = arg2[22 * steps + ((cycle - 2) & mask)];
        assert(x19768 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19769 = arg2[23 * steps + ((cycle - 2) & mask)];
        assert(x19769 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":416:67)
        auto x19770 = x19769 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19771 = x19767 + x19762;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:63)
        auto x19772 = x19768 + x19770;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:16)
        auto x19773 = x19772 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19774 = x19773 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19775 = x19774 + x19766;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19776 = x19771 - x19775;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19776 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19777 = arg2[29 * steps + ((cycle - 0) & mask)];
        assert(x19777 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19778 = arg2[209 * steps + ((cycle - 1) & mask)];
        assert(x19778 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19779 = arg2[24 * steps + ((cycle - 2) & mask)];
        assert(x19779 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19780 = arg2[25 * steps + ((cycle - 2) & mask)];
        assert(x19780 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":416:67)
        auto x19781 = x19780 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19782 = x19778 + x19773;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:63)
        auto x19783 = x19779 + x19781;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:16)
        auto x19784 = x19783 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19785 = x19784 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19786 = x19785 + x19777;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19787 = x19782 - x19786;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19787 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19788 = arg2[30 * steps + ((cycle - 0) & mask)];
        assert(x19788 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19789 = arg2[210 * steps + ((cycle - 1) & mask)];
        assert(x19789 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19790 = arg2[26 * steps + ((cycle - 2) & mask)];
        assert(x19790 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19791 = arg2[27 * steps + ((cycle - 2) & mask)];
        assert(x19791 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":416:67)
        auto x19792 = x19791 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19793 = x19789 + x19784;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:63)
        auto x19794 = x19790 + x19792;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:16)
        auto x19795 = x19794 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19796 = x19795 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19797 = x19796 + x19788;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19798 = x19793 - x19797;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19798 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19799 = arg2[31 * steps + ((cycle - 0) & mask)];
        assert(x19799 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19800 = arg2[211 * steps + ((cycle - 1) & mask)];
        assert(x19800 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19801 = arg2[28 * steps + ((cycle - 2) & mask)];
        assert(x19801 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19802 = arg2[29 * steps + ((cycle - 2) & mask)];
        assert(x19802 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":416:67)
        auto x19803 = x19802 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19804 = x19800 + x19795;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:63)
        auto x19805 = x19801 + x19803;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:16)
        auto x19806 = x19805 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19807 = x19806 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19808 = x19807 + x19799;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19809 = x19804 - x19808;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19809 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19810 = arg2[32 * steps + ((cycle - 0) & mask)];
        assert(x19810 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19811 = arg2[212 * steps + ((cycle - 1) & mask)];
        assert(x19811 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19812 = arg2[30 * steps + ((cycle - 2) & mask)];
        assert(x19812 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19813 = arg2[31 * steps + ((cycle - 2) & mask)];
        assert(x19813 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":416:67)
        auto x19814 = x19813 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19815 = x19811 + x19806;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:63)
        auto x19816 = x19812 + x19814;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:16)
        auto x19817 = x19816 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19818 = x19817 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19819 = x19818 + x19810;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19820 = x19815 - x19819;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19820 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19821 = arg2[33 * steps + ((cycle - 0) & mask)];
        assert(x19821 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19822 = arg2[213 * steps + ((cycle - 1) & mask)];
        assert(x19822 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19823 = arg2[32 * steps + ((cycle - 2) & mask)];
        assert(x19823 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19824 = arg2[33 * steps + ((cycle - 2) & mask)];
        assert(x19824 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":416:67)
        auto x19825 = x19824 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19826 = x19822 + x19817;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:63)
        auto x19827 = x19823 + x19825;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:16)
        auto x19828 = x19827 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19829 = x19828 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19830 = x19829 + x19821;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19831 = x19826 - x19830;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19831 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19832 = arg2[182 * steps + ((cycle - 0) & mask)];
        assert(x19832 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":426:64))
        auto x19833 = arg2[214 * steps + ((cycle - 5) & mask)];
        assert(x19833 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19834 = x19833 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19835 = x19832 + x19828;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19836 = x19835 - x19834;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19836 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19837 = arg2[183 * steps + ((cycle - 0) & mask)];
        assert(x19837 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":426:64))
        auto x19838 = arg2[215 * steps + ((cycle - 5) & mask)];
        assert(x19838 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19839 = x19838 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19840 = x19837 + x19833;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19841 = x19840 - x19839;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19841 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19842 = arg2[184 * steps + ((cycle - 0) & mask)];
        assert(x19842 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":426:64))
        auto x19843 = arg2[216 * steps + ((cycle - 5) & mask)];
        assert(x19843 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19844 = x19843 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19845 = x19842 + x19838;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19846 = x19845 - x19844;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19846 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19847 = arg2[185 * steps + ((cycle - 0) & mask)];
        assert(x19847 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":426:64))
        auto x19848 = arg2[217 * steps + ((cycle - 5) & mask)];
        assert(x19848 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19849 = x19848 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19850 = x19847 + x19843;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19851 = x19850 - x19849;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19851 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19852 = arg2[186 * steps + ((cycle - 0) & mask)];
        assert(x19852 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":426:64))
        auto x19853 = arg2[218 * steps + ((cycle - 5) & mask)];
        assert(x19853 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19854 = x19853 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19855 = x19852 + x19848;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19856 = x19855 - x19854;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19856 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19857 = arg2[187 * steps + ((cycle - 0) & mask)];
        assert(x19857 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":426:64))
        auto x19858 = arg2[219 * steps + ((cycle - 5) & mask)];
        assert(x19858 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19859 = x19858 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19860 = x19857 + x19853;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19861 = x19860 - x19859;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19861 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19862 = arg2[188 * steps + ((cycle - 0) & mask)];
        assert(x19862 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":426:64))
        auto x19863 = arg2[220 * steps + ((cycle - 5) & mask)];
        assert(x19863 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19864 = x19863 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19865 = x19862 + x19858;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19866 = x19865 - x19864;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19866 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19867 = arg2[189 * steps + ((cycle - 0) & mask)];
        assert(x19867 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":426:64))
        auto x19868 = arg2[221 * steps + ((cycle - 5) & mask)];
        assert(x19868 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19869 = x19868 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19870 = x19867 + x19863;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19871 = x19870 - x19869;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19871 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19872 = arg2[190 * steps + ((cycle - 0) & mask)];
        assert(x19872 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":426:64))
        auto x19873 = arg2[214 * steps + ((cycle - 4) & mask)];
        assert(x19873 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19874 = x19873 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19875 = x19872 + x19868;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19876 = x19875 - x19874;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19876 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19877 = arg2[191 * steps + ((cycle - 0) & mask)];
        assert(x19877 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":426:64))
        auto x19878 = arg2[215 * steps + ((cycle - 4) & mask)];
        assert(x19878 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19879 = x19878 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19880 = x19877 + x19873;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19881 = x19880 - x19879;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19881 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19882 = arg2[192 * steps + ((cycle - 0) & mask)];
        assert(x19882 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":426:64))
        auto x19883 = arg2[216 * steps + ((cycle - 4) & mask)];
        assert(x19883 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19884 = x19883 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19885 = x19882 + x19878;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19886 = x19885 - x19884;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19886 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19887 = arg2[193 * steps + ((cycle - 0) & mask)];
        assert(x19887 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":426:64))
        auto x19888 = arg2[217 * steps + ((cycle - 4) & mask)];
        assert(x19888 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19889 = x19888 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19890 = x19887 + x19883;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19891 = x19890 - x19889;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19891 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19892 = arg2[194 * steps + ((cycle - 0) & mask)];
        assert(x19892 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":426:64))
        auto x19893 = arg2[218 * steps + ((cycle - 4) & mask)];
        assert(x19893 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19894 = x19893 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19895 = x19892 + x19888;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19896 = x19895 - x19894;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19896 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19897 = arg2[195 * steps + ((cycle - 0) & mask)];
        assert(x19897 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":426:64))
        auto x19898 = arg2[219 * steps + ((cycle - 4) & mask)];
        assert(x19898 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19899 = x19898 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19900 = x19897 + x19893;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19901 = x19900 - x19899;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19901 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19902 = arg2[196 * steps + ((cycle - 0) & mask)];
        assert(x19902 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":426:64))
        auto x19903 = arg2[220 * steps + ((cycle - 4) & mask)];
        assert(x19903 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19904 = x19903 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19905 = x19902 + x19898;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19906 = x19905 - x19904;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19906 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19907 = arg2[197 * steps + ((cycle - 0) & mask)];
        assert(x19907 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":426:64))
        auto x19908 = arg2[221 * steps + ((cycle - 4) & mask)];
        assert(x19908 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19909 = x19908 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19910 = x19907 + x19903;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19911 = x19910 - x19909;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19911 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19912 = arg2[198 * steps + ((cycle - 0) & mask)];
        assert(x19912 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":426:64))
        auto x19913 = arg2[214 * steps + ((cycle - 3) & mask)];
        assert(x19913 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19914 = x19913 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19915 = x19912 + x19908;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19916 = x19915 - x19914;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19916 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19917 = arg2[199 * steps + ((cycle - 0) & mask)];
        assert(x19917 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":426:64))
        auto x19918 = arg2[215 * steps + ((cycle - 3) & mask)];
        assert(x19918 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19919 = x19918 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19920 = x19917 + x19913;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19921 = x19920 - x19919;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19921 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19922 = arg2[200 * steps + ((cycle - 0) & mask)];
        assert(x19922 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":426:64))
        auto x19923 = arg2[216 * steps + ((cycle - 3) & mask)];
        assert(x19923 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19924 = x19923 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19925 = x19922 + x19918;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19926 = x19925 - x19924;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19926 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19927 = arg2[201 * steps + ((cycle - 0) & mask)];
        assert(x19927 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":426:64))
        auto x19928 = arg2[217 * steps + ((cycle - 3) & mask)];
        assert(x19928 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19929 = x19928 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19930 = x19927 + x19923;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19931 = x19930 - x19929;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19931 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19932 = arg2[202 * steps + ((cycle - 0) & mask)];
        assert(x19932 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":426:64))
        auto x19933 = arg2[218 * steps + ((cycle - 3) & mask)];
        assert(x19933 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19934 = x19933 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19935 = x19932 + x19928;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19936 = x19935 - x19934;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19936 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19937 = arg2[203 * steps + ((cycle - 0) & mask)];
        assert(x19937 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":426:64))
        auto x19938 = arg2[219 * steps + ((cycle - 3) & mask)];
        assert(x19938 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19939 = x19938 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19940 = x19937 + x19933;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19941 = x19940 - x19939;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19941 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19942 = arg2[204 * steps + ((cycle - 0) & mask)];
        assert(x19942 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":426:64))
        auto x19943 = arg2[220 * steps + ((cycle - 3) & mask)];
        assert(x19943 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19944 = x19943 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19945 = x19942 + x19938;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19946 = x19945 - x19944;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19946 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19947 = arg2[205 * steps + ((cycle - 0) & mask)];
        assert(x19947 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":426:64))
        auto x19948 = arg2[221 * steps + ((cycle - 3) & mask)];
        assert(x19948 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19949 = x19948 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19950 = x19947 + x19943;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19951 = x19950 - x19949;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19951 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19952 = arg2[206 * steps + ((cycle - 0) & mask)];
        assert(x19952 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":426:64))
        auto x19953 = arg2[214 * steps + ((cycle - 2) & mask)];
        assert(x19953 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19954 = x19953 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19955 = x19952 + x19948;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19956 = x19955 - x19954;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19956 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19957 = arg2[207 * steps + ((cycle - 0) & mask)];
        assert(x19957 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":426:64))
        auto x19958 = arg2[215 * steps + ((cycle - 2) & mask)];
        assert(x19958 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19959 = x19958 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19960 = x19957 + x19953;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19961 = x19960 - x19959;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19961 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19962 = arg2[208 * steps + ((cycle - 0) & mask)];
        assert(x19962 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":426:64))
        auto x19963 = arg2[216 * steps + ((cycle - 2) & mask)];
        assert(x19963 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19964 = x19963 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19965 = x19962 + x19958;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19966 = x19965 - x19964;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19966 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19967 = arg2[209 * steps + ((cycle - 0) & mask)];
        assert(x19967 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":426:64))
        auto x19968 = arg2[217 * steps + ((cycle - 2) & mask)];
        assert(x19968 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19969 = x19968 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19970 = x19967 + x19963;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19971 = x19970 - x19969;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19971 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19972 = arg2[210 * steps + ((cycle - 0) & mask)];
        assert(x19972 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":426:64))
        auto x19973 = arg2[218 * steps + ((cycle - 2) & mask)];
        assert(x19973 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19974 = x19973 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19975 = x19972 + x19968;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19976 = x19975 - x19974;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19976 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19977 = arg2[211 * steps + ((cycle - 0) & mask)];
        assert(x19977 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":426:64))
        auto x19978 = arg2[219 * steps + ((cycle - 2) & mask)];
        assert(x19978 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:26)
        auto x19979 = x19978 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19980 = x19977 + x19973;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19981 = x19980 - x19979;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19981 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":436:66))
        auto x19982 = arg2[212 * steps + ((cycle - 0) & mask)];
        assert(x19982 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        auto x19983 = x19982 + x19978;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":439:10)
        assert(x19983 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:439");
      }
      if (x14016 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x19984 = arg2[173 * steps + ((cycle - 0) & mask)];
        assert(x19984 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19985 = arg2[18 * steps + ((cycle - 0) & mask)];
        assert(x19985 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19986 = arg2[19 * steps + ((cycle - 0) & mask)];
        assert(x19986 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19987 = arg2[20 * steps + ((cycle - 0) & mask)];
        assert(x19987 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19988 = arg2[21 * steps + ((cycle - 0) & mask)];
        assert(x19988 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":449:34)
        auto x19989 = x14017 * x83;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":449:25)
        auto x19990 = x19984 + x19989;
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19985);
          reg = x19985;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19986);
          reg = x19986;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[123 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19987);
          reg = x19987;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[124 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19988);
          reg = x19988;
        }
        {
          extern_args[0] = x19990;
          extern_args[1] = x19985;
          extern_args[2] = x19986;
          extern_args[3] = x19987;
          extern_args[4] = x19988;
          extern_args[5] = x98;
          extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x19991 = arg2[121 * steps + ((cycle - 0) & mask)];
        assert(x19991 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x19992 = arg2[122 * steps + ((cycle - 0) & mask)];
        assert(x19992 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x19993 = arg2[123 * steps + ((cycle - 0) & mask)];
        assert(x19993 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x19994 = arg2[124 * steps + ((cycle - 0) & mask)];
        assert(x19994 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[118 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19990);
          reg = x19990;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[119 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x966);
          reg = x966;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[120 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x98);
          reg = x98;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19991);
          reg = x19991;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19992);
          reg = x19992;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[123 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19993);
          reg = x19993;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[124 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19994);
          reg = x19994;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19995 = arg2[22 * steps + ((cycle - 0) & mask)];
        assert(x19995 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19996 = arg2[23 * steps + ((cycle - 0) & mask)];
        assert(x19996 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19997 = arg2[24 * steps + ((cycle - 0) & mask)];
        assert(x19997 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x19998 = arg2[25 * steps + ((cycle - 0) & mask)];
        assert(x19998 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":449:25)
        auto x19999 = x19990 + x101;
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[128 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19995);
          reg = x19995;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[129 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19996);
          reg = x19996;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[130 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19997);
          reg = x19997;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[131 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19998);
          reg = x19998;
        }
        {
          extern_args[0] = x19999;
          extern_args[1] = x19995;
          extern_args[2] = x19996;
          extern_args[3] = x19997;
          extern_args[4] = x19998;
          extern_args[5] = x98;
          extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20000 = arg2[128 * steps + ((cycle - 0) & mask)];
        assert(x20000 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20001 = arg2[129 * steps + ((cycle - 0) & mask)];
        assert(x20001 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20002 = arg2[130 * steps + ((cycle - 0) & mask)];
        assert(x20002 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20003 = arg2[131 * steps + ((cycle - 0) & mask)];
        assert(x20003 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[125 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19999);
          reg = x19999;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[126 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x966);
          reg = x966;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[127 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x98);
          reg = x98;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[128 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20000);
          reg = x20000;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[129 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20001);
          reg = x20001;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[130 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20002);
          reg = x20002;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[131 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20003);
          reg = x20003;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x20004 = arg2[26 * steps + ((cycle - 0) & mask)];
        assert(x20004 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x20005 = arg2[27 * steps + ((cycle - 0) & mask)];
        assert(x20005 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x20006 = arg2[28 * steps + ((cycle - 0) & mask)];
        assert(x20006 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x20007 = arg2[29 * steps + ((cycle - 0) & mask)];
        assert(x20007 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":449:25)
        auto x20008 = x19990 + x98;
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20004);
          reg = x20004;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20005);
          reg = x20005;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[137 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20006);
          reg = x20006;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[138 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20007);
          reg = x20007;
        }
        {
          extern_args[0] = x20008;
          extern_args[1] = x20004;
          extern_args[2] = x20005;
          extern_args[3] = x20006;
          extern_args[4] = x20007;
          extern_args[5] = x98;
          extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20009 = arg2[135 * steps + ((cycle - 0) & mask)];
        assert(x20009 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20010 = arg2[136 * steps + ((cycle - 0) & mask)];
        assert(x20010 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20011 = arg2[137 * steps + ((cycle - 0) & mask)];
        assert(x20011 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20012 = arg2[138 * steps + ((cycle - 0) & mask)];
        assert(x20012 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[132 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20008);
          reg = x20008;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[133 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x966);
          reg = x966;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[134 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x98);
          reg = x98;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20009);
          reg = x20009;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20010);
          reg = x20010;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[137 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20011);
          reg = x20011;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[138 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20012);
          reg = x20012;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x20013 = arg2[30 * steps + ((cycle - 0) & mask)];
        assert(x20013 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x20014 = arg2[31 * steps + ((cycle - 0) & mask)];
        assert(x20014 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x20015 = arg2[32 * steps + ((cycle - 0) & mask)];
        assert(x20015 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x20016 = arg2[33 * steps + ((cycle - 0) & mask)];
        assert(x20016 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":449:25)
        auto x20017 = x19990 + x81;
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20013);
          reg = x20013;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20014);
          reg = x20014;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[144 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20015);
          reg = x20015;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[145 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20016);
          reg = x20016;
        }
        {
          extern_args[0] = x20017;
          extern_args[1] = x20013;
          extern_args[2] = x20014;
          extern_args[3] = x20015;
          extern_args[4] = x20016;
          extern_args[5] = x98;
          extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20018 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x20018 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20019 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x20019 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20020 = arg2[144 * steps + ((cycle - 0) & mask)];
        assert(x20020 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20021 = arg2[145 * steps + ((cycle - 0) & mask)];
        assert(x20021 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[139 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20017);
          reg = x20017;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x966);
          reg = x966;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x98);
          reg = x98;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20018);
          reg = x20018;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20019);
          reg = x20019;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[144 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20020);
          reg = x20020;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[145 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20021);
          reg = x20021;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":456:10)
        auto x20022 = x19984 * x83;
        // loc("./zirgen/components/u32.h":35:12)
        auto x20023 = x19992 * x95;
        // loc("./zirgen/components/u32.h":36:12)
        auto x20024 = x19993 * x82;
        // loc("./zirgen/components/u32.h":37:12)
        auto x20025 = x19994 * x84;
        // loc("./zirgen/components/u32.h":35:12)
        auto x20026 = x20001 * x95;
        // loc("./zirgen/components/u32.h":36:12)
        auto x20027 = x20002 * x82;
        // loc("./zirgen/components/u32.h":37:12)
        auto x20028 = x20003 * x84;
        // loc("./zirgen/components/u32.h":35:12)
        auto x20029 = x20010 * x95;
        // loc("./zirgen/components/u32.h":36:12)
        auto x20030 = x20011 * x82;
        // loc("./zirgen/components/u32.h":37:12)
        auto x20031 = x20012 * x84;
        // loc("./zirgen/components/u32.h":35:12)
        auto x20032 = x20019 * x95;
        // loc("./zirgen/components/u32.h":36:12)
        auto x20033 = x20020 * x82;
        // loc("./zirgen/components/u32.h":37:12)
        auto x20034 = x20021 * x84;
        // loc("./zirgen/components/u32.h":34:12)
        auto x20035 = x19991 + x20023;
        // loc("./zirgen/components/u32.h":34:12)
        auto x20036 = x20000 + x20026;
        // loc("./zirgen/components/u32.h":34:12)
        auto x20037 = x20009 + x20029;
        // loc("./zirgen/components/u32.h":34:12)
        auto x20038 = x20018 + x20032;
        // loc("./zirgen/components/u32.h":34:12)
        auto x20039 = x20035 + x20024;
        // loc("./zirgen/components/u32.h":34:12)
        auto x20040 = x20036 + x20027;
        // loc("./zirgen/components/u32.h":34:12)
        auto x20041 = x20037 + x20030;
        // loc("./zirgen/components/u32.h":34:12)
        auto x20042 = x20038 + x20033;
        // loc("./zirgen/components/u32.h":34:12)
        auto x20043 = x20039 + x20025;
        // loc("./zirgen/components/u32.h":34:12)
        auto x20044 = x20040 + x20028;
        // loc("./zirgen/components/u32.h":34:12)
        auto x20045 = x20041 + x20031;
        // loc("./zirgen/components/u32.h":34:12)
        auto x20046 = x20042 + x20034;
        extern_args[0] = x20022;
        extern_args[1] = x20043;
        extern_args[2] = x20044;
        extern_args[3] = x20045;
        extern_args[4] = x20046;
        extern_log(ctx, cycle, "  Writing: ioAddr = 0x%x, data = { %u, %u, %u, %u }", extern_args, extern_outs);
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":464:18)
      auto x20047 = x101 - x14024;
      if (x20047 != 0) {
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":34:23)
        auto x20048 = x980 + x83;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x20049 = Fp(x20048.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20049);
            reg = x20049;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x20050 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x20050 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x20051 = x20048 - x20050;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x20052 = x20051 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x20053 = Fp(x20052.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20053);
            reg = x20053;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x20054 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x20054 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x20055 = x20052 - x20054;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x20056 = x20055 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x20057 = Fp(x20056.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20057);
            reg = x20057;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x20058 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x20058 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x20059 = x20056 - x20058;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x20060 = x20059 * x96;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":37:26)
          auto x20061 = Fp(x20060.asUInt32() & x81.asUInt32());
          // loc("./zirgen/components/bits.h":78:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20061);
            reg = x20061;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[0](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20062 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x20062 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:18)
        auto x20063 = x20060 - x20062;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:17)
        auto x20064 = x20063 * x80;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20064);
          reg = x20064;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20065 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x20065 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:23)
        auto x20066 = x101 - x20065;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:15)
        auto x20067 = x20065 * x20066;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20067);
          reg = x20067;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:17)
        auto x20068 = x98 - x20065;
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x20069 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x20069 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        auto x20070 = x20069 * x20068;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        assert(x20070 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:43");
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":466:5)
        {
          auto& reg = arg2[100 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x74);
          reg = x74;
        }
      }
      if (x14024 != 0) {
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":469:19)
        auto x20071 = x980 + x83;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":34:23)
        auto x20072 = x20071 + x83;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x20073 = Fp(x20072.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20073);
            reg = x20073;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x20074 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x20074 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x20075 = x20072 - x20074;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x20076 = x20075 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x20077 = Fp(x20076.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20077);
            reg = x20077;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x20078 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x20078 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x20079 = x20076 - x20078;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x20080 = x20079 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x20081 = Fp(x20080.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20081);
            reg = x20081;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x20082 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x20082 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x20083 = x20080 - x20082;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x20084 = x20083 * x96;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":37:26)
          auto x20085 = Fp(x20084.asUInt32() & x81.asUInt32());
          // loc("./zirgen/components/bits.h":78:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20085);
            reg = x20085;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[0](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20086 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x20086 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:18)
        auto x20087 = x20084 - x20086;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:17)
        auto x20088 = x20087 * x80;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20088);
          reg = x20088;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20089 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x20089 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:23)
        auto x20090 = x101 - x20089;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:15)
        auto x20091 = x20089 * x20090;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20091);
          reg = x20091;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:17)
        auto x20092 = x98 - x20089;
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x20093 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x20093 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        auto x20094 = x20093 * x20092;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        assert(x20094 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:43");
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":470:5)
        {
          auto& reg = arg2[100 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x66);
          reg = x66;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/user_mode(Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20095 = arg2[99 * steps + ((cycle - 0) & mask)];
      assert(x20095 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20096 = arg2[71 * steps + ((cycle - 0) & mask)];
      assert(x20096 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":60:7)
      auto x20097 = x20095 * x20096;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":60:26)
      auto x20098 = x101 - x20096;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":60:7)
      auto x20099 = x20097 * x20098;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":60:7)
      assert(x20099 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:60");
    }
    // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[15](Reg)"("./zirgen/components/mux.h":59:25))
    auto x20100 = arg2[116 * steps + ((cycle - 0) & mask)];
    assert(x20100 != Fp::invalid());
    if (x20100 != 0) {
      // loc("Top/mux(Mux)/body(BodyStep)/user_mode(Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20101 = arg2[99 * steps + ((cycle - 1) & mask)];
      assert(x20101 != Fp::invalid());
      // loc("./zirgen/components/bits.h":37:23)
      {
        auto& reg = arg2[99 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x20101);
        reg = x20101;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/next_major(Reg)"("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":49:37))
      auto x20102 = arg2[100 * steps + ((cycle - 1) & mask)];
      assert(x20102 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":49:37)
      auto x20103 = x20102 - x73;
      // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":49:37)
      assert(x20103 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint2.cpp:49");
      // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[8](Reg)"("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":52:70))
      auto x20104 = arg2[109 * steps + ((cycle - 1) & mask)];
      assert(x20104 != Fp::invalid());
      if (x20104 != 0) {
        {
          extern_syscallBigInt2Precompute(ctx, cycle, "", extern_args, extern_outs);
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20105 = arg2[135 * steps + ((cycle - 1) & mask)];
        assert(x20105 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20106 = arg2[136 * steps + ((cycle - 1) & mask)];
        assert(x20106 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20107 = arg2[137 * steps + ((cycle - 1) & mask)];
        assert(x20107 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20108 = arg2[138 * steps + ((cycle - 1) & mask)];
        assert(x20108 != Fp::invalid());
        // loc("./zirgen/components/u32.h":35:12)
        auto x20109 = x20106 * x95;
        // loc("./zirgen/components/u32.h":36:12)
        auto x20110 = x20107 * x82;
        // loc("./zirgen/components/u32.h":37:12)
        auto x20111 = x20108 * x84;
        // loc("./zirgen/components/u32.h":34:12)
        auto x20112 = x20105 + x20109;
        // loc("./zirgen/components/u32.h":34:12)
        auto x20113 = x20112 + x20110;
        // loc("./zirgen/components/u32.h":34:12)
        auto x20114 = x20113 + x20111;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":59:74)
        auto x20115 = x20114 * x80;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":59:74)
        auto x20116 = x20115 - x101;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":59:5)
        {
          auto& reg = arg2[217 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20116);
          reg = x20116;
        }
        // loc("zirgen/components/ram.cpp":53:3)
        {
          auto& reg = arg2[118 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/ram.cpp":54:3)
        {
          auto& reg = arg2[119 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/ram.cpp":55:3)
        {
          auto& reg = arg2[120 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[123 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[124 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        {
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[205 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[206 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[207 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[208 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[209 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[210 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[211 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/OneHot/hot[1](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x20117 = arg2[206 * steps + ((cycle - 0) & mask)];
        assert(x20117 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/OneHot/hot[2](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x20118 = arg2[207 * steps + ((cycle - 0) & mask)];
        assert(x20118 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/OneHot/hot[3](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x20119 = arg2[208 * steps + ((cycle - 0) & mask)];
        assert(x20119 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/OneHot/hot[4](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x20120 = arg2[209 * steps + ((cycle - 0) & mask)];
        assert(x20120 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/OneHot/hot[5](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x20121 = arg2[210 * steps + ((cycle - 0) & mask)];
        assert(x20121 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/OneHot/hot[6](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x20122 = arg2[211 * steps + ((cycle - 0) & mask)];
        assert(x20122 != Fp::invalid());
        // loc("./zirgen/components/onehot.h":56:19)
        auto x20123 = x20118 * x98;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x20124 = x20119 * x81;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x20125 = x20120 * x83;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x20126 = x20121 * x71;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x20127 = x20122 * x70;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x20128 = x20117 + x20123;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x20129 = x20128 + x20124;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x20130 = x20129 + x20125;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x20131 = x20130 + x20126;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x20132 = x20131 + x20127;
        // loc("./zirgen/components/onehot.h":50:8)
        assert(x20132 == 0 && "eqz failed at: ./zirgen/components/onehot.h:50");
        {
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[212 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[213 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/onehot.h":47:9)
          {
            auto& reg = arg2[214 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/OneHot/hot[1](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x20133 = arg2[213 * steps + ((cycle - 0) & mask)];
        assert(x20133 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/OneHot/hot[2](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x20134 = arg2[214 * steps + ((cycle - 0) & mask)];
        assert(x20134 != Fp::invalid());
        // loc("./zirgen/components/onehot.h":56:19)
        auto x20135 = x20134 * x98;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x20136 = x20133 + x20135;
        // loc("./zirgen/components/onehot.h":50:8)
        auto x20137 = x20136 - x98;
        // loc("./zirgen/components/onehot.h":50:8)
        assert(x20137 == 0 && "eqz failed at: ./zirgen/components/onehot.h:50");
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[218 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[219 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[220 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[221 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[222 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[223 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[224 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":37:23)
        {
          auto& reg = arg2[225 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":69:5)
        {
          auto& reg = arg2[216 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":71:22)
      auto x20138 = x101 - x20104;
      if (x20138 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":73:50))
        auto x20139 = arg2[217 * steps + ((cycle - 1) & mask)];
        assert(x20139 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":73:50)
        auto x20140 = x20139 + x101;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":73:5)
        {
          auto& reg = arg2[217 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20140);
          reg = x20140;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/Reg"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20141 = arg2[217 * steps + ((cycle - 0) & mask)];
        assert(x20141 != Fp::invalid());
        {
          extern_args[0] = x20141;
          extern_args[1] = x101;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x20142 = extern_outs[0];
          auto x20143 = extern_outs[1];
          auto x20144 = extern_outs[2];
          auto x20145 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[121 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20142);
            reg = x20142;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[122 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20143);
            reg = x20143;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[123 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20144);
            reg = x20144;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[124 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20145);
            reg = x20145;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20146 = arg2[121 * steps + ((cycle - 0) & mask)];
        assert(x20146 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20147 = arg2[122 * steps + ((cycle - 0) & mask)];
        assert(x20147 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20148 = arg2[123 * steps + ((cycle - 0) & mask)];
        assert(x20148 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20149 = arg2[124 * steps + ((cycle - 0) & mask)];
        assert(x20149 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[118 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20141);
          reg = x20141;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[119 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x966);
          reg = x966;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[120 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20146);
          reg = x20146;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20147);
          reg = x20147;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[123 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20148);
          reg = x20148;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[124 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20149);
          reg = x20149;
        }
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":78:19)
          auto x20150 = Fp(x20149.asUInt32() & x73.asUInt32());
          {
            // loc("./zirgen/components/onehot.h":47:26)
            auto x20151 = (x20150 == 0) ? Fp(1) : Fp(0);
            // loc("./zirgen/components/onehot.h":47:9)
            {
              auto& reg = arg2[205 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x20151);
              reg = x20151;
            }
            // loc("./zirgen/components/onehot.h":47:26)
            auto x20152 = x20150 - x101;
            // loc("./zirgen/components/onehot.h":47:26)
            auto x20153 = (x20152 == 0) ? Fp(1) : Fp(0);
            // loc("./zirgen/components/onehot.h":47:9)
            {
              auto& reg = arg2[206 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x20153);
              reg = x20153;
            }
            // loc("./zirgen/components/onehot.h":47:26)
            auto x20154 = x20150 - x98;
            // loc("./zirgen/components/onehot.h":47:26)
            auto x20155 = (x20154 == 0) ? Fp(1) : Fp(0);
            // loc("./zirgen/components/onehot.h":47:9)
            {
              auto& reg = arg2[207 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x20155);
              reg = x20155;
            }
            // loc("./zirgen/components/onehot.h":47:26)
            auto x20156 = x20150 - x81;
            // loc("./zirgen/components/onehot.h":47:26)
            auto x20157 = (x20156 == 0) ? Fp(1) : Fp(0);
            // loc("./zirgen/components/onehot.h":47:9)
            {
              auto& reg = arg2[208 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x20157);
              reg = x20157;
            }
            // loc("./zirgen/components/onehot.h":47:26)
            auto x20158 = x20150 - x83;
            // loc("./zirgen/components/onehot.h":47:26)
            auto x20159 = (x20158 == 0) ? Fp(1) : Fp(0);
            // loc("./zirgen/components/onehot.h":47:9)
            {
              auto& reg = arg2[209 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x20159);
              reg = x20159;
            }
            // loc("./zirgen/components/onehot.h":47:26)
            auto x20160 = x20150 - x71;
            // loc("./zirgen/components/onehot.h":47:26)
            auto x20161 = (x20160 == 0) ? Fp(1) : Fp(0);
            // loc("./zirgen/components/onehot.h":47:9)
            {
              auto& reg = arg2[210 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x20161);
              reg = x20161;
            }
            // loc("./zirgen/components/onehot.h":47:26)
            auto x20162 = x20150 - x70;
            // loc("./zirgen/components/onehot.h":47:26)
            auto x20163 = (x20162 == 0) ? Fp(1) : Fp(0);
            // loc("./zirgen/components/onehot.h":47:9)
            {
              auto& reg = arg2[211 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x20163);
              reg = x20163;
            }
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/OneHot/hot[1](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
          auto x20164 = arg2[206 * steps + ((cycle - 0) & mask)];
          assert(x20164 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/OneHot/hot[2](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
          auto x20165 = arg2[207 * steps + ((cycle - 0) & mask)];
          assert(x20165 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/OneHot/hot[3](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
          auto x20166 = arg2[208 * steps + ((cycle - 0) & mask)];
          assert(x20166 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/OneHot/hot[4](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
          auto x20167 = arg2[209 * steps + ((cycle - 0) & mask)];
          assert(x20167 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/OneHot/hot[5](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
          auto x20168 = arg2[210 * steps + ((cycle - 0) & mask)];
          assert(x20168 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/OneHot/hot[6](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
          auto x20169 = arg2[211 * steps + ((cycle - 0) & mask)];
          assert(x20169 != Fp::invalid());
          // loc("./zirgen/components/onehot.h":56:19)
          auto x20170 = x20165 * x98;
          // loc("./zirgen/components/onehot.h":56:19)
          auto x20171 = x20166 * x81;
          // loc("./zirgen/components/onehot.h":56:19)
          auto x20172 = x20167 * x83;
          // loc("./zirgen/components/onehot.h":56:19)
          auto x20173 = x20168 * x71;
          // loc("./zirgen/components/onehot.h":56:19)
          auto x20174 = x20169 * x70;
          // loc("./zirgen/components/onehot.h":56:13)
          auto x20175 = x20164 + x20170;
          // loc("./zirgen/components/onehot.h":56:13)
          auto x20176 = x20175 + x20171;
          // loc("./zirgen/components/onehot.h":56:13)
          auto x20177 = x20176 + x20172;
          // loc("./zirgen/components/onehot.h":56:13)
          auto x20178 = x20177 + x20173;
          // loc("./zirgen/components/onehot.h":56:13)
          auto x20179 = x20178 + x20174;
          // loc("./zirgen/components/onehot.h":50:8)
          auto x20180 = x20179 - x20150;
          // loc("./zirgen/components/onehot.h":50:8)
          assert(x20180 == 0 && "eqz failed at: ./zirgen/components/onehot.h:50");
          // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":79:19)
          auto x20181 = x20149 - x20179;
          // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":79:18)
          auto x20182 = x20181 * x60;
          {
            // loc("./zirgen/components/onehot.h":47:26)
            auto x20183 = (x20182 == 0) ? Fp(1) : Fp(0);
            // loc("./zirgen/components/onehot.h":47:9)
            {
              auto& reg = arg2[212 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x20183);
              reg = x20183;
            }
            // loc("./zirgen/components/onehot.h":47:26)
            auto x20184 = x20182 - x101;
            // loc("./zirgen/components/onehot.h":47:26)
            auto x20185 = (x20184 == 0) ? Fp(1) : Fp(0);
            // loc("./zirgen/components/onehot.h":47:9)
            {
              auto& reg = arg2[213 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x20185);
              reg = x20185;
            }
            // loc("./zirgen/components/onehot.h":47:26)
            auto x20186 = x20182 - x98;
            // loc("./zirgen/components/onehot.h":47:26)
            auto x20187 = (x20186 == 0) ? Fp(1) : Fp(0);
            // loc("./zirgen/components/onehot.h":47:9)
            {
              auto& reg = arg2[214 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x20187);
              reg = x20187;
            }
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/OneHot/hot[1](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
          auto x20188 = arg2[213 * steps + ((cycle - 0) & mask)];
          assert(x20188 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/OneHot/hot[2](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
          auto x20189 = arg2[214 * steps + ((cycle - 0) & mask)];
          assert(x20189 != Fp::invalid());
          // loc("./zirgen/components/onehot.h":56:19)
          auto x20190 = x20189 * x98;
          // loc("./zirgen/components/onehot.h":56:13)
          auto x20191 = x20188 + x20190;
          // loc("./zirgen/components/onehot.h":50:8)
          auto x20192 = x20191 - x20182;
          // loc("./zirgen/components/onehot.h":50:8)
          assert(x20192 == 0 && "eqz failed at: ./zirgen/components/onehot.h:50");
          // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":81:27)
          auto x20193 = Fp(x20148.asUInt32() & x101.asUInt32());
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[218 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20193);
            reg = x20193;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":81:27)
          auto x20194 = Fp(x20148.asUInt32() & x98.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":81:26)
          auto x20195 = x20194 * x58;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[219 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20195);
            reg = x20195;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":81:27)
          auto x20196 = Fp(x20148.asUInt32() & x83.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":81:26)
          auto x20197 = x20196 * x80;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[220 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20197);
            reg = x20197;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":81:27)
          auto x20198 = Fp(x20148.asUInt32() & x68.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":81:26)
          auto x20199 = x20198 * x59;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[221 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20199);
            reg = x20199;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":81:27)
          auto x20200 = Fp(x20148.asUInt32() & x72.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":81:26)
          auto x20201 = x20200 * x60;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[222 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20201);
            reg = x20201;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":84:29)
          auto x20202 = Fp(x20148.asUInt32() & x62.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":84:28)
          auto x20203 = x20202 * x63;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[223 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20203);
            reg = x20203;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":84:29)
          auto x20204 = Fp(x20148.asUInt32() & x56.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":84:28)
          auto x20205 = x20204 * x57;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[224 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20205);
            reg = x20205;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":84:29)
          auto x20206 = Fp(x20148.asUInt32() & x65.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":84:28)
          auto x20207 = x20206 * x64;
          // loc("./zirgen/components/bits.h":37:23)
          {
            auto& reg = arg2[225 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20207);
            reg = x20207;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/OneHot/hot[1](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x20208 = arg2[206 * steps + ((cycle - 0) & mask)];
        assert(x20208 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/OneHot/hot[2](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x20209 = arg2[207 * steps + ((cycle - 0) & mask)];
        assert(x20209 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/OneHot/hot[3](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x20210 = arg2[208 * steps + ((cycle - 0) & mask)];
        assert(x20210 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/OneHot/hot[4](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x20211 = arg2[209 * steps + ((cycle - 0) & mask)];
        assert(x20211 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/OneHot/hot[5](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x20212 = arg2[210 * steps + ((cycle - 0) & mask)];
        assert(x20212 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/OneHot/hot[6](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x20213 = arg2[211 * steps + ((cycle - 0) & mask)];
        assert(x20213 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/OneHot/hot[1](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x20214 = arg2[213 * steps + ((cycle - 0) & mask)];
        assert(x20214 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/OneHot/hot[2](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x20215 = arg2[214 * steps + ((cycle - 0) & mask)];
        assert(x20215 != Fp::invalid());
        // loc("./zirgen/components/onehot.h":56:19)
        auto x20216 = x20209 * x98;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x20217 = x20210 * x81;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x20218 = x20211 * x83;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x20219 = x20212 * x71;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x20220 = x20213 * x70;
        // loc("./zirgen/components/onehot.h":56:19)
        auto x20221 = x20215 * x98;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x20222 = x20208 + x20216;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x20223 = x20214 + x20221;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":87:34)
        auto x20224 = x20223 * x72;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x20225 = x20222 + x20217;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x20226 = x20225 + x20218;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x20227 = x20226 + x20219;
        // loc("./zirgen/components/onehot.h":56:13)
        auto x20228 = x20227 + x20220;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":87:18)
        auto x20229 = x20228 + x20224;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":87:8)
        auto x20230 = x20149 - x20229;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":87:8)
        assert(x20230 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint2.cpp:87");
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":88:17)
        auto x20231 = x20147 * x95;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":88:17)
        auto x20232 = x20231 + x20146;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":88:5)
        {
          auto& reg = arg2[216 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20232);
          reg = x20232;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/OneHot/hot[1](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x20233 = arg2[206 * steps + ((cycle - 0) & mask)];
      assert(x20233 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/OneHot/hot[2](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x20234 = arg2[207 * steps + ((cycle - 0) & mask)];
      assert(x20234 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/OneHot/hot[3](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x20235 = arg2[208 * steps + ((cycle - 0) & mask)];
      assert(x20235 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/OneHot/hot[4](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x20236 = arg2[209 * steps + ((cycle - 0) & mask)];
      assert(x20236 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/OneHot/hot[5](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x20237 = arg2[210 * steps + ((cycle - 0) & mask)];
      assert(x20237 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/OneHot/hot[6](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x20238 = arg2[211 * steps + ((cycle - 0) & mask)];
      assert(x20238 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/OneHot/hot[1](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x20239 = arg2[213 * steps + ((cycle - 0) & mask)];
      assert(x20239 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/OneHot/hot[2](Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x20240 = arg2[214 * steps + ((cycle - 0) & mask)];
      assert(x20240 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x20241 = arg2[217 * steps + ((cycle - 0) & mask)];
      assert(x20241 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20242 = arg2[218 * steps + ((cycle - 0) & mask)];
      assert(x20242 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20243 = arg2[219 * steps + ((cycle - 0) & mask)];
      assert(x20243 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20244 = arg2[220 * steps + ((cycle - 0) & mask)];
      assert(x20244 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20245 = arg2[221 * steps + ((cycle - 0) & mask)];
      assert(x20245 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20246 = arg2[222 * steps + ((cycle - 0) & mask)];
      assert(x20246 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20247 = arg2[223 * steps + ((cycle - 0) & mask)];
      assert(x20247 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20248 = arg2[224 * steps + ((cycle - 0) & mask)];
      assert(x20248 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20249 = arg2[225 * steps + ((cycle - 0) & mask)];
      assert(x20249 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20250 = arg2[216 * steps + ((cycle - 0) & mask)];
      assert(x20250 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":99:8)
      auto x20251 = x20241 * x83;
      // loc("./zirgen/components/onehot.h":56:19)
      auto x20252 = x20234 * x98;
      // loc("./zirgen/components/onehot.h":56:19)
      auto x20253 = x20235 * x81;
      // loc("./zirgen/components/onehot.h":56:19)
      auto x20254 = x20236 * x83;
      // loc("./zirgen/components/onehot.h":56:19)
      auto x20255 = x20237 * x71;
      // loc("./zirgen/components/onehot.h":56:19)
      auto x20256 = x20238 * x70;
      // loc("./zirgen/components/onehot.h":56:19)
      auto x20257 = x20240 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":92:17)
      auto x20258 = x20243 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":92:17)
      auto x20259 = x20244 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":92:17)
      auto x20260 = x20245 * x68;
      // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":92:17)
      auto x20261 = x20246 * x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":96:21)
      auto x20262 = x20248 * x98;
      // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":96:21)
      auto x20263 = x20249 * x83;
      // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":92:11)
      auto x20264 = x20242 + x20258;
      // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":96:13)
      auto x20265 = x20247 + x20262;
      // loc("./zirgen/components/onehot.h":56:13)
      auto x20266 = x20239 + x20257;
      // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":96:13)
      auto x20267 = x20265 + x20263;
      // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":92:11)
      auto x20268 = x20264 + x20259;
      // loc("./zirgen/components/onehot.h":56:13)
      auto x20269 = x20233 + x20252;
      // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":92:11)
      auto x20270 = x20268 + x20260;
      // loc("./zirgen/components/onehot.h":56:13)
      auto x20271 = x20269 + x20253;
      // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":92:11)
      auto x20272 = x20270 + x20261;
      // loc("./zirgen/components/onehot.h":56:13)
      auto x20273 = x20271 + x20254;
      // loc("./zirgen/components/onehot.h":56:13)
      auto x20274 = x20273 + x20255;
      // loc("./zirgen/components/onehot.h":56:13)
      auto x20275 = x20274 + x20256;
      extern_args[0] = x20251;
      extern_args[1] = x20275;
      extern_args[2] = x20266;
      extern_args[3] = x20272;
      extern_args[4] = x20267;
      extern_args[5] = x20250;
      extern_log(ctx, cycle, "BigInt2: instAddr = %x, polyOp=%u, memOp=%u, reg=%u, coeff+4=%u, offset=%u", extern_args, extern_outs);
      // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":107:30)
      auto x20276 = x20272 + x52;
      {
        extern_args[0] = x20276;
        extern_args[1] = x101;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x20277 = extern_outs[0];
        auto x20278 = extern_outs[1];
        auto x20279 = extern_outs[2];
        auto x20280 = extern_outs[3];
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[128 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20277);
          reg = x20277;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[129 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20278);
          reg = x20278;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[130 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20279);
          reg = x20279;
        }
        // loc("zirgen/components/u32.cpp":98:5)
        {
          auto& reg = arg2[131 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20280);
          reg = x20280;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20281 = arg2[128 * steps + ((cycle - 0) & mask)];
      assert(x20281 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20282 = arg2[129 * steps + ((cycle - 0) & mask)];
      assert(x20282 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20283 = arg2[130 * steps + ((cycle - 0) & mask)];
      assert(x20283 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20284 = arg2[131 * steps + ((cycle - 0) & mask)];
      assert(x20284 != Fp::invalid());
      // loc("zirgen/components/ram.cpp":178:3)
      {
        auto& reg = arg2[125 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x20276);
        reg = x20276;
      }
      // loc("zirgen/components/ram.cpp":179:3)
      {
        auto& reg = arg2[126 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x966);
        reg = x966;
      }
      // loc("zirgen/components/ram.cpp":180:3)
      {
        auto& reg = arg2[127 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x101);
        reg = x101;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[128 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x20281);
        reg = x20281;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[129 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x20282);
        reg = x20282;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[130 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x20283);
        reg = x20283;
      }
      // loc("zirgen/components/u32.cpp":44:5)
      {
        auto& reg = arg2[131 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x20284);
        reg = x20284;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/OneHot/hot[0](Reg)"("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":111:18))
      auto x20285 = arg2[212 * steps + ((cycle - 0) & mask)];
      assert(x20285 != Fp::invalid());
      // loc("./zirgen/components/u32.h":35:12)
      auto x20286 = x20282 * x95;
      // loc("./zirgen/components/u32.h":36:12)
      auto x20287 = x20283 * x82;
      // loc("./zirgen/components/u32.h":37:12)
      auto x20288 = x20284 * x84;
      // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":108:47)
      auto x20289 = x20250 * x83;
      // loc("./zirgen/components/u32.h":34:12)
      auto x20290 = x20281 + x20286;
      // loc("./zirgen/components/u32.h":34:12)
      auto x20291 = x20290 + x20287;
      // loc("./zirgen/components/u32.h":34:12)
      auto x20292 = x20291 + x20288;
      // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":108:14)
      auto x20293 = x20292 * x80;
      // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":108:14)
      auto x20294 = x20293 + x20289;
      if (x20285 != 0) {
        {
          extern_args[0] = x20275;
          extern_args[1] = x20266;
          extern_args[2] = x20272;
          extern_args[3] = x20250;
          extern_args[4] = x20267;
          extern_syscallBigInt2Witness(ctx, cycle, "", extern_args, extern_outs);
          auto x20295 = extern_outs[0];
          auto x20296 = extern_outs[1];
          auto x20297 = extern_outs[2];
          auto x20298 = extern_outs[3];
          auto x20299 = extern_outs[4];
          auto x20300 = extern_outs[5];
          auto x20301 = extern_outs[6];
          auto x20302 = extern_outs[7];
          auto x20303 = extern_outs[8];
          auto x20304 = extern_outs[9];
          auto x20305 = extern_outs[10];
          auto x20306 = extern_outs[11];
          auto x20307 = extern_outs[12];
          auto x20308 = extern_outs[13];
          auto x20309 = extern_outs[14];
          auto x20310 = extern_outs[15];
        }
        {
          extern_args[0] = x20294;
          extern_args[1] = x101;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x20311 = extern_outs[0];
          auto x20312 = extern_outs[1];
          auto x20313 = extern_outs[2];
          auto x20314 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[135 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20311);
            reg = x20311;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[136 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20312);
            reg = x20312;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20313);
            reg = x20313;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20314);
            reg = x20314;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20315 = arg2[135 * steps + ((cycle - 0) & mask)];
        assert(x20315 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20316 = arg2[136 * steps + ((cycle - 0) & mask)];
        assert(x20316 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20317 = arg2[137 * steps + ((cycle - 0) & mask)];
        assert(x20317 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20318 = arg2[138 * steps + ((cycle - 0) & mask)];
        assert(x20318 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[132 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20294);
          reg = x20294;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[133 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x966);
          reg = x966;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[134 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20315);
          reg = x20315;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20316);
          reg = x20316;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[137 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20317);
          reg = x20317;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[138 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20318);
          reg = x20318;
        }
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x20319 = Fp(x20315.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[24 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20319);
            reg = x20319;
          }
        }
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x20320 = Fp(x20316.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[25 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20320);
            reg = x20320;
          }
        }
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x20321 = Fp(x20317.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[26 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20321);
            reg = x20321;
          }
        }
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x20322 = Fp(x20318.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[27 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20322);
            reg = x20322;
          }
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":116:28)
        auto x20323 = x20294 + x101;
        {
          extern_args[0] = x20323;
          extern_args[1] = x101;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x20324 = extern_outs[0];
          auto x20325 = extern_outs[1];
          auto x20326 = extern_outs[2];
          auto x20327 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20324);
            reg = x20324;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20325);
            reg = x20325;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20326);
            reg = x20326;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20327);
            reg = x20327;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20328 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x20328 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20329 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x20329 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20330 = arg2[144 * steps + ((cycle - 0) & mask)];
        assert(x20330 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20331 = arg2[145 * steps + ((cycle - 0) & mask)];
        assert(x20331 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[139 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20323);
          reg = x20323;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x966);
          reg = x966;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20328);
          reg = x20328;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20329);
          reg = x20329;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[144 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20330);
          reg = x20330;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[145 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20331);
          reg = x20331;
        }
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x20332 = Fp(x20328.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[28 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20332);
            reg = x20332;
          }
        }
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x20333 = Fp(x20329.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[29 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20333);
            reg = x20333;
          }
        }
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x20334 = Fp(x20330.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[30 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20334);
            reg = x20334;
          }
        }
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x20335 = Fp(x20331.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[31 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20335);
            reg = x20335;
          }
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":116:28)
        auto x20336 = x20294 + x98;
        {
          extern_args[0] = x20336;
          extern_args[1] = x101;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x20337 = extern_outs[0];
          auto x20338 = extern_outs[1];
          auto x20339 = extern_outs[2];
          auto x20340 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[149 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20337);
            reg = x20337;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[150 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20338);
            reg = x20338;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[151 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20339);
            reg = x20339;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[152 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20340);
            reg = x20340;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20341 = arg2[149 * steps + ((cycle - 0) & mask)];
        assert(x20341 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20342 = arg2[150 * steps + ((cycle - 0) & mask)];
        assert(x20342 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20343 = arg2[151 * steps + ((cycle - 0) & mask)];
        assert(x20343 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20344 = arg2[152 * steps + ((cycle - 0) & mask)];
        assert(x20344 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[146 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20336);
          reg = x20336;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[147 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x966);
          reg = x966;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[148 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[149 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20341);
          reg = x20341;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[150 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20342);
          reg = x20342;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[151 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20343);
          reg = x20343;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[152 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20344);
          reg = x20344;
        }
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x20345 = Fp(x20341.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[32 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20345);
            reg = x20345;
          }
        }
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x20346 = Fp(x20342.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[33 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20346);
            reg = x20346;
          }
        }
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x20347 = Fp(x20343.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[34 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20347);
            reg = x20347;
          }
        }
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x20348 = Fp(x20344.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[35 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20348);
            reg = x20348;
          }
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":116:28)
        auto x20349 = x20294 + x81;
        {
          extern_args[0] = x20349;
          extern_args[1] = x101;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x20350 = extern_outs[0];
          auto x20351 = extern_outs[1];
          auto x20352 = extern_outs[2];
          auto x20353 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[156 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20350);
            reg = x20350;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[157 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20351);
            reg = x20351;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[158 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20352);
            reg = x20352;
          }
          // loc("zirgen/components/u32.cpp":98:5)
          {
            auto& reg = arg2[159 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20353);
            reg = x20353;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20354 = arg2[156 * steps + ((cycle - 0) & mask)];
        assert(x20354 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20355 = arg2[157 * steps + ((cycle - 0) & mask)];
        assert(x20355 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20356 = arg2[158 * steps + ((cycle - 0) & mask)];
        assert(x20356 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20357 = arg2[159 * steps + ((cycle - 0) & mask)];
        assert(x20357 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[153 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20349);
          reg = x20349;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[154 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x966);
          reg = x966;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[155 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[156 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20354);
          reg = x20354;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[157 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20355);
          reg = x20355;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[158 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20356);
          reg = x20356;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[159 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20357);
          reg = x20357;
        }
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x20358 = Fp(x20354.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[36 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20358);
            reg = x20358;
          }
        }
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":240:29)
          auto x20359 = Fp(x20355.asUInt32() & x81.asUInt32());
          // loc("./zirgen/components/bits.h":78:23)
          {
            auto& reg = arg2[77 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20359);
            reg = x20359;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/TwitByteReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20360 = arg2[77 * steps + ((cycle - 0) & mask)];
        assert(x20360 != Fp::invalid());
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":240:29)
          auto x20361 = Fp(x20355.asUInt32() & x76.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":240:28)
          auto x20362 = x20361 * x80;
          // loc("./zirgen/components/bits.h":78:23)
          {
            auto& reg = arg2[78 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20362);
            reg = x20362;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/TwitByteReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20363 = arg2[78 * steps + ((cycle - 0) & mask)];
        assert(x20363 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":241:21)
        auto x20364 = x20363 * x83;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":241:13)
        auto x20365 = x20360 + x20364;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":240:29)
          auto x20366 = Fp(x20355.asUInt32() & x55.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":240:28)
          auto x20367 = x20366 * x60;
          // loc("./zirgen/components/bits.h":78:23)
          {
            auto& reg = arg2[79 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20367);
            reg = x20367;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/TwitByteReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20368 = arg2[79 * steps + ((cycle - 0) & mask)];
        assert(x20368 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":241:21)
        auto x20369 = x20368 * x72;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":241:13)
        auto x20370 = x20365 + x20369;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":240:29)
          auto x20371 = Fp(x20355.asUInt32() & x38.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":240:28)
          auto x20372 = x20371 * x57;
          // loc("./zirgen/components/bits.h":78:23)
          {
            auto& reg = arg2[80 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20372);
            reg = x20372;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/TwitByteReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20373 = arg2[80 * steps + ((cycle - 0) & mask)];
        assert(x20373 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":241:21)
        auto x20374 = x20373 * x56;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":241:13)
        auto x20375 = x20370 + x20374;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":243:6)
        auto x20376 = x20375 - x20355;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":243:6)
        assert(x20376 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/ecall.cpp:243");
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":240:29)
          auto x20377 = Fp(x20356.asUInt32() & x81.asUInt32());
          // loc("./zirgen/components/bits.h":78:23)
          {
            auto& reg = arg2[81 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20377);
            reg = x20377;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/TwitByteReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20378 = arg2[81 * steps + ((cycle - 0) & mask)];
        assert(x20378 != Fp::invalid());
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":240:29)
          auto x20379 = Fp(x20356.asUInt32() & x76.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":240:28)
          auto x20380 = x20379 * x80;
          // loc("./zirgen/components/bits.h":78:23)
          {
            auto& reg = arg2[82 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20380);
            reg = x20380;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/TwitByteReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20381 = arg2[82 * steps + ((cycle - 0) & mask)];
        assert(x20381 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":241:21)
        auto x20382 = x20381 * x83;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":241:13)
        auto x20383 = x20378 + x20382;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":240:29)
          auto x20384 = Fp(x20356.asUInt32() & x55.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":240:28)
          auto x20385 = x20384 * x60;
          // loc("./zirgen/components/bits.h":78:23)
          {
            auto& reg = arg2[83 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20385);
            reg = x20385;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/TwitByteReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20386 = arg2[83 * steps + ((cycle - 0) & mask)];
        assert(x20386 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":241:21)
        auto x20387 = x20386 * x72;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":241:13)
        auto x20388 = x20383 + x20387;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":240:29)
          auto x20389 = Fp(x20356.asUInt32() & x38.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":240:28)
          auto x20390 = x20389 * x57;
          // loc("./zirgen/components/bits.h":78:23)
          {
            auto& reg = arg2[84 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20390);
            reg = x20390;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/TwitByteReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20391 = arg2[84 * steps + ((cycle - 0) & mask)];
        assert(x20391 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":241:21)
        auto x20392 = x20391 * x56;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":241:13)
        auto x20393 = x20388 + x20392;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":243:6)
        auto x20394 = x20393 - x20356;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":243:6)
        assert(x20394 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/ecall.cpp:243");
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":240:29)
          auto x20395 = Fp(x20357.asUInt32() & x81.asUInt32());
          // loc("./zirgen/components/bits.h":78:23)
          {
            auto& reg = arg2[85 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20395);
            reg = x20395;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/TwitByteReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20396 = arg2[85 * steps + ((cycle - 0) & mask)];
        assert(x20396 != Fp::invalid());
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":240:29)
          auto x20397 = Fp(x20357.asUInt32() & x76.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":240:28)
          auto x20398 = x20397 * x80;
          // loc("./zirgen/components/bits.h":78:23)
          {
            auto& reg = arg2[86 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20398);
            reg = x20398;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/TwitByteReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20399 = arg2[86 * steps + ((cycle - 0) & mask)];
        assert(x20399 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":241:21)
        auto x20400 = x20399 * x83;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":241:13)
        auto x20401 = x20396 + x20400;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":240:29)
          auto x20402 = Fp(x20357.asUInt32() & x55.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":240:28)
          auto x20403 = x20402 * x60;
          // loc("./zirgen/components/bits.h":78:23)
          {
            auto& reg = arg2[87 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20403);
            reg = x20403;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/TwitByteReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20404 = arg2[87 * steps + ((cycle - 0) & mask)];
        assert(x20404 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":241:21)
        auto x20405 = x20404 * x72;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":241:13)
        auto x20406 = x20401 + x20405;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":240:29)
          auto x20407 = Fp(x20357.asUInt32() & x38.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":240:28)
          auto x20408 = x20407 * x57;
          // loc("./zirgen/components/bits.h":78:23)
          {
            auto& reg = arg2[88 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20408);
            reg = x20408;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/TwitByteReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20409 = arg2[88 * steps + ((cycle - 0) & mask)];
        assert(x20409 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":241:21)
        auto x20410 = x20409 * x56;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":241:13)
        auto x20411 = x20406 + x20410;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":243:6)
        auto x20412 = x20411 - x20357;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":243:6)
        assert(x20412 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/ecall.cpp:243");
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":124:33)
      auto x20413 = x20239 + x20240;
      if (x20413 != 0) {
        {
          extern_args[0] = x20275;
          extern_args[1] = x20266;
          extern_args[2] = x20272;
          extern_args[3] = x20250;
          extern_args[4] = x20267;
          extern_syscallBigInt2Witness(ctx, cycle, "", extern_args, extern_outs);
          auto x20414 = extern_outs[0];
          auto x20415 = extern_outs[1];
          auto x20416 = extern_outs[2];
          auto x20417 = extern_outs[3];
          auto x20418 = extern_outs[4];
          auto x20419 = extern_outs[5];
          auto x20420 = extern_outs[6];
          auto x20421 = extern_outs[7];
          auto x20422 = extern_outs[8];
          auto x20423 = extern_outs[9];
          auto x20424 = extern_outs[10];
          auto x20425 = extern_outs[11];
          auto x20426 = extern_outs[12];
          auto x20427 = extern_outs[13];
          auto x20428 = extern_outs[14];
          auto x20429 = extern_outs[15];
          {
            // loc("zirgen/components/bytes.cpp":106:21)
            auto x20430 = Fp(x20414.asUInt32() & x97.asUInt32());
            // loc("zirgen/components/bytes.cpp":106:12)
            {
              auto& reg = arg2[24 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x20430);
              reg = x20430;
            }
          }
          {
            // loc("zirgen/components/bytes.cpp":106:21)
            auto x20431 = Fp(x20415.asUInt32() & x97.asUInt32());
            // loc("zirgen/components/bytes.cpp":106:12)
            {
              auto& reg = arg2[25 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x20431);
              reg = x20431;
            }
          }
          {
            // loc("zirgen/components/bytes.cpp":106:21)
            auto x20432 = Fp(x20416.asUInt32() & x97.asUInt32());
            // loc("zirgen/components/bytes.cpp":106:12)
            {
              auto& reg = arg2[26 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x20432);
              reg = x20432;
            }
          }
          {
            // loc("zirgen/components/bytes.cpp":106:21)
            auto x20433 = Fp(x20417.asUInt32() & x97.asUInt32());
            // loc("zirgen/components/bytes.cpp":106:12)
            {
              auto& reg = arg2[27 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x20433);
              reg = x20433;
            }
          }
          {
            // loc("zirgen/components/bytes.cpp":106:21)
            auto x20434 = Fp(x20418.asUInt32() & x97.asUInt32());
            // loc("zirgen/components/bytes.cpp":106:12)
            {
              auto& reg = arg2[28 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x20434);
              reg = x20434;
            }
          }
          {
            // loc("zirgen/components/bytes.cpp":106:21)
            auto x20435 = Fp(x20419.asUInt32() & x97.asUInt32());
            // loc("zirgen/components/bytes.cpp":106:12)
            {
              auto& reg = arg2[29 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x20435);
              reg = x20435;
            }
          }
          {
            // loc("zirgen/components/bytes.cpp":106:21)
            auto x20436 = Fp(x20420.asUInt32() & x97.asUInt32());
            // loc("zirgen/components/bytes.cpp":106:12)
            {
              auto& reg = arg2[30 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x20436);
              reg = x20436;
            }
          }
          {
            // loc("zirgen/components/bytes.cpp":106:21)
            auto x20437 = Fp(x20421.asUInt32() & x97.asUInt32());
            // loc("zirgen/components/bytes.cpp":106:12)
            {
              auto& reg = arg2[31 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x20437);
              reg = x20437;
            }
          }
          {
            // loc("zirgen/components/bytes.cpp":106:21)
            auto x20438 = Fp(x20422.asUInt32() & x97.asUInt32());
            // loc("zirgen/components/bytes.cpp":106:12)
            {
              auto& reg = arg2[32 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x20438);
              reg = x20438;
            }
          }
          {
            // loc("zirgen/components/bytes.cpp":106:21)
            auto x20439 = Fp(x20423.asUInt32() & x97.asUInt32());
            // loc("zirgen/components/bytes.cpp":106:12)
            {
              auto& reg = arg2[33 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x20439);
              reg = x20439;
            }
          }
          {
            // loc("zirgen/components/bytes.cpp":106:21)
            auto x20440 = Fp(x20424.asUInt32() & x97.asUInt32());
            // loc("zirgen/components/bytes.cpp":106:12)
            {
              auto& reg = arg2[34 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x20440);
              reg = x20440;
            }
          }
          {
            // loc("zirgen/components/bytes.cpp":106:21)
            auto x20441 = Fp(x20425.asUInt32() & x97.asUInt32());
            // loc("zirgen/components/bytes.cpp":106:12)
            {
              auto& reg = arg2[35 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x20441);
              reg = x20441;
            }
          }
          {
            // loc("zirgen/components/bytes.cpp":106:21)
            auto x20442 = Fp(x20426.asUInt32() & x97.asUInt32());
            // loc("zirgen/components/bytes.cpp":106:12)
            {
              auto& reg = arg2[36 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x20442);
              reg = x20442;
            }
          }
          {
            // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":240:29)
            auto x20443 = Fp(x20427.asUInt32() & x81.asUInt32());
            // loc("./zirgen/components/bits.h":78:23)
            {
              auto& reg = arg2[77 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x20443);
              reg = x20443;
            }
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/TwitByteReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x20444 = arg2[77 * steps + ((cycle - 0) & mask)];
          assert(x20444 != Fp::invalid());
          {
            // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":240:29)
            auto x20445 = Fp(x20427.asUInt32() & x76.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":240:28)
            auto x20446 = x20445 * x80;
            // loc("./zirgen/components/bits.h":78:23)
            {
              auto& reg = arg2[78 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x20446);
              reg = x20446;
            }
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/TwitByteReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x20447 = arg2[78 * steps + ((cycle - 0) & mask)];
          assert(x20447 != Fp::invalid());
          // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":241:21)
          auto x20448 = x20447 * x83;
          // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":241:13)
          auto x20449 = x20444 + x20448;
          {
            // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":240:29)
            auto x20450 = Fp(x20427.asUInt32() & x55.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":240:28)
            auto x20451 = x20450 * x60;
            // loc("./zirgen/components/bits.h":78:23)
            {
              auto& reg = arg2[79 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x20451);
              reg = x20451;
            }
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/TwitByteReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x20452 = arg2[79 * steps + ((cycle - 0) & mask)];
          assert(x20452 != Fp::invalid());
          // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":241:21)
          auto x20453 = x20452 * x72;
          // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":241:13)
          auto x20454 = x20449 + x20453;
          {
            // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":240:29)
            auto x20455 = Fp(x20427.asUInt32() & x38.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":240:28)
            auto x20456 = x20455 * x57;
            // loc("./zirgen/components/bits.h":78:23)
            {
              auto& reg = arg2[80 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x20456);
              reg = x20456;
            }
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/TwitByteReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x20457 = arg2[80 * steps + ((cycle - 0) & mask)];
          assert(x20457 != Fp::invalid());
          // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":241:21)
          auto x20458 = x20457 * x56;
          // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":241:13)
          auto x20459 = x20454 + x20458;
          // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":243:6)
          auto x20460 = x20459 - x20427;
          // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":243:6)
          assert(x20460 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/ecall.cpp:243");
          {
            // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":240:29)
            auto x20461 = Fp(x20428.asUInt32() & x81.asUInt32());
            // loc("./zirgen/components/bits.h":78:23)
            {
              auto& reg = arg2[81 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x20461);
              reg = x20461;
            }
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/TwitByteReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x20462 = arg2[81 * steps + ((cycle - 0) & mask)];
          assert(x20462 != Fp::invalid());
          {
            // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":240:29)
            auto x20463 = Fp(x20428.asUInt32() & x76.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":240:28)
            auto x20464 = x20463 * x80;
            // loc("./zirgen/components/bits.h":78:23)
            {
              auto& reg = arg2[82 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x20464);
              reg = x20464;
            }
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/TwitByteReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x20465 = arg2[82 * steps + ((cycle - 0) & mask)];
          assert(x20465 != Fp::invalid());
          // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":241:21)
          auto x20466 = x20465 * x83;
          // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":241:13)
          auto x20467 = x20462 + x20466;
          {
            // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":240:29)
            auto x20468 = Fp(x20428.asUInt32() & x55.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":240:28)
            auto x20469 = x20468 * x60;
            // loc("./zirgen/components/bits.h":78:23)
            {
              auto& reg = arg2[83 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x20469);
              reg = x20469;
            }
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/TwitByteReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x20470 = arg2[83 * steps + ((cycle - 0) & mask)];
          assert(x20470 != Fp::invalid());
          // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":241:21)
          auto x20471 = x20470 * x72;
          // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":241:13)
          auto x20472 = x20467 + x20471;
          {
            // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":240:29)
            auto x20473 = Fp(x20428.asUInt32() & x38.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":240:28)
            auto x20474 = x20473 * x57;
            // loc("./zirgen/components/bits.h":78:23)
            {
              auto& reg = arg2[84 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x20474);
              reg = x20474;
            }
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/TwitByteReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x20475 = arg2[84 * steps + ((cycle - 0) & mask)];
          assert(x20475 != Fp::invalid());
          // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":241:21)
          auto x20476 = x20475 * x56;
          // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":241:13)
          auto x20477 = x20472 + x20476;
          // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":243:6)
          auto x20478 = x20477 - x20428;
          // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":243:6)
          assert(x20478 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/ecall.cpp:243");
          {
            // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":240:29)
            auto x20479 = Fp(x20429.asUInt32() & x81.asUInt32());
            // loc("./zirgen/components/bits.h":78:23)
            {
              auto& reg = arg2[85 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x20479);
              reg = x20479;
            }
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/TwitByteReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x20480 = arg2[85 * steps + ((cycle - 0) & mask)];
          assert(x20480 != Fp::invalid());
          {
            // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":240:29)
            auto x20481 = Fp(x20429.asUInt32() & x76.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":240:28)
            auto x20482 = x20481 * x80;
            // loc("./zirgen/components/bits.h":78:23)
            {
              auto& reg = arg2[86 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x20482);
              reg = x20482;
            }
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/TwitByteReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x20483 = arg2[86 * steps + ((cycle - 0) & mask)];
          assert(x20483 != Fp::invalid());
          // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":241:21)
          auto x20484 = x20483 * x83;
          // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":241:13)
          auto x20485 = x20480 + x20484;
          {
            // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":240:29)
            auto x20486 = Fp(x20429.asUInt32() & x55.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":240:28)
            auto x20487 = x20486 * x60;
            // loc("./zirgen/components/bits.h":78:23)
            {
              auto& reg = arg2[87 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x20487);
              reg = x20487;
            }
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/TwitByteReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x20488 = arg2[87 * steps + ((cycle - 0) & mask)];
          assert(x20488 != Fp::invalid());
          // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":241:21)
          auto x20489 = x20488 * x72;
          // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":241:13)
          auto x20490 = x20485 + x20489;
          {
            // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":240:29)
            auto x20491 = Fp(x20429.asUInt32() & x38.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":240:28)
            auto x20492 = x20491 * x57;
            // loc("./zirgen/components/bits.h":78:23)
            {
              auto& reg = arg2[88 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x20492);
              reg = x20492;
            }
          }
          // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/TwitByteReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
          auto x20493 = arg2[88 * steps + ((cycle - 0) & mask)];
          assert(x20493 != Fp::invalid());
          // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":241:21)
          auto x20494 = x20493 * x56;
          // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":241:13)
          auto x20495 = x20490 + x20494;
          // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":243:6)
          auto x20496 = x20495 - x20429;
          // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":243:6)
          assert(x20496 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/ecall.cpp:243");
        }
      }
      if (x20239 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x20497 = arg2[24 * steps + ((cycle - 0) & mask)];
        assert(x20497 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x20498 = arg2[25 * steps + ((cycle - 0) & mask)];
        assert(x20498 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x20499 = arg2[26 * steps + ((cycle - 0) & mask)];
        assert(x20499 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x20500 = arg2[27 * steps + ((cycle - 0) & mask)];
        assert(x20500 != Fp::invalid());
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20497);
          reg = x20497;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20498);
          reg = x20498;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[137 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20499);
          reg = x20499;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[138 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20500);
          reg = x20500;
        }
        {
          extern_args[0] = x20294;
          extern_args[1] = x20497;
          extern_args[2] = x20498;
          extern_args[3] = x20499;
          extern_args[4] = x20500;
          extern_args[5] = x98;
          extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20501 = arg2[135 * steps + ((cycle - 0) & mask)];
        assert(x20501 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20502 = arg2[136 * steps + ((cycle - 0) & mask)];
        assert(x20502 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20503 = arg2[137 * steps + ((cycle - 0) & mask)];
        assert(x20503 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20504 = arg2[138 * steps + ((cycle - 0) & mask)];
        assert(x20504 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[132 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20294);
          reg = x20294;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[133 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x966);
          reg = x966;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[134 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x98);
          reg = x98;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20501);
          reg = x20501;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20502);
          reg = x20502;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[137 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20503);
          reg = x20503;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[138 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20504);
          reg = x20504;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":139:11)
        auto x20505 = x20294 + x101;
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x20506 = arg2[28 * steps + ((cycle - 0) & mask)];
        assert(x20506 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x20507 = arg2[29 * steps + ((cycle - 0) & mask)];
        assert(x20507 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x20508 = arg2[30 * steps + ((cycle - 0) & mask)];
        assert(x20508 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x20509 = arg2[31 * steps + ((cycle - 0) & mask)];
        assert(x20509 != Fp::invalid());
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20506);
          reg = x20506;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20507);
          reg = x20507;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[144 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20508);
          reg = x20508;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[145 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20509);
          reg = x20509;
        }
        {
          extern_args[0] = x20505;
          extern_args[1] = x20506;
          extern_args[2] = x20507;
          extern_args[3] = x20508;
          extern_args[4] = x20509;
          extern_args[5] = x98;
          extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20510 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x20510 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20511 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x20511 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20512 = arg2[144 * steps + ((cycle - 0) & mask)];
        assert(x20512 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20513 = arg2[145 * steps + ((cycle - 0) & mask)];
        assert(x20513 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[139 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20505);
          reg = x20505;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x966);
          reg = x966;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x98);
          reg = x98;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20510);
          reg = x20510;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20511);
          reg = x20511;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[144 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20512);
          reg = x20512;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[145 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20513);
          reg = x20513;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":139:11)
        auto x20514 = x20294 + x98;
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x20515 = arg2[32 * steps + ((cycle - 0) & mask)];
        assert(x20515 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x20516 = arg2[33 * steps + ((cycle - 0) & mask)];
        assert(x20516 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x20517 = arg2[34 * steps + ((cycle - 0) & mask)];
        assert(x20517 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x20518 = arg2[35 * steps + ((cycle - 0) & mask)];
        assert(x20518 != Fp::invalid());
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[149 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20515);
          reg = x20515;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[150 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20516);
          reg = x20516;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[151 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20517);
          reg = x20517;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[152 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20518);
          reg = x20518;
        }
        {
          extern_args[0] = x20514;
          extern_args[1] = x20515;
          extern_args[2] = x20516;
          extern_args[3] = x20517;
          extern_args[4] = x20518;
          extern_args[5] = x98;
          extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20519 = arg2[149 * steps + ((cycle - 0) & mask)];
        assert(x20519 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20520 = arg2[150 * steps + ((cycle - 0) & mask)];
        assert(x20520 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20521 = arg2[151 * steps + ((cycle - 0) & mask)];
        assert(x20521 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20522 = arg2[152 * steps + ((cycle - 0) & mask)];
        assert(x20522 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[146 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20514);
          reg = x20514;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[147 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x966);
          reg = x966;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[148 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x98);
          reg = x98;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[149 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20519);
          reg = x20519;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[150 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20520);
          reg = x20520;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[151 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20521);
          reg = x20521;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[152 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20522);
          reg = x20522;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":139:11)
        auto x20523 = x20294 + x81;
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/TwitByteReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20524 = arg2[77 * steps + ((cycle - 0) & mask)];
        assert(x20524 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/TwitByteReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20525 = arg2[78 * steps + ((cycle - 0) & mask)];
        assert(x20525 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/TwitByteReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20526 = arg2[79 * steps + ((cycle - 0) & mask)];
        assert(x20526 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/TwitByteReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20527 = arg2[80 * steps + ((cycle - 0) & mask)];
        assert(x20527 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/TwitByteReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20528 = arg2[81 * steps + ((cycle - 0) & mask)];
        assert(x20528 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/TwitByteReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20529 = arg2[82 * steps + ((cycle - 0) & mask)];
        assert(x20529 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/TwitByteReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20530 = arg2[83 * steps + ((cycle - 0) & mask)];
        assert(x20530 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/TwitByteReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20531 = arg2[84 * steps + ((cycle - 0) & mask)];
        assert(x20531 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/TwitByteReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20532 = arg2[85 * steps + ((cycle - 0) & mask)];
        assert(x20532 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/TwitByteReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20533 = arg2[86 * steps + ((cycle - 0) & mask)];
        assert(x20533 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/TwitByteReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20534 = arg2[87 * steps + ((cycle - 0) & mask)];
        assert(x20534 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/TwitByteReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20535 = arg2[88 * steps + ((cycle - 0) & mask)];
        assert(x20535 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":102:10))
        auto x20536 = arg2[36 * steps + ((cycle - 0) & mask)];
        assert(x20536 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":250:17)
        auto x20537 = x20525 * x83;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":250:17)
        auto x20538 = x20526 * x72;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":250:17)
        auto x20539 = x20527 * x56;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":250:17)
        auto x20540 = x20529 * x83;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":250:17)
        auto x20541 = x20530 * x72;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":250:17)
        auto x20542 = x20531 * x56;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":250:17)
        auto x20543 = x20533 * x83;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":250:17)
        auto x20544 = x20534 * x72;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":250:17)
        auto x20545 = x20535 * x56;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":250:11)
        auto x20546 = x20524 + x20537;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":250:11)
        auto x20547 = x20528 + x20540;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":250:11)
        auto x20548 = x20532 + x20543;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":250:11)
        auto x20549 = x20546 + x20538;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":250:11)
        auto x20550 = x20547 + x20541;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":250:11)
        auto x20551 = x20548 + x20544;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":250:11)
        auto x20552 = x20549 + x20539;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":250:11)
        auto x20553 = x20550 + x20542;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":250:11)
        auto x20554 = x20551 + x20545;
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[156 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20536);
          reg = x20536;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[157 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20552);
          reg = x20552;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[158 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20553);
          reg = x20553;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[159 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20554);
          reg = x20554;
        }
        {
          extern_args[0] = x20523;
          extern_args[1] = x20536;
          extern_args[2] = x20552;
          extern_args[3] = x20553;
          extern_args[4] = x20554;
          extern_args[5] = x98;
          extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20555 = arg2[156 * steps + ((cycle - 0) & mask)];
        assert(x20555 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20556 = arg2[157 * steps + ((cycle - 0) & mask)];
        assert(x20556 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20557 = arg2[158 * steps + ((cycle - 0) & mask)];
        assert(x20557 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20558 = arg2[159 * steps + ((cycle - 0) & mask)];
        assert(x20558 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":178:3)
        {
          auto& reg = arg2[153 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20523);
          reg = x20523;
        }
        // loc("zirgen/components/ram.cpp":179:3)
        {
          auto& reg = arg2[154 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x966);
          reg = x966;
        }
        // loc("zirgen/components/ram.cpp":180:3)
        {
          auto& reg = arg2[155 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x98);
          reg = x98;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[156 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20555);
          reg = x20555;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[157 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20556);
          reg = x20556;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[158 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20557);
          reg = x20557;
        }
        // loc("zirgen/components/u32.cpp":44:5)
        {
          auto& reg = arg2[159 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20558);
          reg = x20558;
        }
      }
      if (x20240 != 0) {
        // loc("zirgen/components/ram.cpp":53:3)
        {
          auto& reg = arg2[132 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/ram.cpp":54:3)
        {
          auto& reg = arg2[133 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/ram.cpp":55:3)
        {
          auto& reg = arg2[134 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[137 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[138 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/ram.cpp":53:3)
        {
          auto& reg = arg2[139 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/ram.cpp":54:3)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/ram.cpp":55:3)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[144 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[145 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/ram.cpp":53:3)
        {
          auto& reg = arg2[146 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/ram.cpp":54:3)
        {
          auto& reg = arg2[147 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/ram.cpp":55:3)
        {
          auto& reg = arg2[148 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[149 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[150 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[151 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[152 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/ram.cpp":53:3)
        {
          auto& reg = arg2[153 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/ram.cpp":54:3)
        {
          auto& reg = arg2[154 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/ram.cpp":55:3)
        {
          auto& reg = arg2[155 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x101);
          reg = x101;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[156 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[157 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[158 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/components/u32.cpp":38:5)
        {
          auto& reg = arg2[159 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/OneHot/hot[0](Reg)"("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":150:15))
      auto x20559 = arg2[205 * steps + ((cycle - 0) & mask)];
      assert(x20559 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":150:15)
      auto x20560 = x20559 * x20138;
      // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":150:3)
      {
        auto& reg = arg2[215 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x20560);
        reg = x20560;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/Reg"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20561 = arg2[215 * steps + ((cycle - 0) & mask)];
      assert(x20561 != Fp::invalid());
      if (x20561 != 0) {
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":153:5)
        {
          auto& reg = arg2[100 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x66);
          reg = x66;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":154:19)
        auto x20562 = x980 + x83;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":34:23)
        auto x20563 = x20562 + x83;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x20564 = Fp(x20563.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20564);
            reg = x20564;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x20565 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x20565 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x20566 = x20563 - x20565;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x20567 = x20566 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x20568 = Fp(x20567.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20568);
            reg = x20568;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x20569 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x20569 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x20570 = x20567 - x20569;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x20571 = x20570 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x20572 = Fp(x20571.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20572);
            reg = x20572;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x20573 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x20573 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x20574 = x20571 - x20573;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x20575 = x20574 * x96;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":37:26)
          auto x20576 = Fp(x20575.asUInt32() & x81.asUInt32());
          // loc("./zirgen/components/bits.h":78:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20576);
            reg = x20576;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[0](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20577 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x20577 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:18)
        auto x20578 = x20575 - x20577;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:17)
        auto x20579 = x20578 * x80;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20579);
          reg = x20579;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20580 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x20580 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:23)
        auto x20581 = x101 - x20580;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:15)
        auto x20582 = x20580 * x20581;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20582);
          reg = x20582;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:17)
        auto x20583 = x98 - x20580;
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x20584 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x20584 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        auto x20585 = x20584 * x20583;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        assert(x20585 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:43");
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":157:16)
      auto x20586 = x101 - x20561;
      if (x20586 != 0) {
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint2.cpp":158:5)
        {
          auto& reg = arg2[100 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x73);
          reg = x73;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":34:23)
        auto x20587 = x980 + x83;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x20588 = Fp(x20587.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20588);
            reg = x20588;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x20589 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x20589 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x20590 = x20587 - x20589;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x20591 = x20590 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x20592 = Fp(x20591.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20592);
            reg = x20592;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x20593 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x20593 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x20594 = x20591 - x20593;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x20595 = x20594 * x96;
        {
          // loc("zirgen/components/bytes.cpp":106:21)
          auto x20596 = Fp(x20595.asUInt32() & x97.asUInt32());
          // loc("zirgen/components/bytes.cpp":106:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20596);
            reg = x20596;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
        auto x20597 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x20597 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":107:11)
        auto x20598 = x20595 - x20597;
        // loc("zirgen/components/bytes.cpp":107:10)
        auto x20599 = x20598 * x96;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":37:26)
          auto x20600 = Fp(x20599.asUInt32() & x81.asUInt32());
          // loc("./zirgen/components/bits.h":78:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x20600);
            reg = x20600;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[0](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20601 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x20601 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:18)
        auto x20602 = x20599 - x20601;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:17)
        auto x20603 = x20602 * x80;
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20603);
          reg = x20603;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20604 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x20604 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:23)
        auto x20605 = x101 - x20604;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:15)
        auto x20606 = x20604 * x20605;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20606);
          reg = x20606;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:17)
        auto x20607 = x98 - x20604;
        // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
        auto x20608 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x20608 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        auto x20609 = x20608 * x20607;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
        assert(x20609 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:43");
      }
      // loc("Top/mux(Mux)/body(BodyStep)/user_mode(Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20610 = arg2[99 * steps + ((cycle - 0) & mask)];
      assert(x20610 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20611 = arg2[71 * steps + ((cycle - 0) & mask)];
      assert(x20611 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":60:7)
      auto x20612 = x20610 * x20611;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":60:26)
      auto x20613 = x101 - x20611;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":60:7)
      auto x20614 = x20612 * x20613;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":60:7)
      assert(x20614 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:60");
    }
    // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[16](Reg)"("./zirgen/components/mux.h":59:25))
    auto x20615 = arg2[117 * steps + ((cycle - 0) & mask)];
    assert(x20615 != Fp::invalid());
    if (x20615 != 0) {
      // loc("Top/mux(Mux)/body(BodyStep)/user_mode(Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20616 = arg2[99 * steps + ((cycle - 1) & mask)];
      assert(x20616 != Fp::invalid());
      // loc("./zirgen/components/bits.h":37:23)
      {
        auto& reg = arg2[99 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x20616);
        reg = x20616;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/next_major(Reg)"("zirgen/circuit/rv32im/v1/edsl/body.cpp":170:37))
      auto x20617 = arg2[100 * steps + ((cycle - 1) & mask)];
      assert(x20617 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":170:37)
      auto x20618 = x20617 - x72;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":170:37)
      assert(x20618 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:170");
      // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[16](Reg)"("zirgen/circuit/rv32im/v1/edsl/body.cpp":171:63))
      auto x20619 = arg2[117 * steps + ((cycle - 1) & mask)];
      assert(x20619 != Fp::invalid());
      if (x20619 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/halt(HaltCycle)/sys_exit_code(Reg)"("zirgen/circuit/rv32im/v1/edsl/body.cpp":173:48))
        auto x20620 = arg2[118 * steps + ((cycle - 1) & mask)];
        assert(x20620 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":173:5)
        {
          auto& reg = arg2[118 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20620);
          reg = x20620;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/halt(HaltCycle)/user_exit_code(Reg)"("zirgen/circuit/rv32im/v1/edsl/body.cpp":174:50))
        auto x20621 = arg2[119 * steps + ((cycle - 1) & mask)];
        assert(x20621 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":174:5)
        {
          auto& reg = arg2[119 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20621);
          reg = x20621;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/halt(HaltCycle)/write_addr(Reg)"("zirgen/circuit/rv32im/v1/edsl/body.cpp":175:44))
        auto x20622 = arg2[120 * steps + ((cycle - 1) & mask)];
        assert(x20622 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":175:5)
        {
          auto& reg = arg2[120 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20622);
          reg = x20622;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[8](Reg)"("zirgen/circuit/rv32im/v1/edsl/body.cpp":178:69))
      auto x20623 = arg2[109 * steps + ((cycle - 1) & mask)];
      assert(x20623 != Fp::invalid());
      if (x20623 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/OneHot/hot[0](Reg)"("zirgen/circuit/rv32im/v1/edsl/body.cpp":181:75))
        auto x20624 = arg2[189 * steps + ((cycle - 1) & mask)];
        assert(x20624 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":182:8)
        auto x20625 = x101 - x20624;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":182:8)
        assert(x20625 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:182");
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/Mux/0(ECallHalt)/Reg"("zirgen/circuit/rv32im/v1/edsl/body.cpp":186:55))
        auto x20626 = arg2[198 * steps + ((cycle - 1) & mask)];
        assert(x20626 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20627 = arg2[135 * steps + ((cycle - 1) & mask)];
        assert(x20627 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20628 = arg2[136 * steps + ((cycle - 1) & mask)];
        assert(x20628 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":186:5)
        {
          auto& reg = arg2[120 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20626);
          reg = x20626;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":187:5)
        {
          auto& reg = arg2[118 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20627);
          reg = x20627;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":188:5)
        {
          auto& reg = arg2[119 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20628);
          reg = x20628;
        }
        extern_args[0] = x20627;
        extern_log(ctx, cycle, "isFromEcall, set sysExitCode: %u", extern_args, extern_outs);
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":190:5)
        arg1[104] = x20627;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":191:5)
        arg1[105] = x20628;
        {
          extern_args[0] = x20627;
          extern_args[1] = x980;
          extern_halt(ctx, cycle, "", extern_args, extern_outs);
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[12](Reg)"("zirgen/circuit/rv32im/v1/edsl/body.cpp":197:77))
      auto x20629 = arg2[113 * steps + ((cycle - 1) & mask)];
      assert(x20629 != Fp::invalid());
      if (x20629 != 0) {
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":199:5)
        {
          auto& reg = arg2[118 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x98);
          reg = x98;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":200:5)
        {
          auto& reg = arg2[119 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":201:5)
        {
          auto& reg = arg2[120 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x0);
          reg = x0;
        }
        extern_args[0] = x98;
        extern_log(ctx, cycle, "isFromPageFault, set sysExitCode: %u", extern_args, extern_outs);
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":203:5)
        arg1[104] = x98;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":204:5)
        arg1[105] = x100;
        {
          extern_args[0] = x98;
          extern_args[1] = x980;
          extern_halt(ctx, cycle, "", extern_args, extern_outs);
        }
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":34:23)
      auto x20630 = x980 + x83;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x20631 = Fp(x20630.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[6 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20631);
          reg = x20631;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x20632 = arg2[6 * steps + ((cycle - 0) & mask)];
      assert(x20632 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x20633 = x20630 - x20632;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x20634 = x20633 * x96;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x20635 = Fp(x20634.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[7 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20635);
          reg = x20635;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x20636 = arg2[7 * steps + ((cycle - 0) & mask)];
      assert(x20636 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x20637 = x20634 - x20636;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x20638 = x20637 * x96;
      {
        // loc("zirgen/components/bytes.cpp":106:21)
        auto x20639 = Fp(x20638.asUInt32() & x97.asUInt32());
        // loc("zirgen/components/bytes.cpp":106:12)
        {
          auto& reg = arg2[8 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20639);
          reg = x20639;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":107:16))
      auto x20640 = arg2[8 * steps + ((cycle - 0) & mask)];
      assert(x20640 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":107:11)
      auto x20641 = x20638 - x20640;
      // loc("zirgen/components/bytes.cpp":107:10)
      auto x20642 = x20641 * x96;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":37:26)
        auto x20643 = Fp(x20642.asUInt32() & x81.asUInt32());
        // loc("./zirgen/components/bits.h":78:23)
        {
          auto& reg = arg2[70 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x20643);
          reg = x20643;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[0](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20644 = arg2[70 * steps + ((cycle - 0) & mask)];
      assert(x20644 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:18)
      auto x20645 = x20642 - x20644;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":38:17)
      auto x20646 = x20645 * x80;
      // loc("./zirgen/components/bits.h":78:23)
      {
        auto& reg = arg2[71 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x20646);
        reg = x20646;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/twits[1](Twit)/twit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20647 = arg2[71 * steps + ((cycle - 0) & mask)];
      assert(x20647 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:23)
      auto x20648 = x101 - x20647;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:15)
      auto x20649 = x20647 * x20648;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":42:3)
      {
        auto& reg = arg2[98 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x20649);
        reg = x20649;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:17)
      auto x20650 = x98 - x20647;
      // loc("Top/mux(Mux)/body(BodyStep)/pc(PCReg)/Reg"("./zirgen/compiler/edsl/edsl.h":129:61))
      auto x20651 = arg2[98 * steps + ((cycle - 0) & mask)];
      assert(x20651 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
      auto x20652 = x20651 * x20650;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":43:7)
      assert(x20652 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:43");
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":211:3)
      {
        auto& reg = arg2[100 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x72);
        reg = x72;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/user_mode(Bit)/bit(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20653 = arg2[99 * steps + ((cycle - 0) & mask)];
      assert(x20653 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":60:7)
      auto x20654 = x20653 * x20647;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":60:7)
      auto x20655 = x20654 * x20648;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":60:7)
      assert(x20655 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:60");
    }
  }
  // loc("Top/Code/OneHot/hot[6](Reg)"("./zirgen/components/mux.h":59:25))
  auto x20656 = arg0[7 * steps + ((cycle - 0) & mask)];
  assert(x20656 != Fp::invalid());
  if (x20656 != 0) {
    // loc("Top/Code/Reg"("./zirgen/compiler/edsl/component.h":164:27))
    auto x20657 = arg0[0 * steps + ((cycle - 0) & mask)];
    assert(x20657 != Fp::invalid());
    extern_args[0] = x20657;
    extern_log(ctx, cycle, "%u: RamFini", extern_args, extern_outs);
  }
  // loc("Top/Code/OneHot/hot[7](Reg)"("./zirgen/components/mux.h":59:25))
  auto x20658 = arg0[8 * steps + ((cycle - 0) & mask)];
  assert(x20658 != Fp::invalid());
  if (x20658 != 0) {
    // loc("Top/Code/Reg"("./zirgen/compiler/edsl/component.h":164:27))
    auto x20659 = arg0[0 * steps + ((cycle - 0) & mask)];
    assert(x20659 != Fp::invalid());
    extern_args[0] = x20659;
    extern_log(ctx, cycle, "%u: BytesFini", extern_args, extern_outs);
  }
  // loc("Top/Code/OneHot/hot[0](Reg)"("zirgen/circuit/rv32im/v1/edsl/top.cpp":94:27))
  auto x20660 = arg0[1 * steps + ((cycle - 0) & mask)];
  assert(x20660 != Fp::invalid());
  // loc("Top/Code/OneHot/hot[2](Reg)"("zirgen/circuit/rv32im/v1/edsl/top.cpp":94:27))
  auto x20661 = arg0[3 * steps + ((cycle - 0) & mask)];
  assert(x20661 != Fp::invalid());
  // loc("zirgen/circuit/rv32im/v1/edsl/top.cpp":94:16)
  auto x20662 = x20660 + x102;
  // loc("zirgen/circuit/rv32im/v1/edsl/top.cpp":94:16)
  auto x20663 = x20662 + x20661;
  // loc("zirgen/circuit/rv32im/v1/edsl/top.cpp":94:16)
  auto x20664 = x20663 + x427;
  // loc("zirgen/circuit/rv32im/v1/edsl/top.cpp":94:16)
  auto x20665 = x20664 + x480;
  // loc("zirgen/circuit/rv32im/v1/edsl/top.cpp":94:16)
  auto x20666 = x20665 + x965;
  // loc("zirgen/circuit/rv32im/v1/edsl/top.cpp":94:16)
  auto x20667 = x20666 + x20656;
  // loc("zirgen/circuit/rv32im/v1/edsl/top.cpp":94:16)
  auto x20668 = x20667 + x20658;
  if (x965 != 0) {
    // loc("Top/mux(Mux)/body(BodyStep)/major_select(OneHot)/hot[16](Reg)"("zirgen/circuit/rv32im/v1/edsl/top.cpp":102:18))
    auto x20669 = arg2[117 * steps + ((cycle - 0) & mask)];
    assert(x20669 != Fp::invalid());
    // loc("zirgen/circuit/rv32im/v1/edsl/top.cpp":103:5)
    {
      auto& reg = arg2[2 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x20669);
      reg = x20669;
    }
  }
  // loc("zirgen/circuit/rv32im/v1/edsl/top.cpp":105:23)
  auto x20670 = x20668 - x965;
  if (x20670 != 0) {
    // loc("zirgen/circuit/rv32im/v1/edsl/top.cpp":105:27)
    {
      auto& reg = arg2[2 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x100);
      reg = x100;
    }
  }
  // loc("Top/halted(Reg)"("./zirgen/compiler/edsl/edsl.h":129:61))
  auto x20671 = arg2[2 * steps + ((cycle - 0) & mask)];
  assert(x20671 != Fp::invalid());
  // loc("zirgen/circuit/rv32im/v1/edsl/top.cpp":106:10)
  auto x20672 = x101 - x20671;
  if (x20661 != 0) {
    {
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[6 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[7 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[8 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[9 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[10 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[11 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[12 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[13 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[14 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[15 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[16 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[17 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[18 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[19 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[20 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[21 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[22 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[23 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[24 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[25 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[26 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[27 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[28 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[29 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[30 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[31 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[32 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[33 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[34 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[35 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[36 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[70 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[71 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[72 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[73 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[74 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[75 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[76 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[77 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[78 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[79 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[80 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[81 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[82 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[83 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[84 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[85 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[86 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[87 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[88 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
    }
  }
  if (x427 != 0) {
    {
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[27 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[28 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[29 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[30 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[31 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[32 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[33 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[34 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[35 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[36 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("zirgen/components/ram.cpp":53:3)
      {
        auto& reg = arg2[136 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("zirgen/components/ram.cpp":54:3)
      {
        auto& reg = arg2[137 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("zirgen/components/ram.cpp":55:3)
      {
        auto& reg = arg2[138 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x101);
        reg = x101;
      }
      // loc("zirgen/components/u32.cpp":38:5)
      {
        auto& reg = arg2[139 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("zirgen/components/u32.cpp":38:5)
      {
        auto& reg = arg2[140 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("zirgen/components/u32.cpp":38:5)
      {
        auto& reg = arg2[141 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("zirgen/components/u32.cpp":38:5)
      {
        auto& reg = arg2[142 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[73 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[74 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[75 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[76 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[77 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[78 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[79 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[80 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[81 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[82 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[83 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[84 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[85 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[86 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[87 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[88 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
    }
  }
  if (x480 != 0) {
    {
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[19 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[20 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[21 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[22 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[23 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[24 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[25 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[26 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[27 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[28 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[29 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[30 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[31 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[32 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[33 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[34 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[35 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[36 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[75 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[76 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[77 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[78 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[79 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[80 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[81 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[82 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[83 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[84 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[85 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[86 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[87 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[88 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
    }
  }
  if (x965 != 0) {
    // loc("zirgen/compiler/edsl/component.cpp":49:15)
    auto x20673 = arg2[101 * steps + ((cycle - 0) & mask)];
    assert(x20673 != Fp::invalid());
    if (x20673 != 0) {
      {
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[25 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[26 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[27 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[28 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[29 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[30 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[31 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[32 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[33 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[34 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[35 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[36 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[85 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[86 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[87 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[88 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":49:15)
    auto x20674 = arg2[102 * steps + ((cycle - 0) & mask)];
    assert(x20674 != Fp::invalid());
    if (x20674 != 0) {
      {
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[25 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[26 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[27 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[28 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[29 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[30 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[31 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[32 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[33 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[34 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[35 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[36 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[85 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[86 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[87 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[88 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":49:15)
    auto x20675 = arg2[103 * steps + ((cycle - 0) & mask)];
    assert(x20675 != Fp::invalid());
    if (x20675 != 0) {
      {
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[25 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[26 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[27 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[28 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[29 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[30 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[31 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[32 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[33 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[34 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[35 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[36 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[85 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[86 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[87 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[88 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":49:15)
    auto x20676 = arg2[104 * steps + ((cycle - 0) & mask)];
    assert(x20676 != Fp::invalid());
    if (x20676 != 0) {
      {
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[32 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[33 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[34 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[35 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[36 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[86 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[87 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[88 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":49:15)
    auto x20677 = arg2[105 * steps + ((cycle - 0) & mask)];
    assert(x20677 != Fp::invalid());
    if (x20677 != 0) {
      {
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[31 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[32 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[33 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[34 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[35 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[36 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[88 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":49:15)
    auto x20678 = arg2[106 * steps + ((cycle - 0) & mask)];
    assert(x20678 != Fp::invalid());
    if (x20678 != 0) {
      {
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[30 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[31 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[32 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[33 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[34 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[35 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[36 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[84 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[85 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[86 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[87 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[88 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":49:15)
    auto x20679 = arg2[107 * steps + ((cycle - 0) & mask)];
    assert(x20679 != Fp::invalid());
    if (x20679 != 0) {
      {
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[9 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[10 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[11 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[12 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[13 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[14 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[15 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[16 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[17 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[18 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[19 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[20 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[21 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[22 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[23 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[24 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[25 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[26 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[27 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[28 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[29 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[30 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[31 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[32 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[33 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[34 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[35 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[36 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[72 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[73 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[74 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[75 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[76 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[77 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[78 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[79 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[80 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[81 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[82 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[83 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[84 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[85 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[86 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[87 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[88 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":49:15)
    auto x20680 = arg2[108 * steps + ((cycle - 0) & mask)];
    assert(x20680 != Fp::invalid());
    if (x20680 != 0) {
      {
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[36 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[83 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[84 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[85 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[86 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[87 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[88 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":49:15)
    auto x20681 = arg2[109 * steps + ((cycle - 0) & mask)];
    assert(x20681 != Fp::invalid());
    if (x20681 != 0) {
      // loc("zirgen/compiler/edsl/component.cpp":49:15)
      auto x20682 = arg2[189 * steps + ((cycle - 0) & mask)];
      assert(x20682 != Fp::invalid());
      if (x20682 != 0) {
        {
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[21 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[22 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[23 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[24 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[25 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[26 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[27 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[28 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[29 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[30 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[31 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[32 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[33 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[34 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[35 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[36 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":53:3)
          {
            auto& reg = arg2[146 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":54:3)
          {
            auto& reg = arg2[147 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":55:3)
          {
            auto& reg = arg2[148 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[149 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[150 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[151 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[152 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[76 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[77 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[78 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[79 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[80 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[81 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[82 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[83 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[84 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[85 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[86 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[87 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[88 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
        }
      }
      // loc("zirgen/compiler/edsl/component.cpp":49:15)
      auto x20683 = arg2[190 * steps + ((cycle - 0) & mask)];
      assert(x20683 != Fp::invalid());
      if (x20683 != 0) {
        {
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[21 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[22 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[23 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[24 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[25 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[26 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[27 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[28 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[29 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[30 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[31 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[32 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[33 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[34 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[35 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[36 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":53:3)
          {
            auto& reg = arg2[146 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":54:3)
          {
            auto& reg = arg2[147 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":55:3)
          {
            auto& reg = arg2[148 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[149 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[150 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[151 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[152 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[76 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[77 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[78 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[79 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[80 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[81 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[82 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[83 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[84 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[85 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[86 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[87 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[88 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
        }
      }
      // loc("zirgen/compiler/edsl/component.cpp":49:15)
      auto x20684 = arg2[191 * steps + ((cycle - 0) & mask)];
      assert(x20684 != Fp::invalid());
      if (x20684 != 0) {
        {
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[23 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[24 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[25 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[26 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[27 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[28 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[29 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[30 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[31 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[32 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[33 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[34 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[35 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[36 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":53:3)
          {
            auto& reg = arg2[146 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":54:3)
          {
            auto& reg = arg2[147 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":55:3)
          {
            auto& reg = arg2[148 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[149 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[150 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[151 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[152 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[77 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[78 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[79 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[80 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[81 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[82 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[83 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[84 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[85 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[86 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[87 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[88 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
        }
      }
      // loc("zirgen/compiler/edsl/component.cpp":49:15)
      auto x20685 = arg2[192 * steps + ((cycle - 0) & mask)];
      assert(x20685 != Fp::invalid());
      if (x20685 != 0) {
        {
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[21 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[22 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[23 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[24 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[25 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[26 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[27 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[28 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[29 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[30 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[31 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[32 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[33 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[34 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[35 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[36 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[76 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[77 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[78 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[79 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[80 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[81 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[82 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[83 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[84 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[85 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[86 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[87 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[88 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
        }
      }
      // loc("zirgen/compiler/edsl/component.cpp":49:15)
      auto x20686 = arg2[193 * steps + ((cycle - 0) & mask)];
      assert(x20686 != Fp::invalid());
      if (x20686 != 0) {
        {
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[21 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[22 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[23 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[24 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[25 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[26 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[27 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[28 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[29 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[30 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[31 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[32 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[33 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[34 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[35 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[36 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":53:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":54:3)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":55:3)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":53:3)
          {
            auto& reg = arg2[146 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":54:3)
          {
            auto& reg = arg2[147 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":55:3)
          {
            auto& reg = arg2[148 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[149 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[150 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[151 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[152 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[76 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[77 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[78 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[79 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[80 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[81 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[82 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[83 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[84 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[85 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[86 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[87 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[88 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
        }
      }
      // loc("zirgen/compiler/edsl/component.cpp":49:15)
      auto x20687 = arg2[194 * steps + ((cycle - 0) & mask)];
      assert(x20687 != Fp::invalid());
      if (x20687 != 0) {
        {
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[21 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[22 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[23 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[24 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[25 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[26 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[27 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[28 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[29 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[30 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[31 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[32 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[33 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[34 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[35 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[36 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":53:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":54:3)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":55:3)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":53:3)
          {
            auto& reg = arg2[146 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":54:3)
          {
            auto& reg = arg2[147 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":55:3)
          {
            auto& reg = arg2[148 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[149 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[150 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[151 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[152 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[76 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[77 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[78 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[79 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[80 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[81 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[82 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[83 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[84 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[85 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[86 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[87 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[88 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
        }
      }
      // loc("zirgen/compiler/edsl/component.cpp":49:15)
      auto x20688 = arg2[195 * steps + ((cycle - 0) & mask)];
      assert(x20688 != Fp::invalid());
      if (x20688 != 0) {
        {
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[21 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[22 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[23 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[24 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[25 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[26 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[27 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[28 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[29 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[30 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[31 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[32 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[33 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[34 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[35 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[36 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":53:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":54:3)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":55:3)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":53:3)
          {
            auto& reg = arg2[146 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":54:3)
          {
            auto& reg = arg2[147 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":55:3)
          {
            auto& reg = arg2[148 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[149 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[150 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[151 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[152 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[76 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[77 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[78 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[79 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[80 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[81 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[82 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[83 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[84 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[85 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[86 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[87 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[88 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
        }
      }
      // loc("zirgen/compiler/edsl/component.cpp":49:15)
      auto x20689 = arg2[196 * steps + ((cycle - 0) & mask)];
      assert(x20689 != Fp::invalid());
      if (x20689 != 0) {
        {
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[21 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[22 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[23 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[24 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[25 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[26 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[27 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[28 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[29 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[30 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[31 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[32 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[33 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[34 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[35 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bytes.h":55:30)
          {
            auto& reg = arg2[36 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":53:3)
          {
            auto& reg = arg2[146 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":54:3)
          {
            auto& reg = arg2[147 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/ram.cpp":55:3)
          {
            auto& reg = arg2[148 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x101);
            reg = x101;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[149 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[150 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[151 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("zirgen/components/u32.cpp":38:5)
          {
            auto& reg = arg2[152 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[76 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[77 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[78 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[79 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[80 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[81 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[82 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[83 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[84 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[85 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[86 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[87 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
          // loc("./zirgen/components/bits.h":47:46)
          {
            auto& reg = arg2[88 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x100);
            reg = x100;
          }
        }
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":49:15)
    auto x20690 = arg2[110 * steps + ((cycle - 0) & mask)];
    assert(x20690 != Fp::invalid());
    if (x20690 != 0) {
      {
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[34 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[35 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[36 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":49:15)
    auto x20691 = arg2[111 * steps + ((cycle - 0) & mask)];
    assert(x20691 != Fp::invalid());
    if (x20691 != 0) {
      {
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[34 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[35 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[36 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":49:15)
    auto x20692 = arg2[112 * steps + ((cycle - 0) & mask)];
    assert(x20692 != Fp::invalid());
    if (x20692 != 0) {
      {
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[34 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[35 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[36 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":49:15)
    auto x20693 = arg2[113 * steps + ((cycle - 0) & mask)];
    assert(x20693 != Fp::invalid());
    if (x20693 != 0) {
      {
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[13 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[14 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[15 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[16 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[17 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[18 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[19 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[20 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[21 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[22 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[23 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[24 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[25 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[26 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[27 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[28 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[29 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[30 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[31 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[32 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[33 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[34 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[35 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[36 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[74 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[75 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[76 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[77 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[78 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[79 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[80 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[81 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[82 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[83 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[84 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[85 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[86 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[87 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[88 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":49:15)
    auto x20694 = arg2[114 * steps + ((cycle - 0) & mask)];
    assert(x20694 != Fp::invalid());
    if (x20694 != 0) {
      {
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[32 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[33 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[34 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[35 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[36 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[83 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[84 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[85 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[86 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[87 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[88 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":49:15)
    auto x20695 = arg2[115 * steps + ((cycle - 0) & mask)];
    assert(x20695 != Fp::invalid());
    if (x20695 != 0) {
      {
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[34 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[35 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[36 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[75 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[76 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[77 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[78 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[79 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[80 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[81 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[82 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[83 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[84 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[85 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[86 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[87 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[88 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":49:15)
    auto x20696 = arg2[117 * steps + ((cycle - 0) & mask)];
    assert(x20696 != Fp::invalid());
    if (x20696 != 0) {
      {
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[9 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[10 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[11 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[12 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[13 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[14 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[15 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[16 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[17 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[18 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[19 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[20 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[21 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[22 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[23 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[24 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[25 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[26 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[27 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[28 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[29 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[30 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[31 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[32 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[33 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[34 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[35 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bytes.h":55:30)
        {
          auto& reg = arg2[36 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[72 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[73 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[74 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[75 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[76 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[77 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[78 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[79 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[80 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[81 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[82 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[83 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[84 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[85 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[86 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[87 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
        // loc("./zirgen/components/bits.h":47:46)
        {
          auto& reg = arg2[88 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x100);
          reg = x100;
        }
      }
    }
  }
  if (x20656 != 0) {
    {
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[6 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[7 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[8 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[9 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[10 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[11 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[12 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[13 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[14 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[15 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[16 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[17 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[18 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[19 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[20 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[21 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[22 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[23 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[24 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[25 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[26 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[27 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[28 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[29 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[30 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[31 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[32 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[33 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[34 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[35 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bytes.h":55:30)
      {
        auto& reg = arg2[36 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[70 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[71 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[72 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[73 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[74 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[75 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[76 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[77 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[78 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[79 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[80 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[81 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[82 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[83 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[84 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[85 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[86 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[87 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
      // loc("./zirgen/components/bits.h":47:46)
      {
        auto& reg = arg2[88 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x100);
        reg = x100;
      }
    }
  }
  if (x427 != 0) {
    {
      // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20697 = arg2[115 * steps + ((cycle - 0) & mask)];
      assert(x20697 != Fp::invalid());
      // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20698 = arg2[116 * steps + ((cycle - 0) & mask)];
      assert(x20698 != Fp::invalid());
      // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20699 = arg2[117 * steps + ((cycle - 0) & mask)];
      assert(x20699 != Fp::invalid());
      // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20700 = arg2[118 * steps + ((cycle - 0) & mask)];
      assert(x20700 != Fp::invalid());
      // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20701 = arg2[119 * steps + ((cycle - 0) & mask)];
      assert(x20701 != Fp::invalid());
      // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20702 = arg2[120 * steps + ((cycle - 0) & mask)];
      assert(x20702 != Fp::invalid());
      // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20703 = arg2[121 * steps + ((cycle - 0) & mask)];
      assert(x20703 != Fp::invalid());
      extern_args[0] = x20697;
      extern_args[1] = x20698;
      extern_args[2] = x20699;
      extern_args[3] = x20700;
      extern_args[4] = x20701;
      extern_args[5] = x20702;
      extern_args[6] = x20703;
      extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
      // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20704 = arg2[122 * steps + ((cycle - 0) & mask)];
      assert(x20704 != Fp::invalid());
      // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20705 = arg2[123 * steps + ((cycle - 0) & mask)];
      assert(x20705 != Fp::invalid());
      // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20706 = arg2[124 * steps + ((cycle - 0) & mask)];
      assert(x20706 != Fp::invalid());
      // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20707 = arg2[125 * steps + ((cycle - 0) & mask)];
      assert(x20707 != Fp::invalid());
      // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20708 = arg2[126 * steps + ((cycle - 0) & mask)];
      assert(x20708 != Fp::invalid());
      // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20709 = arg2[127 * steps + ((cycle - 0) & mask)];
      assert(x20709 != Fp::invalid());
      // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20710 = arg2[128 * steps + ((cycle - 0) & mask)];
      assert(x20710 != Fp::invalid());
      extern_args[0] = x20704;
      extern_args[1] = x20705;
      extern_args[2] = x20706;
      extern_args[3] = x20707;
      extern_args[4] = x20708;
      extern_args[5] = x20709;
      extern_args[6] = x20710;
      extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
      // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20711 = arg2[129 * steps + ((cycle - 0) & mask)];
      assert(x20711 != Fp::invalid());
      // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20712 = arg2[130 * steps + ((cycle - 0) & mask)];
      assert(x20712 != Fp::invalid());
      // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20713 = arg2[131 * steps + ((cycle - 0) & mask)];
      assert(x20713 != Fp::invalid());
      // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20714 = arg2[132 * steps + ((cycle - 0) & mask)];
      assert(x20714 != Fp::invalid());
      // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20715 = arg2[133 * steps + ((cycle - 0) & mask)];
      assert(x20715 != Fp::invalid());
      // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20716 = arg2[134 * steps + ((cycle - 0) & mask)];
      assert(x20716 != Fp::invalid());
      // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20717 = arg2[135 * steps + ((cycle - 0) & mask)];
      assert(x20717 != Fp::invalid());
      extern_args[0] = x20711;
      extern_args[1] = x20712;
      extern_args[2] = x20713;
      extern_args[3] = x20714;
      extern_args[4] = x20715;
      extern_args[5] = x20716;
      extern_args[6] = x20717;
      extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
      // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20718 = arg2[136 * steps + ((cycle - 0) & mask)];
      assert(x20718 != Fp::invalid());
      // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20719 = arg2[137 * steps + ((cycle - 0) & mask)];
      assert(x20719 != Fp::invalid());
      // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20720 = arg2[138 * steps + ((cycle - 0) & mask)];
      assert(x20720 != Fp::invalid());
      // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20721 = arg2[139 * steps + ((cycle - 0) & mask)];
      assert(x20721 != Fp::invalid());
      // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20722 = arg2[140 * steps + ((cycle - 0) & mask)];
      assert(x20722 != Fp::invalid());
      // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20723 = arg2[141 * steps + ((cycle - 0) & mask)];
      assert(x20723 != Fp::invalid());
      // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20724 = arg2[142 * steps + ((cycle - 0) & mask)];
      assert(x20724 != Fp::invalid());
      extern_args[0] = x20718;
      extern_args[1] = x20719;
      extern_args[2] = x20720;
      extern_args[3] = x20721;
      extern_args[4] = x20722;
      extern_args[5] = x20723;
      extern_args[6] = x20724;
      extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
    }
  }
  if (x480 != 0) {
    {
      // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20725 = arg2[118 * steps + ((cycle - 0) & mask)];
      assert(x20725 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20726 = arg2[119 * steps + ((cycle - 0) & mask)];
      assert(x20726 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20727 = arg2[120 * steps + ((cycle - 0) & mask)];
      assert(x20727 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20728 = arg2[121 * steps + ((cycle - 0) & mask)];
      assert(x20728 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20729 = arg2[122 * steps + ((cycle - 0) & mask)];
      assert(x20729 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20730 = arg2[123 * steps + ((cycle - 0) & mask)];
      assert(x20730 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20731 = arg2[124 * steps + ((cycle - 0) & mask)];
      assert(x20731 != Fp::invalid());
      extern_args[0] = x20725;
      extern_args[1] = x20726;
      extern_args[2] = x20727;
      extern_args[3] = x20728;
      extern_args[4] = x20729;
      extern_args[5] = x20730;
      extern_args[6] = x20731;
      extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
      // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20732 = arg2[125 * steps + ((cycle - 0) & mask)];
      assert(x20732 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20733 = arg2[126 * steps + ((cycle - 0) & mask)];
      assert(x20733 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20734 = arg2[127 * steps + ((cycle - 0) & mask)];
      assert(x20734 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20735 = arg2[128 * steps + ((cycle - 0) & mask)];
      assert(x20735 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20736 = arg2[129 * steps + ((cycle - 0) & mask)];
      assert(x20736 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20737 = arg2[130 * steps + ((cycle - 0) & mask)];
      assert(x20737 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20738 = arg2[131 * steps + ((cycle - 0) & mask)];
      assert(x20738 != Fp::invalid());
      extern_args[0] = x20732;
      extern_args[1] = x20733;
      extern_args[2] = x20734;
      extern_args[3] = x20735;
      extern_args[4] = x20736;
      extern_args[5] = x20737;
      extern_args[6] = x20738;
      extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
      // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20739 = arg2[132 * steps + ((cycle - 0) & mask)];
      assert(x20739 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20740 = arg2[133 * steps + ((cycle - 0) & mask)];
      assert(x20740 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20741 = arg2[134 * steps + ((cycle - 0) & mask)];
      assert(x20741 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20742 = arg2[135 * steps + ((cycle - 0) & mask)];
      assert(x20742 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20743 = arg2[136 * steps + ((cycle - 0) & mask)];
      assert(x20743 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20744 = arg2[137 * steps + ((cycle - 0) & mask)];
      assert(x20744 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20745 = arg2[138 * steps + ((cycle - 0) & mask)];
      assert(x20745 != Fp::invalid());
      extern_args[0] = x20739;
      extern_args[1] = x20740;
      extern_args[2] = x20741;
      extern_args[3] = x20742;
      extern_args[4] = x20743;
      extern_args[5] = x20744;
      extern_args[6] = x20745;
      extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
      // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20746 = arg2[139 * steps + ((cycle - 0) & mask)];
      assert(x20746 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20747 = arg2[140 * steps + ((cycle - 0) & mask)];
      assert(x20747 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20748 = arg2[141 * steps + ((cycle - 0) & mask)];
      assert(x20748 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20749 = arg2[142 * steps + ((cycle - 0) & mask)];
      assert(x20749 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20750 = arg2[143 * steps + ((cycle - 0) & mask)];
      assert(x20750 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20751 = arg2[144 * steps + ((cycle - 0) & mask)];
      assert(x20751 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
      auto x20752 = arg2[145 * steps + ((cycle - 0) & mask)];
      assert(x20752 != Fp::invalid());
      extern_args[0] = x20746;
      extern_args[1] = x20747;
      extern_args[2] = x20748;
      extern_args[3] = x20749;
      extern_args[4] = x20750;
      extern_args[5] = x20751;
      extern_args[6] = x20752;
      extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
    }
  }
  if (x965 != 0) {
    // loc("zirgen/compiler/edsl/component.cpp":49:15)
    auto x20753 = arg2[101 * steps + ((cycle - 0) & mask)];
    assert(x20753 != Fp::invalid());
    if (x20753 != 0) {
      {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20754 = arg2[118 * steps + ((cycle - 0) & mask)];
        assert(x20754 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20755 = arg2[119 * steps + ((cycle - 0) & mask)];
        assert(x20755 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20756 = arg2[120 * steps + ((cycle - 0) & mask)];
        assert(x20756 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20757 = arg2[121 * steps + ((cycle - 0) & mask)];
        assert(x20757 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20758 = arg2[122 * steps + ((cycle - 0) & mask)];
        assert(x20758 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20759 = arg2[123 * steps + ((cycle - 0) & mask)];
        assert(x20759 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20760 = arg2[124 * steps + ((cycle - 0) & mask)];
        assert(x20760 != Fp::invalid());
        extern_args[0] = x20754;
        extern_args[1] = x20755;
        extern_args[2] = x20756;
        extern_args[3] = x20757;
        extern_args[4] = x20758;
        extern_args[5] = x20759;
        extern_args[6] = x20760;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20761 = arg2[125 * steps + ((cycle - 0) & mask)];
        assert(x20761 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20762 = arg2[126 * steps + ((cycle - 0) & mask)];
        assert(x20762 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20763 = arg2[127 * steps + ((cycle - 0) & mask)];
        assert(x20763 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20764 = arg2[128 * steps + ((cycle - 0) & mask)];
        assert(x20764 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20765 = arg2[129 * steps + ((cycle - 0) & mask)];
        assert(x20765 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20766 = arg2[130 * steps + ((cycle - 0) & mask)];
        assert(x20766 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20767 = arg2[131 * steps + ((cycle - 0) & mask)];
        assert(x20767 != Fp::invalid());
        extern_args[0] = x20761;
        extern_args[1] = x20762;
        extern_args[2] = x20763;
        extern_args[3] = x20764;
        extern_args[4] = x20765;
        extern_args[5] = x20766;
        extern_args[6] = x20767;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20768 = arg2[132 * steps + ((cycle - 0) & mask)];
        assert(x20768 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20769 = arg2[133 * steps + ((cycle - 0) & mask)];
        assert(x20769 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20770 = arg2[134 * steps + ((cycle - 0) & mask)];
        assert(x20770 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20771 = arg2[135 * steps + ((cycle - 0) & mask)];
        assert(x20771 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20772 = arg2[136 * steps + ((cycle - 0) & mask)];
        assert(x20772 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20773 = arg2[137 * steps + ((cycle - 0) & mask)];
        assert(x20773 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20774 = arg2[138 * steps + ((cycle - 0) & mask)];
        assert(x20774 != Fp::invalid());
        extern_args[0] = x20768;
        extern_args[1] = x20769;
        extern_args[2] = x20770;
        extern_args[3] = x20771;
        extern_args[4] = x20772;
        extern_args[5] = x20773;
        extern_args[6] = x20774;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20775 = arg2[139 * steps + ((cycle - 0) & mask)];
        assert(x20775 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20776 = arg2[140 * steps + ((cycle - 0) & mask)];
        assert(x20776 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20777 = arg2[141 * steps + ((cycle - 0) & mask)];
        assert(x20777 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20778 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x20778 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20779 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x20779 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20780 = arg2[144 * steps + ((cycle - 0) & mask)];
        assert(x20780 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20781 = arg2[145 * steps + ((cycle - 0) & mask)];
        assert(x20781 != Fp::invalid());
        extern_args[0] = x20775;
        extern_args[1] = x20776;
        extern_args[2] = x20777;
        extern_args[3] = x20778;
        extern_args[4] = x20779;
        extern_args[5] = x20780;
        extern_args[6] = x20781;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":49:15)
    auto x20782 = arg2[102 * steps + ((cycle - 0) & mask)];
    assert(x20782 != Fp::invalid());
    if (x20782 != 0) {
      {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20783 = arg2[118 * steps + ((cycle - 0) & mask)];
        assert(x20783 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20784 = arg2[119 * steps + ((cycle - 0) & mask)];
        assert(x20784 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20785 = arg2[120 * steps + ((cycle - 0) & mask)];
        assert(x20785 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20786 = arg2[121 * steps + ((cycle - 0) & mask)];
        assert(x20786 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20787 = arg2[122 * steps + ((cycle - 0) & mask)];
        assert(x20787 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20788 = arg2[123 * steps + ((cycle - 0) & mask)];
        assert(x20788 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20789 = arg2[124 * steps + ((cycle - 0) & mask)];
        assert(x20789 != Fp::invalid());
        extern_args[0] = x20783;
        extern_args[1] = x20784;
        extern_args[2] = x20785;
        extern_args[3] = x20786;
        extern_args[4] = x20787;
        extern_args[5] = x20788;
        extern_args[6] = x20789;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20790 = arg2[125 * steps + ((cycle - 0) & mask)];
        assert(x20790 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20791 = arg2[126 * steps + ((cycle - 0) & mask)];
        assert(x20791 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20792 = arg2[127 * steps + ((cycle - 0) & mask)];
        assert(x20792 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20793 = arg2[128 * steps + ((cycle - 0) & mask)];
        assert(x20793 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20794 = arg2[129 * steps + ((cycle - 0) & mask)];
        assert(x20794 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20795 = arg2[130 * steps + ((cycle - 0) & mask)];
        assert(x20795 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20796 = arg2[131 * steps + ((cycle - 0) & mask)];
        assert(x20796 != Fp::invalid());
        extern_args[0] = x20790;
        extern_args[1] = x20791;
        extern_args[2] = x20792;
        extern_args[3] = x20793;
        extern_args[4] = x20794;
        extern_args[5] = x20795;
        extern_args[6] = x20796;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20797 = arg2[132 * steps + ((cycle - 0) & mask)];
        assert(x20797 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20798 = arg2[133 * steps + ((cycle - 0) & mask)];
        assert(x20798 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20799 = arg2[134 * steps + ((cycle - 0) & mask)];
        assert(x20799 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20800 = arg2[135 * steps + ((cycle - 0) & mask)];
        assert(x20800 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20801 = arg2[136 * steps + ((cycle - 0) & mask)];
        assert(x20801 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20802 = arg2[137 * steps + ((cycle - 0) & mask)];
        assert(x20802 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20803 = arg2[138 * steps + ((cycle - 0) & mask)];
        assert(x20803 != Fp::invalid());
        extern_args[0] = x20797;
        extern_args[1] = x20798;
        extern_args[2] = x20799;
        extern_args[3] = x20800;
        extern_args[4] = x20801;
        extern_args[5] = x20802;
        extern_args[6] = x20803;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20804 = arg2[139 * steps + ((cycle - 0) & mask)];
        assert(x20804 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20805 = arg2[140 * steps + ((cycle - 0) & mask)];
        assert(x20805 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20806 = arg2[141 * steps + ((cycle - 0) & mask)];
        assert(x20806 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20807 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x20807 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20808 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x20808 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20809 = arg2[144 * steps + ((cycle - 0) & mask)];
        assert(x20809 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20810 = arg2[145 * steps + ((cycle - 0) & mask)];
        assert(x20810 != Fp::invalid());
        extern_args[0] = x20804;
        extern_args[1] = x20805;
        extern_args[2] = x20806;
        extern_args[3] = x20807;
        extern_args[4] = x20808;
        extern_args[5] = x20809;
        extern_args[6] = x20810;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":49:15)
    auto x20811 = arg2[103 * steps + ((cycle - 0) & mask)];
    assert(x20811 != Fp::invalid());
    if (x20811 != 0) {
      {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20812 = arg2[118 * steps + ((cycle - 0) & mask)];
        assert(x20812 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20813 = arg2[119 * steps + ((cycle - 0) & mask)];
        assert(x20813 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20814 = arg2[120 * steps + ((cycle - 0) & mask)];
        assert(x20814 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20815 = arg2[121 * steps + ((cycle - 0) & mask)];
        assert(x20815 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20816 = arg2[122 * steps + ((cycle - 0) & mask)];
        assert(x20816 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20817 = arg2[123 * steps + ((cycle - 0) & mask)];
        assert(x20817 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20818 = arg2[124 * steps + ((cycle - 0) & mask)];
        assert(x20818 != Fp::invalid());
        extern_args[0] = x20812;
        extern_args[1] = x20813;
        extern_args[2] = x20814;
        extern_args[3] = x20815;
        extern_args[4] = x20816;
        extern_args[5] = x20817;
        extern_args[6] = x20818;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20819 = arg2[125 * steps + ((cycle - 0) & mask)];
        assert(x20819 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20820 = arg2[126 * steps + ((cycle - 0) & mask)];
        assert(x20820 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20821 = arg2[127 * steps + ((cycle - 0) & mask)];
        assert(x20821 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20822 = arg2[128 * steps + ((cycle - 0) & mask)];
        assert(x20822 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20823 = arg2[129 * steps + ((cycle - 0) & mask)];
        assert(x20823 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20824 = arg2[130 * steps + ((cycle - 0) & mask)];
        assert(x20824 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20825 = arg2[131 * steps + ((cycle - 0) & mask)];
        assert(x20825 != Fp::invalid());
        extern_args[0] = x20819;
        extern_args[1] = x20820;
        extern_args[2] = x20821;
        extern_args[3] = x20822;
        extern_args[4] = x20823;
        extern_args[5] = x20824;
        extern_args[6] = x20825;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20826 = arg2[132 * steps + ((cycle - 0) & mask)];
        assert(x20826 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20827 = arg2[133 * steps + ((cycle - 0) & mask)];
        assert(x20827 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20828 = arg2[134 * steps + ((cycle - 0) & mask)];
        assert(x20828 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20829 = arg2[135 * steps + ((cycle - 0) & mask)];
        assert(x20829 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20830 = arg2[136 * steps + ((cycle - 0) & mask)];
        assert(x20830 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20831 = arg2[137 * steps + ((cycle - 0) & mask)];
        assert(x20831 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20832 = arg2[138 * steps + ((cycle - 0) & mask)];
        assert(x20832 != Fp::invalid());
        extern_args[0] = x20826;
        extern_args[1] = x20827;
        extern_args[2] = x20828;
        extern_args[3] = x20829;
        extern_args[4] = x20830;
        extern_args[5] = x20831;
        extern_args[6] = x20832;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20833 = arg2[139 * steps + ((cycle - 0) & mask)];
        assert(x20833 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20834 = arg2[140 * steps + ((cycle - 0) & mask)];
        assert(x20834 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20835 = arg2[141 * steps + ((cycle - 0) & mask)];
        assert(x20835 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20836 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x20836 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20837 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x20837 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20838 = arg2[144 * steps + ((cycle - 0) & mask)];
        assert(x20838 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/compute2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20839 = arg2[145 * steps + ((cycle - 0) & mask)];
        assert(x20839 != Fp::invalid());
        extern_args[0] = x20833;
        extern_args[1] = x20834;
        extern_args[2] = x20835;
        extern_args[3] = x20836;
        extern_args[4] = x20837;
        extern_args[5] = x20838;
        extern_args[6] = x20839;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":49:15)
    auto x20840 = arg2[104 * steps + ((cycle - 0) & mask)];
    assert(x20840 != Fp::invalid());
    if (x20840 != 0) {
      {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20841 = arg2[118 * steps + ((cycle - 0) & mask)];
        assert(x20841 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20842 = arg2[119 * steps + ((cycle - 0) & mask)];
        assert(x20842 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20843 = arg2[120 * steps + ((cycle - 0) & mask)];
        assert(x20843 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20844 = arg2[121 * steps + ((cycle - 0) & mask)];
        assert(x20844 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20845 = arg2[122 * steps + ((cycle - 0) & mask)];
        assert(x20845 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20846 = arg2[123 * steps + ((cycle - 0) & mask)];
        assert(x20846 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20847 = arg2[124 * steps + ((cycle - 0) & mask)];
        assert(x20847 != Fp::invalid());
        extern_args[0] = x20841;
        extern_args[1] = x20842;
        extern_args[2] = x20843;
        extern_args[3] = x20844;
        extern_args[4] = x20845;
        extern_args[5] = x20846;
        extern_args[6] = x20847;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20848 = arg2[125 * steps + ((cycle - 0) & mask)];
        assert(x20848 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20849 = arg2[126 * steps + ((cycle - 0) & mask)];
        assert(x20849 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20850 = arg2[127 * steps + ((cycle - 0) & mask)];
        assert(x20850 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20851 = arg2[128 * steps + ((cycle - 0) & mask)];
        assert(x20851 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20852 = arg2[129 * steps + ((cycle - 0) & mask)];
        assert(x20852 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20853 = arg2[130 * steps + ((cycle - 0) & mask)];
        assert(x20853 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20854 = arg2[131 * steps + ((cycle - 0) & mask)];
        assert(x20854 != Fp::invalid());
        extern_args[0] = x20848;
        extern_args[1] = x20849;
        extern_args[2] = x20850;
        extern_args[3] = x20851;
        extern_args[4] = x20852;
        extern_args[5] = x20853;
        extern_args[6] = x20854;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20855 = arg2[132 * steps + ((cycle - 0) & mask)];
        assert(x20855 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20856 = arg2[133 * steps + ((cycle - 0) & mask)];
        assert(x20856 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20857 = arg2[134 * steps + ((cycle - 0) & mask)];
        assert(x20857 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20858 = arg2[135 * steps + ((cycle - 0) & mask)];
        assert(x20858 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20859 = arg2[136 * steps + ((cycle - 0) & mask)];
        assert(x20859 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20860 = arg2[137 * steps + ((cycle - 0) & mask)];
        assert(x20860 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20861 = arg2[138 * steps + ((cycle - 0) & mask)];
        assert(x20861 != Fp::invalid());
        extern_args[0] = x20855;
        extern_args[1] = x20856;
        extern_args[2] = x20857;
        extern_args[3] = x20858;
        extern_args[4] = x20859;
        extern_args[5] = x20860;
        extern_args[6] = x20861;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20862 = arg2[139 * steps + ((cycle - 0) & mask)];
        assert(x20862 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20863 = arg2[140 * steps + ((cycle - 0) & mask)];
        assert(x20863 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20864 = arg2[141 * steps + ((cycle - 0) & mask)];
        assert(x20864 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20865 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x20865 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20866 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x20866 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20867 = arg2[144 * steps + ((cycle - 0) & mask)];
        assert(x20867 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20868 = arg2[145 * steps + ((cycle - 0) & mask)];
        assert(x20868 != Fp::invalid());
        extern_args[0] = x20862;
        extern_args[1] = x20863;
        extern_args[2] = x20864;
        extern_args[3] = x20865;
        extern_args[4] = x20866;
        extern_args[5] = x20867;
        extern_args[6] = x20868;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20869 = arg2[146 * steps + ((cycle - 0) & mask)];
        assert(x20869 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20870 = arg2[147 * steps + ((cycle - 0) & mask)];
        assert(x20870 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20871 = arg2[148 * steps + ((cycle - 0) & mask)];
        assert(x20871 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20872 = arg2[149 * steps + ((cycle - 0) & mask)];
        assert(x20872 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20873 = arg2[150 * steps + ((cycle - 0) & mask)];
        assert(x20873 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20874 = arg2[151 * steps + ((cycle - 0) & mask)];
        assert(x20874 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/mem_io(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20875 = arg2[152 * steps + ((cycle - 0) & mask)];
        assert(x20875 != Fp::invalid());
        extern_args[0] = x20869;
        extern_args[1] = x20870;
        extern_args[2] = x20871;
        extern_args[3] = x20872;
        extern_args[4] = x20873;
        extern_args[5] = x20874;
        extern_args[6] = x20875;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":49:15)
    auto x20876 = arg2[105 * steps + ((cycle - 0) & mask)];
    assert(x20876 != Fp::invalid());
    if (x20876 != 0) {
      {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20877 = arg2[118 * steps + ((cycle - 0) & mask)];
        assert(x20877 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20878 = arg2[119 * steps + ((cycle - 0) & mask)];
        assert(x20878 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20879 = arg2[120 * steps + ((cycle - 0) & mask)];
        assert(x20879 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20880 = arg2[121 * steps + ((cycle - 0) & mask)];
        assert(x20880 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20881 = arg2[122 * steps + ((cycle - 0) & mask)];
        assert(x20881 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20882 = arg2[123 * steps + ((cycle - 0) & mask)];
        assert(x20882 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20883 = arg2[124 * steps + ((cycle - 0) & mask)];
        assert(x20883 != Fp::invalid());
        extern_args[0] = x20877;
        extern_args[1] = x20878;
        extern_args[2] = x20879;
        extern_args[3] = x20880;
        extern_args[4] = x20881;
        extern_args[5] = x20882;
        extern_args[6] = x20883;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20884 = arg2[125 * steps + ((cycle - 0) & mask)];
        assert(x20884 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20885 = arg2[126 * steps + ((cycle - 0) & mask)];
        assert(x20885 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20886 = arg2[127 * steps + ((cycle - 0) & mask)];
        assert(x20886 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20887 = arg2[128 * steps + ((cycle - 0) & mask)];
        assert(x20887 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20888 = arg2[129 * steps + ((cycle - 0) & mask)];
        assert(x20888 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20889 = arg2[130 * steps + ((cycle - 0) & mask)];
        assert(x20889 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20890 = arg2[131 * steps + ((cycle - 0) & mask)];
        assert(x20890 != Fp::invalid());
        extern_args[0] = x20884;
        extern_args[1] = x20885;
        extern_args[2] = x20886;
        extern_args[3] = x20887;
        extern_args[4] = x20888;
        extern_args[5] = x20889;
        extern_args[6] = x20890;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20891 = arg2[132 * steps + ((cycle - 0) & mask)];
        assert(x20891 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20892 = arg2[133 * steps + ((cycle - 0) & mask)];
        assert(x20892 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20893 = arg2[134 * steps + ((cycle - 0) & mask)];
        assert(x20893 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20894 = arg2[135 * steps + ((cycle - 0) & mask)];
        assert(x20894 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20895 = arg2[136 * steps + ((cycle - 0) & mask)];
        assert(x20895 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20896 = arg2[137 * steps + ((cycle - 0) & mask)];
        assert(x20896 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20897 = arg2[138 * steps + ((cycle - 0) & mask)];
        assert(x20897 != Fp::invalid());
        extern_args[0] = x20891;
        extern_args[1] = x20892;
        extern_args[2] = x20893;
        extern_args[3] = x20894;
        extern_args[4] = x20895;
        extern_args[5] = x20896;
        extern_args[6] = x20897;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20898 = arg2[139 * steps + ((cycle - 0) & mask)];
        assert(x20898 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20899 = arg2[140 * steps + ((cycle - 0) & mask)];
        assert(x20899 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20900 = arg2[141 * steps + ((cycle - 0) & mask)];
        assert(x20900 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20901 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x20901 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20902 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x20902 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20903 = arg2[144 * steps + ((cycle - 0) & mask)];
        assert(x20903 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/multiply(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20904 = arg2[145 * steps + ((cycle - 0) & mask)];
        assert(x20904 != Fp::invalid());
        extern_args[0] = x20898;
        extern_args[1] = x20899;
        extern_args[2] = x20900;
        extern_args[3] = x20901;
        extern_args[4] = x20902;
        extern_args[5] = x20903;
        extern_args[6] = x20904;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":49:15)
    auto x20905 = arg2[106 * steps + ((cycle - 0) & mask)];
    assert(x20905 != Fp::invalid());
    if (x20905 != 0) {
      {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20906 = arg2[118 * steps + ((cycle - 0) & mask)];
        assert(x20906 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20907 = arg2[119 * steps + ((cycle - 0) & mask)];
        assert(x20907 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20908 = arg2[120 * steps + ((cycle - 0) & mask)];
        assert(x20908 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20909 = arg2[121 * steps + ((cycle - 0) & mask)];
        assert(x20909 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20910 = arg2[122 * steps + ((cycle - 0) & mask)];
        assert(x20910 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20911 = arg2[123 * steps + ((cycle - 0) & mask)];
        assert(x20911 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20912 = arg2[124 * steps + ((cycle - 0) & mask)];
        assert(x20912 != Fp::invalid());
        extern_args[0] = x20906;
        extern_args[1] = x20907;
        extern_args[2] = x20908;
        extern_args[3] = x20909;
        extern_args[4] = x20910;
        extern_args[5] = x20911;
        extern_args[6] = x20912;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20913 = arg2[125 * steps + ((cycle - 0) & mask)];
        assert(x20913 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20914 = arg2[126 * steps + ((cycle - 0) & mask)];
        assert(x20914 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20915 = arg2[127 * steps + ((cycle - 0) & mask)];
        assert(x20915 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20916 = arg2[128 * steps + ((cycle - 0) & mask)];
        assert(x20916 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20917 = arg2[129 * steps + ((cycle - 0) & mask)];
        assert(x20917 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20918 = arg2[130 * steps + ((cycle - 0) & mask)];
        assert(x20918 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20919 = arg2[131 * steps + ((cycle - 0) & mask)];
        assert(x20919 != Fp::invalid());
        extern_args[0] = x20913;
        extern_args[1] = x20914;
        extern_args[2] = x20915;
        extern_args[3] = x20916;
        extern_args[4] = x20917;
        extern_args[5] = x20918;
        extern_args[6] = x20919;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20920 = arg2[132 * steps + ((cycle - 0) & mask)];
        assert(x20920 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20921 = arg2[133 * steps + ((cycle - 0) & mask)];
        assert(x20921 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20922 = arg2[134 * steps + ((cycle - 0) & mask)];
        assert(x20922 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20923 = arg2[135 * steps + ((cycle - 0) & mask)];
        assert(x20923 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20924 = arg2[136 * steps + ((cycle - 0) & mask)];
        assert(x20924 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20925 = arg2[137 * steps + ((cycle - 0) & mask)];
        assert(x20925 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20926 = arg2[138 * steps + ((cycle - 0) & mask)];
        assert(x20926 != Fp::invalid());
        extern_args[0] = x20920;
        extern_args[1] = x20921;
        extern_args[2] = x20922;
        extern_args[3] = x20923;
        extern_args[4] = x20924;
        extern_args[5] = x20925;
        extern_args[6] = x20926;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20927 = arg2[139 * steps + ((cycle - 0) & mask)];
        assert(x20927 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20928 = arg2[140 * steps + ((cycle - 0) & mask)];
        assert(x20928 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20929 = arg2[141 * steps + ((cycle - 0) & mask)];
        assert(x20929 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20930 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x20930 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20931 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x20931 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20932 = arg2[144 * steps + ((cycle - 0) & mask)];
        assert(x20932 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/divide(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20933 = arg2[145 * steps + ((cycle - 0) & mask)];
        assert(x20933 != Fp::invalid());
        extern_args[0] = x20927;
        extern_args[1] = x20928;
        extern_args[2] = x20929;
        extern_args[3] = x20930;
        extern_args[4] = x20931;
        extern_args[5] = x20932;
        extern_args[6] = x20933;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":49:15)
    auto x20934 = arg2[109 * steps + ((cycle - 0) & mask)];
    assert(x20934 != Fp::invalid());
    if (x20934 != 0) {
      {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20935 = arg2[118 * steps + ((cycle - 0) & mask)];
        assert(x20935 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20936 = arg2[119 * steps + ((cycle - 0) & mask)];
        assert(x20936 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20937 = arg2[120 * steps + ((cycle - 0) & mask)];
        assert(x20937 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20938 = arg2[121 * steps + ((cycle - 0) & mask)];
        assert(x20938 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20939 = arg2[122 * steps + ((cycle - 0) & mask)];
        assert(x20939 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20940 = arg2[123 * steps + ((cycle - 0) & mask)];
        assert(x20940 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20941 = arg2[124 * steps + ((cycle - 0) & mask)];
        assert(x20941 != Fp::invalid());
        extern_args[0] = x20935;
        extern_args[1] = x20936;
        extern_args[2] = x20937;
        extern_args[3] = x20938;
        extern_args[4] = x20939;
        extern_args[5] = x20940;
        extern_args[6] = x20941;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20942 = arg2[125 * steps + ((cycle - 0) & mask)];
        assert(x20942 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20943 = arg2[126 * steps + ((cycle - 0) & mask)];
        assert(x20943 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20944 = arg2[127 * steps + ((cycle - 0) & mask)];
        assert(x20944 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20945 = arg2[128 * steps + ((cycle - 0) & mask)];
        assert(x20945 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20946 = arg2[129 * steps + ((cycle - 0) & mask)];
        assert(x20946 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20947 = arg2[130 * steps + ((cycle - 0) & mask)];
        assert(x20947 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20948 = arg2[131 * steps + ((cycle - 0) & mask)];
        assert(x20948 != Fp::invalid());
        extern_args[0] = x20942;
        extern_args[1] = x20943;
        extern_args[2] = x20944;
        extern_args[3] = x20945;
        extern_args[4] = x20946;
        extern_args[5] = x20947;
        extern_args[6] = x20948;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20949 = arg2[132 * steps + ((cycle - 0) & mask)];
        assert(x20949 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20950 = arg2[133 * steps + ((cycle - 0) & mask)];
        assert(x20950 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20951 = arg2[134 * steps + ((cycle - 0) & mask)];
        assert(x20951 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20952 = arg2[135 * steps + ((cycle - 0) & mask)];
        assert(x20952 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20953 = arg2[136 * steps + ((cycle - 0) & mask)];
        assert(x20953 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20954 = arg2[137 * steps + ((cycle - 0) & mask)];
        assert(x20954 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20955 = arg2[138 * steps + ((cycle - 0) & mask)];
        assert(x20955 != Fp::invalid());
        extern_args[0] = x20949;
        extern_args[1] = x20950;
        extern_args[2] = x20951;
        extern_args[3] = x20952;
        extern_args[4] = x20953;
        extern_args[5] = x20954;
        extern_args[6] = x20955;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20956 = arg2[139 * steps + ((cycle - 0) & mask)];
        assert(x20956 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20957 = arg2[140 * steps + ((cycle - 0) & mask)];
        assert(x20957 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20958 = arg2[141 * steps + ((cycle - 0) & mask)];
        assert(x20958 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20959 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x20959 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20960 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x20960 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20961 = arg2[144 * steps + ((cycle - 0) & mask)];
        assert(x20961 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20962 = arg2[145 * steps + ((cycle - 0) & mask)];
        assert(x20962 != Fp::invalid());
        extern_args[0] = x20956;
        extern_args[1] = x20957;
        extern_args[2] = x20958;
        extern_args[3] = x20959;
        extern_args[4] = x20960;
        extern_args[5] = x20961;
        extern_args[6] = x20962;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20963 = arg2[146 * steps + ((cycle - 0) & mask)];
        assert(x20963 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20964 = arg2[147 * steps + ((cycle - 0) & mask)];
        assert(x20964 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20965 = arg2[148 * steps + ((cycle - 0) & mask)];
        assert(x20965 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20966 = arg2[149 * steps + ((cycle - 0) & mask)];
        assert(x20966 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20967 = arg2[150 * steps + ((cycle - 0) & mask)];
        assert(x20967 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20968 = arg2[151 * steps + ((cycle - 0) & mask)];
        assert(x20968 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20969 = arg2[152 * steps + ((cycle - 0) & mask)];
        assert(x20969 != Fp::invalid());
        extern_args[0] = x20963;
        extern_args[1] = x20964;
        extern_args[2] = x20965;
        extern_args[3] = x20966;
        extern_args[4] = x20967;
        extern_args[5] = x20968;
        extern_args[6] = x20969;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":49:15)
    auto x20970 = arg2[110 * steps + ((cycle - 0) & mask)];
    assert(x20970 != Fp::invalid());
    if (x20970 != 0) {
      {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20971 = arg2[118 * steps + ((cycle - 0) & mask)];
        assert(x20971 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20972 = arg2[119 * steps + ((cycle - 0) & mask)];
        assert(x20972 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20973 = arg2[120 * steps + ((cycle - 0) & mask)];
        assert(x20973 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20974 = arg2[121 * steps + ((cycle - 0) & mask)];
        assert(x20974 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20975 = arg2[122 * steps + ((cycle - 0) & mask)];
        assert(x20975 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20976 = arg2[123 * steps + ((cycle - 0) & mask)];
        assert(x20976 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20977 = arg2[124 * steps + ((cycle - 0) & mask)];
        assert(x20977 != Fp::invalid());
        extern_args[0] = x20971;
        extern_args[1] = x20972;
        extern_args[2] = x20973;
        extern_args[3] = x20974;
        extern_args[4] = x20975;
        extern_args[5] = x20976;
        extern_args[6] = x20977;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20978 = arg2[125 * steps + ((cycle - 0) & mask)];
        assert(x20978 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20979 = arg2[126 * steps + ((cycle - 0) & mask)];
        assert(x20979 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20980 = arg2[127 * steps + ((cycle - 0) & mask)];
        assert(x20980 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20981 = arg2[128 * steps + ((cycle - 0) & mask)];
        assert(x20981 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20982 = arg2[129 * steps + ((cycle - 0) & mask)];
        assert(x20982 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20983 = arg2[130 * steps + ((cycle - 0) & mask)];
        assert(x20983 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_init(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20984 = arg2[131 * steps + ((cycle - 0) & mask)];
        assert(x20984 != Fp::invalid());
        extern_args[0] = x20978;
        extern_args[1] = x20979;
        extern_args[2] = x20980;
        extern_args[3] = x20981;
        extern_args[4] = x20982;
        extern_args[5] = x20983;
        extern_args[6] = x20984;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":49:15)
    auto x20985 = arg2[111 * steps + ((cycle - 0) & mask)];
    assert(x20985 != Fp::invalid());
    if (x20985 != 0) {
      {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20986 = arg2[118 * steps + ((cycle - 0) & mask)];
        assert(x20986 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20987 = arg2[119 * steps + ((cycle - 0) & mask)];
        assert(x20987 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20988 = arg2[120 * steps + ((cycle - 0) & mask)];
        assert(x20988 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20989 = arg2[121 * steps + ((cycle - 0) & mask)];
        assert(x20989 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20990 = arg2[122 * steps + ((cycle - 0) & mask)];
        assert(x20990 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20991 = arg2[123 * steps + ((cycle - 0) & mask)];
        assert(x20991 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20992 = arg2[124 * steps + ((cycle - 0) & mask)];
        assert(x20992 != Fp::invalid());
        extern_args[0] = x20986;
        extern_args[1] = x20987;
        extern_args[2] = x20988;
        extern_args[3] = x20989;
        extern_args[4] = x20990;
        extern_args[5] = x20991;
        extern_args[6] = x20992;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20993 = arg2[125 * steps + ((cycle - 0) & mask)];
        assert(x20993 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20994 = arg2[126 * steps + ((cycle - 0) & mask)];
        assert(x20994 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20995 = arg2[127 * steps + ((cycle - 0) & mask)];
        assert(x20995 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20996 = arg2[128 * steps + ((cycle - 0) & mask)];
        assert(x20996 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20997 = arg2[129 * steps + ((cycle - 0) & mask)];
        assert(x20997 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20998 = arg2[130 * steps + ((cycle - 0) & mask)];
        assert(x20998 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_load(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x20999 = arg2[131 * steps + ((cycle - 0) & mask)];
        assert(x20999 != Fp::invalid());
        extern_args[0] = x20993;
        extern_args[1] = x20994;
        extern_args[2] = x20995;
        extern_args[3] = x20996;
        extern_args[4] = x20997;
        extern_args[5] = x20998;
        extern_args[6] = x20999;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":49:15)
    auto x21000 = arg2[112 * steps + ((cycle - 0) & mask)];
    assert(x21000 != Fp::invalid());
    if (x21000 != 0) {
      {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21001 = arg2[118 * steps + ((cycle - 0) & mask)];
        assert(x21001 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21002 = arg2[119 * steps + ((cycle - 0) & mask)];
        assert(x21002 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21003 = arg2[120 * steps + ((cycle - 0) & mask)];
        assert(x21003 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21004 = arg2[121 * steps + ((cycle - 0) & mask)];
        assert(x21004 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21005 = arg2[122 * steps + ((cycle - 0) & mask)];
        assert(x21005 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21006 = arg2[123 * steps + ((cycle - 0) & mask)];
        assert(x21006 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21007 = arg2[124 * steps + ((cycle - 0) & mask)];
        assert(x21007 != Fp::invalid());
        extern_args[0] = x21001;
        extern_args[1] = x21002;
        extern_args[2] = x21003;
        extern_args[3] = x21004;
        extern_args[4] = x21005;
        extern_args[5] = x21006;
        extern_args[6] = x21007;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21008 = arg2[125 * steps + ((cycle - 0) & mask)];
        assert(x21008 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21009 = arg2[126 * steps + ((cycle - 0) & mask)];
        assert(x21009 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21010 = arg2[127 * steps + ((cycle - 0) & mask)];
        assert(x21010 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21011 = arg2[128 * steps + ((cycle - 0) & mask)];
        assert(x21011 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21012 = arg2[129 * steps + ((cycle - 0) & mask)];
        assert(x21012 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21013 = arg2[130 * steps + ((cycle - 0) & mask)];
        assert(x21013 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/sha_main(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21014 = arg2[131 * steps + ((cycle - 0) & mask)];
        assert(x21014 != Fp::invalid());
        extern_args[0] = x21008;
        extern_args[1] = x21009;
        extern_args[2] = x21010;
        extern_args[3] = x21011;
        extern_args[4] = x21012;
        extern_args[5] = x21013;
        extern_args[6] = x21014;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":49:15)
    auto x21015 = arg2[114 * steps + ((cycle - 0) & mask)];
    assert(x21015 != Fp::invalid());
    if (x21015 != 0) {
      {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21016 = arg2[118 * steps + ((cycle - 0) & mask)];
        assert(x21016 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21017 = arg2[119 * steps + ((cycle - 0) & mask)];
        assert(x21017 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21018 = arg2[120 * steps + ((cycle - 0) & mask)];
        assert(x21018 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21019 = arg2[121 * steps + ((cycle - 0) & mask)];
        assert(x21019 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21020 = arg2[122 * steps + ((cycle - 0) & mask)];
        assert(x21020 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21021 = arg2[123 * steps + ((cycle - 0) & mask)];
        assert(x21021 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21022 = arg2[124 * steps + ((cycle - 0) & mask)];
        assert(x21022 != Fp::invalid());
        extern_args[0] = x21016;
        extern_args[1] = x21017;
        extern_args[2] = x21018;
        extern_args[3] = x21019;
        extern_args[4] = x21020;
        extern_args[5] = x21021;
        extern_args[6] = x21022;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21023 = arg2[125 * steps + ((cycle - 0) & mask)];
        assert(x21023 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21024 = arg2[126 * steps + ((cycle - 0) & mask)];
        assert(x21024 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21025 = arg2[127 * steps + ((cycle - 0) & mask)];
        assert(x21025 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21026 = arg2[128 * steps + ((cycle - 0) & mask)];
        assert(x21026 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21027 = arg2[129 * steps + ((cycle - 0) & mask)];
        assert(x21027 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21028 = arg2[130 * steps + ((cycle - 0) & mask)];
        assert(x21028 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21029 = arg2[131 * steps + ((cycle - 0) & mask)];
        assert(x21029 != Fp::invalid());
        extern_args[0] = x21023;
        extern_args[1] = x21024;
        extern_args[2] = x21025;
        extern_args[3] = x21026;
        extern_args[4] = x21027;
        extern_args[5] = x21028;
        extern_args[6] = x21029;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21030 = arg2[132 * steps + ((cycle - 0) & mask)];
        assert(x21030 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21031 = arg2[133 * steps + ((cycle - 0) & mask)];
        assert(x21031 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21032 = arg2[134 * steps + ((cycle - 0) & mask)];
        assert(x21032 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21033 = arg2[135 * steps + ((cycle - 0) & mask)];
        assert(x21033 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21034 = arg2[136 * steps + ((cycle - 0) & mask)];
        assert(x21034 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21035 = arg2[137 * steps + ((cycle - 0) & mask)];
        assert(x21035 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21036 = arg2[138 * steps + ((cycle - 0) & mask)];
        assert(x21036 != Fp::invalid());
        extern_args[0] = x21030;
        extern_args[1] = x21031;
        extern_args[2] = x21032;
        extern_args[3] = x21033;
        extern_args[4] = x21034;
        extern_args[5] = x21035;
        extern_args[6] = x21036;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21037 = arg2[139 * steps + ((cycle - 0) & mask)];
        assert(x21037 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21038 = arg2[140 * steps + ((cycle - 0) & mask)];
        assert(x21038 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21039 = arg2[141 * steps + ((cycle - 0) & mask)];
        assert(x21039 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21040 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x21040 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21041 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x21041 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21042 = arg2[144 * steps + ((cycle - 0) & mask)];
        assert(x21042 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/ecall_copy_in(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21043 = arg2[145 * steps + ((cycle - 0) & mask)];
        assert(x21043 != Fp::invalid());
        extern_args[0] = x21037;
        extern_args[1] = x21038;
        extern_args[2] = x21039;
        extern_args[3] = x21040;
        extern_args[4] = x21041;
        extern_args[5] = x21042;
        extern_args[6] = x21043;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":49:15)
    auto x21044 = arg2[115 * steps + ((cycle - 0) & mask)];
    assert(x21044 != Fp::invalid());
    if (x21044 != 0) {
      {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21045 = arg2[118 * steps + ((cycle - 0) & mask)];
        assert(x21045 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21046 = arg2[119 * steps + ((cycle - 0) & mask)];
        assert(x21046 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21047 = arg2[120 * steps + ((cycle - 0) & mask)];
        assert(x21047 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21048 = arg2[121 * steps + ((cycle - 0) & mask)];
        assert(x21048 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21049 = arg2[122 * steps + ((cycle - 0) & mask)];
        assert(x21049 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21050 = arg2[123 * steps + ((cycle - 0) & mask)];
        assert(x21050 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21051 = arg2[124 * steps + ((cycle - 0) & mask)];
        assert(x21051 != Fp::invalid());
        extern_args[0] = x21045;
        extern_args[1] = x21046;
        extern_args[2] = x21047;
        extern_args[3] = x21048;
        extern_args[4] = x21049;
        extern_args[5] = x21050;
        extern_args[6] = x21051;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21052 = arg2[125 * steps + ((cycle - 0) & mask)];
        assert(x21052 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21053 = arg2[126 * steps + ((cycle - 0) & mask)];
        assert(x21053 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21054 = arg2[127 * steps + ((cycle - 0) & mask)];
        assert(x21054 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21055 = arg2[128 * steps + ((cycle - 0) & mask)];
        assert(x21055 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21056 = arg2[129 * steps + ((cycle - 0) & mask)];
        assert(x21056 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21057 = arg2[130 * steps + ((cycle - 0) & mask)];
        assert(x21057 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21058 = arg2[131 * steps + ((cycle - 0) & mask)];
        assert(x21058 != Fp::invalid());
        extern_args[0] = x21052;
        extern_args[1] = x21053;
        extern_args[2] = x21054;
        extern_args[3] = x21055;
        extern_args[4] = x21056;
        extern_args[5] = x21057;
        extern_args[6] = x21058;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21059 = arg2[132 * steps + ((cycle - 0) & mask)];
        assert(x21059 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21060 = arg2[133 * steps + ((cycle - 0) & mask)];
        assert(x21060 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21061 = arg2[134 * steps + ((cycle - 0) & mask)];
        assert(x21061 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21062 = arg2[135 * steps + ((cycle - 0) & mask)];
        assert(x21062 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21063 = arg2[136 * steps + ((cycle - 0) & mask)];
        assert(x21063 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21064 = arg2[137 * steps + ((cycle - 0) & mask)];
        assert(x21064 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21065 = arg2[138 * steps + ((cycle - 0) & mask)];
        assert(x21065 != Fp::invalid());
        extern_args[0] = x21059;
        extern_args[1] = x21060;
        extern_args[2] = x21061;
        extern_args[3] = x21062;
        extern_args[4] = x21063;
        extern_args[5] = x21064;
        extern_args[6] = x21065;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21066 = arg2[139 * steps + ((cycle - 0) & mask)];
        assert(x21066 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21067 = arg2[140 * steps + ((cycle - 0) & mask)];
        assert(x21067 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21068 = arg2[141 * steps + ((cycle - 0) & mask)];
        assert(x21068 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21069 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x21069 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21070 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x21070 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21071 = arg2[144 * steps + ((cycle - 0) & mask)];
        assert(x21071 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21072 = arg2[145 * steps + ((cycle - 0) & mask)];
        assert(x21072 != Fp::invalid());
        extern_args[0] = x21066;
        extern_args[1] = x21067;
        extern_args[2] = x21068;
        extern_args[3] = x21069;
        extern_args[4] = x21070;
        extern_args[5] = x21071;
        extern_args[6] = x21072;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":49:15)
    auto x21073 = arg2[116 * steps + ((cycle - 0) & mask)];
    assert(x21073 != Fp::invalid());
    if (x21073 != 0) {
      {
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21074 = arg2[118 * steps + ((cycle - 0) & mask)];
        assert(x21074 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21075 = arg2[119 * steps + ((cycle - 0) & mask)];
        assert(x21075 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21076 = arg2[120 * steps + ((cycle - 0) & mask)];
        assert(x21076 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21077 = arg2[121 * steps + ((cycle - 0) & mask)];
        assert(x21077 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21078 = arg2[122 * steps + ((cycle - 0) & mask)];
        assert(x21078 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21079 = arg2[123 * steps + ((cycle - 0) & mask)];
        assert(x21079 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21080 = arg2[124 * steps + ((cycle - 0) & mask)];
        assert(x21080 != Fp::invalid());
        extern_args[0] = x21074;
        extern_args[1] = x21075;
        extern_args[2] = x21076;
        extern_args[3] = x21077;
        extern_args[4] = x21078;
        extern_args[5] = x21079;
        extern_args[6] = x21080;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21081 = arg2[125 * steps + ((cycle - 0) & mask)];
        assert(x21081 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21082 = arg2[126 * steps + ((cycle - 0) & mask)];
        assert(x21082 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21083 = arg2[127 * steps + ((cycle - 0) & mask)];
        assert(x21083 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21084 = arg2[128 * steps + ((cycle - 0) & mask)];
        assert(x21084 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21085 = arg2[129 * steps + ((cycle - 0) & mask)];
        assert(x21085 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21086 = arg2[130 * steps + ((cycle - 0) & mask)];
        assert(x21086 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21087 = arg2[131 * steps + ((cycle - 0) & mask)];
        assert(x21087 != Fp::invalid());
        extern_args[0] = x21081;
        extern_args[1] = x21082;
        extern_args[2] = x21083;
        extern_args[3] = x21084;
        extern_args[4] = x21085;
        extern_args[5] = x21086;
        extern_args[6] = x21087;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21088 = arg2[132 * steps + ((cycle - 0) & mask)];
        assert(x21088 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21089 = arg2[133 * steps + ((cycle - 0) & mask)];
        assert(x21089 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21090 = arg2[134 * steps + ((cycle - 0) & mask)];
        assert(x21090 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21091 = arg2[135 * steps + ((cycle - 0) & mask)];
        assert(x21091 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21092 = arg2[136 * steps + ((cycle - 0) & mask)];
        assert(x21092 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21093 = arg2[137 * steps + ((cycle - 0) & mask)];
        assert(x21093 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21094 = arg2[138 * steps + ((cycle - 0) & mask)];
        assert(x21094 != Fp::invalid());
        extern_args[0] = x21088;
        extern_args[1] = x21089;
        extern_args[2] = x21090;
        extern_args[3] = x21091;
        extern_args[4] = x21092;
        extern_args[5] = x21093;
        extern_args[6] = x21094;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21095 = arg2[139 * steps + ((cycle - 0) & mask)];
        assert(x21095 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21096 = arg2[140 * steps + ((cycle - 0) & mask)];
        assert(x21096 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21097 = arg2[141 * steps + ((cycle - 0) & mask)];
        assert(x21097 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21098 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x21098 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21099 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x21099 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21100 = arg2[144 * steps + ((cycle - 0) & mask)];
        assert(x21100 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21101 = arg2[145 * steps + ((cycle - 0) & mask)];
        assert(x21101 != Fp::invalid());
        extern_args[0] = x21095;
        extern_args[1] = x21096;
        extern_args[2] = x21097;
        extern_args[3] = x21098;
        extern_args[4] = x21099;
        extern_args[5] = x21100;
        extern_args[6] = x21101;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21102 = arg2[146 * steps + ((cycle - 0) & mask)];
        assert(x21102 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21103 = arg2[147 * steps + ((cycle - 0) & mask)];
        assert(x21103 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21104 = arg2[148 * steps + ((cycle - 0) & mask)];
        assert(x21104 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21105 = arg2[149 * steps + ((cycle - 0) & mask)];
        assert(x21105 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21106 = arg2[150 * steps + ((cycle - 0) & mask)];
        assert(x21106 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21107 = arg2[151 * steps + ((cycle - 0) & mask)];
        assert(x21107 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21108 = arg2[152 * steps + ((cycle - 0) & mask)];
        assert(x21108 != Fp::invalid());
        extern_args[0] = x21102;
        extern_args[1] = x21103;
        extern_args[2] = x21104;
        extern_args[3] = x21105;
        extern_args[4] = x21106;
        extern_args[5] = x21107;
        extern_args[6] = x21108;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21109 = arg2[153 * steps + ((cycle - 0) & mask)];
        assert(x21109 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21110 = arg2[154 * steps + ((cycle - 0) & mask)];
        assert(x21110 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21111 = arg2[155 * steps + ((cycle - 0) & mask)];
        assert(x21111 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21112 = arg2[156 * steps + ((cycle - 0) & mask)];
        assert(x21112 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21113 = arg2[157 * steps + ((cycle - 0) & mask)];
        assert(x21113 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21114 = arg2[158 * steps + ((cycle - 0) & mask)];
        assert(x21114 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/major_mux(Mux)/big_int2(BigInt2Cycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":164:27))
        auto x21115 = arg2[159 * steps + ((cycle - 0) & mask)];
        assert(x21115 != Fp::invalid());
        extern_args[0] = x21109;
        extern_args[1] = x21110;
        extern_args[2] = x21111;
        extern_args[3] = x21112;
        extern_args[4] = x21113;
        extern_args[5] = x21114;
        extern_args[6] = x21115;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
      }
    }
  }
}
